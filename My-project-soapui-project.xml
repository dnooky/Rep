<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="e645d906-a9aa-4bed-8086-2d1da9ec80e4" activeEnvironment="Default" name="My project" resourceRoot="" soapui-version="5.7.2" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="61a4f95b-c5bd-4f21-af31-6b7b0149c389" wsaVersion="NONE" name="Самозапись" type="wsdl" bindingName="{http://impl.service.soap.emias.lanit.ru/v5/}SelfAppointmentServiceV5Binding" soapVersion="1_2" anonymous="optional" definition="http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService?wsdl"><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SelfAppointmentService" targetNamespace="http://impl.service.soap.emias.lanit.ru/v5/" xmlns:api="http://api.service.soap.emias.lanit.ru/v5/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://impl.service.soap.emias.lanit.ru/v5/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--WSDL контракта 5 (доработки по записи 2-х детей, для Инфомата и поддержки ЦЛС)-->
  <wsdl:documentation>version="5.2"</wsdl:documentation>
  <wsdl:types>
    <xs:schema xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://api.service.soap.emias.lanit.ru/v5/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELvH8olfvFUzUOzR9Es_rBviwyrRrnxXTOMZf1KYWzL6hlqv_eyPYq5HlejT1ROkMeQ--"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="SoapException">
    <wsdl:part element="api:soapException" name="SoapException"/>
  </wsdl:message>
  <wsdl:message name="cancelAppointment">
    <wsdl:part element="api:cancelAppointment" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentResponse">
    <wsdl:part element="api:cancelAppointmentResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAppointmentReceptionsByPatient">
    <wsdl:part element="api:getAppointmentReceptionsByPatient" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAppointmentReceptionsByPatientResponse">
    <wsdl:part element="api:getAppointmentReceptionsByPatientResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getReferralsInfo">
    <wsdl:part element="api:getReferralsInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getReferralsInfoResponse">
    <wsdl:part element="api:getReferralsInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createAppointment">
    <wsdl:part element="api:createAppointment" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createAppointmentResponse">
    <wsdl:part element="api:createAppointmentResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAvailableResourceScheduleInfo">
    <wsdl:part element="api:getAvailableResourceScheduleInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAvailableResourceScheduleInfoResponse">
    <wsdl:part element="api:getAvailableResourceScheduleInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfo">
    <wsdl:part element="api:getDoctorsInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoResponse">
    <wsdl:part element="api:getDoctorsInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getSpecialitiesInfo">
    <wsdl:part element="api:getSpecialitiesInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getSpecialitiesInfoResponse">
    <wsdl:part element="api:getSpecialitiesInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="shiftAppointment">
    <wsdl:part element="api:shiftAppointment" name="shiftAppointment"/>
  </wsdl:message>
  <wsdl:message name="shiftAppointmentResponse">
    <wsdl:part element="api:shiftAppointmentResponse" name="shiftAppointmentResponse"/>
  </wsdl:message>
  <wsdl:message name="getDutyARScheduleByPatient">
    <wsdl:part element="api:getDutyARScheduleByPatient" name="getDutyARScheduleByPatient"/>
  </wsdl:message>
  <wsdl:message name="getDutyARScheduleByPatientResponse">
    <wsdl:part element="api:getDutyARScheduleByPatientResponse" name="getDutyARScheduleByPatientResponse"/>
  </wsdl:message>
  <wsdl:message name="createAppointmentToDutyDoctorByPatient">
    <wsdl:part element="api:createAppointmentToDutyDoctorByPatient" name="createAppointmentToDutyDoctorByPatient"/>
  </wsdl:message>
  <wsdl:message name="createAppointmentToDutyDoctorByPatientResponse">
    <wsdl:part element="api:createAppointmentToDutyDoctorByPatientResponse" name="createAppointmentToDutyDoctorByPatientResponse"/>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentToDutyDoctorByPatient">
    <wsdl:part element="api:cancelAppointmentToDutyDoctorByPatient" name="cancelAppointmentToDutyDoctorByPatient"/>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentToDutyDoctorByPatientResponse">
    <wsdl:part element="api:cancelAppointmentToDutyDoctorByPatientResponse" name="cancelAppointmentToDutyDoctorByPatientResponse"/>
  </wsdl:message>
  <wsdl:message name="getHealthCareAvailabilityAttributes">
    <wsdl:part element="api:getHealthCareAvailabilityAttributes" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getHealthCareAvailabilityAttributesResponse">
    <wsdl:part element="api:getHealthCareAvailabilityAttributesResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentBySms">
    <wsdl:part element="api:cancelAppointmentBySms" name="cancelAppointmentBySms"/>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentBySmsResponse">
    <wsdl:part element="api:cancelAppointmentBySmsResponse" name="cancelAppointmentBySmsResponse"/>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentByID">
    <wsdl:part element="api:cancelAppointmentByID" name="cancelAppointmentByID"/>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentByIDResponse">
    <wsdl:part element="api:cancelAppointmentByIDResponse" name="cancelAppointmentByIDResponse"/>
  </wsdl:message>
  <wsdl:message name="getAssignmentsInfo">
    <wsdl:part element="api:getAssignmentsInfo" name="getAssignmentsInfo"/>
  </wsdl:message>
  <wsdl:message name="getAssignmentsInfoResponse">
    <wsdl:part element="api:getAssignmentsInfoResponse" name="getAssignmentsInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoForLI">
    <wsdl:part element="api:getDoctorsInfoForLI" name="getDoctorsInfoForLI"/>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoForLIResponse">
    <wsdl:part element="api:getDoctorsInfoForLIResponse" name="getDoctorsInfoForLIResponse"/>
  </wsdl:message>
  <wsdl:message name="getSpecialitiesInfoForGroup">
    <wsdl:part element="api:getSpecialitiesInfoForGroup" name="getSpecialitiesInfoForGroup"/>
  </wsdl:message>
  <wsdl:message name="getSpecialitiesInfoForGroupResponse">
    <wsdl:part element="api:getSpecialitiesInfoForGroupResponse" name="getSpecialitiesInfoForGroupResponse"/>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoForGroup">
    <wsdl:part element="api:getDoctorsInfoForGroup" name="getDoctorsInfoForGroup"/>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoForGroupResponse">
    <wsdl:part element="api:getDoctorsInfoForGroupResponse" name="getDoctorsInfoForGroupResponse"/>
  </wsdl:message>
  <wsdl:message name="getAvailableResourceScheduleInfoForGroup">
    <wsdl:part element="api:getAvailableResourceScheduleInfoForGroup" name="getAvailableResourceScheduleInfoForGroup"/>
  </wsdl:message>
  <wsdl:message name="getAvailableResourceScheduleInfoForGroupResponse">
    <wsdl:part element="api:getAvailableResourceScheduleInfoForGroupResponse" name="getAvailableResourceScheduleInfoForGroupResponse"/>
  </wsdl:message>
  <wsdl:message name="createAppointmentForGroup">
    <wsdl:part element="api:createAppointmentForGroup" name="createAppointmentForGroup"/>
  </wsdl:message>
  <wsdl:message name="createAppointmentForGroupResponse">
    <wsdl:part element="api:createAppointmentForGroupResponse" name="createAppointmentForGroupResponse"/>
  </wsdl:message>
  <wsdl:message name="shiftAppointmentForGroup">
    <wsdl:part element="api:shiftAppointmentForGroup" name="shiftAppointmentForGroup"/>
  </wsdl:message>
  <wsdl:message name="shiftAppointmentForGroupResponse">
    <wsdl:part element="api:shiftAppointmentForGroupResponse" name="shiftAppointmentForGroupResponse"/>
  </wsdl:message>
  <wsdl:message name="getArchivedAppointments">
    <wsdl:part element="api:getArchivedAppointments" name="getArchivedAppointments"/>
  </wsdl:message>
  <wsdl:message name="getArchivedAppointmentsResponse">
    <wsdl:part element="api:getArchivedAppointmentsResponse" name="getArchivedAppointmentsResponse"/>
  </wsdl:message>
  <wsdl:portType name="SelfAppointmentServiceV5PT">
    <wsdl:operation name="getHealthCareAvailabilityAttributes">
      <wsdl:input message="tns:getHealthCareAvailabilityAttributes" name="getHealthCareAvailabilityAttributes"/>
      <wsdl:output message="tns:getHealthCareAvailabilityAttributesResponse" name="getHealthCareAvailabilityAttributesResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="createAppointment">
      <wsdl:input message="tns:createAppointment" name="createAppointment"/>
      <wsdl:output message="tns:createAppointmentResponse" name="createAppointmentResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getAvailableResourceScheduleInfo">
      <wsdl:input message="tns:getAvailableResourceScheduleInfo" name="getAvailableResourceScheduleInfo"/>
      <wsdl:output message="tns:getAvailableResourceScheduleInfoResponse" name="getAvailableResourceScheduleInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfo">
      <wsdl:input message="tns:getDoctorsInfo" name="getDoctorsInfo"/>
      <wsdl:output message="tns:getDoctorsInfoResponse" name="getDoctorsInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getSpecialitiesInfo">
      <wsdl:input message="tns:getSpecialitiesInfo" name="getSpecialitiesInfo"/>
      <wsdl:output message="tns:getSpecialitiesInfoResponse" name="getSpecialitiesInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="shiftAppointment">
      <wsdl:input message="tns:shiftAppointment" name="shiftAppointment"/>
      <wsdl:output message="tns:shiftAppointmentResponse" name="shiftAppointmentResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointment">
      <wsdl:input message="tns:cancelAppointment" name="cancelAppointment"/>
      <wsdl:output message="tns:cancelAppointmentResponse" name="cancelAppointmentResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getAppointmentReceptionsByPatient">
      <wsdl:input message="tns:getAppointmentReceptionsByPatient" name="getAppointmentReceptionsByPatient"/>
      <wsdl:output message="tns:getAppointmentReceptionsByPatientResponse" name="getAppointmentReceptionsByPatientResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getReferralsInfo">
      <wsdl:input message="tns:getReferralsInfo" name="getReferralsInfo"/>
      <wsdl:output message="tns:getReferralsInfoResponse" name="getReferralsInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getDutyARScheduleByPatient">
      <wsdl:input message="tns:getDutyARScheduleByPatient" name="getDutyARScheduleByPatient"/>
      <wsdl:output message="tns:getDutyARScheduleByPatientResponse" name="getDutyARScheduleByPatientResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="createAppointmentToDutyDoctorByPatient">
      <wsdl:input message="tns:createAppointmentToDutyDoctorByPatient" name="createAppointmentToDutyDoctorByPatient"/>
      <wsdl:output message="tns:createAppointmentToDutyDoctorByPatientResponse" name="createAppointmentToDutyDoctorByPatientResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentToDutyDoctorByPatient">
      <wsdl:input message="tns:cancelAppointmentToDutyDoctorByPatient" name="cancelAppointmentToDutyDoctorByPatient"/>
      <wsdl:output message="tns:cancelAppointmentToDutyDoctorByPatientResponse" name="cancelAppointmentToDutyDoctorByPatientResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentBySms">
      <wsdl:input message="tns:cancelAppointmentBySms" name="cancelAppointmentBySms"/>
      <wsdl:output message="tns:cancelAppointmentBySmsResponse" name="cancelAppointmentBySmsResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentByID">
      <wsdl:input message="tns:cancelAppointmentByID" name="cancelAppointmentByID"/>
      <wsdl:output message="tns:cancelAppointmentByIDResponse" name="cancelAppointmentByIDResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getAssignmentsInfo">
      <wsdl:input message="tns:getAssignmentsInfo" name="getAssignmentsInfo"/>
      <wsdl:output message="tns:getAssignmentsInfoResponse" name="getAssignmentsInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfoForLI">
      <wsdl:input message="tns:getDoctorsInfoForLI" name="getDoctorsInfoForLI"/>
      <wsdl:output message="tns:getDoctorsInfoForLIResponse" name="getDoctorsInfoForLIResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getSpecialitiesInfoForGroup">
      <wsdl:input message="tns:getSpecialitiesInfoForGroup" name="getSpecialitiesInfoForGroup"/>
      <wsdl:output message="tns:getSpecialitiesInfoForGroupResponse" name="getSpecialitiesInfoForGroupResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfoForGroup">
      <wsdl:input message="tns:getDoctorsInfoForGroup" name="getDoctorsInfoForGroup"/>
      <wsdl:output message="tns:getDoctorsInfoForGroupResponse" name="getDoctorsInfoForGroupResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getAvailableResourceScheduleInfoForGroup">
      <wsdl:input message="tns:getAvailableResourceScheduleInfoForGroup" name="getAvailableResourceScheduleInfoForGroup"/>
      <wsdl:output message="tns:getAvailableResourceScheduleInfoForGroupResponse" name="getAvailableResourceScheduleInfoForGroupResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="createAppointmentForGroup">
      <wsdl:input message="tns:createAppointmentForGroup" name="createAppointmentForGroup"/>
      <wsdl:output message="tns:createAppointmentForGroupResponse" name="createAppointmentForGroupResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="shiftAppointmentForGroup">
      <wsdl:input message="tns:shiftAppointmentForGroup" name="shiftAppointmentForGroup"/>
      <wsdl:output message="tns:shiftAppointmentForGroupResponse" name="shiftAppointmentForGroupResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getArchivedAppointments">
      <wsdl:input message="tns:getArchivedAppointments" name="getArchivedAppointments"/>
      <wsdl:output message="tns:getArchivedAppointmentsResponse" name="getArchivedAppointmentsResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="SelfAppointmentServiceV5Binding" type="tns:SelfAppointmentServiceV5PT">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getHealthCareAvailabilityAttributes">
      <soap12:operation soapAction="urn://getHealthCareAvailabilityAttributes"/>
      <wsdl:input name="getHealthCareAvailabilityAttributes">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getHealthCareAvailabilityAttributesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointment">
      <soap12:operation soapAction="urn://cancelAppointment"/>
      <wsdl:input name="cancelAppointment">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelAppointmentResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAppointmentReceptionsByPatient">
      <soap12:operation soapAction="urn://getAppointmentReceptionsByPatient"/>
      <wsdl:input name="getAppointmentReceptionsByPatient">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAppointmentReceptionsByPatientResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReferralsInfo">
      <soap12:operation soapAction="urn://getReferralsInfo"/>
      <wsdl:input name="getReferralsInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getReferralsInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAppointment">
      <soap12:operation soapAction="urn://createAppointment"/>
      <wsdl:input name="createAppointment">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAppointmentResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableResourceScheduleInfo">
      <soap12:operation soapAction="urn://getAvailableResourceScheduleInfo"/>
      <wsdl:input name="getAvailableResourceScheduleInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAvailableResourceScheduleInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfo">
      <soap12:operation soapAction="urn://getDoctorsInfo"/>
      <wsdl:input name="getDoctorsInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDoctorsInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfoForLI">
      <soap12:operation soapAction="urn://getDoctorsInfoForLI"/>
      <wsdl:input name="getDoctorsInfoForLI">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDoctorsInfoForLIResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSpecialitiesInfo">
      <soap12:operation soapAction="urn://getSpecialitiesInfo"/>
      <wsdl:input name="getSpecialitiesInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSpecialitiesInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shiftAppointment">
      <soap12:operation soapAction="urn://shiftAppointment"/>
      <wsdl:input name="shiftAppointment">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="shiftAppointmentResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDutyARScheduleByPatient">
      <soap12:operation soapAction="urn://getDutyARScheduleByPatient"/>
      <wsdl:input name="getDutyARScheduleByPatient">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDutyARScheduleByPatientResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAppointmentToDutyDoctorByPatient">
      <soap12:operation soapAction="urn://createAppointmentToDutyDoctorByPatient"/>
      <wsdl:input name="createAppointmentToDutyDoctorByPatient">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAppointmentToDutyDoctorByPatientResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentToDutyDoctorByPatient">
      <soap12:operation soapAction="urn://cancelAppointmentToDutyDoctorByPatient"/>
      <wsdl:input name="cancelAppointmentToDutyDoctorByPatient">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelAppointmentToDutyDoctorByPatientResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentBySms">
      <soap12:operation soapAction="urn://cancelAppointmentBySms"/>
      <wsdl:input name="cancelAppointmentBySms">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelAppointmentBySmsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentByID">
      <soap12:operation soapAction="urn://cancelAppointmentByID"/>
      <wsdl:input name="cancelAppointmentByID">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelAppointmentByIDResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssignmentsInfo">
      <soap12:operation soapAction="urn://getAssignmentsInfo"/>
      <wsdl:input name="getAssignmentsInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAssignmentsInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSpecialitiesInfoForGroup">
      <soap12:operation soapAction="urn://getSpecialitiesInfoForGroup"/>
      <wsdl:input name="getSpecialitiesInfoForGroup">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSpecialitiesInfoForGroupResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfoForGroup">
      <soap12:operation soapAction="urn://getDoctorsInfoForGroup"/>
      <wsdl:input name="getDoctorsInfoForGroup">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDoctorsInfoForGroupResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableResourceScheduleInfoForGroup">
      <soap12:operation soapAction="urn://getAvailableResourceScheduleInfoForGroup"/>
      <wsdl:input name="getAvailableResourceScheduleInfoForGroup">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAvailableResourceScheduleInfoForGroupResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAppointmentForGroup">
      <soap12:operation soapAction="urn://createAppointmentForGroup"/>
      <wsdl:input name="createAppointmentForGroup">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAppointmentForGroupResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shiftAppointmentForGroup">
      <soap12:operation soapAction="urn://shiftAppointmentForGroup"/>
      <wsdl:input name="shiftAppointmentForGroup">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="shiftAppointmentForGroupResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getArchivedAppointments">
      <soap12:operation soapAction="urn://getArchivedAppointments"/>
      <wsdl:input name="getArchivedAppointments">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getArchivedAppointmentsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SelfAppointmentServiceV5">
    <wsdl:port binding="tns:SelfAppointmentServiceV5Binding" name="SelfAppointmentServiceV5PTB">
      <soap12:address location="http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELvH8olfvFUzUOzR9Es_rBviwyrRrnxXTOMZf1KYWzL6hlqv_eyPYq5HlejT1ROkMeQ--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://api.service.soap.emias.lanit.ru/v5/" version="5.2" xmlns:core="http://api.service.soap.emias.lanit.ru/core/v5/" xmlns:ns1="http://api.service.soap.emias.lanit.ru/v5/" xmlns:tns="http://api.service.soap.emias.lanit.ru/v5/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://api.service.soap.emias.lanit.ru/core/v5/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELs3rrVnLFkjJMy5mDfngAN2826cviAmOKcwB0rpK0eO9luhxWIPHWt9l0e4P44rDtQmP"/>
  <!--======================== Элементы =====================================-->
  <!--Отмена записи на прием-->
  <xs:element name="cancelAppointment" type="tns:cancelAppointment"/>
  <xs:element name="cancelAppointmentResponse" type="tns:cancelAppointmentResponse"/>
  <!--Создание записи на прием2-->
  <xs:element name="createAppointment" type="tns:createAppointment"/>
  <xs:element name="createAppointmentResponse" type="tns:createAppointmentResponse"/>
  <!--Получение списка записей для пациента-->
  <xs:element name="getAppointmentReceptionsByPatient" type="tns:getAppointmentReceptionsByPatient"/>
  <xs:element name="getAppointmentReceptionsByPatientResponse" type="tns:getAppointmentReceptionsByPatientResponse"/>
  <!--Получение расписания врача-->
  <xs:element name="getAvailableResourceScheduleInfo" type="tns:getAvailableResourceScheduleInfo"/>
  <xs:element name="getAvailableResourceScheduleInfoResponse" type="tns:getAvailableResourceScheduleInfoResponse"/>
  <!--Получение списка врачей-->
  <xs:element name="getDoctorsInfo" type="tns:getDoctorsInfo"/>
  <xs:element name="getDoctorsInfoResponse" type="tns:getDoctorsInfoResponse"/>
  <!--Получение направлений для пациента-->
  <xs:element name="getReferralsInfo" type="tns:getReferralsInfo"/>
  <xs:element name="getReferralsInfoResponse" type="tns:getReferralsInfoResponse"/>
  <!--Получение списка специальностей-->
  <xs:element name="getSpecialitiesInfo" type="tns:getSpecialitiesInfo"/>
  <xs:element name="getSpecialitiesInfoResponse" type="tns:getSpecialitiesInfoResponse"/>
  <!--Перенос записи на прием-->
  <xs:element name="shiftAppointment" type="tns:shiftAppointment"/>
  <xs:element name="shiftAppointmentResponse" type="tns:shiftAppointmentResponse"/>
  <!--Предоставление расписания ближайшего доступного ДВ-->
  <xs:element name="getDutyARScheduleByPatient" type="tns:getDutyARScheduleByPatient"/>
  <xs:element name="getDutyARScheduleByPatientResponse" type="tns:getDutyARScheduleByPatientResponse"/>
  <!--Создание записи к ДВ-->
  <xs:element name="createAppointmentToDutyDoctorByPatient" type="tns:createAppointmentToDutyDoctorByPatient"/>
  <xs:element name="createAppointmentToDutyDoctorByPatientResponse" type="tns:createAppointmentToDutyDoctorByPatientResponse"/>
  <!--Отмена записи к ДВ-->
  <xs:element name="cancelAppointmentToDutyDoctorByPatient" type="tns:cancelAppointmentToDutyDoctorByPatient"/>
  <xs:element name="cancelAppointmentToDutyDoctorByPatientResponse" type="tns:cancelAppointmentToDutyDoctorByPatientResponse"/>
  <!--Предоставление ожидания по самозаписи-->
  <xs:element name="getHealthCareAvailabilityAttributes" type="tns:getHealthCareAvailabilityAttributes"/>
  <xs:element name="getHealthCareAvailabilityAttributesResponse" type="tns:getHealthCareAvailabilityAttributesResponse"/>
  <!--Отмена записи к ДВ-->
  <xs:element name="cancelAppointmentBySms" type="tns:cancelAppointmentBySms"/>
  <xs:element name="cancelAppointmentBySmsResponse" type="tns:cancelAppointmentBySmsResponse"/>
  <!--Отмена записи на прием (вариант 2, для ЦТО)-->
  <xs:element name="cancelAppointmentByID" type="tns:cancelAppointmentByID"/>
  <xs:element name="cancelAppointmentByIDResponse" type="tns:cancelAppointmentByIDResponse"/>
  <!--Предоставление перечня активных назначений пациента на ЛИ-->
  <xs:element name="getAssignmentsInfo" type="tns:getAssignmentsInfo"/>
  <xs:element name="getAssignmentsInfoResponse" type="tns:getAssignmentsInfoResponse"/>
  <!--Получение ДР на лабораторные исследования-->
  <xs:element name="getDoctorsInfoForLI" type="tns:getDoctorsInfoForLI"/>
  <xs:element name="getDoctorsInfoForLIResponse" type="tns:getDoctorsInfoForLIResponse"/>
  <!--Предоставление перечня специальностей доступных для самозаписи группой пациентов-->
  <xs:element name="getSpecialitiesInfoForGroup" type="tns:getSpecialitiesInfoForGroup"/>
  <xs:element name="getSpecialitiesInfoForGroupResponse" type="tns:getSpecialitiesInfoForGroupResponse"/>
  <!--Предоставление перечня ДР, к которым разрешена самозапись пациента-->
  <xs:element name="getDoctorsInfoForGroup" type="tns:getDoctorsInfoForGroup"/>
  <xs:element name="getDoctorsInfoForGroupResponse" type="tns:getDoctorsInfoForGroupResponse"/>
  <!--Предоставление расписания доступного ресурса и его слотов, доступных для самозаписи группе пациентов-->
  <xs:element name="getAvailableResourceScheduleInfoForGroup" type="tns:getAvailableResourceScheduleInfoForGroup"/>
  <xs:element name="getAvailableResourceScheduleInfoForGroupResponse" type="tns:getAvailableResourceScheduleInfoForGroupResponse"/>
  <!--Создание несколько записей-->
  <xs:element name="createAppointmentForGroup" type="tns:createAppointmentForGroup"/>
  <xs:element name="createAppointmentForGroupResponse" type="tns:createAppointmentForGroupResponse"/>
  <!--Перенос нескольких записей-->
  <xs:element name="shiftAppointmentForGroup" type="tns:shiftAppointmentForGroup"/>
  <xs:element name="shiftAppointmentForGroupResponse" type="tns:shiftAppointmentForGroupResponse"/>
  <!--Получение отмененных и архивных записей пациента-->
  <xs:element name="getArchivedAppointments" type="tns:getArchivedAppointments"/>
  <xs:element name="getArchivedAppointmentsResponse" type="tns:getArchivedAppointmentsResponse"/>
  <!--======================== Ошибки =====================================-->
  <xs:element name="soapException" nillable="false" type="tns:soapException"/>
  <xs:element name="appointmentCodeErrorFaultInfo" type="tns:appointmentCodeErrorFaultInfo"/>
  <!--======================== Типы данных =====================================-->
  <xs:complexType name="availableResourceBasis">
    <xs:sequence>
      <xs:element minOccurs="0" name="referralId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Идентификатор направления, по которому осуществлялся подбор ДР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="medSpecialityAttachment" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак записи по прикреплению к специальности</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="specialityId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД специализации ДР, по которой осуществлялся подбор ДР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ldpId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД вида ЛДП</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="samplingTypeId" type="xs:long">
        <xs:annotation>
          <xs:documentation>Профиль взятия</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="referralType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="REF_TO_DOCTOR"/>
      <xs:enumeration value="REF_TO_LDP"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="signActiveArchiveType">
    <xs:annotation>
      <xs:documentation>Признак «Архивные и отмененные записи»</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long">
      <xs:enumeration value="0"/>
      <xs:enumeration value="1"/>
      <xs:enumeration value="2"/>
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="baseDto">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="ldpType">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="procedure" type="xs:boolean"/>
      <xs:element minOccurs="0" name="investigation" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpuType">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="ambulatory" type="xs:string"/>
      <xs:element minOccurs="0" name="patientSign" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="referral">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="comment" type="xs:string"/>
      <xs:element name="startTime" type="xs:date"/>
      <xs:element name="endTime" type="xs:date"/>
      <xs:element minOccurs="0" name="type" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuType" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuName" type="xs:string"/>
      <xs:element minOccurs="0" name="availableResourceId" type="xs:long"/>
      <xs:element minOccurs="0" name="toDoctor" type="tns:toDoctor"/>
      <xs:element minOccurs="0" name="toLdp" type="tns:toLdp"/>
      <xs:element minOccurs="0" name="diagnosis" type="tns:diagnosis">
        <xs:annotation>
          <xs:documentation>Информация о диагнозе</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="issuedDoctor" type="tns:jobInfo">
        <xs:annotation>
          <xs:documentation>Информация о враче, выдавшем направление/назначение</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="appointmentOpenDate" type="xs:date"/>
      <xs:element name="countActiveAppointment" type="xs:int"/>
      <xs:element name="countAppointmentWithReceptionFact" type="xs:int"/>
      <xs:element minOccurs="0" name="invalid" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="referralDesc">
    <xs:sequence>
      <xs:element name="referralId" type="xs:long"/>
      <xs:element name="startTime" type="xs:date"/>
      <xs:element name="endTime" type="xs:date"/>
      <xs:element minOccurs="0" name="availableResourceId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentDesc">
    <xs:sequence>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element name="appointmentNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="patient" type="tns:patientShort"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="scheduleOfDay">
    <xs:sequence>
      <xs:element name="date" type="xs:date"/>
      <xs:element maxOccurs="unbounded" name="scheduleBySlot" type="tns:scheduleBySlot"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="medicalSpeciality">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="male" type="xs:boolean"/>
      <xs:element minOccurs="0" name="female" type="xs:boolean"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="areaType" type="xs:string"/>
      <xs:element minOccurs="0" name="onlyByRefferal" type="xs:boolean"/>
      <xs:element minOccurs="0" name="therapeutic" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="toDoctor">
    <xs:sequence>
      <xs:element name="specialityId" type="xs:long"/>
      <xs:element name="specialityName" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorFio" type="xs:string"/>
      <xs:element name="receptionTypeId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="toLdp">
    <xs:sequence>
      <xs:element name="ldpTypeId" type="xs:long"/>
      <xs:element name="ldpTypeName" type="xs:string"/>
      <xs:element minOccurs="0" name="countAssignmentProcedures" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="diagnosis">
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код по МКБ-10</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование диагноза</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="jobInfo">
    <xs:sequence>
      <xs:element name="jobExecutionId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД_Исполнение должности</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="fio" type="xs:string">
        <xs:annotation>
          <xs:documentation>Фамилия Имя Отчество</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="snils" type="xs:string">
        <xs:annotation>
          <xs:documentation>СНИЛС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="specialityId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД_Специальность</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="specialityName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование специальности</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentReception">
    <xs:sequence>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element minOccurs="0" name="appointmentNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointment">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="liveQueueTicketId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД талона в ЖО</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="liveQueueTicketNumber" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер талона в ЖО</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lpuId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД ЛПУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="typeLpu" type="xs:string"/>
      <xs:element name="nameLpu" type="xs:string"/>
      <xs:element name="lpuAddress" type="xs:string"/>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:element name="type" type="xs:string"/>
      <xs:element minOccurs="0" name="enableCancel" type="xs:boolean"/>
      <xs:element minOccurs="0" name="enableShift" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Разрешен ли перенос</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="complexResourceId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД КР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="roomId" type="xs:long"/>
      <xs:element minOccurs="0" name="roomNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="addressPointId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД Адресной точки кабинета</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="toDoctor" type="tns:toDoctor"/>
      <xs:element minOccurs="0" name="toLdp" type="tns:toLdp"/>
      <xs:element minOccurs="0" name="toBM" type="ns1:SamplingType"/>
      <xs:element name="statusId" type="xs:int"/>
      <xs:element minOccurs="0" name="cancelInfo" type="ns1:cancelInfo"/>
      <xs:element minOccurs="0" name="receptionFactId" type="xs:long"/>
      <xs:element minOccurs="0" name="referral" type="tns:referralDesc">
        <xs:annotation>
          <xs:documentation>Направление</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="eno" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelInfo">
    <xs:annotation>
      <xs:documentation>Информация об отмене записи</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="cancelReasonId" type="xs:long"/>
      <xs:element name="cancelReasonDesc" type="xs:string"/>
      <xs:element minOccurs="0" name="cancelTime" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentReceptionToDoctor">
    <xs:sequence>
      <xs:element minOccurs="0" name="doctorSpecialityCode" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorSpeciality" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorFio" type="xs:string"/>
      <xs:element minOccurs="0" name="viewReceptionCode" type="xs:string"/>
      <xs:element minOccurs="0" name="room" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="availableResource">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="name" type="xs:string"/>
      <xs:element name="arType" type="xs:int"/>
      <xs:element minOccurs="0" name="specialityChangeAbility" type="xs:boolean"/>
      <xs:element minOccurs="0" name="arSpecialityId" type="xs:long"/>
      <xs:element minOccurs="0" name="arSpecialityName" type="xs:string"/>
      <xs:element minOccurs="0" name="mainDoctor" type="ns1:mainDoctor"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="receptionType" type="ns1:receptionType"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="ldpType" type="ns1:ldpTypeForAr"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="samplingType" type="ns1:SamplingType"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="complexResource" type="ns1:complexResource"/>
      <xs:element default="false" name="district" type="xs:boolean"/>
      <xs:element default="false" name="replacement" type="xs:boolean"/>
      <xs:element minOccurs="0" name="nondistrict" type="xs:boolean"/>
      <xs:element default="false" name="availableByReferral" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DutyARScheduleInfo">
    <xs:sequence>
      <xs:element name="startTime" type="xs:time"/>
      <xs:element name="endTime" type="xs:time"/>
      <xs:element name="existedLiveQueueTickets" type="xs:int"/>
      <xs:element name="availableResource" type="tns:availableResource"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResultCreationAppointmentToDutyDoctor">
    <xs:sequence>
      <xs:element name="appointmentDesc" type="tns:appointmentDesc"/>
      <xs:element name="liveQueueTicketId" type="xs:long"/>
      <xs:element name="liveQueueTicketNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="complexResourceId" type="xs:long"/>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:choice minOccurs="0">
        <xs:element name="referralId" type="xs:long"/>
        <xs:element name="receptionTypeId" type="xs:long"/>
      </xs:choice>
      <xs:element minOccurs="0" name="complaintId" type="xs:long"/>
      <xs:element minOccurs="0" name="inquiryPurposeId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element minOccurs="0" name="eno" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentResponse">
    <xs:sequence>
      <xs:element name="appointmentDesc" type="ns1:appointmentDesc"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAppointmentReceptionsByPatient">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element minOccurs="0" name="signActiveArchive" type="tns:signActiveArchiveType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAppointmentReceptionsByPatientResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="appointment" type="tns:appointment"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableResourceScheduleInfo">
    <xs:sequence>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element minOccurs="0" name="complexResourceId" type="xs:long"/>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element minOccurs="0" name="referralId" type="xs:long"/>
      <xs:element minOccurs="0" name="period" type="ns1:DatePeriod"/>
      <xs:element minOccurs="0" name="appointmentId" type="xs:long"/>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableResourceScheduleInfoResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:availableResourceScheduleBySlots"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:choice>
        <xs:element name="appointmentId" type="xs:long"/>
        <xs:element name="referralId" type="xs:long"/>
        <xs:element name="specialityId" type="xs:long"/>
      </xs:choice>
      <xs:element minOccurs="0" name="includeArWithoutSlots" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>По умолчанию - true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="quotaTypes">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="quotaType" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="availableResource" type="tns:availableResource"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getReferralsInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element default="false" minOccurs="0" name="returnCompleted" type="xs:boolean"/>
      <xs:element minOccurs="0" name="returnExtended" type="xs:boolean"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getReferralsInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="referral" type="tns:referral"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecialitiesInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecialitiesInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="medicalSpeciality" type="tns:medicalSpeciality"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shiftAppointment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element minOccurs="0" name="complexResourceId" type="xs:long"/>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:choice minOccurs="0">
        <xs:element name="referralId" type="xs:long"/>
        <xs:element name="receptionTypeId" type="xs:long"/>
      </xs:choice>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shiftAppointmentResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:appointmentDesc"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDutyARScheduleByPatient">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element name="lpuId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDutyARScheduleByPatientResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:DutyARScheduleInfo"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentToDutyDoctorByPatient">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element name="lpuId" type="xs:long"/>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="complexResourceId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentToDutyDoctorByPatientResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:ResultCreationAppointmentToDutyDoctor"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentToDutyDoctorByPatient">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element name="appointmentId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentToDutyDoctorByPatientResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getHealthCareAvailabilityAttributes">
    <xs:sequence>
      <xs:element name="patientId" type="xs:long">
        <xs:annotation>
          <xs:documentation>Идентификатор пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:choice minOccurs="0">
        <xs:element name="referralId" type="xs:long"/>
        <xs:element name="specialityId" type="xs:long"/>
        <xs:element name="ldpId" type="xs:long"/>
        <xs:element name="samplingTypeId" type="xs:long"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getHealthCareAvailabilityAttributesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="availabilityInfo" type="tns:availabilityInfo"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="availabilityInfo">
    <xs:sequence>
      <xs:element name="nearestAppointmentDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время ближайшего свободного талона</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="availableResourceBasis" type="tns:availableResourceBasis">
        <xs:annotation>
          <xs:documentation>Группирующая сущность: основание для подбора ДР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="externalSystemId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД внешней системы, через которую осуществлялся подбор ДР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="creationDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время создания записи</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ldpId" type="xs:long"/>
      <xs:element minOccurs="0" name="nearestMainDoctorDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время ближайшего свободного талона основного врача</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="nearestReplacementDoctorDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время ближайшего свободного талона замещающего врача</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentBySms">
    <xs:sequence>
      <xs:element name="patientPhoneNumber" type="xs:string"/>
      <xs:element name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentBySmsResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentByID">
    <xs:sequence>
      <xs:element name="appointmentId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentByIDResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAssignmentsInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер полиса ОМС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string">
        <xs:annotation>
          <xs:documentation>Серия полиса ОМС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="birthDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата рождения пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element default="false" minOccurs="0" name="returnExtended" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Вернуть расширенную версию направления</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="externalSystemId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Обозначение внешней системы</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAssignmentsInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="assignment" type="ns1:AssignmentGroup">
        <xs:annotation>
          <xs:documentation>Активные назначения пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoForLI">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="assignment" type="ns1:Assignment">
        <xs:annotation>
          <xs:documentation>Назначение</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="appointmentId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoForLIResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="availableResource" type="tns:availableResource"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecialitiesInfoForGroup">
    <xs:sequence>
      <xs:element maxOccurs="10" minOccurs="2" name="patientGroupEntry" type="tns:patientGroupEntry"/>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecialitiesInfoForGroupResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="medicalSpeciality" type="tns:medicalSpeciality"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoForGroup">
    <xs:sequence>
      <xs:element maxOccurs="10" minOccurs="2" name="patientGroupEntry">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="tns:patientGroupEntry">
              <xs:sequence>
                <xs:element minOccurs="0" name="appointmentId" type="xs:long"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="specialityId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoForGroupResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="availableResource" type="tns:availableResource"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableResourceScheduleInfoForGroup">
    <xs:sequence>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element maxOccurs="10" minOccurs="2" name="patientGroupEntry">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="tns:patientGroupEntry">
              <xs:sequence>
                <xs:element minOccurs="0" name="appointmentId" type="xs:long"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableResourceScheduleInfoForGroupResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:availableResourceScheduleBySlots"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentForGroup">
    <xs:sequence>
      <xs:element maxOccurs="10" minOccurs="2" name="patientGroupEntry">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="tns:patientGroupEntry">
              <xs:sequence>
                <xs:element name="appTime" type="tns:TimeInterval"/>
                <xs:element name="complexResourceId" type="xs:long"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="receptionTypeId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentForGroupResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="appointmentDesc" type="ns1:appointmentDesc"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shiftAppointmentForGroup">
    <xs:sequence>
      <xs:element maxOccurs="10" minOccurs="2" name="patientGroupEntry">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="tns:patientGroupEntry">
              <xs:sequence>
                <xs:element name="appTime" type="tns:TimeInterval"/>
                <xs:element name="complexResourceId" type="xs:long"/>
                <xs:element name="appointmentId" type="xs:long"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="receptionTypeId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shiftAppointmentForGroupResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="appointmentDesc" type="tns:appointmentDesc"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getArchivedAppointments">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element minOccurs="0" name="period" type="ns1:DatePeriodOptional"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element minOccurs="0" name="pagingOptions" type="core:PagingOptions"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getArchivedAppointmentsResponse">
    <xs:sequence>
      <xs:element name="result" type="tns:AppointmentListPage"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AppointmentListPage">
    <xs:annotation>
      <xs:documentation>Страница Списка записей</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:PagingResults">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="appointment" type="tns:appointment">
            <xs:annotation>
              <xs:documentation>Сведения о Записи</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="appointmentCodeErrorFaultInfo">
    <xs:annotation>
      <xs:documentation>Error</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="messageText" type="xs:string"/>
      <xs:element minOccurs="0" name="userId" type="xs:string"/>
      <xs:element minOccurs="0" name="operation" type="xs:string"/>
      <xs:element minOccurs="0" name="resource" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="availableResourceScheduleBySlots">
    <xs:sequence>
      <xs:element name="availableResource" type="ns1:availableResource"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="scheduleOfDay" type="ns1:scheduleOfDay"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentLock">
    <xs:sequence>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element minOccurs="0" name="arSpecialityId" type="xs:long"/>
      <xs:element minOccurs="0" name="arSamplingTypeId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="patient" type="tns:patientShort"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="scheduleBySlot">
    <xs:sequence>
      <xs:element name="complexResourceId" type="xs:long"/>
      <xs:element name="cabinetNumber" type="xs:string"/>
      <xs:element maxOccurs="unbounded" name="slot" type="ns1:slot"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="slot">
    <xs:sequence>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="mainDoctor">
    <xs:sequence>
      <xs:element minOccurs="0" name="specialityName" type="xs:string"/>
      <xs:element name="specialityId" type="xs:long"/>
      <xs:element name="firstName" type="xs:string"/>
      <xs:element name="lastName" type="xs:string"/>
      <xs:element minOccurs="0" name="secondName" type="xs:string"/>
      <xs:element name="mejiId" type="xs:long"/>
      <xs:element name="employeeId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Assignment">
    <xs:sequence>
      <xs:element name="moId" type="xs:long"/>
      <xs:element name="samplingTypeId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД профиля взятия БМ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="period" type="ns1:DatePeriod"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentGroup">
    <xs:sequence>
      <xs:element name="moId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД МО принимающее (головное ЛПУ куста)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="toBM" type="ns1:SamplingType">
        <xs:annotation>
          <xs:documentation>Профиль взятия БМ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="period" type="ns1:DatePeriod">
        <xs:annotation>
          <xs:documentation>Период действия назначения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="active" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак активности назначения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="appointmentAvailable" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак возможности создать запись</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="appointmentOpenDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата открытия записи по направлению</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="appointmentId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД активной записи по данному назначению</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" name="registryEntry" type="ns1:registryEntry">
        <xs:annotation>
          <xs:documentation>Реестровые записи</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:sequence>
      <xs:element name="dateFrom" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dateTo" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="registryEntry">
    <xs:sequence>
      <xs:element name="entryId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД реестровой записи</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="laboratoryId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД лабораторного исследования</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="laboratoryName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование ЛИ (краткое)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="biomaterialId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД биоматериала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="biomaterialName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование биоматериала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hasMemo" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак наличия памятки</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="diagnosis" type="ns1:diagnosis">
        <xs:annotation>
          <xs:documentation>Информация о диагнозе</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="issuedDoctor" type="ns1:jobInfo">
        <xs:annotation>
          <xs:documentation>Информация о назначившем враче</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="receptionType">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="primary" type="xs:string"/>
      <xs:element minOccurs="0" name="home" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ldpTypeForAr">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="complexResource">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="room" type="ns1:room"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="room">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element minOccurs="0" name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuShortName" type="xs:string"/>
      <xs:element minOccurs="0" name="addressPointId" type="xs:long"/>
      <xs:element minOccurs="0" name="defaultAddress" type="xs:string"/>
      <xs:element name="availabilityDate" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SamplingType">
    <xs:sequence>
      <xs:element name="id" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД профиля взятия БМ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Название профиля</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="self" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак самовзятого БМ</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="soapException">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="text" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="appointmentLock" type="tns:appointmentLock"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="patientGroupError" type="tns:patientShort"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="patientShort">
    <xs:sequence>
      <xs:element minOccurs="0" name="patientId" type="xs:long"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="patientGroupEntry">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TimeInterval">
    <xs:sequence>
      <xs:element name="start" type="xs:dateTime"/>
      <xs:element name="end" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriodOptional">
    <xs:annotation>
      <xs:documentation>Описывает календарный период</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="dateFrom" type="xs:date"/>
      <xs:element minOccurs="0" name="dateTo" type="xs:date"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELs3rrVnLFkjJMy5mDfngAN2826cviAmOKcwB0rpK0eO9luhxWIPHWt9l0e4P44rDtQmP</con:url><con:content>&lt;xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://api.service.soap.emias.lanit.ru/core/v5/" version="1.0" xmlns="http://api.service.soap.emias.lanit.ru/core/v5/" xmlns:xs="http://www.w3.org/2001/XMLSchema">&#13;
  &lt;xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsf0p1DdS1_UID8nCZurCtixl_TVFNCF.Zm2IERIorUG3w--"/>&#13;
&lt;/xs:schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsf0p1DdS1_UID8nCZurCtixl_TVFNCF.Zm2IERIorUG3w--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.2" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsf0p1DdS0_CIS5sEoTzQ4Wty6YHlLYutqNN7wO_MFN0JMBt"/>
  <!--references-->
  <xs:element name="mail" type="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalOrganizationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинского учреждения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="compositionId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор Композиции Think!EHR ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="simiDocumentId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор Документа СИМИ ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--abstract types-->
  <xs:complexType abstract="true" name="Base">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип, используемый для описания компонентов сущностей, владельцеми которых является текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор сущности/записи на уровне всего ЕМИАС</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="true" name="EntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип, используемый для описания сущностей, владельцем которых является текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base">
        <xs:attribute name="archived" type="xs:boolean" use="required">
          <xs:annotation>
            <xs:documentation>Признак "Архивная сущность"</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип, используемый для описания компонентов сущностей, владельцами которых являются другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignEntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип, используемый для описания сущностей, владельцами которых являются другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="EntityBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип, используемый для описания типов, реализующих справочники ЕМИАС.НСИ.2</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignEntityBase">
        <xs:sequence>
          <xs:element name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование элемента справочника</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiWithCodeBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип, используемый для описания типов, реализующих справочники ЕМИАС.НСИ.2, в которых имеется бизнес-код</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="NsiBase">
        <xs:attribute name="code" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Бизнес-код</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="SIMIDocumentBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип, используемый для описания cведений о документе СИМИ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="simiDocumentId"/>
      <xs:element minOccurs="0" ref="compositionId"/>
    </xs:sequence>
  </xs:complexType>
  <!--async operation status-->
  <xs:element name="operationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор операции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OperationExecutionStatus">
    <xs:annotation>
      <xs:documentation>Статус выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="isCompleted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак окончания выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="completenessProgress" type="OperationCompletenessBase">
        <xs:annotation>
          <xs:documentation>Сведения о текущем статусе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hasSucceded" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак успешности выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
        <xs:annotation>
          <xs:documentation>Коллекция сообщений, порожденных в ходе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор операции</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="false" name="OperationCompletenessPercentage">
    <xs:annotation>
      <xs:documentation>Описание текущего статуса выполнения операции в процентах (0%-100%)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OperationCompletenessBase">
        <xs:sequence>
          <xs:element name="completenessStatus">
            <xs:annotation>
              <xs:documentation>Статус (0%-100%)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:unsignedByte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания текущего статуса выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--calling methods' options-->
  <xs:element name="options" type="Options">
    <xs:annotation>
      <xs:documentation>Параметры вызова метода</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Options">
    <xs:annotation>
      <xs:documentation>Набор именованных значений</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Именованное значение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--pagination-->
  <xs:element name="pagingOptions" type="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="PagingResults">
    <xs:annotation>
      <xs:documentation>Список с пагинацией</xs:documentation>
    </xs:annotation>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageTotal" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество страниц</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morePagesAvailable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Флаг доступности других страниц с результатами для "постраничного листания" (true - если доступны еще страницы; false - иначе)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="totalItemsCount" type="xs:long" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество элементов (на всех страницах)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" ref="sortingOptions"/>
    </xs:sequence>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--sorting-->
  <xs:element name="sortingOptions" type="SortingOptions">
    <xs:annotation>
      <xs:documentation>Параметры сортировки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SortingOptions">
    <xs:annotation>
      <xs:documentation>Условия сортировки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="3" name="sortOrder" type="SortOrder">
        <xs:annotation>
          <xs:documentation>Условия сортировки (используются в соответствии с переданной последовательностью)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SortOrder">
    <xs:annotation>
      <xs:documentation>Сортировка</xs:documentation>
    </xs:annotation>
    <xs:attribute name="attributeName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Наименование поля, по которому должна быть произведена сортировка</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="false" name="desceding" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Направление сортировки</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--void response-->
  <xs:element fixed="true" name="result">
    <xs:annotation>
      <xs:documentation>Элемент для использования в методах, не предполагающих возврат какого-либо значения</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:boolean"/>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <!--base types-->
  <xs:complexType name="TimeInterval">
    <xs:annotation>
      <xs:documentation>Временной период (время)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время начала интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время окончания интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--keys-->
  <xs:complexType name="EntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор сущности, непосредственно принадлежащей текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор сущности ЕМИАС, внешней по отношнению к текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NsiGlobalId">
    <xs:annotation>
      <xs:documentation>Глобальный идентфикатор ЕМИАС.НСИ</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsf0p1DdS0_CIS5sEoTzQ4Wty6YHlLYutqNN7wO_MFN0JMBt</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:simpleType name="GUID">
    <xs:annotation>
      <xs:documentation>Глобальный 128-битный идентификатор (Globally Unique Identifier)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="320"/>
      <xs:pattern value=".+@.+\..+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint></con:endpoints><con:operation id="bc7d2d8e-5e47-44b8-ae6c-ed34ae8d4f84" isOneWay="false" action="urn://cancelAppointment" name="cancelAppointment" bindingOperationName="cancelAppointment" type="Request-Response" outputName="cancelAppointmentResponse" inputName="cancelAppointment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4c606f6c-9f1d-4014-886a-c141bd9ea05d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:cancelAppointment>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <appointmentId>?</appointmentId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:cancelAppointment>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/cancelAppointment"/></con:call><con:call id="fd165d43-f694-4cf5-b4c1-5b91c26ce370" name="cancelAppointment"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <v5:cancelAppointment>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <appointmentId>?</appointmentId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:cancelAppointment>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/cancelAppointment"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="ff0b36b3-b7c3-4f55-925d-8362389166ae" isOneWay="false" action="urn://cancelAppointmentByID" name="cancelAppointmentByID" bindingOperationName="cancelAppointmentByID" type="Request-Response" outputName="cancelAppointmentByIDResponse" inputName="cancelAppointmentByID" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ee5cb7a1-b44a-4d50-8dab-f767d18c61bc" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:cancelAppointmentByID>\r
         <appointmentId>?</appointmentId>\r
      </v5:cancelAppointmentByID>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/cancelAppointmentByID"/></con:call></con:operation><con:operation id="f700a893-de52-43e2-a666-25111c934b27" isOneWay="false" action="urn://cancelAppointmentBySms" name="cancelAppointmentBySms" bindingOperationName="cancelAppointmentBySms" type="Request-Response" outputName="cancelAppointmentBySmsResponse" inputName="cancelAppointmentBySms" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bedfaf88-6552-42f0-9738-6830c45f1abf" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:cancelAppointmentBySms>\r
         <patientPhoneNumber>?</patientPhoneNumber>\r
         <message>?</message>\r
      </v5:cancelAppointmentBySms>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/cancelAppointmentBySms"/></con:call></con:operation><con:operation id="53632561-7abe-47ed-a9ae-c18068b6e17b" isOneWay="false" action="urn://cancelAppointmentToDutyDoctorByPatient" name="cancelAppointmentToDutyDoctorByPatient" bindingOperationName="cancelAppointmentToDutyDoctorByPatient" type="Request-Response" outputName="cancelAppointmentToDutyDoctorByPatientResponse" inputName="cancelAppointmentToDutyDoctorByPatient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a66bef0e-303b-409a-b0e8-54a9c60846df" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:cancelAppointmentToDutyDoctorByPatient>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <externalSystemId>?</externalSystemId>\r
         <appointmentId>?</appointmentId>\r
      </v5:cancelAppointmentToDutyDoctorByPatient>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/cancelAppointmentToDutyDoctorByPatient"/></con:call></con:operation><con:operation id="b1ea7d5d-18a7-489d-b92d-1bf5ef821a1a" isOneWay="false" action="urn://createAppointment" name="createAppointment" bindingOperationName="createAppointment" type="Request-Response" outputName="createAppointmentResponse" inputName="createAppointment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="721d38a8-1d6c-4935-b7da-49c4b029ea05" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:createAppointment>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <availableResourceId>?</availableResourceId>\r
         <complexResourceId>?</complexResourceId>\r
         <startTime>?</startTime>\r
         <endTime>?</endTime>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <referralId>?</referralId>\r
         <receptionTypeId>?</receptionTypeId>\r
         <!--Optional:-->\r
         <complaintId>?</complaintId>\r
         <!--Optional:-->\r
         <inquiryPurposeId>?</inquiryPurposeId>\r
         <externalSystemId>?</externalSystemId>\r
         <!--Optional:-->\r
         <eno>?</eno>\r
      </v5:createAppointment>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/createAppointment"/><con:wsrmConfig version="1.2"/></con:call><con:call id="cc9aa524-ad71-4621-9027-e43c424f2576" name="createAppointment"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>\r
   <soap:Body>\r
      <v5:createAppointment>\r
         <omsNumber>7700003097180466</omsNumber>\r
         <birthDate>1966-04-18</birthDate>\r
         <availableResourceId>20705461696</availableResourceId>\r
         <complexResourceId>243090513</complexResourceId>\r
         <startTime>2023-11-28T15:00:00+03:00</startTime>\r
         <endTime>2023-11-28T15:30:00+03:00</endTime>\r
         <receptionTypeId>1879</receptionTypeId>
         <externalSystemId>EIM</externalSystemId>\r
      </v5:createAppointment>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/createAppointment"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="83444053-02d8-4de2-a140-ff44c17b9580" isOneWay="false" action="urn://createAppointmentForGroup" name="createAppointmentForGroup" bindingOperationName="createAppointmentForGroup" type="Request-Response" outputName="createAppointmentForGroupResponse" inputName="createAppointmentForGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="19a2d75a-f288-4288-a0fc-3973bb0be01d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:createAppointmentForGroup>\r
         <!--2 to 10 repetitions:-->\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <appTime>\r
               <start>?</start>\r
               <end>?</end>\r
            </appTime>\r
            <complexResourceId>?</complexResourceId>\r
         </patientGroupEntry>\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <appTime>\r
               <start>?</start>\r
               <end>?</end>\r
            </appTime>\r
            <complexResourceId>?</complexResourceId>\r
         </patientGroupEntry>\r
         <availableResourceId>?</availableResourceId>\r
         <receptionTypeId>?</receptionTypeId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:createAppointmentForGroup>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/createAppointmentForGroup"/></con:call></con:operation><con:operation id="f2c24288-785c-4d1c-a058-5519ed565ddb" isOneWay="false" action="urn://createAppointmentToDutyDoctorByPatient" name="createAppointmentToDutyDoctorByPatient" bindingOperationName="createAppointmentToDutyDoctorByPatient" type="Request-Response" outputName="createAppointmentToDutyDoctorByPatientResponse" inputName="createAppointmentToDutyDoctorByPatient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="efdaeff7-52ff-4d4d-b858-4e6ec7db6ac6" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:createAppointmentToDutyDoctorByPatient>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <externalSystemId>?</externalSystemId>\r
         <lpuId>?</lpuId>\r
         <availableResourceId>?</availableResourceId>\r
         <complexResourceId>?</complexResourceId>\r
      </v5:createAppointmentToDutyDoctorByPatient>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/createAppointmentToDutyDoctorByPatient"/></con:call></con:operation><con:operation id="1616cdd8-8fd7-4ace-8883-2d5faf615035" isOneWay="false" action="urn://getAppointmentReceptionsByPatient" name="getAppointmentReceptionsByPatient" bindingOperationName="getAppointmentReceptionsByPatient" type="Request-Response" outputName="getAppointmentReceptionsByPatientResponse" inputName="getAppointmentReceptionsByPatient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c537be6a-e099-4c66-8ccb-2c0870a4b08f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getAppointmentReceptionsByPatient>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <externalSystemId>?</externalSystemId>\r
         <!--Optional:-->\r
         <signActiveArchive>?</signActiveArchive>\r
      </v5:getAppointmentReceptionsByPatient>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getAppointmentReceptionsByPatient"/><con:wsrmConfig version="1.2"/></con:call><con:call id="39d88fcd-fe9e-4e85-8f29-c569b471ede6" name="getAppointmentReceptions"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <v5:getAppointmentReceptionsByPatient>\r
         <omsNumber>7758010875002485</omsNumber>\r
         <birthDate>1989-01-24</birthDate>\r
         <externalSystemId>EIM</externalSystemId>
         <signActiveArchive>0</signActiveArchive>
      </v5:getAppointmentReceptionsByPatient>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getAppointmentReceptionsByPatient"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="887c03a1-b415-4468-82bb-e76eb64b7d4e" isOneWay="false" action="urn://getArchivedAppointments" name="getArchivedAppointments" bindingOperationName="getArchivedAppointments" type="Request-Response" outputName="getArchivedAppointmentsResponse" inputName="getArchivedAppointments" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="cee963cb-9862-4dbb-9797-bd076d089c86" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/" xmlns:v51="http://api.service.soap.emias.lanit.ru/core/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getArchivedAppointments>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <period>\r
            <!--Optional:-->\r
            <dateFrom>?</dateFrom>\r
            <!--Optional:-->\r
            <dateTo>?</dateTo>\r
         </period>\r
         <externalSystemId>?</externalSystemId>\r
         <!--Optional:-->\r
         <pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v51:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v51:sortOrder attributeName="?" desceding="false"/>\r
            </v51:sortingOptions>\r
         </pagingOptions>\r
      </v5:getArchivedAppointments>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getArchivedAppointments"/></con:call><con:call id="1b3d8066-9676-4154-b1af-804f221684cf" name="archived"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/" xmlns:v51="http://api.service.soap.emias.lanit.ru/core/v5/">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken>\r
            <wsse:Username>EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <v5:getArchivedAppointments>\r
         <omsNumber>0556130838000530</omsNumber>\r
         <birthDate>1968-03-11</birthDate>\r
         <externalSystemId>EIM</externalSystemId>\r
         <pagingOptions pageNumber="0" pageSize="25"/>\r
      </v5:getArchivedAppointments>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getArchivedAppointments"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="b90ee847-d78d-4cbb-8b1d-04bd35c65345" isOneWay="false" action="urn://getAssignmentsInfo" name="getAssignmentsInfo" bindingOperationName="getAssignmentsInfo" type="Request-Response" outputName="getAssignmentsInfoResponse" inputName="getAssignmentsInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c555ad82-0d48-4b61-b286-10dd8c0988b2" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getAssignmentsInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <returnExtended>false</returnExtended>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getAssignmentsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getAssignmentsInfo"/></con:call><con:call id="afa7379e-9b73-47ae-abc5-4c646be92f9d" name="getAssignmentsInfo"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <v5:getAssignmentsInfo>\r
         <omsNumber>7758010875002485</omsNumber>\r
         <birthDate>1989-01-24</birthDate>\r
         <returnExtended>true</returnExtended>\r
         <externalSystemId>EIM</externalSystemId>\r
      </v5:getAssignmentsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getAssignmentsInfo"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="f6113a58-30b0-4088-9572-f8e5c78246a6" isOneWay="false" action="urn://getAvailableResourceScheduleInfo" name="getAvailableResourceScheduleInfo" bindingOperationName="getAvailableResourceScheduleInfo" type="Request-Response" outputName="getAvailableResourceScheduleInfoResponse" inputName="getAvailableResourceScheduleInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="46ddfe56-1cfc-4981-90aa-7aaf8b9a7824" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getAvailableResourceScheduleInfo>\r
         <availableResourceId>?</availableResourceId>\r
         <!--Optional:-->\r
         <complexResourceId>?</complexResourceId>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <referralId>?</referralId>\r
         <!--Optional:-->\r
         <period>\r
            <dateFrom>?</dateFrom>\r
            <dateTo>?</dateTo>\r
         </period>\r
         <!--Optional:-->\r
         <appointmentId>?</appointmentId>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getAvailableResourceScheduleInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getAvailableResourceScheduleInfo"/><con:wsrmConfig version="1.2"/></con:call><con:call id="08734f07-97d2-4764-bf1e-14195ee1a363" name="getARSI"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-876c4f67-9ea0-4662-84d4-702131f96863">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <ns3:getAvailableResourceScheduleInfo xmlns:ns2="http://api.service.soap.emias.lanit.ru/core/v5/" xmlns:ns3="http://api.service.soap.emias.lanit.ru/v5/">\r
         <availableResourceId>20705461696</availableResourceId>\r
         <complexResourceId>243090513</complexResourceId>
         <omsNumber>0556130838000530</omsNumber>\r
         <birthDate>1968-03-11</birthDate>\r
         <referralId>74441350789</referralId>
         <appointmentId>391929884615</appointmentId>
         <externalSystemId>EIM</externalSystemId>\r
      </ns3:getAvailableResourceScheduleInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getAvailableResourceScheduleInfo"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="44c3e95d-bea8-4688-865e-b13a96bfdaa2" isOneWay="false" action="urn://getAvailableResourceScheduleInfoForGroup" name="getAvailableResourceScheduleInfoForGroup" bindingOperationName="getAvailableResourceScheduleInfoForGroup" type="Request-Response" outputName="getAvailableResourceScheduleInfoForGroupResponse" inputName="getAvailableResourceScheduleInfoForGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d562478f-25cd-4344-acb0-34911473cc10" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getAvailableResourceScheduleInfoForGroup>\r
         <availableResourceId>?</availableResourceId>\r
         <!--2 to 10 repetitions:-->\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <!--Optional:-->\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <!--Optional:-->\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getAvailableResourceScheduleInfoForGroup>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getAvailableResourceScheduleInfoForGroup"/></con:call></con:operation><con:operation id="d970c074-211b-40f9-9d1a-c63c01bec15d" isOneWay="false" action="urn://getDoctorsInfo" name="getDoctorsInfo" bindingOperationName="getDoctorsInfo" type="Request-Response" outputName="getDoctorsInfoResponse" inputName="getDoctorsInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="25a8410c-c4d3-4359-83f7-6bb51f9101cf" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getDoctorsInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--You have a CHOICE of the next 3 items at this level-->\r
         <appointmentId>?</appointmentId>\r
         <referralId>?</referralId>\r
         <specialityId>?</specialityId>\r
         <!--Optional:-->\r
         <includeArWithoutSlots>?</includeArWithoutSlots>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getDoctorsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getDoctorsInfo"/><con:wsrmConfig version="1.2"/></con:call><con:call id="f66850a3-286c-4eca-8374-6444aa2c0cef" name="getDoctorsInfo"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <v5:getDoctorsInfo>\r
         <omsNumber>0556130838000530</omsNumber>\r
         <birthDate>1968-03-11</birthDate>\r
         <referralId>74441350789</referralId>
         <externalSystemId>EIM</externalSystemId>\r
      </v5:getDoctorsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getDoctorsInfo"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="46dd7c63-49d7-4708-a863-b1e241ce4ed3" isOneWay="false" action="urn://getDoctorsInfoForGroup" name="getDoctorsInfoForGroup" bindingOperationName="getDoctorsInfoForGroup" type="Request-Response" outputName="getDoctorsInfoForGroupResponse" inputName="getDoctorsInfoForGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="54a234bd-b20c-4d03-8945-ddd0fd25244e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getDoctorsInfoForGroup>\r
         <!--2 to 10 repetitions:-->\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <!--Optional:-->\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <!--Optional:-->\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <specialityId>?</specialityId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getDoctorsInfoForGroup>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getDoctorsInfoForGroup"/></con:call></con:operation><con:operation id="1ca61ad2-9cd6-4f2d-b25a-ada7edeac193" isOneWay="false" action="urn://getDoctorsInfoForLI" name="getDoctorsInfoForLI" bindingOperationName="getDoctorsInfoForLI" type="Request-Response" outputName="getDoctorsInfoForLIResponse" inputName="getDoctorsInfoForLI" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="589223f6-6343-48a6-b0a2-da7f6ac320c7" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getDoctorsInfoForLI>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <assignment>\r
            <moId>?</moId>\r
            <samplingTypeId>?</samplingTypeId>\r
            <period>\r
               <dateFrom>?</dateFrom>\r
               <dateTo>?</dateTo>\r
            </period>\r
         </assignment>\r
         <!--Optional:-->\r
         <appointmentId>?</appointmentId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getDoctorsInfoForLI>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getDoctorsInfoForLI"/></con:call><con:call id="aa3a8fbf-0756-4804-a7be-db29590bf7e1" name="getDoctorsInfoForLi"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <v5:getDoctorsInfoForLI>\r
         <omsNumber>7700007178231039</omsNumber>\r
         <birthDate>1939-10-23</birthDate>\r
         <assignment>\r
            <moId>204</moId>\r
            <samplingTypeId>1</samplingTypeId>\r
            <period>\r
               <dateFrom>2023-10-11</dateFrom>\r
               <dateTo>2025-10-24</dateTo>\r
            </period>\r
         </assignment>\r
         <externalSystemId>EIM</externalSystemId>\r
      </v5:getDoctorsInfoForLI>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getDoctorsInfoForLI"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="c92d1a5c-f234-4247-bbe8-f41457ff5b69" isOneWay="false" action="urn://getDutyARScheduleByPatient" name="getDutyARScheduleByPatient" bindingOperationName="getDutyARScheduleByPatient" type="Request-Response" outputName="getDutyARScheduleByPatientResponse" inputName="getDutyARScheduleByPatient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2dc99309-9acc-4802-a73e-762576643808" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getDutyARScheduleByPatient>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <externalSystemId>?</externalSystemId>\r
         <lpuId>?</lpuId>\r
      </v5:getDutyARScheduleByPatient>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getDutyARScheduleByPatient"/></con:call></con:operation><con:operation id="e6295ca1-d292-4e70-94c6-51ac206056c3" isOneWay="false" action="urn://getHealthCareAvailabilityAttributes" name="getHealthCareAvailabilityAttributes" bindingOperationName="getHealthCareAvailabilityAttributes" type="Request-Response" outputName="getHealthCareAvailabilityAttributesResponse" inputName="getHealthCareAvailabilityAttributes" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1e22c43b-2e26-416e-8f39-faa3fae61342" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getHealthCareAvailabilityAttributes>\r
         <patientId>?</patientId>\r
         <!--You have a CHOICE of the next 4 items at this level-->\r
         <referralId>?</referralId>\r
         <specialityId>?</specialityId>\r
         <ldpId>?</ldpId>\r
         <samplingTypeId>?</samplingTypeId>\r
      </v5:getHealthCareAvailabilityAttributes>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getHealthCareAvailabilityAttributes"/></con:call></con:operation><con:operation id="b18ba39e-365d-4334-8deb-eb6b971d4504" isOneWay="false" action="urn://getReferralsInfo" name="getReferralsInfo" bindingOperationName="getReferralsInfo" type="Request-Response" outputName="getReferralsInfoResponse" inputName="getReferralsInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c1edd2a9-0615-4aa2-97ff-fe3e45e9e858" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getReferralsInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <returnCompleted>false</returnCompleted>\r
         <!--Optional:-->\r
         <returnExtended>?</returnExtended>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getReferralsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getReferralsInfo"/></con:call><con:call id="13f92181-8d2a-4538-ab1a-cff162c45326" name="getReferralsInfo"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <v5:getReferralsInfo>\r
         <omsNumber>7755530870001052</omsNumber>\r
         <birthDate>1964-04-29</birthDate>\r
         <returnExtended>true</returnExtended>\r
         <externalSystemId>EIM</externalSystemId>\r
      </v5:getReferralsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getReferralsInfo"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="a87b1c4a-5bf6-4b23-a623-101dae2dbd3b" isOneWay="false" action="urn://getSpecialitiesInfo" name="getSpecialitiesInfo" bindingOperationName="getSpecialitiesInfo" type="Request-Response" outputName="getSpecialitiesInfoResponse" inputName="getSpecialitiesInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2a81d10a-35d4-4ef8-ab08-6d21104ae6ec" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getSpecialitiesInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getSpecialitiesInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getSpecialitiesInfo"/><con:wsrmConfig version="1.2"/></con:call><con:call id="c488ffb9-0df9-44ba-a316-89c61932e7f6" name="getSpecialitiesInfo"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <v5:getSpecialitiesInfo>\r
         <omsNumber>770000309718046</omsNumber>\r
         <birthDate>1966-04-18</birthDate>\r       
         <externalSystemId>EIM</externalSystemId>
      </v5:getSpecialitiesInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getSpecialitiesInfo"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="330f785a-c6ea-4389-a51d-58293e3af164" isOneWay="false" action="urn://getSpecialitiesInfoForGroup" name="getSpecialitiesInfoForGroup" bindingOperationName="getSpecialitiesInfoForGroup" type="Request-Response" outputName="getSpecialitiesInfoForGroupResponse" inputName="getSpecialitiesInfoForGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a96e0d24-7307-477c-a300-f3ff813bad5b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getSpecialitiesInfoForGroup>\r
         <!--2 to 10 repetitions:-->\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
         </patientGroupEntry>\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
         </patientGroupEntry>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getSpecialitiesInfoForGroup>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getSpecialitiesInfoForGroup"/></con:call></con:operation><con:operation id="3f20423b-f7e0-4670-b7b6-87ac2d2d95c3" isOneWay="false" action="urn://shiftAppointment" name="shiftAppointment" bindingOperationName="shiftAppointment" type="Request-Response" outputName="shiftAppointmentResponse" inputName="shiftAppointment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="115bb883-9c98-4364-98dd-f8bd5e0991ef" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:shiftAppointment>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <availableResourceId>?</availableResourceId>\r
         <!--Optional:-->\r
         <complexResourceId>?</complexResourceId>\r
         <startTime>?</startTime>\r
         <endTime>?</endTime>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <referralId>?</referralId>\r
         <receptionTypeId>?</receptionTypeId>\r
         <appointmentId>?</appointmentId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:shiftAppointment>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/shiftAppointment"/></con:call><con:call id="ebaa223d-ba7a-4242-aac4-8da47d78df38" name="shiftAppointment"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <v5:shiftAppointment>\r
         <omsNumber>7700007178231039</omsNumber>\r
         <birthDate>1939-10-23</birthDate>\r
         <availableResourceId>18999430452</availableResourceId>\r
         <complexResourceId>159296763</complexResourceId>\r
         <startTime>2023-10-12T12:10:00</startTime>\r
         <endTime>2023-10-12T12:15:00</endTime>\r
         <appointmentId>391922902223</appointmentId>\r
         <externalSystemId>EIM</externalSystemId>\r
      </v5:shiftAppointment>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/shiftAppointment"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="645af47a-ceca-410a-a023-38f8fab78b14" isOneWay="false" action="urn://shiftAppointmentForGroup" name="shiftAppointmentForGroup" bindingOperationName="shiftAppointmentForGroup" type="Request-Response" outputName="shiftAppointmentForGroupResponse" inputName="shiftAppointmentForGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="69c5ecf3-6a9a-4cc8-b09d-01ed403f3c18" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:shiftAppointmentForGroup>\r
         <!--2 to 10 repetitions:-->\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <appTime>\r
               <start>?</start>\r
               <end>?</end>\r
            </appTime>\r
            <complexResourceId>?</complexResourceId>\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <appTime>\r
               <start>?</start>\r
               <end>?</end>\r
            </appTime>\r
            <complexResourceId>?</complexResourceId>\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <availableResourceId>?</availableResourceId>\r
         <receptionTypeId>?</receptionTypeId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:shiftAppointmentForGroup>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/shiftAppointmentForGroup"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="d37e7649-2ce7-4cc2-9f58-7f45f32602ff" wsaVersion="NONE" name="ЛЛО" type="wsdl" bindingName="{http://emias2.gov.ru/business/llo/v4}PrescriptionInfoServiceV4SoapBinding" soapVersion="1_1" anonymous="optional" definition="http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService?wsdl"><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="PrescriptionInfoServiceV4" targetNamespace="http://emias2.gov.ru/business/llo/v4" xmlns:ns1="http://emias2.gov.ru/business/llo/v4/types" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://emias2.gov.ru/business/llo/v4" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias2.gov.ru/business/llo/v4/types" version="1.0" xmlns:tns="http://emias2.gov.ru/business/llo/v4/types" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:complexType name="fpiChangeMilkShopRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="milkShopId" type="xs:long"/>
          <xs:element maxOccurs="unbounded" name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiChangeMilkShopResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="extendedResponse">
        <xs:complexContent>
          <xs:extension base="tns:detailedResponse">
            <xs:sequence>
              <xs:element minOccurs="0" name="resultUserInfo" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="detailedResponse">
        <xs:complexContent>
          <xs:extension base="tns:generalResponse">
            <xs:sequence>
              <xs:element minOccurs="0" name="resultDetails" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="generalResponse">
        <xs:sequence>
          <xs:element name="resultCode" type="xs:int"/>
          <xs:element minOccurs="0" name="resultDescription" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piCompleteOrderRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="QRCode" type="xs:string"/>
          <xs:element minOccurs="0" name="userIdent" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piCompleteOrderResponseType">
        <xs:sequence>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piDrugAnnotationRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="getFullText" type="xs:boolean"/>
          <xs:element minOccurs="0" name="getINNonly" type="xs:boolean"/>
          <xs:element minOccurs="0" name="getStructureLevel" type="xs:int"/>
          <xs:element minOccurs="0" name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piDrugAnnotationResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="annotation" nillable="true" type="tns:annotationDrugs"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="annotationDrugs">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="chapter" nillable="true" type="tns:chapter"/>
          <xs:element minOccurs="0" name="fullText" type="xs:string"/>
          <xs:element minOccurs="0" name="isActual" type="xs:boolean"/>
          <xs:element minOccurs="0" name="latTitle" type="xs:string"/>
          <xs:element minOccurs="0" name="nameType" type="tns:annotationFeature"/>
          <xs:element minOccurs="0" name="rusTitle" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="chapter">
        <xs:sequence>
          <xs:element minOccurs="0" name="bodyStyle" type="xs:string"/>
          <xs:element minOccurs="0" name="chapterText" type="xs:string"/>
          <xs:element minOccurs="0" name="fullTitle" type="xs:string"/>
          <xs:element minOccurs="0" name="headerLevel" type="xs:int"/>
          <xs:element minOccurs="0" name="idx" type="xs:int"/>
          <xs:element minOccurs="0" name="shortTitle" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiCheckPatientRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="oms" type="xs:string"/>
          <xs:element minOccurs="0" name="patientID" type="xs:string"/>
          <xs:element minOccurs="0" name="snils" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiCheckPatientResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="hasFoodPrescriptions" type="xs:boolean"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piCheckOrderRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="options" type="tns:Options"/>
          <xs:element name="QRCode" type="xs:string"/>
          <xs:element minOccurs="0" name="userIdent" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Options">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" nillable="true" type="tns:KeyValuePair"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="KeyValuePair">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="key" type="xs:string" use="required"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="piCheckOrderResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="drug" nillable="true" type="tns:orderDrugInfo"/>
          <xs:element minOccurs="0" name="externalID" type="xs:string"/>
          <xs:element minOccurs="0" name="orderID" type="xs:long"/>
          <xs:element minOccurs="0" name="patientName" type="tns:patientName"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="orderDrugInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="amount" type="xs:long"/>
          <xs:element minOccurs="0" name="drugID" type="xs:string"/>
          <xs:element minOccurs="0" name="numero" type="xs:int"/>
          <xs:element name="qtySec" type="xs:int"/>
          <xs:element minOccurs="0" name="storageCondition" type="xs:string"/>
          <xs:element name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="patientName">
        <xs:sequence>
          <xs:element name="firstName" type="xs:string"/>
          <xs:element name="lastName" type="xs:string"/>
          <xs:element minOccurs="0" name="middleName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetDrugOrdersRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="oms" type="xs:string"/>
          <xs:element minOccurs="0" name="patientID" type="xs:string"/>
          <xs:element minOccurs="0" name="snils" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetDrugOrdersResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="order" type="tns:orderDrugOrder"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="orderDrugOrder">
        <xs:sequence>
          <xs:element name="agregatorID" type="xs:long"/>
          <xs:element name="agregatorName" type="xs:string"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element name="createDate" type="xs:dateTime"/>
          <xs:element name="delivering" type="xs:boolean"/>
          <xs:element name="externalID" type="xs:string"/>
          <xs:element minOccurs="0" name="link" type="xs:string"/>
          <xs:element name="orderID" type="xs:long"/>
          <xs:element minOccurs="0" name="pharmacyID" type="xs:long"/>
          <xs:element maxOccurs="unbounded" name="prescription" type="tns:prescriptionDrugOrder"/>
          <xs:element name="QRCode" type="xs:string"/>
          <xs:element name="statusCode" type="xs:string"/>
          <xs:element minOccurs="0" name="statusDescription" type="xs:string"/>
          <xs:element minOccurs="0" name="statusDetail" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="prescriptionDrugOrder">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="drug" type="tns:drugOrder"/>
          <xs:element name="prescriptionNumber" type="xs:string"/>
          <xs:element name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="drugOrder">
        <xs:sequence>
          <xs:element minOccurs="0" name="amount" type="xs:long"/>
          <xs:element minOccurs="0" name="drugID" type="xs:string"/>
          <xs:element name="qty" type="xs:int"/>
          <xs:element minOccurs="0" name="storageCondition" type="xs:string"/>
          <xs:element name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piRatePharmacyRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="mark" type="xs:string"/>
          <xs:element name="markedObject" type="tns:markedObject"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="markedObject">
        <xs:sequence>
          <xs:element minOccurs="0" name="orderID" type="xs:long"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piRatePharmacyResponseType">
        <xs:sequence>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiSetScheduleRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="prescriptionNumber" type="xs:string"/>
          <xs:element maxOccurs="unbounded" name="servicingDay" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiSetScheduleResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiGetScheduleRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiGetScheduleResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="milkShop" type="tns:milkShop"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionPeriod" type="xs:string"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="schedule" nillable="true" type="tns:fpiScheduleItem"/>
          <xs:element minOccurs="0" name="serviceMode" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="milkShop">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="xs:string"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiScheduleItem">
        <xs:sequence>
          <xs:element name="day" type="xs:int"/>
          <xs:element minOccurs="0" name="notes" type="xs:string"/>
          <xs:element name="scheduled" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="timeSlot" nillable="true" type="tns:timeSlotItem"/>
          <xs:element name="workLoad" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="timeSlotItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="service" nillable="true" type="xs:string"/>
          <xs:element name="slotEnd" type="xs:string"/>
          <xs:element name="slotStart" type="xs:string"/>
          <xs:element name="slotType" type="xs:string"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piDetailsRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="getQR" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="options" type="tns:Options"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="signature" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piDetailsResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="benefit" type="tns:benefitInfo"/>
          <xs:element minOccurs="0" name="controlType" type="xs:string"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="issuedBy" type="tns:registrationData"/>
          <xs:element minOccurs="0" name="medicine" type="tns:medicineInfo"/>
          <xs:element minOccurs="0" name="options" type="tns:Options"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacy" type="tns:pharmacyInfo"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionState" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionTerm" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionType" type="tns:prescriptionType"/>
          <xs:element minOccurs="0" name="QRstring" type="xs:string"/>
          <xs:element minOccurs="0" name="recipeService" type="tns:recipeServiceType"/>
          <xs:element minOccurs="0" name="registrationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="benefitInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="budget" type="tns:benefitBudget"/>
          <xs:element minOccurs="0" name="code" type="xs:string"/>
          <xs:element minOccurs="0" name="discount" type="tns:discountValue"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="registrationData">
        <xs:sequence>
          <xs:element minOccurs="0" name="doctorName" type="xs:string"/>
          <xs:element minOccurs="0" name="doctorSpeciality" type="xs:string"/>
          <xs:element minOccurs="0" name="organizationCode" type="xs:string"/>
          <xs:element minOccurs="0" name="organizationStamp" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="medicineInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="dosage" type="xs:string"/>
          <xs:element minOccurs="0" name="medicineRus" type="xs:string"/>
          <xs:element minOccurs="0" name="qty" type="xs:string"/>
          <xs:element minOccurs="0" name="rp" type="xs:string"/>
          <xs:element minOccurs="0" name="usage" type="xs:string"/>
          <xs:element minOccurs="0" name="usageDetails" type="tns:signaDetails"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="signaDetails">
        <xs:sequence>
          <xs:element minOccurs="0" name="couponDose" type="xs:double"/>
          <xs:element minOccurs="0" name="couponLength" type="xs:int"/>
          <xs:element minOccurs="0" name="couponMethod" type="xs:string"/>
          <xs:element minOccurs="0" name="couponPer_day" type="xs:int"/>
          <xs:element minOccurs="0" name="couponUnit" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="schedule" nillable="true" type="tns:scheduleItem"/>
          <xs:element minOccurs="0" name="scheduleBase" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="sheduleLenght" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="scheduleItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="dayDirections" type="xs:string"/>
          <xs:element minOccurs="0" name="dayZ" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="remainder" nillable="true" type="xs:dateTime"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="pharmacyIdent" type="xs:string"/>
          <xs:element minOccurs="0" name="phone" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="saleInfo" type="tns:saleInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="saleInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="qty" type="xs:string"/>
          <xs:element name="saleDate" type="xs:date"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="recipeServiceType">
        <xs:sequence>
          <xs:element name="periodsQty" type="xs:int"/>
          <xs:element name="periodDrugAmount" type="xs:int"/>
          <xs:element minOccurs="0" name="periodicity" type="xs:int"/>
          <xs:element minOccurs="0" name="periodicityUnit" type="xs:string"/>
          <xs:element maxOccurs="unbounded" name="servicePeriod" type="tns:ServicePeriod"/>
          <xs:element minOccurs="0" name="booking" type="tns:pharmacyShort"/>
          <xs:element minOccurs="0" name="serviceMessage" type="tns:infoMessageType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServicePeriod">
        <xs:sequence>
          <xs:element name="periodNumber" type="xs:int"/>
          <xs:element name="periodTerm" type="tns:DatePeriod"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="periodMode" nillable="true" type="tns:KeyValuePair"/>
          <xs:element minOccurs="0" name="isAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="isCompleted" type="xs:boolean"/>
          <xs:element name="drugAmount" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="serviceCase" nillable="true" type="tns:ServiceCase"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DatePeriod">
        <xs:sequence>
          <xs:element minOccurs="0" name="start" type="xs:date"/>
          <xs:element minOccurs="0" name="end" type="xs:date"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServiceCase">
        <xs:sequence>
          <xs:element name="saleDate" type="xs:date"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="saleMode" nillable="true" type="tns:KeyValuePair"/>
          <xs:element minOccurs="0" name="pharmacy" type="tns:pharmacyShort"/>
          <xs:element maxOccurs="unbounded" name="drugSold" type="tns:DrugSold"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyShort">
        <xs:sequence>
          <xs:element name="title" type="xs:string"/>
          <xs:element name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="address" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="phone" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DrugSold">
        <xs:sequence>
          <xs:element minOccurs="0" name="fullTradeName" type="xs:string"/>
          <xs:element minOccurs="0" name="fullTradeNameID" type="xs:int"/>
          <xs:element minOccurs="0" name="packQty" type="xs:decimal"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="infoMessageType">
        <xs:sequence>
          <xs:element minOccurs="0" name="colorMark" type="xs:string"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
          <xs:element minOccurs="0" name="details" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetMarkPharmacyRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="markedObject" type="tns:markedObject"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetMarkPharmacyResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element minOccurs="0" name="mark" type="xs:string"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiGetMilkShopListRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="OMKTE" type="xs:string"/>
          <xs:element minOccurs="0" name="searchString" type="xs:string"/>
          <xs:element minOccurs="0" name="stationID" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiGetMilkShopListResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="milkShop" nillable="true" type="tns:fullMilkShop"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fullMilkShop">
        <xs:complexContent>
          <xs:extension base="tns:milkShop">
            <xs:sequence>
              <xs:element minOccurs="0" name="area" type="tns:area"/>
              <xs:element minOccurs="0" name="geoTag" type="xs:string"/>
              <xs:element minOccurs="0" name="loadLevel" type="xs:string"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="nearestMetro" nillable="true" type="tns:metro"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="area">
        <xs:sequence>
          <xs:element minOccurs="0" name="OMKTE" type="xs:string"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="metro">
        <xs:sequence>
          <xs:element minOccurs="0" name="lineID" type="xs:long"/>
          <xs:element minOccurs="0" name="stationID" type="xs:long"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piCancelOrderRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="QRCode" type="xs:string"/>
          <xs:element minOccurs="0" name="userIdent" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piCancelOrderResponseType">
        <xs:sequence>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piPatientPrescriptionsRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="oms" type="xs:string"/>
          <xs:element minOccurs="0" name="options" type="tns:Options"/>
          <xs:element maxOccurs="unbounded" name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piPatientPrescriptionsResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="prescription" nillable="true" type="tns:prescriptionItem"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="prescriptionItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="expirationDate" type="xs:date"/>
          <xs:element name="medicine" type="tns:prescriptionMedicine"/>
          <xs:element name="number" type="xs:string"/>
          <xs:element minOccurs="0" name="options" type="tns:Options"/>
          <xs:element minOccurs="0" name="prescriptionState" type="xs:string"/>
          <xs:element minOccurs="0" name="registrationDate" type="xs:date"/>
          <xs:element name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="prescriptionMedicine">
        <xs:sequence>
          <xs:element minOccurs="0" name="dosage" type="xs:string"/>
          <xs:element minOccurs="0" name="medicineRus" type="xs:string"/>
          <xs:element minOccurs="0" name="qty" type="xs:string"/>
          <xs:element minOccurs="0" name="rp" type="xs:string"/>
          <xs:element minOccurs="0" name="usage" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piPharmacyAuxiliaryNewRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piPharmacyAuxiliaryNewResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="agregator" nillable="true" type="tns:agregator"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="agregator">
        <xs:sequence>
          <xs:element name="bookingLink" type="xs:string"/>
          <xs:element minOccurs="0" name="bookingOfferUrl" type="xs:string"/>
          <xs:element minOccurs="0" name="isBooking" type="tns:bookingType"/>
          <xs:element minOccurs="0" name="logo" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="phone" type="xs:string"/>
          <xs:element name="shortName" type="xs:string"/>
          <xs:element minOccurs="0" name="website" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piPharmacyAuxiliaryRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piPharmacyAuxiliaryResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="agregator" nillable="true" type="tns:agregator"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiListRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="mode" type="xs:string"/>
          <xs:element minOccurs="0" name="oms" type="xs:string"/>
          <xs:element minOccurs="0" name="patientID" type="xs:string"/>
          <xs:element minOccurs="0" name="snils" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiListResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="foodPrescription" nillable="true" type="tns:foodPrescriptionItem"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="foodPrescriptionItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="issueDate" type="xs:date"/>
          <xs:element minOccurs="0" name="milkShop" type="tns:milkShop"/>
          <xs:element minOccurs="0" name="notes" type="xs:string"/>
          <xs:element name="prescriptionNumber" type="xs:string"/>
          <xs:element name="prescriptionPeriod" type="xs:string"/>
          <xs:element name="prescriptionTitle" type="xs:string"/>
          <xs:element name="state" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetPharmacyGeoRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="filters" type="tns:pharmacyGeoFilters"/>
          <xs:element name="ident" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="options" nillable="true" type="tns:Options"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyGeoFilters">
        <xs:sequence>
          <xs:element minOccurs="0" name="is24Hours" type="xs:boolean"/>
          <xs:element minOccurs="0" name="OMKTE" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacyID" type="xs:long"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="searchRadius" type="tns:searchRadius"/>
          <xs:element minOccurs="0" name="stationID" type="xs:long"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchRadius">
        <xs:sequence>
          <xs:element name="distance" type="xs:int"/>
          <xs:element name="geoTag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetPharmacyGeoResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacy" nillable="true" type="tns:pharmacyGeo"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyGeo">
        <xs:sequence>
          <xs:element name="address" type="xs:string"/>
          <xs:element minOccurs="0" name="isCommercial" type="xs:boolean"/>
          <xs:element name="geoTag" type="xs:string"/>
          <xs:element name="ID" type="xs:long"/>
          <xs:element minOccurs="0" name="is24Hours" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="nearestMetro" nillable="true" type="tns:nearestMetro"/>
          <xs:element name="shortName" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="nearestMetro">
        <xs:sequence>
          <xs:element minOccurs="0" name="metroTitle" type="xs:string"/>
          <xs:element minOccurs="0" name="stationID" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetPharmacyListRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="filters" type="tns:getPharmacyFilter"/>
          <xs:element name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="pagingOptions" type="tns:pagingOptions"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getPharmacyFilter">
        <xs:sequence>
          <xs:element minOccurs="0" name="is24Hours" type="xs:boolean"/>
          <xs:element minOccurs="0" name="OMKTE" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacyID" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacyIdent" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacyType" nillable="true" type="xs:long"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="searchRadius" type="tns:searchRadius"/>
          <xs:element minOccurs="0" name="searchString" type="xs:string"/>
          <xs:element minOccurs="0" name="stationID" type="xs:long"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pagingOptions">
        <xs:sequence>
          <xs:element name="pageNumber" type="xs:int"/>
          <xs:element name="pageSize" type="xs:int"/>
          <xs:element minOccurs="0" name="sortingOptions" type="tns:sortingOptions"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sortingOptions">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="sortOrder" nillable="true" type="tns:sortOrder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sortOrder">
        <xs:sequence>
          <xs:element name="attributeName" type="xs:string"/>
          <xs:element name="descending" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetPharmacyListResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="pagingResults" type="tns:pagingResults"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacy" nillable="true" type="tns:pharmacyERItem"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pagingResults">
        <xs:sequence>
          <xs:element name="morePagesAvailable" type="xs:boolean"/>
          <xs:element name="pageNumber" type="xs:int"/>
          <xs:element name="pageSize" type="xs:int"/>
          <xs:element name="pageTotal" type="xs:int"/>
          <xs:element name="totalItemsCount" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyERItem">
        <xs:sequence>
          <xs:element name="address" type="xs:string"/>
          <xs:element minOccurs="0" name="area" type="tns:area"/>
          <xs:element name="benefitPrescription" type="xs:boolean"/>
          <xs:element name="booking" type="xs:boolean"/>
          <xs:element name="commercialPrescription" type="xs:boolean"/>
          <xs:element minOccurs="0" name="contacts" type="tns:pharmacyContact"/>
          <xs:element minOccurs="0" name="FIAS" type="xs:string"/>
          <xs:element minOccurs="0" name="geoTag" type="xs:string"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="ident" type="xs:string"/>
          <xs:element name="is24Hours" type="xs:boolean"/>
          <xs:element name="name" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="nearestMetro" nillable="true" type="tns:nearestMetro"/>
          <xs:element minOccurs="0" name="pharmacyType" type="tns:pharmacyType"/>
          <xs:element minOccurs="0" name="rate" type="xs:string"/>
          <xs:element minOccurs="0" name="schedule" type="xs:string"/>
          <xs:element name="shortName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyContact">
        <xs:sequence>
          <xs:element minOccurs="0" name="phone" type="xs:string"/>
          <xs:element minOccurs="0" name="website" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyType">
        <xs:sequence>
          <xs:element minOccurs="0" name="pharmacyTypeID" type="xs:long"/>
          <xs:element minOccurs="0" name="pharmacyTypeName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piListRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="getForm" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="oms" type="xs:string"/>
          <xs:element minOccurs="0" name="options" type="tns:Options"/>
          <xs:element minOccurs="0" name="patientId" type="xs:string"/>
          <xs:element minOccurs="0" name="snils" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piListResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="prescriptionList" nillable="true" type="tns:prescriptionInfo"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="prescriptionInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="bookingAvailable" type="xs:boolean"/>
          <xs:element minOccurs="0" name="controlType" type="xs:string"/>
          <xs:element minOccurs="0" name="couponLength" type="xs:int"/>
          <xs:element minOccurs="0" name="ctime" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="form" type="xs:string"/>
          <xs:element minOccurs="0" name="medicineRus" type="xs:string"/>
          <xs:element minOccurs="0" name="mnnId" type="xs:long"/>
          <xs:element minOccurs="0" name="number" type="xs:string"/>
          <xs:element minOccurs="0" name="periodical" type="tns:recipePeriodicalType"/>
          <xs:element minOccurs="0" name="prescriptionGUID" type="xs:string"/>
          <xs:element minOccurs="0" name="rp" type="xs:string"/>
          <xs:element minOccurs="0" name="saleDate" type="xs:date"/>
          <xs:element minOccurs="0" name="state" type="xs:string"/>
          <xs:element minOccurs="0" name="term" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:prescriptionType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="recipePeriodicalType">
        <xs:sequence>
          <xs:element name="periodsQty" type="xs:int"/>
          <xs:element minOccurs="0" name="periodNumber" type="xs:int"/>
          <xs:element minOccurs="0" name="drugAmount" type="xs:int"/>
          <xs:element minOccurs="0" name="keyDate" type="xs:date"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piDrugsAvailabilityRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piDrugsAvailabilityResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmaciesList" nillable="true" type="tns:pharmacyItem"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
          <xs:element minOccurs="0" name="rp" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="pharmacyAddress" type="xs:string"/>
          <xs:element minOccurs="0" name="pharmacyIdent" type="xs:string"/>
          <xs:element minOccurs="0" name="pharmacyName" type="xs:string"/>
          <xs:element minOccurs="0" name="pharmacyPhone" type="xs:string"/>
          <xs:element minOccurs="0" name="pharmacySchedule" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tradeRemains" nillable="true" type="tns:pharmacyRemainInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyRemainInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="remainsDescription" type="xs:string"/>
          <xs:element minOccurs="0" name="remainsMedicine" type="xs:string"/>
          <xs:element minOccurs="0" name="remainsState" type="tns:remainsState"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piMultiplyDrugsAvailabilityRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="filters" type="tns:multiplyDrugsAvailabilityFilters"/>
          <xs:element name="ident" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="options" type="tns:Options"/>
          <xs:element maxOccurs="unbounded" name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="multiplyDrugsAvailabilityFilters">
        <xs:sequence>
          <xs:element minOccurs="0" name="is24Hours" type="xs:boolean"/>
          <xs:element minOccurs="0" name="OMKTE" type="xs:string"/>
          <xs:element minOccurs="0" name="searchRadius" type="tns:searchRadius"/>
          <xs:element minOccurs="0" name="stationID" type="xs:long"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piMultiplyDrugsAvailabilityResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacy" type="tns:pharmacyMultiply"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyMultiply">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="xs:string"/>
          <xs:element minOccurs="0" name="isCommercial" type="xs:boolean"/>
          <xs:element minOccurs="0" name="geoTag" type="xs:string"/>
          <xs:element minOccurs="0" name="is24Hours" type="xs:boolean"/>
          <xs:element name="name" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="nearestMetro" type="tns:nearestMetro"/>
          <xs:element name="pharmacyID" type="xs:long"/>
          <xs:element minOccurs="0" name="phone" type="xs:string"/>
          <xs:element maxOccurs="unbounded" name="prescription" type="tns:prescriptionMultiply"/>
          <xs:element minOccurs="0" name="rate" type="xs:string"/>
          <xs:element minOccurs="0" name="schedule" type="xs:string"/>
          <xs:element minOccurs="0" name="shortName" type="xs:string"/>
          <xs:element name="type" type="xs:string"/>
          <xs:element minOccurs="0" name="website" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="prescriptionMultiply">
        <xs:sequence>
          <xs:element name="amount" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="available" type="tns:available"/>
          <xs:element minOccurs="0" name="INNName" type="xs:string"/>
          <xs:element name="medicineTitle" type="xs:string"/>
          <xs:element name="prescriptionNumber" type="xs:string"/>
          <xs:element name="qty" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="available">
        <xs:sequence>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element minOccurs="0" name="expiration" type="xs:date"/>
          <xs:element minOccurs="0" name="manufacturer" type="xs:string"/>
          <xs:element name="medicineTitle" type="xs:string"/>
          <xs:element minOccurs="0" name="origin" type="xs:string"/>
          <xs:element name="price" type="xs:long"/>
          <xs:element name="qty" type="xs:int"/>
          <xs:element name="surcharge" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiDetailsRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiDetailsResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="doctor" type="tns:doctorInfo"/>
          <xs:element minOccurs="0" name="issueDate" type="xs:date"/>
          <xs:element minOccurs="0" name="milkShop" type="tns:milkShop"/>
          <xs:element minOccurs="0" name="MO" type="tns:moInfo"/>
          <xs:element minOccurs="0" name="notes" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionPeriod" type="tns:prescriptionPeriod"/>
          <xs:element minOccurs="0" name="prescriptionTitle" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="productLine" nillable="true" type="tns:productLineItem"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
          <xs:element minOccurs="0" name="state" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="doctorInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="doctorID" type="xs:string"/>
          <xs:element minOccurs="0" name="fullName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="moInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="MOID" type="xs:string"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="prescriptionPeriod">
        <xs:sequence>
          <xs:element minOccurs="0" name="dateBegin" type="xs:date"/>
          <xs:element minOccurs="0" name="dateEnd" type="xs:date"/>
          <xs:element minOccurs="0" name="periodTitle" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="productLineItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="periodicity" type="xs:string"/>
          <xs:element name="productName" type="xs:string"/>
          <xs:element name="productOutput" type="xs:long"/>
          <xs:element minOccurs="0" name="unit" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="annotationFeature">
        <xs:restriction base="xs:string">
          <xs:enumeration value="inn"/>
          <xs:enumeration value="ftn"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="benefitBudget">
        <xs:restriction base="xs:string">
          <xs:enumeration value="federal"/>
          <xs:enumeration value="regional"/>
          <xs:enumeration value="municipal"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="discountValue">
        <xs:restriction base="xs:string">
          <xs:enumeration value="_50"/>
          <xs:enumeration value="_100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="prescriptionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="benefit"/>
          <xs:enumeration value="commercial"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="bookingType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="commercial"/>
          <xs:enumeration value="benefit"/>
          <xs:enumeration value="any"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="remainsState">
        <xs:restriction base="xs:string">
          <xs:enumeration value="available"/>
          <xs:enumeration value="soldout"/>
          <xs:enumeration value="shortage"/>
          <xs:enumeration value="unknown"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="fpiChangeMilkShopRequest" nillable="true" type="tns:fpiChangeMilkShopRequestType"/>
      <xs:element name="fpiChangeMilkShopResponse" nillable="true" type="tns:fpiChangeMilkShopResponseType"/>
      <xs:element name="piCompleteOrderRequest" nillable="true" type="tns:piCompleteOrderRequestType"/>
      <xs:element name="piCompleteOrderResponse" nillable="true" type="tns:piCompleteOrderResponseType"/>
      <xs:element name="piDrugAnnotationRequest" nillable="true" type="tns:piDrugAnnotationRequestType"/>
      <xs:element name="piDrugAnnotationResponse" nillable="true" type="tns:piDrugAnnotationResponseType"/>
      <xs:element name="fpiCheckPatientRequest" nillable="true" type="tns:fpiCheckPatientRequestType"/>
      <xs:element name="fpiCheckPatientResponse" nillable="true" type="tns:fpiCheckPatientResponseType"/>
      <xs:element name="piCheckOrderRequest" nillable="true" type="tns:piCheckOrderRequestType"/>
      <xs:element name="piCheckOrderResponse" nillable="true" type="tns:piCheckOrderResponseType"/>
      <xs:element name="piGetDrugOrdersRequest" nillable="true" type="tns:piGetDrugOrdersRequestType"/>
      <xs:element name="piGetDrugOrdersResponse" nillable="true" type="tns:piGetDrugOrdersResponseType"/>
      <xs:element name="piRatePharmacyRequest" nillable="true" type="tns:piRatePharmacyRequestType"/>
      <xs:element name="piRatePharmacyResponse" nillable="true" type="tns:piRatePharmacyResponseType"/>
      <xs:element name="fpiSetScheduleRequest" nillable="true" type="tns:fpiSetScheduleRequestType"/>
      <xs:element name="fpiSetScheduleResponse" nillable="true" type="tns:fpiSetScheduleResponseType"/>
      <xs:element name="fpiGetScheduleRequest" nillable="true" type="tns:fpiGetScheduleRequestType"/>
      <xs:element name="fpiGetScheduleResponse" nillable="true" type="tns:fpiGetScheduleResponseType"/>
      <xs:element name="piDetailsRequest" nillable="true" type="tns:piDetailsRequestType"/>
      <xs:element name="piDetailsResponse" nillable="true" type="tns:piDetailsResponseType"/>
      <xs:element name="piGetMarkPharmacyRequest" nillable="true" type="tns:piGetMarkPharmacyRequestType"/>
      <xs:element name="piGetMarkPharmacyResponse" nillable="true" type="tns:piGetMarkPharmacyResponseType"/>
      <xs:element name="fpiGetMilkShopListRequest" nillable="true" type="tns:fpiGetMilkShopListRequestType"/>
      <xs:element name="fpiGetMilkShopListResponse" nillable="true" type="tns:fpiGetMilkShopListResponseType"/>
      <xs:element name="piCancelOrderRequest" nillable="true" type="tns:piCancelOrderRequestType"/>
      <xs:element name="piCancelOrderResponse" nillable="true" type="tns:piCancelOrderResponseType"/>
      <xs:element name="piPatientPrescriptionsRequest" nillable="true" type="tns:piPatientPrescriptionsRequestType"/>
      <xs:element name="piPatientPrescriptionsResponse" nillable="true" type="tns:piPatientPrescriptionsResponseType"/>
      <xs:element name="piPharmacyAuxiliaryNewRequest" nillable="true" type="tns:piPharmacyAuxiliaryNewRequestType"/>
      <xs:element name="piPharmacyAuxiliaryNewResponse" nillable="true" type="tns:piPharmacyAuxiliaryNewResponseType"/>
      <xs:element name="piPharmacyAuxiliaryRequest" nillable="true" type="tns:piPharmacyAuxiliaryRequestType"/>
      <xs:element name="piPharmacyAuxiliaryResponse" nillable="true" type="tns:piPharmacyAuxiliaryResponseType"/>
      <xs:element name="fpiGetListRequest" nillable="true" type="tns:fpiListRequestType"/>
      <xs:element name="fpiGetListResponse" nillable="true" type="tns:fpiListResponseType"/>
      <xs:element name="piGetPharmacyGeoRequest" nillable="true" type="tns:piGetPharmacyGeoRequestType"/>
      <xs:element name="piGetPharmacyGeoResponse" nillable="true" type="tns:piGetPharmacyGeoResponseType"/>
      <xs:element name="piGetPharmacyListRequest" nillable="true" type="tns:piGetPharmacyListRequestType"/>
      <xs:element name="piGetPharmacyListResponse" nillable="true" type="tns:piGetPharmacyListResponseType"/>
      <xs:element name="piListRequest" nillable="true" type="tns:piListRequestType"/>
      <xs:element name="piListResponse" nillable="true" type="tns:piListResponseType"/>
      <xs:element name="piDrugsAvailabilityRequest" nillable="true" type="tns:piDrugsAvailabilityRequestType"/>
      <xs:element name="piDrugsAvailabilityResponse" nillable="true" type="tns:piDrugsAvailabilityResponseType"/>
      <xs:element name="piMultiplyDrugsAvailabilityRequest" nillable="true" type="tns:piMultiplyDrugsAvailabilityRequestType"/>
      <xs:element name="piMultiplyDrugsAvailabilityResponse" nillable="true" type="tns:piMultiplyDrugsAvailabilityResponseType"/>
      <xs:element name="fpiGetDetailsRequest" nillable="true" type="tns:fpiDetailsRequestType"/>
      <xs:element name="fpiGetDetailsResponse" nillable="true" type="tns:fpiDetailsResponseType"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="piPharmacyAuxiliaryResponse">
    <wsdl:part element="ns1:piPharmacyAuxiliaryResponse" name="piPharmacyAuxiliaryResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiCheckPatientResponse">
    <wsdl:part element="ns1:fpiCheckPatientResponse" name="fpiCheckPatientResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piRatePharmacy">
    <wsdl:part element="ns1:piRatePharmacyRequest" name="piRatePharmacyRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetListResponse">
    <wsdl:part element="ns1:fpiGetListResponse" name="fpiGetListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiSetSchedule">
    <wsdl:part element="ns1:fpiSetScheduleRequest" name="fpiSetScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetScheduleResponse">
    <wsdl:part element="ns1:fpiGetScheduleResponse" name="fpiGetScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piCancelOrderResponse">
    <wsdl:part element="ns1:piCancelOrderResponse" name="piCancelOrderResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetDrugOrdersResponse">
    <wsdl:part element="ns1:piGetDrugOrdersResponse" name="piGetDrugOrdersResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetSchedule">
    <wsdl:part element="ns1:fpiGetScheduleRequest" name="fpiGetScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiChangeMilkShopResponse">
    <wsdl:part element="ns1:fpiChangeMilkShopResponse" name="fpiChangeMilkShopResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piRatePharmacyResponse">
    <wsdl:part element="ns1:piRatePharmacyResponse" name="piRatePharmacyResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piDetails">
    <wsdl:part element="ns1:piDetailsRequest" name="piDetailsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetMilkShopList">
    <wsdl:part element="ns1:fpiGetMilkShopListRequest" name="fpiGetMilkShopListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piPharmacyAuxiliaryNewResponse">
    <wsdl:part element="ns1:piPharmacyAuxiliaryNewResponse" name="piPharmacyAuxiliaryNewResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetPharmacyListResponse">
    <wsdl:part element="ns1:piGetPharmacyListResponse" name="piGetPharmacyListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piDrugsAvailabilityResponse">
    <wsdl:part element="ns1:piDrugsAvailabilityResponse" name="piDrugsAvailabilityResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piPharmacyAuxiliaryNew">
    <wsdl:part element="ns1:piPharmacyAuxiliaryNewRequest" name="piPharmacyAuxiliaryNewRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piDetailsResponse">
    <wsdl:part element="ns1:piDetailsResponse" name="piDetailsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piMultiplyDrugsAvailabilityResponse">
    <wsdl:part element="ns1:piMultiplyDrugsAvailabilityResponse" name="piMultiplyDrugsAvailabilityResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetPharmacyList">
    <wsdl:part element="ns1:piGetPharmacyListRequest" name="piGetPharmacyListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piCompleteOrderResponse">
    <wsdl:part element="ns1:piCompleteOrderResponse" name="piCompleteOrderResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piMultiplyDrugsAvailability">
    <wsdl:part element="ns1:piMultiplyDrugsAvailabilityRequest" name="piMultiplyDrugsAvailabilityRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiSetScheduleResponse">
    <wsdl:part element="ns1:fpiSetScheduleResponse" name="fpiSetScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiChangeMilkShop">
    <wsdl:part element="ns1:fpiChangeMilkShopRequest" name="fpiChangeMilkShopRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piCompleteOrder">
    <wsdl:part element="ns1:piCompleteOrderRequest" name="piCompleteOrderRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piDrugAnnotation">
    <wsdl:part element="ns1:piDrugAnnotationRequest" name="piDrugAnnotationRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piDrugAnnotationResponse">
    <wsdl:part element="ns1:piDrugAnnotationResponse" name="piDrugAnnotationResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiCheckPatient">
    <wsdl:part element="ns1:fpiCheckPatientRequest" name="fpiCheckPatientRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piCheckOrder">
    <wsdl:part element="ns1:piCheckOrderRequest" name="piCheckOrderRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetDrugOrders">
    <wsdl:part element="ns1:piGetDrugOrdersRequest" name="piGetDrugOrdersRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetDetailsResponse">
    <wsdl:part element="ns1:fpiGetDetailsResponse" name="fpiGetDetailsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetMilkShopListResponse">
    <wsdl:part element="ns1:fpiGetMilkShopListResponse" name="fpiGetMilkShopListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetMarkPharmacy">
    <wsdl:part element="ns1:piGetMarkPharmacyRequest" name="piGetMarkPharmacyRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piCancelOrder">
    <wsdl:part element="ns1:piCancelOrderRequest" name="piCancelOrderRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piPatientPrescriptions">
    <wsdl:part element="ns1:piPatientPrescriptionsRequest" name="piPatientPrescriptionsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetPharmacyGeoResponse">
    <wsdl:part element="ns1:piGetPharmacyGeoResponse" name="piGetPharmacyGeoResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piCheckOrderResponse">
    <wsdl:part element="ns1:piCheckOrderResponse" name="piCheckOrderResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piPharmacyAuxiliary">
    <wsdl:part element="ns1:piPharmacyAuxiliaryRequest" name="piPharmacyAuxiliaryRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetMarkPharmacyResponse">
    <wsdl:part element="ns1:piGetMarkPharmacyResponse" name="piGetMarkPharmacyResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetList">
    <wsdl:part element="ns1:fpiGetListRequest" name="fpiGetListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetPharmacyGeo">
    <wsdl:part element="ns1:piGetPharmacyGeoRequest" name="piGetPharmacyGeoRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piList">
    <wsdl:part element="ns1:piListRequest" name="piListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piDrugsAvailability">
    <wsdl:part element="ns1:piDrugsAvailabilityRequest" name="piDrugsAvailabilityRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piPatientPrescriptionsResponse">
    <wsdl:part element="ns1:piPatientPrescriptionsResponse" name="piPatientPrescriptionsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piListResponse">
    <wsdl:part element="ns1:piListResponse" name="piListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetDetails">
    <wsdl:part element="ns1:fpiGetDetailsRequest" name="fpiGetDetailsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="PrescriptionInfoSrvV4">
    <wsdl:operation name="fpiChangeMilkShop">
      <wsdl:input message="tns:fpiChangeMilkShop" name="fpiChangeMilkShop"></wsdl:input>
      <wsdl:output message="tns:fpiChangeMilkShopResponse" name="fpiChangeMilkShopResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piCompleteOrder">
      <wsdl:input message="tns:piCompleteOrder" name="piCompleteOrder"></wsdl:input>
      <wsdl:output message="tns:piCompleteOrderResponse" name="piCompleteOrderResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piDrugAnnotation">
      <wsdl:input message="tns:piDrugAnnotation" name="piDrugAnnotation"></wsdl:input>
      <wsdl:output message="tns:piDrugAnnotationResponse" name="piDrugAnnotationResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiCheckPatient">
      <wsdl:input message="tns:fpiCheckPatient" name="fpiCheckPatient"></wsdl:input>
      <wsdl:output message="tns:fpiCheckPatientResponse" name="fpiCheckPatientResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piCheckOrder">
      <wsdl:input message="tns:piCheckOrder" name="piCheckOrder"></wsdl:input>
      <wsdl:output message="tns:piCheckOrderResponse" name="piCheckOrderResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetDrugOrders">
      <wsdl:input message="tns:piGetDrugOrders" name="piGetDrugOrders"></wsdl:input>
      <wsdl:output message="tns:piGetDrugOrdersResponse" name="piGetDrugOrdersResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piRatePharmacy">
      <wsdl:input message="tns:piRatePharmacy" name="piRatePharmacy"></wsdl:input>
      <wsdl:output message="tns:piRatePharmacyResponse" name="piRatePharmacyResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiSetSchedule">
      <wsdl:input message="tns:fpiSetSchedule" name="fpiSetSchedule"></wsdl:input>
      <wsdl:output message="tns:fpiSetScheduleResponse" name="fpiSetScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetSchedule">
      <wsdl:input message="tns:fpiGetSchedule" name="fpiGetSchedule"></wsdl:input>
      <wsdl:output message="tns:fpiGetScheduleResponse" name="fpiGetScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piDetails">
      <wsdl:input message="tns:piDetails" name="piDetails"></wsdl:input>
      <wsdl:output message="tns:piDetailsResponse" name="piDetailsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetMarkPharmacy">
      <wsdl:input message="tns:piGetMarkPharmacy" name="piGetMarkPharmacy"></wsdl:input>
      <wsdl:output message="tns:piGetMarkPharmacyResponse" name="piGetMarkPharmacyResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetMilkShopList">
      <wsdl:input message="tns:fpiGetMilkShopList" name="fpiGetMilkShopList"></wsdl:input>
      <wsdl:output message="tns:fpiGetMilkShopListResponse" name="fpiGetMilkShopListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piCancelOrder">
      <wsdl:input message="tns:piCancelOrder" name="piCancelOrder"></wsdl:input>
      <wsdl:output message="tns:piCancelOrderResponse" name="piCancelOrderResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piPatientPrescriptions">
      <wsdl:input message="tns:piPatientPrescriptions" name="piPatientPrescriptions"></wsdl:input>
      <wsdl:output message="tns:piPatientPrescriptionsResponse" name="piPatientPrescriptionsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piPharmacyAuxiliaryNew">
      <wsdl:input message="tns:piPharmacyAuxiliaryNew" name="piPharmacyAuxiliaryNew"></wsdl:input>
      <wsdl:output message="tns:piPharmacyAuxiliaryNewResponse" name="piPharmacyAuxiliaryNewResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piPharmacyAuxiliary">
      <wsdl:input message="tns:piPharmacyAuxiliary" name="piPharmacyAuxiliary"></wsdl:input>
      <wsdl:output message="tns:piPharmacyAuxiliaryResponse" name="piPharmacyAuxiliaryResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetList">
      <wsdl:input message="tns:fpiGetList" name="fpiGetList"></wsdl:input>
      <wsdl:output message="tns:fpiGetListResponse" name="fpiGetListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetPharmacyGeo">
      <wsdl:input message="tns:piGetPharmacyGeo" name="piGetPharmacyGeo"></wsdl:input>
      <wsdl:output message="tns:piGetPharmacyGeoResponse" name="piGetPharmacyGeoResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetPharmacyList">
      <wsdl:input message="tns:piGetPharmacyList" name="piGetPharmacyList"></wsdl:input>
      <wsdl:output message="tns:piGetPharmacyListResponse" name="piGetPharmacyListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piList">
      <wsdl:input message="tns:piList" name="piList"></wsdl:input>
      <wsdl:output message="tns:piListResponse" name="piListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piDrugsAvailability">
      <wsdl:input message="tns:piDrugsAvailability" name="piDrugsAvailability"></wsdl:input>
      <wsdl:output message="tns:piDrugsAvailabilityResponse" name="piDrugsAvailabilityResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piMultiplyDrugsAvailability">
      <wsdl:input message="tns:piMultiplyDrugsAvailability" name="piMultiplyDrugsAvailability"></wsdl:input>
      <wsdl:output message="tns:piMultiplyDrugsAvailabilityResponse" name="piMultiplyDrugsAvailabilityResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetDetails">
      <wsdl:input message="tns:fpiGetDetails" name="fpiGetDetails"></wsdl:input>
      <wsdl:output message="tns:fpiGetDetailsResponse" name="fpiGetDetailsResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="PrescriptionInfoServiceV4SoapBinding" type="tns:PrescriptionInfoSrvV4">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="fpiChangeMilkShop">
      <soap:operation soapAction="fpiChangeMilkShop" style="document"/>
      <wsdl:input name="fpiChangeMilkShop">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fpiChangeMilkShopResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piCompleteOrder">
      <soap:operation soapAction="piCompleteOrder" style="document"/>
      <wsdl:input name="piCompleteOrder">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piCompleteOrderResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piDrugAnnotation">
      <soap:operation soapAction="piDrugAnnotation" style="document"/>
      <wsdl:input name="piDrugAnnotation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piDrugAnnotationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiCheckPatient">
      <soap:operation soapAction="fpiCheckPatient" style="document"/>
      <wsdl:input name="fpiCheckPatient">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fpiCheckPatientResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piCheckOrder">
      <soap:operation soapAction="piCheckOrder" style="document"/>
      <wsdl:input name="piCheckOrder">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piCheckOrderResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetDrugOrders">
      <soap:operation soapAction="piGetDrugOrders" style="document"/>
      <wsdl:input name="piGetDrugOrders">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piGetDrugOrdersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piRatePharmacy">
      <soap:operation soapAction="piRatePharmacy" style="document"/>
      <wsdl:input name="piRatePharmacy">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piRatePharmacyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiSetSchedule">
      <soap:operation soapAction="fpiSetSchedule" style="document"/>
      <wsdl:input name="fpiSetSchedule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fpiSetScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetSchedule">
      <soap:operation soapAction="fpiGetSchedule" style="document"/>
      <wsdl:input name="fpiGetSchedule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fpiGetScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piDetails">
      <soap:operation soapAction="piDetails" style="document"/>
      <wsdl:input name="piDetails">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piDetailsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetMarkPharmacy">
      <soap:operation soapAction="piGetMarkPharmacy" style="document"/>
      <wsdl:input name="piGetMarkPharmacy">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piGetMarkPharmacyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetMilkShopList">
      <soap:operation soapAction="fpiGetMilkShopList" style="document"/>
      <wsdl:input name="fpiGetMilkShopList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fpiGetMilkShopListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piCancelOrder">
      <soap:operation soapAction="piCancelOrder" style="document"/>
      <wsdl:input name="piCancelOrder">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piCancelOrderResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piPatientPrescriptions">
      <soap:operation soapAction="piPatientPrescriptions" style="document"/>
      <wsdl:input name="piPatientPrescriptions">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piPatientPrescriptionsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piPharmacyAuxiliaryNew">
      <soap:operation soapAction="piPharmacyAuxiliaryNew" style="document"/>
      <wsdl:input name="piPharmacyAuxiliaryNew">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piPharmacyAuxiliaryNewResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piPharmacyAuxiliary">
      <soap:operation soapAction="piPharmacyAuxiliary" style="document"/>
      <wsdl:input name="piPharmacyAuxiliary">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piPharmacyAuxiliaryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetList">
      <soap:operation soapAction="fpiGetList" style="document"/>
      <wsdl:input name="fpiGetList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fpiGetListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetPharmacyGeo">
      <soap:operation soapAction="piGetPharmacyGeo" style="document"/>
      <wsdl:input name="piGetPharmacyGeo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piGetPharmacyGeoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetPharmacyList">
      <soap:operation soapAction="piGetPharmacyList" style="document"/>
      <wsdl:input name="piGetPharmacyList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piGetPharmacyListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piList">
      <soap:operation soapAction="piList" style="document"/>
      <wsdl:input name="piList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piDrugsAvailability">
      <soap:operation soapAction="piDrugsAvailability" style="document"/>
      <wsdl:input name="piDrugsAvailability">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piDrugsAvailabilityResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piMultiplyDrugsAvailability">
      <soap:operation soapAction="piMultiplyDrugsAvailability" style="document"/>
      <wsdl:input name="piMultiplyDrugsAvailability">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piMultiplyDrugsAvailabilityResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetDetails">
      <soap:operation soapAction="fpiGetDetails" style="document"/>
      <wsdl:input name="fpiGetDetails">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fpiGetDetailsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PrescriptionInfoServiceV4">
    <wsdl:port binding="tns:PrescriptionInfoServiceV4SoapBinding" name="PrescriptionInfoSrvPortV4">
      <soap:address location="http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint></con:endpoints><con:operation id="14a42412-a67f-409b-9878-c542b29b46a2" isOneWay="false" action="fpiChangeMilkShop" name="fpiChangeMilkShop" bindingOperationName="fpiChangeMilkShop" type="Request-Response" outputName="fpiChangeMilkShopResponse" inputName="fpiChangeMilkShop" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="86038759-1238-4dd9-9a6a-dc16edc549e4" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:fpiChangeMilkShopRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:milkShopId>?</typ:milkShopId>\r
         <!--1 or more repetitions:-->\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
      </typ:fpiChangeMilkShopRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="fpiChangeMilkShop"/></con:call></con:operation><con:operation id="94c19a7f-d718-45ed-a7bc-6b478443c19a" isOneWay="false" action="fpiCheckPatient" name="fpiCheckPatient" bindingOperationName="fpiCheckPatient" type="Request-Response" outputName="fpiCheckPatientResponse" inputName="fpiCheckPatient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="70bb6c1b-c7f7-440e-a1e6-c91a0539548a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:fpiCheckPatientRequest>\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:oms>?</typ:oms>\r
         <!--Optional:-->\r
         <typ:patientID>?</typ:patientID>\r
         <!--Optional:-->\r
         <typ:snils>?</typ:snils>\r
      </typ:fpiCheckPatientRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="fpiCheckPatient"/></con:call></con:operation><con:operation id="aec3fafd-9462-462b-8020-75cf79bac198" isOneWay="false" action="fpiGetDetails" name="fpiGetDetails" bindingOperationName="fpiGetDetails" type="Request-Response" outputName="fpiGetDetailsResponse" inputName="fpiGetDetails" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="852578eb-bc05-4f23-b0df-36e60072199a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:fpiGetDetailsRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
      </typ:fpiGetDetailsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="fpiGetDetails"/></con:call></con:operation><con:operation id="724d660b-8f96-440e-b36c-958c901ad570" isOneWay="false" action="fpiGetList" name="fpiGetList" bindingOperationName="fpiGetList" type="Request-Response" outputName="fpiGetListResponse" inputName="fpiGetList" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7361307f-9853-4304-bb5d-53abda33e01c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:fpiGetListRequest>\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:mode>?</typ:mode>\r
         <!--Optional:-->\r
         <typ:oms>?</typ:oms>\r
         <!--Optional:-->\r
         <typ:patientID>?</typ:patientID>\r
         <!--Optional:-->\r
         <typ:snils>?</typ:snils>\r
      </typ:fpiGetListRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="fpiGetList"/></con:call></con:operation><con:operation id="bdbe64aa-ac25-4961-a597-454417802931" isOneWay="false" action="fpiGetMilkShopList" name="fpiGetMilkShopList" bindingOperationName="fpiGetMilkShopList" type="Request-Response" outputName="fpiGetMilkShopListResponse" inputName="fpiGetMilkShopList" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="24fb2902-b0d2-4dd1-8131-2bfa9cc9ba73" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:fpiGetMilkShopListRequest>\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:OMKTE>?</typ:OMKTE>\r
         <!--Optional:-->\r
         <typ:searchString>?</typ:searchString>\r
         <!--Optional:-->\r
         <typ:stationID>?</typ:stationID>\r
      </typ:fpiGetMilkShopListRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="fpiGetMilkShopList"/></con:call></con:operation><con:operation id="18b16ce1-d838-4727-a408-241fd1c5c7b8" isOneWay="false" action="fpiGetSchedule" name="fpiGetSchedule" bindingOperationName="fpiGetSchedule" type="Request-Response" outputName="fpiGetScheduleResponse" inputName="fpiGetSchedule" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6384e43c-5161-493f-9cce-76d3c8788d36" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:fpiGetScheduleRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
      </typ:fpiGetScheduleRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="fpiGetSchedule"/></con:call></con:operation><con:operation id="0981bfa6-fc5b-4a07-b69e-4c6f42ea7430" isOneWay="false" action="fpiSetSchedule" name="fpiSetSchedule" bindingOperationName="fpiSetSchedule" type="Request-Response" outputName="fpiSetScheduleResponse" inputName="fpiSetSchedule" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b8fb4d53-2df4-46c2-967d-72adf39399b3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:fpiSetScheduleRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
         <!--1 or more repetitions:-->\r
         <typ:servicingDay>?</typ:servicingDay>\r
      </typ:fpiSetScheduleRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="fpiSetSchedule"/></con:call></con:operation><con:operation id="4d6016a8-014a-40f2-b668-698d84cee87b" isOneWay="false" action="piCancelOrder" name="piCancelOrder" bindingOperationName="piCancelOrder" type="Request-Response" outputName="piCancelOrderResponse" inputName="piCancelOrder" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="624e8574-c437-418d-b8af-3dfeb85c2db8" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piCancelOrderRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:QRCode>?</typ:QRCode>\r
         <!--Optional:-->\r
         <typ:userIdent>?</typ:userIdent>\r
      </typ:piCancelOrderRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piCancelOrder"/></con:call></con:operation><con:operation id="27b96abe-3d0e-4590-892a-ac3a1490e838" isOneWay="false" action="piCheckOrder" name="piCheckOrder" bindingOperationName="piCheckOrder" type="Request-Response" outputName="piCheckOrderResponse" inputName="piCheckOrder" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1b69f6f3-02e7-43d1-9621-8b8f746eb779" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piCheckOrderRequest>\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
         <typ:QRCode>?</typ:QRCode>\r
         <!--Optional:-->\r
         <typ:userIdent>?</typ:userIdent>\r
      </typ:piCheckOrderRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piCheckOrder"/></con:call><con:call id="1e13adf1-951d-4fd3-b9ea-e02f01a29737" name="checkOrder"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header>
  <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
    <wsse:UsernameToken>
      <wsse:Username>EIM/4c2f03d5-5c41-4c79-acd0-fe36faa92104</wsse:Username>
      <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>
    </wsse:UsernameToken>
  </wsse:Security>
</soapenv:Header>
   <soapenv:Body>\r
      <typ:piCheckOrderRequest>\r
         <typ:ident>EMIASINFO</typ:ident>\r
         <typ:QRCode>DO:0000000186211730D9C6620BAE9F35CFF34E6E7E36F</typ:QRCode>\r
      </typ:piCheckOrderRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piCheckOrder"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="ff2a674f-c765-4ab8-8b6f-21d2ba9da5f3" isOneWay="false" action="piCompleteOrder" name="piCompleteOrder" bindingOperationName="piCompleteOrder" type="Request-Response" outputName="piCompleteOrderResponse" inputName="piCompleteOrder" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4b6ecb7c-fe44-4e29-a8c4-e6c91acf8c8d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piCompleteOrderRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:QRCode>?</typ:QRCode>\r
         <!--Optional:-->\r
         <typ:userIdent>?</typ:userIdent>\r
      </typ:piCompleteOrderRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piCompleteOrder"/></con:call></con:operation><con:operation id="0ff1c2b8-1696-4b90-b936-650c3c72d98d" isOneWay="false" action="piDetails" name="piDetails" bindingOperationName="piDetails" type="Request-Response" outputName="piDetailsResponse" inputName="piDetails" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="326674fa-96f6-4810-baff-cf66c424aa00" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piDetailsRequest>\r
         <!--Optional:-->\r
         <typ:getQR>?</typ:getQR>\r
         <!--Optional:-->\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
         <!--Optional:-->\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
         <!--Optional:-->\r
         <typ:signature>?</typ:signature>\r
      </typ:piDetailsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piDetails"/></con:call><con:call id="b2a893a4-2438-4ace-bbc0-7f6d1ed88f02" name="piDetails"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">
   <soapenv:Header>
  <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
    <wsse:UsernameToken>
      <wsse:Username>EIM/4c2f03d5-5c41-4c79-acd0-fe36faa92104</wsse:Username>
      <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>
    </wsse:UsernameToken>
  </wsse:Security>
</soapenv:Header>
   <soapenv:Body>\r
      <typ:piDetailsRequest>\r
         <!--Optional:-->\r
         <typ:getQR>true</typ:getQR>\r
         <!--Optional:-->\r
         <typ:ident>EMIASINF</typ:ident>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="get_sale">true</typ:entry>\r
            <typ:entry key="get_booking_availability">true</typ:entry>
         </typ:options>\r
         <!--Optional:-->\r
         <typ:prescriptionNumber>01Э451943727</typ:prescriptionNumber>\r
      </typ:piDetailsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piDetails"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="de36e5ec-c606-4bd3-a4f3-2d87835d36d4" isOneWay="false" action="piDrugAnnotation" name="piDrugAnnotation" bindingOperationName="piDrugAnnotation" type="Request-Response" outputName="piDrugAnnotationResponse" inputName="piDrugAnnotation" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2b12ead3-1205-4b70-9210-da1ccd656c55" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piDrugAnnotationRequest>\r
         <!--Optional:-->\r
         <typ:getFullText>?</typ:getFullText>\r
         <!--Optional:-->\r
         <typ:getINNonly>?</typ:getINNonly>\r
         <!--Optional:-->\r
         <typ:getStructureLevel>?</typ:getStructureLevel>\r
         <!--Optional:-->\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
      </typ:piDrugAnnotationRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piDrugAnnotation"/></con:call></con:operation><con:operation id="e1e024d6-0ad0-4ad2-b383-bfa008c7d52e" isOneWay="false" action="piDrugsAvailability" name="piDrugsAvailability" bindingOperationName="piDrugsAvailability" type="Request-Response" outputName="piDrugsAvailabilityResponse" inputName="piDrugsAvailability" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c9eedf3a-f96b-4c18-998b-69c51e352ad1" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piDrugsAvailabilityRequest>\r
         <!--Optional:-->\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
      </typ:piDrugsAvailabilityRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piDrugsAvailability"/></con:call></con:operation><con:operation id="23f89baa-5692-4819-931f-781288216d69" isOneWay="false" action="piGetDrugOrders" name="piGetDrugOrders" bindingOperationName="piGetDrugOrders" type="Request-Response" outputName="piGetDrugOrdersResponse" inputName="piGetDrugOrders" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5060e7d0-4049-4756-b723-f12e04ec7531" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piGetDrugOrdersRequest>\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:oms>?</typ:oms>\r
         <!--Optional:-->\r
         <typ:patientID>?</typ:patientID>\r
         <!--Optional:-->\r
         <typ:snils>?</typ:snils>\r
      </typ:piGetDrugOrdersRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piGetDrugOrders"/></con:call><con:call id="a3fe9bf3-5677-4acb-b197-8153ac902683" name="piGetDrugOrders"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">
   <soapenv:Header>
  <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
    <wsse:UsernameToken>
      <wsse:Username>EIM/4c2f03d5-5c41-4c79-acd0-fe36faa92104</wsse:Username>
      <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>
    </wsse:UsernameToken>
  </wsse:Security>
</soapenv:Header>
   <soapenv:Body>\r
      <typ:piGetDrugOrdersRequest>\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:oms>?</typ:oms>\r
         <!--Optional:-->\r
         <typ:patientID>?</typ:patientID>\r
         <!--Optional:-->\r
         <typ:snils>?</typ:snils>\r
      </typ:piGetDrugOrdersRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piGetDrugOrders"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="50b591d9-b7c6-4bf7-a015-0884e4468641" isOneWay="false" action="piGetMarkPharmacy" name="piGetMarkPharmacy" bindingOperationName="piGetMarkPharmacy" type="Request-Response" outputName="piGetMarkPharmacyResponse" inputName="piGetMarkPharmacy" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="91d5acdd-c54b-4826-ae24-78bf468d5e6d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piGetMarkPharmacyRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:markedObject>\r
            <!--Optional:-->\r
            <typ:orderID>?</typ:orderID>\r
            <!--Optional:-->\r
            <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
         </typ:markedObject>\r
      </typ:piGetMarkPharmacyRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piGetMarkPharmacy"/></con:call></con:operation><con:operation id="d7fa7d64-398b-49e8-b1b0-f051d89c60e4" isOneWay="false" action="piGetPharmacyGeo" name="piGetPharmacyGeo" bindingOperationName="piGetPharmacyGeo" type="Request-Response" outputName="piGetPharmacyGeoResponse" inputName="piGetPharmacyGeo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="627a4ad6-7966-4aa0-bd6b-cd6bdb4f6659" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piGetPharmacyGeoRequest>\r
         <!--Optional:-->\r
         <typ:filters>\r
            <!--Optional:-->\r
            <typ:is24Hours>?</typ:is24Hours>\r
            <!--Optional:-->\r
            <typ:OMKTE>?</typ:OMKTE>\r
            <!--Zero or more repetitions:-->\r
            <typ:pharmacyID>?</typ:pharmacyID>\r
            <!--Optional:-->\r
            <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
            <!--Optional:-->\r
            <typ:searchRadius>\r
               <typ:distance>?</typ:distance>\r
               <typ:geoTag>?</typ:geoTag>\r
            </typ:searchRadius>\r
            <!--Optional:-->\r
            <typ:stationID>?</typ:stationID>\r
            <!--Optional:-->\r
            <typ:type>?</typ:type>\r
         </typ:filters>\r
         <typ:ident>?</typ:ident>\r
         <!--Zero or more repetitions:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </typ:piGetPharmacyGeoRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piGetPharmacyGeo"/></con:call><con:call id="37afeb2b-c81a-4b18-80f2-44b04fed027a" name="geo"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM/4c2f03d5-5c41-4c79-acd0-fe36faa92104</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>
         </wsse:UsernameToken>
      </wsse:Security>
   </soapenv:Header>
   <soapenv:Body>\r
      <typ:piGetPharmacyGeoRequest>\r
         <typ:ident>EINFO</typ:ident>\r
      </typ:piGetPharmacyGeoRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piGetPharmacyGeo"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="00d4208a-2cd0-41c8-9f7f-9a3036bcdb55" isOneWay="false" action="piGetPharmacyList" name="piGetPharmacyList" bindingOperationName="piGetPharmacyList" type="Request-Response" outputName="piGetPharmacyListResponse" inputName="piGetPharmacyList" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="41a2d46b-56bb-4615-925c-e67b2cfe4dea" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piGetPharmacyListRequest>\r
         <!--Optional:-->\r
         <typ:filters>\r
            <!--Optional:-->\r
            <typ:is24Hours>?</typ:is24Hours>\r
            <!--Optional:-->\r
            <typ:OMKTE>?</typ:OMKTE>\r
            <!--Zero or more repetitions:-->\r
            <typ:pharmacyID>?</typ:pharmacyID>\r
            <!--Zero or more repetitions:-->\r
            <typ:pharmacyIdent>?</typ:pharmacyIdent>\r
            <!--Zero or more repetitions:-->\r
            <typ:pharmacyType>?</typ:pharmacyType>\r
            <!--Optional:-->\r
            <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
            <!--Optional:-->\r
            <typ:searchRadius>\r
               <typ:distance>?</typ:distance>\r
               <typ:geoTag>?</typ:geoTag>\r
            </typ:searchRadius>\r
            <!--Optional:-->\r
            <typ:searchString>?</typ:searchString>\r
            <!--Optional:-->\r
            <typ:stationID>?</typ:stationID>\r
            <!--Optional:-->\r
            <typ:type>?</typ:type>\r
         </typ:filters>\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:pagingOptions>\r
            <typ:pageNumber>?</typ:pageNumber>\r
            <typ:pageSize>?</typ:pageSize>\r
            <!--Optional:-->\r
            <typ:sortingOptions>\r
               <!--Zero or more repetitions:-->\r
               <typ:sortOrder>\r
                  <typ:attributeName>?</typ:attributeName>\r
                  <typ:descending>?</typ:descending>\r
               </typ:sortOrder>\r
            </typ:sortingOptions>\r
         </typ:pagingOptions>\r
      </typ:piGetPharmacyListRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piGetPharmacyList"/></con:call></con:operation><con:operation id="28c7650a-fb1c-40c0-b31b-e343967ed4e2" isOneWay="false" action="piList" name="piList" bindingOperationName="piList" type="Request-Response" outputName="piListResponse" inputName="piList" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="88706298-91f7-46c5-b7aa-99f44f32250d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piListRequest>\r
         <!--Optional:-->\r
         <typ:getForm>?</typ:getForm>\r
         <!--Optional:-->\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:oms>?</typ:oms>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
         <!--Optional:-->\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:snils>?</typ:snils>\r
      </typ:piListRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piList"/></con:call><con:call id="bee0344c-a279-46dd-9672-0f7116e4666a" name="piList"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken>\r
            <wsse:Username>EIM/4c2f03d5-5c41-4c79-acd0-fe36faa92104</wsse:Username>\r
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soapenv:Header>\r
   <soapenv:Body>\r
      <typ:piListRequest>\r
         <typ:getForm>true</typ:getForm>\r
         <typ:ident>EMIASINFO</typ:ident>\r
         <typ:oms>7700007178231039</typ:oms>\r
         <typ:options>\r
            <typ:entry key="get_sale_date">true</typ:entry>\r
            <typ:entry key="check_periodical">true</typ:entry>\r
            <typ:entry key="get_booking_avaliability">true</typ:entry>\r
            <typ:entry key="get_guid">true</typ:entry>
         </typ:options>\r
      </typ:piListRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piList"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="395c65d6-4537-4c76-bc77-f3e4ed7f048a" isOneWay="false" action="piMultiplyDrugsAvailability" name="piMultiplyDrugsAvailability" bindingOperationName="piMultiplyDrugsAvailability" type="Request-Response" outputName="piMultiplyDrugsAvailabilityResponse" inputName="piMultiplyDrugsAvailability" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b80a0c93-ef21-4182-acca-57402ab9a1d0" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piMultiplyDrugsAvailabilityRequest>\r
         <!--Optional:-->\r
         <typ:filters>\r
            <!--Optional:-->\r
            <typ:is24Hours>?</typ:is24Hours>\r
            <!--Optional:-->\r
            <typ:OMKTE>?</typ:OMKTE>\r
            <!--Optional:-->\r
            <typ:searchRadius>\r
               <typ:distance>?</typ:distance>\r
               <typ:geoTag>?</typ:geoTag>\r
            </typ:searchRadius>\r
            <!--Optional:-->\r
            <typ:stationID>?</typ:stationID>\r
            <!--Optional:-->\r
            <typ:type>?</typ:type>\r
         </typ:filters>\r
         <typ:ident>?</typ:ident>\r
         <!--Zero or more repetitions:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
         <!--1 or more repetitions:-->\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
      </typ:piMultiplyDrugsAvailabilityRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piMultiplyDrugsAvailability"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="cafc0efd-c640-4ac8-a8ba-a47a61f0151f" isOneWay="false" action="piPatientPrescriptions" name="piPatientPrescriptions" bindingOperationName="piPatientPrescriptions" type="Request-Response" outputName="piPatientPrescriptionsResponse" inputName="piPatientPrescriptions" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f4a2c870-4db0-4c26-9f1e-34f5910bbcfc" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piPatientPrescriptionsRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:oms>?</typ:oms>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
         <!--1 or more repetitions:-->\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
      </typ:piPatientPrescriptionsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piPatientPrescriptions"/></con:call><con:call id="9404835e-45fa-408c-a1aa-c105f3193605" name="piPatientPrescription"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">
   <soapenv:Header>
  <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
    <wsse:UsernameToken>
      <wsse:Username>EIM/4c2f03d5-5c41-4c79-acd0-fe36faa92104</wsse:Username>
      <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>
    </wsse:UsernameToken>
  </wsse:Security>
</soapenv:Header>
   <soapenv:Body>\r
      <typ:piPatientPrescriptionsRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:oms>?</typ:oms>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
         <!--1 or more repetitions:-->\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
      </typ:piPatientPrescriptionsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piPatientPrescriptions"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="b62c055b-8e0b-4050-a381-fcfc5c5e5f53" isOneWay="false" action="piPharmacyAuxiliary" name="piPharmacyAuxiliary" bindingOperationName="piPharmacyAuxiliary" type="Request-Response" outputName="piPharmacyAuxiliaryResponse" inputName="piPharmacyAuxiliary" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="06ad5d17-0e71-4e27-836e-f805add88b3a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piPharmacyAuxiliaryRequest>\r
         <typ:ident>?</typ:ident>\r
      </typ:piPharmacyAuxiliaryRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piPharmacyAuxiliary"/></con:call></con:operation><con:operation id="73c02c9f-bd37-4b30-b76c-c17519d6179f" isOneWay="false" action="piPharmacyAuxiliaryNew" name="piPharmacyAuxiliaryNew" bindingOperationName="piPharmacyAuxiliaryNew" type="Request-Response" outputName="piPharmacyAuxiliaryNewResponse" inputName="piPharmacyAuxiliaryNew" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5f36835e-ad71-4f0d-9ca3-02b5c3eaadfe" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piPharmacyAuxiliaryNewRequest>\r
         <typ:ident>?</typ:ident>\r
      </typ:piPharmacyAuxiliaryNewRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piPharmacyAuxiliaryNew"/></con:call><con:call id="1ca5034d-4a99-4686-8bf7-74ff0fb63021" name="allixuary"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM/4c2f03d5-5c41-4c79-acd0-fe36faa92104</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>
         </wsse:UsernameToken>
      </wsse:Security>
   </soapenv:Header>
   <soapenv:Body>\r
      <typ:piPharmacyAuxiliaryNewRequest>\r
         <typ:ident>EmiasInfo</typ:ident>\r
      </typ:piPharmacyAuxiliaryNewRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piPharmacyAuxiliaryNew"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="d301e8f7-a879-4ab2-a69e-78542c39ee70" isOneWay="false" action="piRatePharmacy" name="piRatePharmacy" bindingOperationName="piRatePharmacy" type="Request-Response" outputName="piRatePharmacyResponse" inputName="piRatePharmacy" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="71df2788-844d-4626-9e4b-313c340b2b90" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piRatePharmacyRequest>\r
         <!--Optional:-->\r
         <typ:comment>?</typ:comment>\r
         <typ:ident>?</typ:ident>\r
         <typ:mark>?</typ:mark>\r
         <typ:markedObject>\r
            <!--Optional:-->\r
            <typ:orderID>?</typ:orderID>\r
            <!--Optional:-->\r
            <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
         </typ:markedObject>\r
      </typ:piRatePharmacyRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piRatePharmacy"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="f3e7eeec-0b42-4ee7-94dd-e95fc0457282" wsaVersion="NONE" name="НСИ" type="wsdl" bindingName="{http://emias.mos.ru/nsiProductPublication/publicationService/v1/}publicationServiceBinding" soapVersion="1_2" anonymous="optional" definition="http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService?wsdl"><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="publicationService" targetNamespace="http://emias.mos.ru/nsiProductPublication/publicationService/v1/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ns1="http://emias.mos.ru/nsiProductPublication/publicationService/v1/types/" xmlns:nsf="http://emias.mos.ru/system/v1/faults/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702" xmlns:tns="http://emias.mos.ru/nsiProductPublication/publicationService/v1/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema>
      <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELuSNBdqlsoEjm3WTldC5jepdWiJ5KblM90N_eqy0_wi_09hg9xP4ibUCW_cc0Myu"/>
      <xs:import namespace="http://emias.mos.ru/system/v1/faults/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELuSNBdqlsoEjm3WTldC5jepOSDJnHqUM.1VjUrLsAUv4VYLPcSaOP9nDgQ--"/>
      <xs:import namespace="http://emias.mos.ru/nsiProductPublication/publicationService/v1/types/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu.TBeuk85Yvi3WmjZyj1adJXS5kBPhS9kRrZ.Gt.AX_CmQohEVarqkQXhkcHKUGmB_z3.v8fAHTiHnPIt6rT_qAyP0cpg--"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="fault">
    <wsdl:part element="nsf:fault" name="body"/>
  </wsdl:message>
  <wsdl:message name="userContext">
    <wsdl:part element="uctx:userContext" name="userContext"/>
  </wsdl:message>
  <wsdl:message name="getCatalogItemsInput">
    <wsdl:part element="ns1:getCatalogItemsRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="getCatalogItemsOutput">
    <wsdl:part element="ns1:getCatalogItemsResponse" name="body"/>
  </wsdl:message>
  <!--<wsdl:message name="getCatalogItemsFeaturesInput">          <wsdl:part name="body" element="ns1:getCatalogItemsFeaturesRequest"/>      </wsdl:message>      <wsdl:message name="getCatalogItemsFeaturesOutput">          <wsdl:part name="body" element="ns1:getCatalogItemsFeaturesResponse"/>      </wsdl:message>-->
  <wsdl:message name="getCatalogChangesInput">
    <wsdl:part element="ns1:getCatalogChangesRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="getCatalogChangesOutput">
    <wsdl:part element="ns1:getCatalogChangesResponse" name="body"/>
  </wsdl:message>
  <wsdl:message name="getObjectChangesInput">
    <wsdl:part element="ns1:getObjectChangesRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="getObjectChangesOutput">
    <wsdl:part element="ns1:getObjectChangesResponse" name="body"/>
  </wsdl:message>
  <wsdl:message name="getCatalogListInput">
    <wsdl:part element="ns1:getCatalogListRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="getCatalogListOutput">
    <wsdl:part element="ns1:getCatalogListResponse" name="body"/>
  </wsdl:message>
  <wsdl:message name="getCatalogCountInput">
    <wsdl:part element="ns1:getCatalogCountRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="getCatalogCountOutput">
    <wsdl:part element="ns1:getCatalogCountResponse" name="body"/>
  </wsdl:message>
  <!--<wsdl:message name="catalogExportInput">          <wsdl:part name="body" element="ns1:catalogExportRequest"/>      </wsdl:message>      <wsdl:message name="catalogExportOutput">          <wsdl:part name="body" element="ns1:catalogExportResponse"/>      </wsdl:message>-->
  <wsdl:message name="getDictionaryItemInput">
    <wsdl:part element="ns1:getDictionaryItemRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="getDictionaryItemOutput">
    <wsdl:part element="ns1:getDictionaryItemResponse" name="body"/>
  </wsdl:message>
  <wsdl:portType name="publicationServicePortType">
    <wsdl:operation name="getCatalogItems">
      <wsdl:input message="tns:getCatalogItemsInput"/>
      <wsdl:output message="tns:getCatalogItemsOutput"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
    <!--<wsdl:operation name="getCatalogItemsFeatures">              <wsdl:input message="tns:getCatalogItemsFeaturesInput"/>              <wsdl:output message="tns:getCatalogItemsFeaturesOutput"/>              <wsdl:fault name="fault" message="tns:fault"/>          </wsdl:operation>-->
    <wsdl:operation name="getCatalogChanges">
      <wsdl:input message="tns:getCatalogChangesInput"/>
      <wsdl:output message="tns:getCatalogChangesOutput"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
    <wsdl:operation name="getObjectChanges">
      <wsdl:input message="tns:getObjectChangesInput"/>
      <wsdl:output message="tns:getObjectChangesOutput"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
    <wsdl:operation name="getCatalogList">
      <wsdl:input message="tns:getCatalogListInput"/>
      <wsdl:output message="tns:getCatalogListOutput"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
    <wsdl:operation name="getCatalogCount">
      <wsdl:input message="tns:getCatalogCountInput"/>
      <wsdl:output message="tns:getCatalogCountOutput"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
    <!--<wsdl:operation name="catalogExport">              <wsdl:input message="tns:catalogExportInput"/>              <wsdl:output message="tns:catalogExportOutput"/>              <wsdl:fault name="fault" message="tns:fault"/>          </wsdl:operation>-->
    <wsdl:operation name="getDictionaryItem">
      <wsdl:input message="tns:getDictionaryItemInput"/>
      <wsdl:output message="tns:getDictionaryItemOutput"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="publicationServiceBinding" type="tns:publicationServicePortType">
    <wsp:PolicyReference URI="#authPolicy"/>
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getCatalogItems">
      <soap:operation soapAction="getCatalogItems"/>
      <wsdl:input>
        <soap:header message="tns:userContext" part="userContext" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <!--<wsdl:operation name="getCatalogItemsFeatures">              <soap:operation soapAction="getCatalogItemsFeatures"/>              <wsdl:input>                  <soap:header message="tns:userContext" part="userContext" use="literal"/>                  <soap:body use="literal"/>              </wsdl:input>              <wsdl:output>                  <soap:body use="literal"/>              </wsdl:output>              <wsdl:fault name="fault">                  <soap:fault name="fault" use="literal"/>              </wsdl:fault>          </wsdl:operation>-->
    <wsdl:operation name="getCatalogChanges">
      <soap:operation soapAction="getCatalogChanges"/>
      <wsdl:input>
        <soap:header message="tns:userContext" part="userContext" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectChanges">
      <soap:operation soapAction="getObjectChanges"/>
      <wsdl:input>
        <soap:header message="tns:userContext" part="userContext" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCatalogList">
      <soap:operation soapAction="getCatalogList"/>
      <wsdl:input>
        <soap:header message="tns:userContext" part="userContext" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCatalogCount">
      <soap:operation soapAction="getCatalogCount"/>
      <wsdl:input>
        <soap:header message="tns:userContext" part="userContext" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <!--<wsdl:operation name="catalogExport">              <soap:operation soapAction="catalogExport"/>              <wsdl:input>                  <soap:header message="tns:userContext" part="userContext" use="literal"/>                  <soap:body use="literal"/>              </wsdl:input>              <wsdl:output>                  <soap:body use="literal"/>              </wsdl:output>              <wsdl:fault name="fault">                  <soap:fault name="fault" use="literal"/>              </wsdl:fault>          </wsdl:operation>-->
    <wsdl:operation name="getDictionaryItem">
      <soap:operation soapAction="getDictionaryItem"/>
      <wsdl:input>
        <soap:header message="tns:userContext" part="userContext" use="literal"/>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="publicationService">
    <wsdl:port binding="tns:publicationServiceBinding" name="publicationServicePort">
      <soap:address location="http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService"/>
    </wsdl:port>
  </wsdl:service>
  <wsp:Policy wsu:Id="authPolicy">
    <sp:SupportingTokens>
      <wsp:Policy>
        <sp:UsernameToken sp:IncludeToken="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient">
          <wsp:Policy>
            <sp:NoPassword/>
          </wsp:Policy>
        </sp:UsernameToken>
      </wsp:Policy>
    </sp:SupportingTokens>
  </wsp:Policy>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELuSNBdqlsoEjm3WTldC5jepdWiJ5KblM90N_eqy0_wi_09hg9xP4ibUCW_cc0Myu</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/userContext/" xmlns="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELuSNBdqlsoEjm3WTldC5jepQWiOkC4oY7_nDmW6CAnGsJnTy"/>
  <xs:element name="userContext" type="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="systemName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Шифр системы-потребителя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя пользователя (логин)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRoleId" type="ID">
        <xs:annotation>
          <xs:documentation>Идентификатор Роли пользователя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isUserRoleSystemWide" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак "Общесистемная Роль пользователя"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRights">
        <xs:annotation>
          <xs:documentation>Коллекция Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>ИД Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="jobExecutionId" type="ID"/>
      <xs:element minOccurs="0" name="hostIp" type="xs:string">
        <xs:annotation>
          <xs:documentation>IP адрес хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hostName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELuSNBdqlsoEjm3WTldC5jepQWiOkC4oY7_nDmW6CAnGsJnTy</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELuSNBdqlsoEjm3WTldC5jepOSDJnHqUM.1VjUrLsAUv4VYLPcSaOP9nDgQ--</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/faults/" xmlns="http://emias.mos.ru/system/v1/faults/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELuSNBdqlsoEjm3WTldC5jepQWiOkC4oY7_nDmW6CAnGsJnTy"/>
  <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELuSNBdqlsoEjm3WTldC5jepdWiJ5KblM90N_eqy0_wi_09hg9xP4ibUCW_cc0Myu"/>
  <!--faults-->
  <xs:element name="fault" type="BaseFault">
    <xs:annotation>
      <xs:documentation>Базовый тип ошибки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SecurityFault">
    <xs:annotation>
      <xs:documentation>Ошибка безопасности</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element ref="uctx:userContext"/>
          <xs:choice>
            <xs:element name="unauthorizedRequestSecurityException" type="UnauthorizedRequestSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="otherSecurityException" type="OtherSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:sequence>
        <xs:attribute fixed="SECURITY" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BusinessFault">
    <xs:annotation>
      <xs:documentation>Бизнес ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Коллекция Сообщений об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hasErrors" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак наличия ошибок в списке сообщений</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="BUSINESS" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UnexpectedFault">
    <xs:annotation>
      <xs:documentation>Непредвиденная ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="version" type="xs:string">
            <xs:annotation>
              <xs:documentation>Версия продукта-сервиса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="stackTrace">
            <xs:annotation>
              <xs:documentation>Стек вызова (последние 10  записей)</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="10" name="stackTraceRecord">
                  <xs:annotation>
                    <xs:documentation>Запись StackTrace</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="declaringClass" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование класса, содержащего метод</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="methodName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование метода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="fileName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование файла</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="lineNumber" type="xs:int">
                        <xs:annotation>
                          <xs:documentation>Номер строки кода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="UNEXPECTED" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="BaseFault">
    <xs:annotation>
      <xs:documentation>Описание базового типа описания ошибки</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--security exceptions-->
  <xs:complexType name="UnauthorizedRequestSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="requiredRights">
        <xs:annotation>
          <xs:documentation>Перечень идентификаторов недостающих Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Идентификатор Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="UNAUTHORIZED_REQUEST_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="OtherSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="message" type="Message">
        <xs:annotation>
          <xs:documentation>Сообщение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="OTHER_SECURITY_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="SecurityExceptionTypes">
    <xs:annotation>
      <xs:documentation>Типы исключений безопасности</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNAUTHORIZED_REQUEST_EXCEPTION"/>
      <xs:enumeration value="OTHER_SECURITY_EXCEPTION"/>
    </xs:restriction>
  </xs:simpleType>
  <!--components-->
  <xs:simpleType name="FaultTypes">
    <xs:annotation>
      <xs:documentation>Тип ошибки</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="SECURITY">
        <xs:annotation>
          <xs:documentation>Непредвиденная ошибка приложения</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BUSINESS">
        <xs:annotation>
          <xs:documentation>Бизнес ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UNEXPECTED">
        <xs:annotation>
          <xs:documentation>Ошибка безопасности</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu.TBeuk85Yvi3WmjZyj1adJXS5kBPhS9kRrZ.Gt.AX_CmQohEVarqkQXhkcHKUGmB_z3.v8fAHTiHnPIt6rT_qAyP0cpg--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/nsiProductPublication/publicationService/v1/types/" xmlns:core="http://emias.mos.ru/nsiProductPublication/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://emias.mos.ru/nsiProductPublication/core/v1/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu.TBeuk85Yvi3WmjZyj1adJXS5kBPhB7FRiIPT9ohTjAHwvUeGTg46m1fiXxYEBrnA-"/>
  <xs:element name="getCatalogItemsRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода getCatalogItems</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element default="0" name="offset" nillable="true" type="xs:int"/>
        <xs:element default="1" name="limit" nillable="true" type="xs:int"/>
        <xs:element name="id" nillable="false" type="xs:int"/>
        <xs:element name="criteria" type="xs:string"/>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="projection" type="xs:string"/>
        <xs:element name="sorting" type="core:map"/>
        <xs:element name="useAntiProjection" type="xs:boolean"/>
        <xs:element name="includeDeleted" type="xs:boolean"/>
        <xs:element name="fetchGeodata" type="xs:boolean"/>
        <xs:element name="fetchGeodataCenter" type="xs:boolean"/>
        <xs:element name="paging" type="xs:boolean"/>
        <xs:element name="epoch" nillable="true" type="xs:string"/>
        <xs:element name="timestamp" nillable="true" type="xs:int"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getCatalogItemsResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода getCatalogItems</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ehdCatalogItems" type="core:ehdCatalogItems"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getCatalogItemsFeaturesRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода getCatalogItemsFeatures</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element default="0" name="offset" nillable="true" type="xs:int"/>
        <xs:element default="1" name="limit" nillable="true" type="xs:int"/>
        <xs:element name="id" nillable="false" type="xs:int"/>
        <xs:element name="criteria" type="xs:string"/>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="projection" type="xs:string"/>
        <xs:element name="sorting" type="core:map"/>
        <xs:element name="useAntiProjection" type="xs:boolean"/>
        <xs:element name="includeDeleted" type="xs:boolean"/>
        <xs:element name="paging" type="xs:boolean"/>
        <xs:element name="epoch" nillable="true" type="xs:string"/>
        <xs:element name="timestamp" nillable="true" type="xs:int"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getCatalogItemsFeaturesResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода getCatalogItemsFeatures</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ehdCatalogItemsFeatures" type="core:ehdCatalogItemsFeatures"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getCatalogChangesRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода getCatalogChanges</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element default="0" name="offset" nillable="true" type="xs:int"/>
        <xs:element default="1" name="limit" nillable="true" type="xs:int"/>
        <xs:element name="id" nillable="false" type="xs:int"/>
        <xs:element name="criteria" type="xs:string"/>
        <xs:element name="sorting" type="core:map"/>
        <xs:element name="from" nillable="false" type="xs:string"/>
        <xs:element name="until" nillable="false" type="xs:string"/>
        <xs:element name="state" nillable="false" type="xs:string"/>
        <xs:element name="fetchGeodata" type="xs:boolean"/>
        <xs:element name="paging" type="xs:boolean"/>
        <xs:element name="fetchGeodataCenter" type="xs:boolean"/>
        <xs:element name="includeDeleted" type="xs:boolean"/>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="projection" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getCatalogChangesResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода getCatalogChanges</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ehdCatalogItems" type="core:ehdCatalogItems"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getObjectChangesRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода getObjectChanges</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element default="0" name="offset" nillable="true" type="xs:int"/>
        <xs:element default="1" name="limit" nillable="true" type="xs:int"/>
        <xs:element name="id" nillable="false" type="xs:int"/>
        <xs:element name="catalog" nillable="false" type="xs:int"/>
        <xs:element name="criteria" type="xs:string"/>
        <xs:element name="from" nillable="false" type="xs:string"/>
        <xs:element name="until" nillable="false" type="xs:string"/>
        <xs:element name="state" nillable="false" type="xs:string"/>
        <xs:element name="fetchGeodata" type="xs:boolean"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getObjectChangesResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода getObjectChanges</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ehdCatalogItems" type="core:ehdCatalogItems"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getCatalogListRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода getCatalogList</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element default="0" name="offset" nillable="true" type="xs:int"/>
        <xs:element default="1" name="limit" nillable="true" type="xs:int"/>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="id" type="xs:int"/>
        <xs:element name="epoch" nillable="true" type="xs:string"/>
        <xs:element name="timestamp" nillable="true" type="xs:int"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getCatalogListResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода getCatalogList</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ehdCatalogs" type="core:ehdCatalogs"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getCatalogCountRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода getCatalogCount</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="id" type="xs:int"/>
        <xs:element name="criteria" type="xs:string"/>
        <xs:element name="includeDeleted" type="xs:boolean"/>
        <xs:element name="epoch" type="xs:string"/>
        <xs:element name="timestamp" type="xs:int"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getCatalogCountResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода getCatalogCount</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ehdCatalogStats" type="core:ehdCatalogStats"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="catalogExportRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода catalogExport</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element default="0" name="offset" nillable="true" type="xs:int"/>
        <xs:element default="1000" name="limit" nillable="true" type="xs:int"/>
        <xs:element name="id" nillable="false" type="xs:int"/>
        <xs:element name="criteria" type="xs:string"/>
        <xs:element name="epoch" type="xs:string"/>
        <xs:element name="format" type="xs:string"/>
        <xs:element name="translate" type="xs:boolean"/>
        <xs:element name="file_id" nillable="true" type="core:intList"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="catalogExportResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода catalogExport</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="catalogExports" type="core:catalogExport"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getDictionaryItemRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода getDictionaryItem</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element default="0" name="offset" nillable="true" type="xs:int"/>
        <xs:element default="1000" name="limit" nillable="true" type="xs:int"/>
        <xs:element name="id" nillable="false" type="xs:int"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getDictionaryItemResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода getDictionaryItem</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="dictionaryItems" type="core:ehdDictionaryItems"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu.TBeuk85Yvi3WmjZyj1adJXS5kBPhB7FRiIPT9ohTjAHwvUeGTg46m1fiXxYEBrnA-</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/nsiProductPublication/core/v1/" xmlns="http://emias.mos.ru/nsiProductPublication/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELuSNBdqlspE1mmTYjs_hxLdMW4ACdenh4SWCUHxsODNXDg--"/>
  <xs:complexType name="ehdCatalogs">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="list" type="ehdCatalog"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ehdCatalog">
    <xs:sequence>
      <xs:element name="id" nillable="true" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="fullName" type="xs:string"/>
      <xs:element name="technicalName" type="xs:string"/>
      <xs:element name="shortName" type="xs:string"/>
      <xs:element name="accountingObject" type="xs:string"/>
      <xs:element name="hasEnVersion" type="xs:boolean"/>
      <xs:element name="keywords" type="xs:string"/>
      <xs:element name="vid" type="xs:string"/>
      <xs:element name="type" type="xs:string"/>
      <xs:element name="kind" type="xs:string"/>
      <xs:element name="period" type="xs:string"/>
      <xs:element name="hasGeo" nillable="true" type="xs:boolean"/>
      <xs:element name="layerId" type="xs:string"/>
      <xs:element name="categories" type="xs:string"/>
      <xs:element name="OIV" type="xs:string"/>
      <xs:element name="oivList" type="xs:string"/>
      <xs:element name="description" type="xs:string"/>
      <xs:element name="CNT" type="xs:long"/>
      <xs:element name="permittedSystems" type="intList"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="fields" type="ehdCommonAttribute"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="systemFields" type="systemField"/>
      <xs:element name="fieldsEa" type="fieldEa"/>
      <xs:element name="responsiblePerson" type="responsiblPerson"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="nameVariants" type="nameVariant"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ehdCatalogStats">
    <xs:sequence>
      <xs:element name="response" nillable="true" type="xs:int"/>
      <xs:element name="lastUpdated" nillable="true" type="xs:string"/>
      <xs:element name="validDate" nillable="true" type="xs:string"/>
      <xs:element name="message" type="xs:string"/>
      <xs:element name="status" nillable="true" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ehdCommonAttribute">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="columnId" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="enName" type="xs:string"/>
      <xs:element name="techName" type="xs:string"/>
      <xs:element name="groupName" type="xs:string"/>
      <xs:element name="typeName" type="xs:string"/>
      <xs:element name="type" type="xs:string"/>
      <xs:element name="isPk" nillable="true" type="xs:boolean"/>
      <xs:element name="isArray" nillable="true" type="xs:boolean"/>
      <xs:element name="system" nillable="true" type="xs:boolean"/>
      <xs:element name="hasTranslation" nillable="true" type="xs:boolean"/>
      <xs:element name="dictionaryId" nillable="true" type="xs:int"/>
      <xs:element name="catalogId" nillable="true" type="xs:int"/>
      <xs:element name="maxLength" type="xs:int"/>
      <xs:element name="systemField" type="xs:string"/>
      <xs:element name="permittedSystems" type="intList"/>
      <xs:element name="specification" type="ehdCatalog"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ehdException">
    <xs:sequence>
      <xs:element name="errorCode" type="xs:string"/>
      <xs:element name="errorText" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ehdCatalogItemsFeatures">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="featureList" type="ehdCatalogItemsFeature"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ehdCatalogItemsFeature">
    <xs:sequence>
      <xs:element name="geometry" type="xs:string"/>
      <xs:element maxOccurs="unbounded" ref="items"/>
      <xs:element name="type" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ehdCatalogItems">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="items"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="items">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="itemAttribute"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="itemAttribute">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element maxOccurs="unbounded" minOccurs="0" ref="items"/>
        <xs:element maxOccurs="unbounded" minOccurs="0" ref="dicts"/>
      </xs:sequence>
      <xs:attribute name="name" type="xs:NCName" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="dicts">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="dict"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="dict">
    <xs:complexType mixed="true">
      <xs:sequence></xs:sequence>
      <xs:attribute name="key" type="xs:NCName" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="systemField">
    <xs:sequence>
      <xs:element name="id" nillable="true" type="xs:int"/>
      <xs:element name="system" type="xs:string"/>
      <xs:element name="systemField" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="fieldEa">
    <xs:sequence>
      <xs:element name="id" nillable="true" type="xs:int"/>
      <xs:element name="RUBRICID" type="xs:string"/>
      <xs:element name="isLayerOpen" type="xs:int"/>
      <xs:element name="linkData" type="xs:string"/>
      <xs:element name="icoName" type="xs:string"/>
      <xs:element name="signDate" type="xs:string"/>
      <xs:element name="isUpdateWfs" type="xs:int"/>
      <xs:element name="isUpdateDb" type="xs:int"/>
      <xs:element name="guLink" type="xs:string"/>
      <xs:element name="typeObject" type="xs:string"/>
      <xs:element name="signFio" type="xs:string"/>
      <xs:element name="isUpdate" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="nameVariant">
    <xs:sequence>
      <xs:element name="technicalName" type="xs:string"/>
      <xs:element name="fullName" type="xs:string"/>
      <xs:element name="shortName" type="xs:string"/>
      <xs:element name="systemLogin" type="xs:string"/>
      <xs:element name="systemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="responsiblPerson">
    <xs:sequence>
      <xs:element name="phone" type="xs:string"/>
      <xs:element name="email" type="xs:string"/>
      <xs:element name="fio" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="intList">
    <xs:list itemType="xs:string"/>
  </xs:simpleType>
  <xs:element name="exportInfo">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="id" type="xs:string"/>
        <xs:element name="status" type="xs:string"/>
        <xs:element name="lastFileGeneration" type="xs:string"/>
        <xs:element name="size" type="xs:string"/>
      </xs:sequence>
      <xs:attribute name="format" type="xs:NCName" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="catalogExport">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="exportInfo"/>
      <xs:element name="errors" nillable="true" type="xs:string"/>
      <xs:element name="structureVersion" nillable="true" type="xs:string"/>
      <xs:element name="createDate" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ehdDictionaryItems">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="list" type="ehdDictionaryItem"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ehdDictionaryItem">
    <xs:sequence>
      <xs:element name="key" type="xs:string"/>
      <xs:element name="prnt_key" type="xs:string"/>
      <xs:element name="value" type="xs:string"/>
      <xs:element name="value_en" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="map">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="item" type="mapType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="mapType">
    <xs:sequence>
      <xs:element name="key" type="xs:string"/>
      <xs:element name="value" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELuSNBdqlspE1mmTYjs_hxLdMW4ACdenh4SWCUHxsODNXDg--</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELuSNBdqlsoEjm3WTldC5jepQWiOkC4oY7_nDmW6CAnGsJnTy"/>
  <!--references-->
  <xs:element name="medicalOrganizationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинского учреждения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--async operation status-->
  <xs:element name="operationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор операции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OperationExecutionStatus">
    <xs:annotation>
      <xs:documentation>Статус выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="isCompleted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак окончания выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="completenessProgress" type="OperationCompletenessBase">
        <xs:annotation>
          <xs:documentation>Сведения о текущем статусе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hasSucceded" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак успешности выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
        <xs:annotation>
          <xs:documentation>Коллекция сообщений, порожденных в ходе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор операции</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessPercentage">
    <xs:annotation>
      <xs:documentation>Описание текущего статуса выполнения операции в процентах (0%-100%)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OperationCompletenessBase">
        <xs:sequence>
          <xs:element name="completenessStatus">
            <xs:annotation>
              <xs:documentation>Статус (0%-100%)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:unsignedByte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания текущего статуса выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--calling methods' options-->
  <xs:element name="options" type="Options">
    <xs:annotation>
      <xs:documentation>Параметры вызова метода</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Options">
    <xs:annotation>
      <xs:documentation>Набор именованных значений</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Именованное значение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--pagination-->
  <xs:element name="pagingOptions" type="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="PagingResults">
    <xs:annotation>
      <xs:documentation>Список с пагинацией</xs:documentation>
    </xs:annotation>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageTotal" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество страниц</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morePagesAvailable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Флаг доступности других страниц с результатами для "постраничного листания" (true - если доступны еще страницы; false - иначе)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--base types-->
  <xs:complexType name="TimeInterval">
    <xs:annotation>
      <xs:documentation>Временной период (время)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время начала интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время окончания интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService</con:endpoint></con:endpoints><con:operation id="32d0d802-46a5-4c68-ace8-5fc6a5f42837" isOneWay="false" action="getCatalogChanges" name="getCatalogChanges" bindingOperationName="getCatalogChanges" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="90f2ef32-152e-4224-8bd9-3ed52f74c9e5" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/nsiProductPublication/publicationService/v1/types/" xmlns:v1="http://emias.mos.ru/nsiProductPublication/core/v1/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getCatalogChangesRequest>\r
         <typ:offset>0</typ:offset>\r
         <typ:limit>1</typ:limit>\r
         <typ:id>?</typ:id>\r
         <typ:criteria>?</typ:criteria>\r
         <typ:sorting>\r
            <!--Zero or more repetitions:-->\r
            <v1:item>\r
               <v1:key>?</v1:key>\r
               <v1:value>?</v1:value>\r
            </v1:item>\r
         </typ:sorting>\r
         <typ:from>?</typ:from>\r
         <typ:until>?</typ:until>\r
         <typ:state>?</typ:state>\r
         <typ:fetchGeodata>?</typ:fetchGeodata>\r
         <typ:paging>?</typ:paging>\r
         <typ:fetchGeodataCenter>?</typ:fetchGeodataCenter>\r
         <typ:includeDeleted>?</typ:includeDeleted>\r
         <!--Zero or more repetitions:-->\r
         <typ:projection>?</typ:projection>\r
      </typ:getCatalogChangesRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/nsiProductPublication/publicationService/v1/publicationServicePortType/getCatalogChangesRequest"/></con:call></con:operation><con:operation id="43a9b697-3cf2-44e7-8f5e-811097f6243c" isOneWay="false" action="getCatalogCount" name="getCatalogCount" bindingOperationName="getCatalogCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="88b29bce-430e-494e-b21f-e132dd4d79c4" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/nsiProductPublication/publicationService/v1/types/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getCatalogCountRequest>\r
         <typ:id>?</typ:id>\r
         <typ:criteria>?</typ:criteria>\r
         <typ:includeDeleted>?</typ:includeDeleted>\r
         <typ:epoch>?</typ:epoch>\r
         <typ:timestamp>?</typ:timestamp>\r
      </typ:getCatalogCountRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/nsiProductPublication/publicationService/v1/publicationServicePortType/getCatalogCountRequest"/></con:call></con:operation><con:operation id="a6c834f6-e49b-41a3-b343-520516b6a3f0" isOneWay="false" action="getCatalogItems" name="getCatalogItems" bindingOperationName="getCatalogItems" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="93552a36-8d68-497e-a4fc-9b69107249df" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/nsiProductPublication/publicationService/v1/types/" xmlns:v1="http://emias.mos.ru/nsiProductPublication/core/v1/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getCatalogItemsRequest>\r
         <typ:offset>0</typ:offset>\r
         <typ:limit>1</typ:limit>\r
         <typ:id>?</typ:id>\r
         <typ:criteria>?</typ:criteria>\r
         <!--Zero or more repetitions:-->\r
         <typ:projection>?</typ:projection>\r
         <typ:sorting>\r
            <!--Zero or more repetitions:-->\r
            <v1:item>\r
               <v1:key>?</v1:key>\r
               <v1:value>?</v1:value>\r
            </v1:item>\r
         </typ:sorting>\r
         <typ:useAntiProjection>?</typ:useAntiProjection>\r
         <typ:includeDeleted>?</typ:includeDeleted>\r
         <typ:fetchGeodata>?</typ:fetchGeodata>\r
         <typ:fetchGeodataCenter>?</typ:fetchGeodataCenter>\r
         <typ:paging>?</typ:paging>\r
         <typ:epoch>?</typ:epoch>\r
         <typ:timestamp>?</typ:timestamp>\r
      </typ:getCatalogItemsRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/nsiProductPublication/publicationService/v1/publicationServicePortType/getCatalogItemsRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="5d199c3f-803f-4ed0-9e78-ecf758d5f52a" name="getCatalogItems"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#nsiEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-f11a5e5a-091a-4d8d-8305-42d0e2e23f31" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns2:userContext xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns3="http://emias.mos.ru/nsiProductPublication/core/v1/" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns="http://emias.mos.ru/nsiProductPublication/publicationService/v1/types/">\r
         <ns2:userName>EIM</ns2:userName>\r
         <ns2:userRoleId>0</ns2:userRoleId>\r
         <ns2:jobExecutionId>0</ns2:jobExecutionId>\r
      </ns2:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <getCatalogItemsRequest xmlns="http://emias.mos.ru/nsiProductPublication/publicationService/v1/types/" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/nsiProductPublication/core/v1/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/">\r
         <id>5102</id>\r
      </getCatalogItemsRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/nsiProductPublication/publicationService/v1/publicationServicePortType/getCatalogItemsRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="581ea6fe-9256-497d-8372-5d14054f5774" isOneWay="false" action="getCatalogList" name="getCatalogList" bindingOperationName="getCatalogList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9a4892ec-f4f6-40b5-a88a-7af96817037e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/nsiProductPublication/publicationService/v1/types/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getCatalogListRequest>\r
         <typ:offset>0</typ:offset>\r
         <typ:limit>1</typ:limit>\r
         <!--Zero or more repetitions:-->\r
         <typ:id>?</typ:id>\r
         <typ:epoch>?</typ:epoch>\r
         <typ:timestamp>?</typ:timestamp>\r
      </typ:getCatalogListRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/nsiProductPublication/publicationService/v1/publicationServicePortType/getCatalogListRequest"/></con:call></con:operation><con:operation id="6a1c9bb0-f593-4396-b90b-dd8cf7e7bf2b" isOneWay="false" action="getDictionaryItem" name="getDictionaryItem" bindingOperationName="getDictionaryItem" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="897e0154-d515-44c0-ad18-165ad7216979" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/nsiProductPublication/publicationService/v1/types/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getDictionaryItemRequest>\r
         <typ:offset>0</typ:offset>\r
         <typ:limit>1000</typ:limit>\r
         <typ:id>?</typ:id>\r
      </typ:getDictionaryItemRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/nsiProductPublication/publicationService/v1/publicationServicePortType/getDictionaryItemRequest"/></con:call></con:operation><con:operation id="6d845e3a-b91c-4de8-b980-3a892356e826" isOneWay="false" action="getObjectChanges" name="getObjectChanges" bindingOperationName="getObjectChanges" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="98518cce-7860-449e-bd08-ac65ae65c66d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/nsiProductPublication/publicationService/v1/types/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getObjectChangesRequest>\r
         <typ:offset>0</typ:offset>\r
         <typ:limit>1</typ:limit>\r
         <typ:id>?</typ:id>\r
         <typ:catalog>?</typ:catalog>\r
         <typ:criteria>?</typ:criteria>\r
         <typ:from>?</typ:from>\r
         <typ:until>?</typ:until>\r
         <typ:state>?</typ:state>\r
         <typ:fetchGeodata>?</typ:fetchGeodata>\r
      </typ:getObjectChangesRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/nsiProductPublication/publicationService/v1/publicationServicePortType/getObjectChangesRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="37f73a9c-c6b8-454d-96c2-1232c3a44429" wsaVersion="NONE" name="СУПП.Медработники" type="wsdl" bindingName="{http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/}meiPTBv2" soapVersion="1_2" anonymous="optional" definition="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?wsdl"><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="applicationService" targetNamespace="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:ns1="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/" xmlns:nsf="http://emias.mos.ru/system/v1/faults/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <wsdl:types>
    <xs:schema>
      <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnW_44T4QhukoNGOi892pKWC2Cc0F8uYE2kXICd7dyFKU8gNg2pcdsBsT958mJpjC6nz5H2DnwklaLl0r"/>
      <xs:import namespace="http://emias.mos.ru/system/v1/faults/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnW_44T4QhukoNGOi892pKWC2Cc0F8uYE2kXICd7O2kKKxR8g1oEBqZZ41n6AJ5sT7_AGwQnxmw--"/>
      <xs:import namespace="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnSS7p3FNh_8wLXK8udGqJm7rStsY6PEA2y7TSJzHwlKD.AJowdwT9hsf_YtopHhe1EUart7ccDdJgLOU9M990w9i"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="searchEmployeesInput">
    <wsdl:part element="ns1:searchEmployeesRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchEmployeesOptionalOutput">
    <wsdl:part element="ns1:searchEmployeesOptionalResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchEmployeesOutput">
    <wsdl:part element="ns1:searchEmployeesResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fault">
    <wsdl:documentation>Ошибка</wsdl:documentation>
    <wsdl:part element="nsf:fault" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMeInfoByJobIdOutput">
    <wsdl:part element="ns1:getMeInfoByJobIdResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMeInfoByJobIdInput">
    <wsdl:part element="ns1:getMeInfoByJobIdRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchEmployeesOptionalInput">
    <wsdl:part element="ns1:searchEmployeesOptionalRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="userContext">
    <wsdl:documentation>Контекст пользователя</wsdl:documentation>
    <wsdl:part element="uctx:userContext" name="userContext"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="medicalEmployeeInfoPT">
    <wsdl:operation name="getMeInfoByJobId">
      <wsdl:documentation>Создание заявления на прикрепление</wsdl:documentation>
      <wsdl:input message="tns:getMeInfoByJobIdInput"></wsdl:input>
      <wsdl:output message="tns:getMeInfoByJobIdOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchEmployees">
      <wsdl:documentation>Создание заявления на прикрепление</wsdl:documentation>
      <wsdl:input message="tns:searchEmployeesInput"></wsdl:input>
      <wsdl:output message="tns:searchEmployeesOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchEmployeesOptional">
      <wsdl:documentation>Создание заявления на прикрепление</wsdl:documentation>
      <wsdl:input message="tns:searchEmployeesOptionalInput"></wsdl:input>
      <wsdl:output message="tns:searchEmployeesOptionalOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="meiPTBv2" type="tns:medicalEmployeeInfoPT">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getMeInfoByJobId">
      <soap:operation soapAction="getMeInfoByJobId"/>
      <wsdl:input>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchEmployees">
      <soap:operation soapAction="searchEmployees"/>
      <wsdl:input>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchEmployeesOptional">
      <soap:operation soapAction="searchEmployeesOptional"/>
      <wsdl:input>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="medicalEmployeeInfoService">
    <wsdl:port binding="tns:meiPTBv2" name="medicalEmployeeInfoPort">
      <soap:address location="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService"/>
    </wsdl:port>
    <wsp:PolicyReference URI="#authPolicy"/>
  </wsdl:service>
  <wsp:Policy wsu:Id="authPolicy">
    <sp:SupportingTokens xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702">
      <wsp:Policy>
        <sp:UsernameToken sp:IncludeToken="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient">
          <wsp:Policy>
            <sp:NoPassword/>
          </wsp:Policy>
        </sp:UsernameToken>
      </wsp:Policy>
    </sp:SupportingTokens>
  </wsp:Policy>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnW_44T4QhukoNGOi892pKWC2Cc0F8uYE2kXICd7dyFKU8gNg2pcdsBsT958mJpjC6nz5H2DnwklaLl0r</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/userContext/" version="1.0" xmlns="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnW_44T4QhukoNGOi892pKWC2Cd0T8_dPwVqQQIPMm8M.xCm.uNXE4SV.sjfB9A--"/>
  <xs:element name="userContext" type="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="systemName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Шифр системы-потребителя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя пользователя (логин)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRoleId" type="ID">
        <xs:annotation>
          <xs:documentation>Код Роли</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isUserRoleSystemWide" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак "Общесистемная Роль"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRights">
        <xs:annotation>
          <xs:documentation>Коллекция Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Код Полномочия</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="jobExecutionId" type="ID"/>
      <xs:element minOccurs="0" name="hostIp" type="xs:string">
        <xs:annotation>
          <xs:documentation>IP адрес хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hostName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="options" type="Options">
        <xs:annotation>
          <xs:documentation>Набор именованных значений</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnW_44T4QhukoNGOi892pKWC2Cd0T8_dPwVqQQIPMm8M.xCm.uNXE4SV.sjfB9A--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.2" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnW_44T4QhukoNGOi892pKWC2Cc0F8uYE2kXICd7QyFMFKBT1Wcprr3uHchFV3_HA"/>
  <!--references-->
  <xs:element name="mail" type="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalOrganizationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинского учреждения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="compositionId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор
Композиции Think!EHR
ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="simiDocumentId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор
Документа СИМИ
ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--abstract types-->
  <xs:complexType abstract="true" name="Base">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания
компонентов сущностей,
владельцеми которых является
текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор
сущности/записи
на уровне всего ЕМИАС</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="true" name="EntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания сущностей,
владельцем которых является
текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base">
        <xs:attribute name="archived" type="xs:boolean" use="required">
          <xs:annotation>
            <xs:documentation>Признак "Архивная сущность"</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания
компонентов сущностей,
владельцами которых являются
другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignEntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания сущностей,
владельцами которых являются
другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="EntityBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания типов,
реализующих справочники ЕМИАС.НСИ.2</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignEntityBase">
        <xs:sequence>
          <xs:element name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование элемента справочника</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiWithCodeBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания типов,
реализующих справочники ЕМИАС.НСИ.2, в которых имеется бизнес-код</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="NsiBase">
        <xs:attribute name="code" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Бизнес-код</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="SIMIDocumentBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания cведений о документе СИМИ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="simiDocumentId"/>
      <xs:element minOccurs="0" ref="compositionId"/>
    </xs:sequence>
  </xs:complexType>
  <!--async operation status-->
  <xs:element name="operationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор операции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OperationExecutionStatus">
    <xs:annotation>
      <xs:documentation>Статус выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="isCompleted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак окончания выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="completenessProgress" type="OperationCompletenessBase">
        <xs:annotation>
          <xs:documentation>Сведения о текущем статусе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hasSucceded" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак успешности выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
        <xs:annotation>
          <xs:documentation>Коллекция сообщений, порожденных в ходе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор операции</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="false" name="OperationCompletenessPercentage">
    <xs:annotation>
      <xs:documentation>Описание текущего статуса выполнения операции в процентах (0%-100%)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OperationCompletenessBase">
        <xs:sequence>
          <xs:element name="completenessStatus">
            <xs:annotation>
              <xs:documentation>Статус (0%-100%)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:unsignedByte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания текущего статуса выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--calling methods' options-->
  <xs:element name="options" type="Options">
    <xs:annotation>
      <xs:documentation>Параметры вызова метода</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Options">
    <xs:annotation>
      <xs:documentation>Набор именованных значений</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Именованное значение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--pagination-->
  <xs:element name="pagingOptions" type="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="PagingResults">
    <xs:annotation>
      <xs:documentation>Список с пагинацией</xs:documentation>
    </xs:annotation>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageTotal" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество страниц</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morePagesAvailable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Флаг доступности других страниц с результатами для "постраничного листания" (true - если доступны еще страницы; false - иначе)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="totalItemsCount" type="xs:long" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество элементов (на всех страницах)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" ref="sortingOptions"/>
    </xs:sequence>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--sorting-->
  <xs:element name="sortingOptions" type="SortingOptions">
    <xs:annotation>
      <xs:documentation>Параметры сортировки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SortingOptions">
    <xs:annotation>
      <xs:documentation>Условия сортировки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="3" name="sortOrder" type="SortOrder">
        <xs:annotation>
          <xs:documentation>Условия сортировки
(используются в соответствии с
переданной последовательностью)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SortOrder">
    <xs:annotation>
      <xs:documentation>Сортировка</xs:documentation>
    </xs:annotation>
    <xs:attribute name="attributeName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Наименование поля, по которому должна быть произведена сортировка</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="false" name="desceding" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Направление сортировки</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--void response-->
  <xs:element fixed="true" name="result">
    <xs:annotation>
      <xs:documentation>Элемент для использования в методах, не предполагающих возврат какого-либо значения</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:boolean"/>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <!--base types-->
  <xs:complexType name="TimeInterval">
    <xs:annotation>
      <xs:documentation>Временной период (время)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время начала интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время окончания интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--keys-->
  <xs:complexType name="EntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор сущности,
непосредственно принадлежащей
текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор
сущности ЕМИАС,
внешней по отношнению
к текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NsiGlobalId">
    <xs:annotation>
      <xs:documentation>Глобальный идентфикатор
ЕМИАС.НСИ</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnW_44T4QhukoNGOi892pKWC2Cc0F8uYE2kXICd7QyFMFKBT1Wcprr3uHchFV3_HA</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:simpleType name="GUID">
    <xs:annotation>
      <xs:documentation>Глобальный 128-битный идентификатор (Globally Unique Identifier)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="320"/>
      <xs:pattern value=".+@.+\..+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnW_44T4QhukoNGOi892pKWC2Cc0F8uYE2kXICd7O2kKKxR8g1oEBqZZ41n6AJ5sT7_AGwQnxmw--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/faults/" version="1.0" xmlns="http://emias.mos.ru/system/v1/faults/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnW_44T4QhukoNGOi892pKWC2Cc0F8uYE2kXICd7QyFMFKBT1Wcprr3uHchFV3_HA"/>
  <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnW_44T4QhukoNGOi892pKWC2Cc0F8uYE2kXICd7dyFKU8gNg2pcdsBsT958mJpjC6nz5H2DnwklaLl0r"/>
  <!--faults-->
  <xs:element name="fault" type="BaseFault">
    <xs:annotation>
      <xs:documentation>Базовый тип ошибки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SecurityFault">
    <xs:annotation>
      <xs:documentation>Ошибка безопасности</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element ref="uctx:userContext"/>
          <xs:choice>
            <xs:element name="unauthorizedRequestSecurityException" type="UnauthorizedRequestSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="otherSecurityException" type="OtherSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:sequence>
        <xs:attribute fixed="SECURITY" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BusinessFault">
    <xs:annotation>
      <xs:documentation>Бизнес ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Коллекция Сообщений об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hasErrors" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак наличия ошибок в списке сообщений</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="BUSINESS" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UnexpectedFault">
    <xs:annotation>
      <xs:documentation>Непредвиденная ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="version" type="xs:string">
            <xs:annotation>
              <xs:documentation>Версия продукта-сервиса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="stackTrace">
            <xs:annotation>
              <xs:documentation>Стек вызова (последние 10  записей)</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="10" name="stackTraceRecord">
                  <xs:annotation>
                    <xs:documentation>Запись StackTrace</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="declaringClass" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование класса, содержащего метод</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="methodName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование метода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="fileName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование файла</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="lineNumber" type="xs:int">
                        <xs:annotation>
                          <xs:documentation>Номер строки кода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="UNEXPECTED" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="BaseFault">
    <xs:annotation>
      <xs:documentation>Описание базового типа описания ошибки</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--security exceptions-->
  <xs:complexType name="UnauthorizedRequestSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="requiredRights">
        <xs:annotation>
          <xs:documentation>Перечень идентификаторов недостающих Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Идентификатор Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="UNAUTHORIZED_REQUEST_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="OtherSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="message" type="Message">
        <xs:annotation>
          <xs:documentation>Сообщение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="OTHER_SECURITY_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="SecurityExceptionTypes">
    <xs:annotation>
      <xs:documentation>Типы исключений безопасности</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNAUTHORIZED_REQUEST_EXCEPTION"/>
      <xs:enumeration value="OTHER_SECURITY_EXCEPTION"/>
    </xs:restriction>
  </xs:simpleType>
  <!--components-->
  <xs:simpleType name="FaultTypes">
    <xs:annotation>
      <xs:documentation>Тип ошибки</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="SECURITY">
        <xs:annotation>
          <xs:documentation>Непредвиденная ошибка приложения</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BUSINESS">
        <xs:annotation>
          <xs:documentation>Бизнес ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UNEXPECTED">
        <xs:annotation>
          <xs:documentation>Ошибка безопасности</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnSS7p3FNh_8wLXK8udGqJm7rStsY6PEA2y7TSJzHwlKD.AJowdwT9hsf_YtopHhe1EUart7ccDdJgLOU9M990w9i</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/" xmlns:core="http://emias.mos.ru/suppmeinfo/core/v2/" xmlns:tns="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://emias.mos.ru/suppmeinfo/core/v2/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnSS7p3FNh_8wLXK8udGqJm7rRNEO5LwXhUXGS5TxKNn8g_rbOFOcUEH812oD"/>
  <xs:complexType name="MedicalInfoResultPage">
    <xs:annotation>
      <xs:documentation>Результаты отбора сведений о мед работниках</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:PagingResults">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="employee" type="core:Employee">
            <xs:annotation>
              <xs:documentation>Сведения о мед работнике</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SearchEmployeeResultPage">
    <xs:annotation>
      <xs:documentation>Результаты отбора сведений о мед работниках</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:PagingResults">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="employee" type="core:EmployeeList">
            <xs:annotation>
              <xs:documentation>Сведения о мед работнике</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="getMeInfoByJobIdRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="1" name="jobIds">
          <xs:complexType>
            <xs:sequence>
              <xs:element maxOccurs="unbounded" name="jobId" type="core:ID"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element minOccurs="0" ref="core:options"/>
        <xs:element minOccurs="0" ref="core:pagingOptions"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getMeInfoByJobIdResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода getMedicalEmployeeJobInfo</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="tns:MedicalInfoResultPage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="searchEmployeesRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="1" name="searchParameters">
          <xs:complexType>
            <xs:sequence>
              <xs:element minOccurs="0" name="employeeInfo">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element minOccurs="0" name="employeeId" type="core:ID"/>
                    <xs:element minOccurs="0" name="snils" type="xs:string"/>
                    <xs:element minOccurs="0" name="lastName" type="xs:string"/>
                    <xs:element minOccurs="0" name="firstName" type="xs:string"/>
                    <xs:element minOccurs="0" name="secondName" type="xs:string"/>
                    <xs:element minOccurs="0" name="gender" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element minOccurs="0" name="jobInfo">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element minOccurs="0" name="jobId" type="core:ID"/>
                    <xs:element minOccurs="0" name="moId" type="core:ID"/>
                    <xs:element minOccurs="0" name="muId" type="core:ID"/>
                    <xs:element minOccurs="0" name="muDepartmentId" type="core:ID"/>
                    <xs:element minOccurs="0" name="patientAgeGroupCodes">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element maxOccurs="unbounded" name="patientAgeGroupCode" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element minOccurs="0" name="specialityIds">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element maxOccurs="unbounded" name="specialityId" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element minOccurs="0" name="positionTypeId" type="core:ID"/>
                    <xs:element minOccurs="0" name="positionKindId" type="xs:string"/>
                    <xs:element minOccurs="0" name="assistanceTypeId" type="xs:string"/>
                    <xs:element minOccurs="0" name="assistanceConditionId" type="xs:string"/>
                    <xs:element minOccurs="0" name="tapCode" type="xs:string"/>
                    <xs:element minOccurs="0" name="preferentialCode" type="xs:string"/>
                    <xs:element minOccurs="0" name="startDate">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element minOccurs="0" name="startDateIn" type="xs:date"/>
                          <xs:element minOccurs="0" name="startDateOut" type="xs:date"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element minOccurs="0" name="jobIsActive" type="xs:boolean"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element minOccurs="0" ref="core:options"/>
        <xs:element minOccurs="0" ref="core:pagingOptions"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="searchEmployeesResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода getMedicalEmployeeJobInfo</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="tns:SearchEmployeeResultPage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="searchEmployeesOptionalRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="1" name="searchParameters">
          <xs:complexType>
            <xs:sequence>
              <xs:element minOccurs="0" name="employeeInfo" type="core:EmployeeInfoRequest"/>
              <xs:element minOccurs="0" name="jobInfo" type="core:JobInfoRequest"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element minOccurs="0" name="outputParameters">
          <xs:complexType>
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="outputParameter" type="xs:string"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element minOccurs="0" ref="core:options"/>
        <xs:element minOccurs="0" ref="core:pagingOptions"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="searchEmployeesOptionalResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода searchEmployeesOptional</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="tns:SearchEmployeeResultPage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnSS7p3FNh_8wLXK8udGqJm7rRNEO5LwXhUXGS5TxKNn8g_rbOFOcUEH812oD</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/suppmeinfo/core/v2/" xmlns="http://emias.mos.ru/suppmeinfo/core/v2/" xmlns:tns="http://emias.mos.ru/suppmeinfo/core/v2/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnW_44T4QhukoNGOi892pKWC2Cd0T8_dPwVqQQIPMm8M.xCm.uNXE4SV.sjfB9A--"/>
  <xs:complexType name="IdNameType">
    <xs:sequence>
      <xs:element name="id" type="ID">
        <xs:annotation>
          <xs:documentation>Ид</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="IdNameStringType">
    <xs:sequence>
      <xs:element name="id" type="xs:string">
        <xs:annotation>
          <xs:documentation>Ид</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="IdNameOGRNType">
    <xs:complexContent>
      <xs:extension base="IdNameType">
        <xs:sequence>
          <xs:element minOccurs="0" name="ogrn" type="xs:string">
            <xs:annotation>
              <xs:documentation>ОГРН</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="EmployeeInfo">
    <xs:annotation>
      <xs:documentation>Группирующая сущность информации о сотруднике</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="employeeId" type="ID">
        <xs:annotation>
          <xs:documentation>Идентификатор МР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="snils" type="xs:string">
        <xs:annotation>
          <xs:documentation>СНИЛС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="firstName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя сотрудника</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="secondName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Отчество сотрудника</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="lastName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Фамилия сотрудника</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="gender" type="xs:string">
        <xs:annotation>
          <xs:documentation>Пол</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="phone" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер телефона</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="email" type="xs:string">
        <xs:annotation>
          <xs:documentation>Электронная почта</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="birthDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата рождения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="updateDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата последнего обновления</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="JobInfo">
    <xs:annotation>
      <xs:documentation>Группирующая сущность информации об исполняемой должности сотрудника</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="jobId" type="ID"/>
      <xs:element minOccurs="0" name="mo" type="IdNameOGRNType"/>
      <xs:element name="mu" type="IdNameType"/>
      <xs:element name="muDepartment" type="IdNameType"/>
      <xs:element name="speciality" type="IdNameStringType"/>
      <xs:element minOccurs="0" name="position" type="IdNameStringType"/>
      <xs:element minOccurs="0" name="positionType" type="IdNameType"/>
      <xs:element minOccurs="0" name="positionKind" type="IdNameStringType"/>
      <xs:element minOccurs="0" name="assistanceType" type="IdNameStringType"/>
      <xs:element minOccurs="0" name="assistanceCondition" type="IdNameType"/>
      <xs:element minOccurs="0" name="period">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="endDate" type="xs:dateTime"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="tapCode" type="xs:string"/>
      <xs:element minOccurs="0" name="preferentialCode" type="xs:string"/>
      <xs:element minOccurs="0" name="archived" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Employee">
    <xs:annotation>
      <xs:documentation>Группирующая сущность с информацией о сотруднике</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="employeeInfo" type="EmployeeInfo"/>
      <xs:element name="jobInfo" type="JobInfo"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EmployeeList">
    <xs:annotation>
      <xs:documentation>Группирующая сущность с информацией о сотруднике</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="employeeInfo" type="EmployeeInfo"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="jobInfo" type="JobInfo"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EmployeeInfoRequest">
    <xs:annotation>
      <xs:documentation>Фильтры поиска по сведениям МР</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="employeeId" type="ID"/>
      <xs:element minOccurs="0" name="snils" type="xs:string"/>
      <xs:element minOccurs="0" name="lastName" type="xs:string"/>
      <xs:element minOccurs="0" name="firstName" type="xs:string"/>
      <xs:element minOccurs="0" name="secondName" type="xs:string"/>
      <xs:element minOccurs="0" name="gender" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="JobInfoRequest">
    <xs:annotation>
      <xs:documentation>Фильтры поиска по сведениям исполнения должности МР</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="jobId" type="ID"/>
      <xs:element minOccurs="0" name="moId" type="ID"/>
      <xs:element minOccurs="0" name="muId" type="ID"/>
      <xs:element minOccurs="0" name="muDepartmentId" type="ID"/>
      <xs:element minOccurs="0" name="specialityIds">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="specialityId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="positionTypeId" type="ID"/>
      <xs:element minOccurs="0" name="positionKindId" type="xs:string"/>
      <xs:element minOccurs="0" name="assistanceTypeId" type="xs:string"/>
      <xs:element minOccurs="0" name="assistanceConditionId" type="xs:string"/>
      <xs:element minOccurs="0" name="tapCode" type="xs:string"/>
      <xs:element minOccurs="0" name="preferentialCode" type="xs:string"/>
      <xs:element minOccurs="0" name="startDate">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="startDateIn" type="xs:date"/>
            <xs:element minOccurs="0" name="startDateOut" type="xs:date"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="jobIsActive" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService</con:endpoint></con:endpoints><con:operation id="24c9d394-ed61-45cf-abe4-2b0ff7c71a38" isOneWay="false" action="getMeInfoByJobId" name="getMeInfoByJobId" bindingOperationName="getMeInfoByJobId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f615c274-41cf-47b8-9aab-cb5c5a9844ce" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/" xmlns:v2="http://emias.mos.ru/suppmeinfo/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getMeInfoByJobIdRequest>\r
         <typ:jobIds>\r
            <!--1 or more repetitions:-->\r
            <typ:jobId>?</typ:jobId>\r
         </typ:jobIds>\r
         <!--Optional:-->\r
         <v2:options>\r
            <!--Zero or more repetitions:-->\r
            <v2:entry key="?">?</v2:entry>\r
         </v2:options>\r
         <!--Optional:-->\r
         <v2:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v2:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v2:sortOrder attributeName="?" desceding="false"/>\r
            </v2:sortingOptions>\r
         </v2:pagingOptions>\r
      </typ:getMeInfoByJobIdRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/medicalEmployeeInfoPT/getMeInfoByJobIdRequest"/></con:call><con:call id="cc8b5c2b-9e82-49ee-b21f-61bb9181d73a" name="getMeInfoByJobId"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/" xmlns:v2="http://emias.mos.ru/suppmeinfo/core/v2/">
   <soap:Header>
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-0d393076-a609-42b0-a17e-567f0e8b81a2" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <ns3:userContext xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns2="http://emias.mos.ru/suppmeinfo/core/v2/" xmlns="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/">
         <ns3:systemName>EIM</ns3:systemName>
         <ns3:userName>HYkle6XW7ifrlT7wCuuK0iZ9RoePXm2NG92bTaLowfMA8P/yw85Mi/WrVHo89WDhWFgRt66EU3MBtQ3SEhhkrwOOLjNFijcReVF2xegR4E+wxgBS2JRt3CSP4mQfw4YEEJCPprUUC2KPBW+ckkHyt9wOaRq4TQjZ2/wTtdHDEyRs2sYIM1WUZPgc39vRRpfKGMv4keac/eirq9PlTfPQauQdxnGJ9ZDzQbAsUMULVbFW0m78KKR5JzAFpl7YFEx1o9eUT70XdBZDhfdVlljA+T+yRIOpW2SOZOEpVhYAZ8qTVOtKcJk060bDndYdUd1gQ0x6ckT1+CgOxQEbefi/Yw==</ns3:userName>
         <ns3:userRoleId>7187</ns3:userRoleId>
         <ns3:isUserRoleSystemWide>true</ns3:isUserRoleSystemWide>
         <ns3:userRights>
            <ns3:userRightId>5150001</ns3:userRightId>
            <ns3:userRightId>333001</ns3:userRightId>
         </ns3:userRights>
         <ns3:jobExecutionId>1</ns3:jobExecutionId>
      </ns3:userContext>
   </soap:Header>
   <soap:Body>\r
      <typ:getMeInfoByJobIdRequest>\r
         <typ:jobIds>\r
            <!--1 or more repetitions:-->\r
            <typ:jobId>?</typ:jobId>\r
         </typ:jobIds>\r
         <!--Optional:-->\r
         <v2:options>\r
            <!--Zero or more repetitions:-->\r
            <v2:entry key="?">?</v2:entry>\r
         </v2:options>\r
         <!--Optional:-->\r
         <v2:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v2:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v2:sortOrder attributeName="?" desceding="false"/>\r
            </v2:sortingOptions>\r
         </v2:pagingOptions>\r
      </typ:getMeInfoByJobIdRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/medicalEmployeeInfoPT/getMeInfoByJobIdRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="3c0ae3e1-5655-4814-b38e-3bb2bc988168" isOneWay="false" action="searchEmployees" name="searchEmployees" bindingOperationName="searchEmployees" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="68337d06-8811-4d1d-9699-eac1f14b1344" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/" xmlns:v2="http://emias.mos.ru/suppmeinfo/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:searchEmployeesRequest>\r
         <typ:searchParameters>\r
            <!--Optional:-->\r
            <typ:employeeInfo>\r
               <!--Optional:-->\r
               <typ:employeeId>?</typ:employeeId>\r
               <!--Optional:-->\r
               <typ:snils>?</typ:snils>\r
               <!--Optional:-->\r
               <typ:lastName>?</typ:lastName>\r
               <!--Optional:-->\r
               <typ:firstName>?</typ:firstName>\r
               <!--Optional:-->\r
               <typ:secondName>?</typ:secondName>\r
               <!--Optional:-->\r
               <typ:gender>?</typ:gender>\r
            </typ:employeeInfo>\r
            <!--Optional:-->\r
            <typ:jobInfo>\r
               <!--Optional:-->\r
               <typ:jobId>?</typ:jobId>\r
               <!--Optional:-->\r
               <typ:moId>?</typ:moId>\r
               <!--Optional:-->\r
               <typ:muId>?</typ:muId>\r
               <!--Optional:-->\r
               <typ:muDepartmentId>?</typ:muDepartmentId>\r
               <!--Optional:-->\r
               <typ:patientAgeGroupCodes>\r
                  <!--1 or more repetitions:-->\r
                  <typ:patientAgeGroupCode>?</typ:patientAgeGroupCode>\r
               </typ:patientAgeGroupCodes>\r
               <!--Optional:-->\r
               <typ:specialityIds>\r
                  <!--1 or more repetitions:-->\r
                  <typ:specialityId>?</typ:specialityId>\r
               </typ:specialityIds>\r
               <!--Optional:-->\r
               <typ:positionTypeId>?</typ:positionTypeId>\r
               <!--Optional:-->\r
               <typ:positionKindId>?</typ:positionKindId>\r
               <!--Optional:-->\r
               <typ:assistanceTypeId>?</typ:assistanceTypeId>\r
               <!--Optional:-->\r
               <typ:assistanceConditionId>?</typ:assistanceConditionId>\r
               <!--Optional:-->\r
               <typ:tapCode>?</typ:tapCode>\r
               <!--Optional:-->\r
               <typ:preferentialCode>?</typ:preferentialCode>\r
               <!--Optional:-->\r
               <typ:startDate>\r
                  <!--Optional:-->\r
                  <typ:startDateIn>?</typ:startDateIn>\r
                  <!--Optional:-->\r
                  <typ:startDateOut>?</typ:startDateOut>\r
               </typ:startDate>\r
               <!--Optional:-->\r
               <typ:jobIsActive>?</typ:jobIsActive>\r
            </typ:jobInfo>\r
         </typ:searchParameters>\r
         <!--Optional:-->\r
         <v2:options>\r
            <!--Zero or more repetitions:-->\r
            <v2:entry key="?">?</v2:entry>\r
         </v2:options>\r
         <!--Optional:-->\r
         <v2:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v2:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v2:sortOrder attributeName="?" desceding="false"/>\r
            </v2:sortingOptions>\r
         </v2:pagingOptions>\r
      </typ:searchEmployeesRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/medicalEmployeeInfoPT/searchEmployeesRequest"/></con:call></con:operation><con:operation id="95725d5a-65c0-44e2-9785-073521eb9456" isOneWay="false" action="searchEmployeesOptional" name="searchEmployeesOptional" bindingOperationName="searchEmployeesOptional" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="62ec8fba-df99-40bd-b15d-910eb2093856" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/" xmlns:v2="http://emias.mos.ru/suppmeinfo/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:searchEmployeesOptionalRequest>\r
         <typ:searchParameters>\r
            <!--Optional:-->\r
            <typ:employeeInfo>\r
               <!--Optional:-->\r
               <v2:employeeId>?</v2:employeeId>\r
               <!--Optional:-->\r
               <v2:snils>?</v2:snils>\r
               <!--Optional:-->\r
               <v2:lastName>?</v2:lastName>\r
               <!--Optional:-->\r
               <v2:firstName>?</v2:firstName>\r
               <!--Optional:-->\r
               <v2:secondName>?</v2:secondName>\r
               <!--Optional:-->\r
               <v2:gender>?</v2:gender>\r
            </typ:employeeInfo>\r
            <!--Optional:-->\r
            <typ:jobInfo>\r
               <!--Optional:-->\r
               <v2:jobId>?</v2:jobId>\r
               <!--Optional:-->\r
               <v2:moId>?</v2:moId>\r
               <!--Optional:-->\r
               <v2:muId>?</v2:muId>\r
               <!--Optional:-->\r
               <v2:muDepartmentId>?</v2:muDepartmentId>\r
               <!--Optional:-->\r
               <v2:specialityIds>\r
                  <!--1 or more repetitions:-->\r
                  <v2:specialityId>?</v2:specialityId>\r
               </v2:specialityIds>\r
               <!--Optional:-->\r
               <v2:positionTypeId>?</v2:positionTypeId>\r
               <!--Optional:-->\r
               <v2:positionKindId>?</v2:positionKindId>\r
               <!--Optional:-->\r
               <v2:assistanceTypeId>?</v2:assistanceTypeId>\r
               <!--Optional:-->\r
               <v2:assistanceConditionId>?</v2:assistanceConditionId>\r
               <!--Optional:-->\r
               <v2:tapCode>?</v2:tapCode>\r
               <!--Optional:-->\r
               <v2:preferentialCode>?</v2:preferentialCode>\r
               <!--Optional:-->\r
               <v2:startDate>\r
                  <!--Optional:-->\r
                  <v2:startDateIn>?</v2:startDateIn>\r
                  <!--Optional:-->\r
                  <v2:startDateOut>?</v2:startDateOut>\r
               </v2:startDate>\r
               <!--Optional:-->\r
               <v2:jobIsActive>?</v2:jobIsActive>\r
            </typ:jobInfo>\r
         </typ:searchParameters>\r
         <!--Optional:-->\r
         <typ:outputParameters>\r
            <!--Zero or more repetitions:-->\r
            <typ:outputParameter>?</typ:outputParameter>\r
         </typ:outputParameters>\r
         <!--Optional:-->\r
         <v2:options>\r
            <!--Zero or more repetitions:-->\r
            <v2:entry key="?">?</v2:entry>\r
         </v2:options>\r
         <!--Optional:-->\r
         <v2:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v2:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v2:sortOrder attributeName="?" desceding="false"/>\r
            </v2:sortingOptions>\r
         </v2:pagingOptions>\r
      </typ:searchEmployeesOptionalRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/medicalEmployeeInfoPT/searchEmployeesOptionalRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="a69ed97c-8fbf-479f-b5e3-988f8b4372c6" wsaVersion="NONE" name="ПДН" type="wsdl" bindingName="{http://emias.mos.ru/dnpdn/planService/v2/}planServiceBinding" soapVersion="1_2" anonymous="optional" definition="http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?wsdl"><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="planService" targetNamespace="http://emias.mos.ru/dnpdn/planService/v2/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ns1="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:nsf="http://emias.mos.ru/system/v1/faults/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://emias.mos.ru/dnpdn/planService/v2/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema>
      <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Cy_OJPCNz0JEvHwUwGkuCPjPM_RFui1_6Xf6LTygA6.WQIQioP8.dJttWfYnwQLyXm9"/>
      <xs:import namespace="http://emias.mos.ru/system/v1/faults/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Cy_OJPCNz0JEvHwUwGkuCPjPM_CBPiryLmf5KLuF3ojpVAaaFouiWJ1oD6ztg--"/>
      <xs:import namespace="http://emias.mos.ru/dnpdn/planService/v2/types/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Gb_Z5LBcCwWXezaRQe3vG7wI5eWS_m.zK_Csqn5kOn8ihZYcyn.IEq7hc8EOjo-"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getPlanExtensionInput">
    <wsdl:part element="ns1:GetPlanExtensionRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="userContext">
    <wsdl:documentation>Контекст пользователя</wsdl:documentation>
    <wsdl:part element="uctx:userContext" name="userContext"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEventsByPatientsOutput">
    <wsdl:part element="ns1:GetEventsByPatientsResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPlanShortOutput">
    <wsdl:part element="ns1:GetPlanShortResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPlanExtensionOutput">
    <wsdl:part element="ns1:GetPlanExtensionResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPlansOutput">
    <wsdl:part element="ns1:GetPlansResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPlanShortInput">
    <wsdl:part element="ns1:GetPlanShortRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCardForm30ProcessingStatusOutput">
    <wsdl:part element="ns1:GetCardForm30ProcessingStatusResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEventsByPatientsInput">
    <wsdl:part element="ns1:GetEventsByPatientsRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPlansInput">
    <wsdl:part element="ns1:GetPlansRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCurrentEventStatusInput">
    <wsdl:part element="ns1:GetCurrentEventStatusRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCardForm30ProcessingStatusInput">
    <wsdl:part element="ns1:GetCardForm30ProcessingStatusRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fault">
    <wsdl:documentation>Ошибка</wsdl:documentation>
    <wsdl:part element="nsf:fault" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCurrentEventStatusOutput">
    <wsdl:part element="ns1:GetCurrentEventStatusResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="planServicePortType">
    <wsdl:operation name="GetPlanExtension">
      <wsdl:input message="tns:getPlanExtensionInput"></wsdl:input>
      <wsdl:output message="tns:getPlanExtensionOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetPlanShort">
      <wsdl:input message="tns:getPlanShortInput"></wsdl:input>
      <wsdl:output message="tns:getPlanShortOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetEventsByPatient">
      <wsdl:input message="tns:getEventsByPatientsInput"></wsdl:input>
      <wsdl:output message="tns:getEventsByPatientsOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetCurrentEventStatus">
      <wsdl:input message="tns:getCurrentEventStatusInput"></wsdl:input>
      <wsdl:output message="tns:getCurrentEventStatusOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetPlans">
      <wsdl:input message="tns:getPlansInput"></wsdl:input>
      <wsdl:output message="tns:getPlansOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetCardForm30ProcessingStatus">
      <wsdl:input message="tns:getCardForm30ProcessingStatusInput"></wsdl:input>
      <wsdl:output message="tns:getCardForm30ProcessingStatusOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="planServiceBinding" type="tns:planServicePortType">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetPlanExtension">
      <soap12:operation soapAction="GetPlanExtension"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"></soap12:header>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetPlanShort">
      <soap12:operation soapAction="GetPlanShort"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"></soap12:header>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetEventsByPatient">
      <soap12:operation soapAction="GetEventsByPatient"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"></soap12:header>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetCurrentEventStatus">
      <soap12:operation soapAction="GetCurrentEventStatus"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"></soap12:header>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetPlans">
      <soap12:operation soapAction="GetPlans"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"></soap12:header>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetCardForm30ProcessingStatus">
      <soap12:operation soapAction="GetCardForm30ProcessingStatus"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"></soap12:header>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="planService">
    <wsdl:port binding="tns:planServiceBinding" name="planServicePortSoap12">
      <soap12:address location="http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService"/>
    </wsdl:port>
    <wsp:PolicyReference URI="#authPolicy"/>
  </wsdl:service>
  <wsp:Policy wsu:Id="authPolicy">
    <sp:SupportingTokens xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702">
      <wsp:Policy>
        <sp:UsernameToken sp:IncludeToken="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient">
          <wsp:Policy>
            <sp:NoPassword/>
          </wsp:Policy>
        </sp:UsernameToken>
      </wsp:Policy>
    </sp:SupportingTokens>
  </wsp:Policy>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Cy_OJPCNz0JEvHwUwGkuCPjPM_RFui1_6Xf6LTygA6.WQIQioP8.dJttWfYnwQLyXm9</con:url><con:content><![CDATA[<!--Published by JAX-WS RI (http://jax-ws.java.net). RI's version is Metro/2.4.3 (RELEASE-2.4.3-ad3323c; 2019-01-21T17:46:06+0000) JAXWS-RI/2.3.2 JAXWS-API/2.3.2 JAXB-RI/2.3.2 JAXB-API/2.3.2 git-revision#unknown.-->
<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/userContext/" xmlns="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="userContext" type="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="systemName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Шифр системы-потребителя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя пользователя (логин)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRoleId" type="ID">
        <xs:annotation>
          <xs:documentation>Идентификатор Роли пользователя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isUserRoleSystemWide" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак "Общесистемная Роль пользователя"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRights">
        <xs:annotation>
          <xs:documentation>Коллекция Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>ИД Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="jobExecutionId" type="ID"/>
      <xs:element minOccurs="0" name="hostIp" type="xs:string">
        <xs:annotation>
          <xs:documentation>IP адрес хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hostName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Cy_OJPCNz0JEvHwUwGkuCPjPM_CBPiryLmf5KLuF3ojpVAaaFouiWJ1oD6ztg--</con:url><con:content><![CDATA[<!--Published by JAX-WS RI (http://jax-ws.java.net). RI's version is Metro/2.4.3 (RELEASE-2.4.3-ad3323c; 2019-01-21T17:46:06+0000) JAXWS-RI/2.3.2 JAXWS-API/2.3.2 JAXB-RI/2.3.2 JAXB-API/2.3.2 git-revision#unknown.-->
<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/faults/" xmlns="http://emias.mos.ru/system/v1/faults/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Cy_OJPCNz0JEvHwUwGkuCPjPM_RFui1_6Xf6LTygA6.WQIQioP8.dJttWfYnwQLyXm9"/>
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--faults-->
  <xs:element name="fault" type="BaseFault">
    <xs:annotation>
      <xs:documentation>Базовый тип ошибки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SecurityFault">
    <xs:annotation>
      <xs:documentation>Ошибка безопасности</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element ref="uctx:userContext"/>
          <xs:choice>
            <xs:element name="unauthorizedRequestSecurityException" type="UnauthorizedRequestSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="otherSecurityException" type="OtherSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:sequence>
        <xs:attribute fixed="SECURITY" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BusinessFault">
    <xs:annotation>
      <xs:documentation>Бизнес ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Коллекция Сообщений об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hasErrors" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак наличия ошибок в списке сообщений</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="BUSINESS" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UnexpectedFault">
    <xs:annotation>
      <xs:documentation>Непредвиденная ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="version" type="xs:string">
            <xs:annotation>
              <xs:documentation>Версия продукта-сервиса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="stackTrace">
            <xs:annotation>
              <xs:documentation>Стек вызова (последние 10 записей)</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="10" name="stackTraceRecord">
                  <xs:annotation>
                    <xs:documentation>Запись StackTrace</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="declaringClass" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование класса, содержащего метод</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="methodName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование метода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="fileName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование файла</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="lineNumber" type="xs:int">
                        <xs:annotation>
                          <xs:documentation>Номер строки кода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="UNEXPECTED" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="BaseFault">
    <xs:annotation>
      <xs:documentation>Описание базового типа описания ошибки</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--security exceptions-->
  <xs:complexType name="UnauthorizedRequestSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="requiredRights">
        <xs:annotation>
          <xs:documentation>Перечень идентификаторов недостающих Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Идентификатор Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="UNAUTHORIZED_REQUEST_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="OtherSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="message" type="Message">
        <xs:annotation>
          <xs:documentation>Сообщение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="OTHER_SECURITY_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="SecurityExceptionTypes">
    <xs:annotation>
      <xs:documentation>Типы исключений безопасности</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNAUTHORIZED_REQUEST_EXCEPTION"/>
      <xs:enumeration value="OTHER_SECURITY_EXCEPTION"/>
    </xs:restriction>
  </xs:simpleType>
  <!--components-->
  <xs:simpleType name="FaultTypes">
    <xs:annotation>
      <xs:documentation>Тип ошибки</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="SECURITY">
        <xs:annotation>
          <xs:documentation>Непредвиденная ошибка приложения</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BUSINESS">
        <xs:annotation>
          <xs:documentation>Бизнес ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UNEXPECTED">
        <xs:annotation>
          <xs:documentation>Ошибка безопасности</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Gb_Z5LBcCwWXezaRQe3vG7wI5eWS_m.zK_Csqn5kOn8ihZYcyn.IEq7hc8EOjo-</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:core="http://emias.mos.ru/dnpdn/core/v2/" xmlns:tns="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://emias.mos.ru/dnpdn/core/v2/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Gb_Z5LBcD8VTuenVkfvrX7xCk4a7lNmOVw2knbX79MMPw--"/>
  <!--Метод получения расширенной информации о ПДН-->
  <xs:element name="GetPlanExtensionRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="planOfEventsId" type="xs:long"/>
        <xs:element minOccurs="0" name="patientId" type="xs:long"/>
        <xs:element minOccurs="0" name="documentId" type="xs:string"/>
        <xs:element minOccurs="0" name="options" type="core:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetPlanExtensionResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="core:PlanOfEventsExtension"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--Метод получения краткой информации о ПДН-->
  <xs:element name="GetPlanShortRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="planOfEventsId" type="xs:long"/>
        <xs:element minOccurs="0" name="patientId" type="xs:long"/>
        <xs:element minOccurs="0" name="documentId" type="xs:string"/>
        <xs:element minOccurs="0" name="options" type="core:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetPlanShortResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="core:PlanOfEventsShort"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--Метод обеспечивает предоставление информации о мероприятиях пациента на период времени.-->
  <xs:element name="GetEventsByPatientsRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="patientId" type="xs:long"/>
        <xs:element name="startDate" type="xs:dateTime"/>
        <xs:element name="endDate" type="xs:dateTime"/>
        <xs:element name="pagingOptions" type="core:PagingOptions"/>
        <xs:element minOccurs="0" name="options" type="core:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetEventsByPatientsResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="tns:EventsByPatientResultPage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="EventsByPatientResultPage">
    <xs:complexContent>
      <xs:extension base="core:PagingResults">
        <xs:sequence>
          <xs:element minOccurs="0" name="eventsByPatient" type="core:EventsByPatient"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--Метод получения информации по созданным назначениям-->
  <xs:element name="GetCurrentEventStatusRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="patientId" type="xs:long"/>
        <xs:element minOccurs="0" name="documentId" type="xs:string"/>
        <xs:element minOccurs="0" name="options" type="core:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetCurrentEventStatusResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="core:CurrentEvents"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--Метод получения информации о программах ПДН-->
  <xs:element name="GetPlansRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="planOfEventsId" type="xs:long"/>
        <xs:element minOccurs="0" name="patientId" type="xs:long"/>
        <xs:element minOccurs="0" name="documentId" type="xs:string"/>
        <xs:element minOccurs="0" name="returnActualPlan" type="xs:boolean"/>
        <xs:element minOccurs="0" name="planStartDateFrom" type="xs:date"/>
        <xs:element minOccurs="0" name="planEndDateTo" type="xs:date"/>
        <xs:element minOccurs="0" name="options" type="core:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetPlansResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="core:PlansOfEvents"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--Метод получения статуса обработки документов карты формы 030-->
  <xs:element name="GetCardForm30ProcessingStatusRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" name="documentId" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetCardForm30ProcessingStatusResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" name="documentStatuses" type="core:DocumentStatus"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Gb_Z5LBcD8VTuenVkfvrX7xCk4a7lNmOVw2knbX79MMPw--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/dnpdn/core/v2/" xmlns="http://emias.mos.ru/dnpdn/core/v2/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Cy_OJPCNz0JEuHmUhDvozy7dZLAs2rTS0UCFnwFLedfIMkk4w--"/>
  <!--planManageService-->
  <xs:complexType name="Assigment">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="passedInExternalMO" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EventPDN">
    <xs:sequence>
      <xs:element name="id" type="ID"/>
      <xs:element name="status" type="StatusEnum"/>
      <xs:element name="assigmentPDN" type="Assigment"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ListOfEvents">
    <xs:sequence>
      <xs:element name="events">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="event" type="EventPDN"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--planService-->
  <!--PlanOfEvents-->
  <xs:complexType name="PlanOfEvents">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="jobExecutionId" type="xs:long"/>
      <xs:element maxOccurs="unbounded" name="diagnosis" type="Diagnosis"/>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:element name="documentId" type="xs:string"/>
      <xs:element minOccurs="0" name="parentDocumentId" type="xs:string"/>
      <xs:element name="moId" type="xs:long"/>
      <xs:element name="moName" type="xs:string"/>
      <xs:element name="status" type="xs:string"/>
      <xs:element name="archived" type="xs:boolean"/>
      <xs:element minOccurs="0" name="calendarYearStartDate" type="xs:dateTime"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="planOfEventsDiagnosis" type="Diagnosis"/>
    </xs:sequence>
  </xs:complexType>
  <!--PlanOfEventsShort-->
  <xs:complexType name="PlanOfEventsShort">
    <xs:complexContent>
      <xs:extension base="PlanOfEvents">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="eventsPeriod" type="EventsPeriod"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--PlanOfEventsExtension-->
  <xs:complexType name="PlanOfEventsExtension">
    <xs:complexContent>
      <xs:extension base="PlanOfEvents">
        <xs:sequence>
          <xs:element name="patientId" type="xs:long"/>
          <xs:element maxOccurs="unbounded" name="eventsPeriod" type="EventsPeriodInExtendedPlan"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="PlanOfEventsForCurrentEventStatus">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="documentId" type="xs:string"/>
      <xs:element name="status" type="xs:string"/>
      <xs:element maxOccurs="unbounded" name="Events" type="EventsPeriodForCurrentEventStatus"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Diagnosis">
    <xs:sequence>
      <xs:element name="diagnosisCode" type="xs:string"/>
      <xs:element name="diagnosisTitle" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EventsPeriodInExtendedPlan">
    <xs:sequence>
      <xs:element minOccurs="0" name="priority" type="xs:string"/>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:element maxOccurs="unbounded" name="event" type="EventInExtendedPlan"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EventInExtendedPlan">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="eventStatus" type="StatusEnum"/>
      <xs:element minOccurs="0" name="comment" type="xs:string"/>
      <xs:element name="archived" type="xs:boolean"/>
      <xs:element minOccurs="0" name="assignment" type="AssignmentInExtendedPlan"/>
      <xs:element minOccurs="0" name="appointment" type="AppointmentInExtendedPlan"/>
      <xs:element minOccurs="0" name="drugsEvent" type="DrugsEventInExtendedPlan"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="diagnoses" type="Diagnosis"/>
      <xs:element minOccurs="0" name="referralCreated" type="xs:boolean"/>
      <xs:element minOccurs="0" name="destinationType" type="xs:string"/>
      <xs:element minOccurs="0" name="destinationMedicalOrganizationId" type="xs:long"/>
      <xs:element minOccurs="0" name="destinationMedicalOrganizationName" type="xs:string"/>
      <xs:element minOccurs="0" name="passedBeforePDNCreated" type="xs:boolean"/>
      <xs:element minOccurs="0" name="eventExecutionType" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <!--AssignmentInExtendedPlan-->
  <xs:complexType name="AssignmentInExtendedPlan">
    <xs:sequence>
      <xs:element minOccurs="0" name="assignmentConsultation" type="AssignmentConsultationExtended"/>
      <xs:element minOccurs="0" name="assignmentInstrumental" type="AssignmentInstrumentalExtended"/>
      <xs:element minOccurs="0" name="assignmentLaboratoryExtended" type="AssignmentLaboratoryExtended"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentConsultationExtended">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element minOccurs="0" name="assignment_id" type="xs:string"/>
      <xs:element minOccurs="0" name="suppReferralId" type="xs:long"/>
      <xs:element name="diagnosisCode" type="xs:string"/>
      <xs:element name="diagnosisTitle" type="xs:string"/>
      <xs:element name="specializationCode" type="xs:string"/>
      <xs:element name="specializationTitle" type="xs:string"/>
      <xs:element name="reason" type="xs:string"/>
      <xs:element minOccurs="0" name="documentId" type="xs:string"/>
      <xs:element name="status" type="StatusEnum"/>
      <xs:element minOccurs="0" name="documentCreateDate" type="xs:dateTime"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="documentsByAssignment" type="DocumentsByAssignment"/>
      <xs:element minOccurs="0" name="examinationPassedInExternalMO" type="xs:boolean"/>
      <xs:element minOccurs="0" name="careEventLinkedpassedInExternalMO" type="ID"/>
      <xs:element minOccurs="0" name="specialityCode" type="xs:string"/>
      <xs:element minOccurs="0" name="assigmentToControlCheckUp" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DocumentsByAssignment">
    <xs:sequence>
      <xs:element name="documentId" type="xs:string"/>
      <xs:element name="documentTypeName" type="DocumentTypeNameEnum"/>
      <xs:element name="documentCreateDate" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="DocumentTypeNameEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ASSIGNMENT_INSTRUMENTAL"/>
      <xs:enumeration value="ASSIGNMENT_LABORATORY"/>
      <xs:enumeration value="ASSIGNMENT_CONSULTATION"/>
      <xs:enumeration value="PRESCRIPTION"/>
      <xs:enumeration value="PROCESSING_PROTOCOL_AI"/>
      <xs:enumeration value="DECODE_PROTOCOL_AI"/>
      <xs:enumeration value="RESULT_OF_LI"/>
      <xs:enumeration value="INSPECTION_PROTOCOL"/>
      <xs:enumeration value="CANCELED_ASSIGNMENT"/>
      <xs:enumeration value="RESULT_OF_CONSULTATION"/>
      <xs:enumeration value="REFERRAL_TO_HOSPITAL"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="AssignmentInstrumentalExtended">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element minOccurs="0" name="assignment_id" type="xs:long"/>
      <xs:element minOccurs="0" name="suppReferralId" type="xs:long"/>
      <xs:element name="diagnosisCode" type="xs:string"/>
      <xs:element name="diagnosisTitle" type="xs:string"/>
      <xs:element name="mainDiagnosticId" type="xs:long"/>
      <xs:element name="mainDiagnosticTitle" type="xs:string"/>
      <xs:element name="reason" type="xs:string"/>
      <xs:element minOccurs="0" name="documentId" type="xs:string"/>
      <xs:element name="status" type="StatusEnum"/>
      <xs:element minOccurs="0" name="documentCreateDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="examinationPassedInExternalMO" type="xs:boolean"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="additionalDiagnostics" type="AdditionalDiagnostics"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="documentsByAssignment" type="DocumentsByAssignment"/>
      <xs:element minOccurs="0" name="careEventLinkedpassedInExternalMO" type="ID"/>
      <xs:element minOccurs="0" name="justification" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AdditionalDiagnostics">
    <xs:sequence>
      <xs:element name="additionalDiagnosticId" type="xs:long"/>
      <xs:element name="additionalDiagnosticTitle" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentLaboratoryExtended">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element minOccurs="0" name="assignment_id" type="xs:long"/>
      <xs:element name="diagnosisCode" type="xs:string"/>
      <xs:element name="diagnosisTitle" type="xs:string"/>
      <xs:element name="laboratoryCode" type="xs:string"/>
      <xs:element name="laboratoryTitle" type="xs:string"/>
      <xs:element name="biomaterialCode" type="xs:string"/>
      <xs:element name="biomaterialTitle" type="xs:string"/>
      <xs:element name="locusCode" type="xs:string"/>
      <xs:element name="locusTitle" type="xs:string"/>
      <xs:element minOccurs="0" name="samplingTypeId" type="xs:long"/>
      <xs:element minOccurs="0" name="examinationPassedInExternalMO" type="xs:boolean"/>
      <xs:element minOccurs="0" name="careEventLinkedpassedInExternalMO" type="ID"/>
      <xs:element minOccurs="0" name="samplingTypeName" type="xs:string"/>
      <xs:element minOccurs="0" name="documentId" type="xs:string"/>
      <xs:element name="status" type="StatusEnum"/>
      <xs:element minOccurs="0" name="documentCreateDate" type="xs:dateTime"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="anthropometricData" type="AnthropometricData"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="documentsByAssignment" type="DocumentsByAssignment"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="result" type="TestResult"/>
      <xs:element minOccurs="0" name="moIdTakingBiomaterial" type="xs:long"/>
      <xs:element minOccurs="0" name="moNameTakingBiomaterial" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AnthropometricData">
    <xs:sequence>
      <xs:element name="anthropometricDataId" type="xs:string"/>
      <xs:element name="anthropometricDataName" type="xs:string"/>
      <xs:element name="anthropometricDataValue" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TestResult">
    <xs:sequence>
      <xs:element minOccurs="0" name="testName" type="xs:string"/>
      <xs:element minOccurs="0" name="testStandartValue" type="xs:string"/>
      <xs:element minOccurs="0" name="testValue" type="xs:string"/>
      <xs:element minOccurs="0" name="testUnit" type="xs:string"/>
      <xs:element minOccurs="0" name="testDeviation" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <!--AppointmentInExtendedPlan-->
  <xs:complexType name="AppointmentInExtendedPlan">
    <xs:complexContent>
      <xs:extension base="Appointment">
        <xs:sequence>
          <xs:element name="type" type="xs:string"/>
          <xs:element name="appointmentDate" type="xs:dateTime"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--DrugsEvent-->
  <xs:complexType name="DrugsEventInExtendedPlan">
    <xs:complexContent>
      <xs:extension base="DrugsEvent">
        <xs:sequence>
          <xs:element minOccurs="0" name="drugMnId" type="xs:string"/>
          <xs:element minOccurs="0" name="drugTnId" type="xs:string"/>
          <xs:element name="diagnosisCode" type="xs:string"/>
          <xs:element name="diagnosisTitle" type="xs:string"/>
          <xs:element name="title" type="xs:string"/>
          <xs:element minOccurs="0" name="number" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionId" type="xs:long"/>
          <xs:element minOccurs="0" name="documentId" type="xs:string"/>
          <xs:element minOccurs="0" name="documentCreateDate" type="xs:dateTime"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="EventsPeriod">
    <xs:sequence>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:element maxOccurs="unbounded" name="event" type="Event"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EventsPeriodForCurrentEventStatus">
    <xs:sequence>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:element maxOccurs="unbounded" name="event" type="EventForCurrentEventStatus"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Event">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="eventStatus" type="StatusEnum"/>
      <xs:element name="archived" type="xs:boolean"/>
      <xs:element minOccurs="0" name="assignment" type="Assignment"/>
      <xs:element minOccurs="0" name="appointment" type="Appointment"/>
      <xs:element minOccurs="0" name="drugsEvent" type="DrugsEvent"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="diagnoses" type="Diagnosis"/>
      <xs:element minOccurs="0" name="referralCreated" type="xs:boolean"/>
      <xs:element minOccurs="0" name="destinationType" type="xs:string"/>
      <xs:element minOccurs="0" name="destinationMedicalOrganizationId" type="xs:long"/>
      <xs:element minOccurs="0" name="destinationMedicalOrganizationName" type="xs:string"/>
      <xs:element minOccurs="0" name="passedBeforePDNCreated" type="xs:boolean"/>
      <xs:element minOccurs="0" name="eventExecutionType" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EventForCurrentEventStatus">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="eventStatus" type="StatusEnum"/>
      <xs:element name="archived" type="xs:boolean"/>
      <xs:element minOccurs="0" name="assignment" type="AssignmentForCurrentEventStatus"/>
      <xs:element minOccurs="0" name="drugsEvent" type="DrugsEventForCurrentEventStatus"/>
    </xs:sequence>
  </xs:complexType>
  <!--Assignments-->
  <xs:complexType name="Assignment">
    <xs:sequence>
      <xs:element minOccurs="0" name="assignmentConsultation" type="AssignmentConsultation"/>
      <xs:element minOccurs="0" name="assignmentInstrumental" type="AssignmentInstrumental"/>
      <xs:element minOccurs="0" name="assignmentLaboratory" type="AssignmentLaboratory"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentForCurrentEventStatus">
    <xs:sequence>
      <xs:element minOccurs="0" name="assignmentConsultation" type="AssignmentConsultationForCurrentEventStatus"/>
      <xs:element minOccurs="0" name="assignmentInstrumental" type="AssignmentBaseForCurrentEventStatus"/>
      <xs:element minOccurs="0" name="assignmentLaboratory" type="AssignmentBaseForCurrentEventStatus"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentConsultation">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="specializationTitle" type="xs:string"/>
      <xs:element name="status" type="StatusEnum"/>
      <xs:element minOccurs="0" name="examinationPassedInExternalMO" type="xs:boolean"/>
      <xs:element minOccurs="0" name="careEventLinkedpassedInExternalMO" type="ID"/>
      <xs:element minOccurs="0" name="assigmentToControlCheckUp" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentInstrumental">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="mainDiagnsoticTitle" type="xs:string"/>
      <xs:element name="status" type="StatusEnum"/>
      <xs:element minOccurs="0" name="examinationPassedInExternalMO" type="xs:boolean"/>
      <xs:element minOccurs="0" name="careEventLinkedpassedInExternalMO" type="ID"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentLaboratory">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="laboratoryTitle" type="xs:string"/>
      <xs:element name="status" type="StatusEnum"/>
      <xs:element minOccurs="0" name="examinationPassedInExternalMO" type="xs:boolean"/>
      <xs:element minOccurs="0" name="careEventLinkedpassedInExternalMO" type="ID"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentBaseForCurrentEventStatus">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element minOccurs="0" name="assignmentId" type="xs:string"/>
      <xs:element minOccurs="0" name="documentId" type="xs:string"/>
      <xs:element minOccurs="0" name="documentCreateDate" type="xs:dateTime"/>
      <xs:element name="status" type="StatusEnum"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentConsultationForCurrentEventStatus">
    <xs:complexContent>
      <xs:extension base="AssignmentBaseForCurrentEventStatus">
        <xs:sequence>
          <xs:element minOccurs="0" name="suppReferralId" type="xs:long"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Appointment">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="assignmentId" type="xs:string"/>
      <xs:element name="eventType" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DrugsEvent">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="status" type="StatusEnum"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DrugsEventForCurrentEventStatus">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element minOccurs="0" name="prescriptionId" type="xs:long"/>
      <xs:element minOccurs="0" name="documentId" type="xs:string"/>
      <xs:element minOccurs="0" name="documentCreateDate" type="xs:dateTime"/>
      <xs:element name="status" type="StatusEnum"/>
    </xs:sequence>
  </xs:complexType>
  <!--EventsByPatient-->
  <xs:complexType name="EventsByPatient">
    <xs:sequence>
      <xs:element name="patientId" type="xs:long"/>
      <xs:element maxOccurs="unbounded" name="eventsPeriod" type="EventsByPatientPeriod"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EventsByPatientPeriod">
    <xs:sequence>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="priority" type="xs:string"/>
      <xs:element maxOccurs="unbounded" name="event" type="EventByPatient"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EventByPatient">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="planOfEventId" type="xs:long"/>
      <xs:element name="eventStatus" type="StatusEnum"/>
      <xs:element minOccurs="0" name="comment" type="xs:string"/>
      <xs:element minOccurs="0" name="assignment" type="AssignmentInExtendedPlan"/>
      <xs:element minOccurs="0" name="drugsEvent" type="DrugsEventInExtendedPlan"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="diagnoses" type="Diagnosis"/>
      <xs:element minOccurs="0" name="referralCreated" type="xs:boolean"/>
      <xs:element minOccurs="0" name="destinationType" type="xs:string"/>
      <xs:element minOccurs="0" name="destinationMedicalOrganizationId" type="xs:long"/>
      <xs:element minOccurs="0" name="destinationMedicalOrganizationName" type="xs:string"/>
      <xs:element minOccurs="0" name="passedBeforePDNCreated" type="xs:boolean"/>
      <xs:element minOccurs="0" name="eventExecutionType" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="StatusEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="PLANNED"/>
      <xs:enumeration value="CREATED"/>
      <xs:enumeration value="COMPLETED"/>
      <xs:enumeration value="UNFINISHED"/>
      <xs:enumeration value="CANCELLED"/>
      <xs:enumeration value="EXPIRED"/>
      <xs:enumeration value="PRESCRIPTED"/>
    </xs:restriction>
  </xs:simpleType>
  <!--CurrentEventStatus-->
  <xs:complexType name="CurrentEvents">
    <xs:sequence>
      <xs:element name="patientId" type="xs:long"/>
      <xs:element name="eventsSum" type="xs:string"/>
      <xs:element name="eventsCreated" type="xs:string"/>
      <xs:element name="PlanOfEvents" type="PlanOfEventsForCurrentEventStatus"/>
    </xs:sequence>
  </xs:complexType>
  <!--PlanOfEventsMainInfo-->
  <xs:complexType name="PlanOfEventsMainInfo">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:element name="documentId" type="xs:string"/>
      <xs:element minOccurs="0" name="parentDocumentId" type="xs:string"/>
      <xs:element name="moId" type="xs:long"/>
      <xs:element name="moName" type="xs:string"/>
      <xs:element name="status" type="xs:string"/>
      <xs:element name="archived" type="xs:boolean"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="planOfEventsDiagnosis" type="Diagnosis"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PlansOfEvents">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="planOfEvents" type="PlanOfEventsMainInfo"/>
    </xs:sequence>
  </xs:complexType>
  <!--DocumentStatus-->
  <xs:complexType name="DocumentStatus">
    <xs:sequence>
      <xs:element name="documentId" type="xs:string"/>
      <xs:element name="isProcessed" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Cy_OJPCNz0JEuHmUhDvozy7dZLAs2rTS0UCFnwFLedfIMkk4w--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.2" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Cy_OJPCNz0JEvHwUwGkuCPjPM_cFunWBerMmxg.4m3BPrNyW724"/>
  <!--references-->
  <xs:element name="mail" type="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalOrganizationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинского учреждения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="compositionId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор
                Композиции Think!EHR
                ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="simiDocumentId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор
                Документа СИМИ
                ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--abstract types-->
  <xs:complexType abstract="true" name="Base">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
                используемый для описания
                компонентов сущностей,
                владельцеми которых является
                текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор
                    сущности/записи
                    на уровне всего ЕМИАС</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="true" name="EntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
                используемый для описания сущностей,
                владельцем которых является
                текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base">
        <xs:attribute name="archived" type="xs:boolean" use="required">
          <xs:annotation>
            <xs:documentation>Признак "Архивная сущность"</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
                используемый для описания
                компонентов сущностей,
                владельцами которых являются
                другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignEntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
                используемый для описания сущностей,
                владельцами которых являются
                другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="EntityBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
                используемый для описания типов,
                реализующих справочники ЕМИАС.НСИ.2</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignEntityBase">
        <xs:sequence>
          <xs:element name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование элемента справочника</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiWithCodeBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
                используемый для описания типов,
                реализующих справочники ЕМИАС.НСИ.2, в которых имеется бизнес-код</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="NsiBase">
        <xs:attribute name="code" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Бизнес-код</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="SIMIDocumentBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
                используемый для описания cведений о документе СИМИ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="simiDocumentId"/>
      <xs:element minOccurs="0" ref="compositionId"/>
    </xs:sequence>
  </xs:complexType>
  <!--async operation status-->
  <xs:element name="operationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор операции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OperationExecutionStatus">
    <xs:annotation>
      <xs:documentation>Статус выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="isCompleted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак окончания выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="completenessProgress" type="OperationCompletenessBase">
        <xs:annotation>
          <xs:documentation>Сведения о текущем статусе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hasSucceded" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак успешности выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
        <xs:annotation>
          <xs:documentation>Коллекция сообщений, порожденных в ходе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор операции</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="false" name="OperationCompletenessPercentage">
    <xs:annotation>
      <xs:documentation>Описание текущего статуса выполнения операции в процентах (0%-100%)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OperationCompletenessBase">
        <xs:sequence>
          <xs:element name="completenessStatus">
            <xs:annotation>
              <xs:documentation>Статус (0%-100%)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:unsignedByte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания текущего статуса выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--calling methods' options-->
  <xs:element name="options" type="Options">
    <xs:annotation>
      <xs:documentation>Параметры вызова метода</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Options">
    <xs:annotation>
      <xs:documentation>Набор именованных значений</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Именованное значение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--pagination-->
  <xs:element name="pagingOptions" type="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="PagingResults">
    <xs:annotation>
      <xs:documentation>Список с пагинацией</xs:documentation>
    </xs:annotation>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageTotal" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество страниц</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morePagesAvailable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Флаг доступности других страниц с результатами для "постраничного листания" (true - если доступны еще страницы; false - иначе)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="totalItemsCount" type="xs:long" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество элементов (на всех страницах)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" ref="sortingOptions"/>
    </xs:sequence>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--sorting-->
  <xs:element name="sortingOptions" type="SortingOptions">
    <xs:annotation>
      <xs:documentation>Параметры сортировки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SortingOptions">
    <xs:annotation>
      <xs:documentation>Условия сортировки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="3" name="sortOrder" type="SortOrder">
        <xs:annotation>
          <xs:documentation>Условия сортировки
                        (используются в соответствии с
                        переданной последовательностью)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SortOrder">
    <xs:annotation>
      <xs:documentation>Сортировка</xs:documentation>
    </xs:annotation>
    <xs:attribute name="attributeName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Наименование поля, по которому должна быть произведена сортировка</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="false" name="desceding" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Направление сортировки</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--void response-->
  <xs:element fixed="true" name="result">
    <xs:annotation>
      <xs:documentation>Элемент для использования в методах, не предполагающих возврат какого-либо значения</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:boolean"/>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <!--base types-->
  <xs:complexType name="TimeInterval">
    <xs:annotation>
      <xs:documentation>Временной период (время)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время начала интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время окончания интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--keys-->
  <xs:complexType name="EntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор сущности,
                непосредственно принадлежащей
                текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор
                сущности ЕМИАС,
                внешней по отношнению
                к текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NsiGlobalId">
    <xs:annotation>
      <xs:documentation>Глобальный идентфикатор
                ЕМИАС.НСИ</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Cy_OJPCNz0JEvHwUwGkuCPjPM_cFunWBerMmxg.4m3BPrNyW724</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:simpleType name="GUID">
    <xs:annotation>
      <xs:documentation>Глобальный 128-битный идентификатор (Globally Unique Identifier)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="320"/>
      <xs:pattern value=".+@.+\..+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService</con:endpoint></con:endpoints><con:operation id="3e02392d-8fc0-49ac-a635-89b2565bac6e" isOneWay="false" action="GetCardForm30ProcessingStatus" name="GetCardForm30ProcessingStatus" bindingOperationName="GetCardForm30ProcessingStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="daa41038-7127-484a-a7d9-e3fc563696f2" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/dnpdn/planService/v2/types/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetCardForm30ProcessingStatusRequest>\r
         <!--1 or more repetitions:-->\r
         <typ:documentId>?</typ:documentId>\r
      </typ:GetCardForm30ProcessingStatusRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/dnpdn/planService/v2/planServicePortType/GetCardForm30ProcessingStatusRequest"/></con:call></con:operation><con:operation id="ae075026-68e0-45ba-8f19-369f9abec9c8" isOneWay="false" action="GetCurrentEventStatus" name="GetCurrentEventStatus" bindingOperationName="GetCurrentEventStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="cb984522-763b-4199-a4a0-7106414b0444" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:v2="http://emias.mos.ru/dnpdn/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetCurrentEventStatusRequest>\r
         <!--Optional:-->\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:documentId>?</typ:documentId>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v2:entry key="?">?</v2:entry>\r
         </typ:options>\r
      </typ:GetCurrentEventStatusRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/dnpdn/planService/v2/planServicePortType/GetCurrentEventStatusRequest"/></con:call></con:operation><con:operation id="0a4fb232-3d3d-4d63-86d4-f594962c8c52" isOneWay="false" action="GetEventsByPatient" name="GetEventsByPatient" bindingOperationName="GetEventsByPatient" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="89d2a5b9-83ea-4845-a801-1191cb51461c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:v2="http://emias.mos.ru/dnpdn/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetEventsByPatientsRequest>\r
         <typ:patientId>?</typ:patientId>\r
         <typ:startDate>?</typ:startDate>\r
         <typ:endDate>?</typ:endDate>\r
         <typ:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v2:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v2:sortOrder attributeName="?" desceding="false"/>\r
            </v2:sortingOptions>\r
         </typ:pagingOptions>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v2:entry key="?">?</v2:entry>\r
         </typ:options>\r
      </typ:GetEventsByPatientsRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/dnpdn/planService/v2/planServicePortType/GetEventsByPatientRequest"/></con:call></con:operation><con:operation id="85d1f9cb-8ab2-4272-bbfe-0e65f40dfb94" isOneWay="false" action="GetPlanExtension" name="GetPlanExtension" bindingOperationName="GetPlanExtension" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0999a20a-6acc-443a-826e-4078dfe7cbe9" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:v2="http://emias.mos.ru/dnpdn/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetPlanExtensionRequest>\r
         <!--Optional:-->\r
         <typ:planOfEventsId>?</typ:planOfEventsId>\r
         <!--Optional:-->\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:documentId>?</typ:documentId>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v2:entry key="?">?</v2:entry>\r
         </typ:options>\r
      </typ:GetPlanExtensionRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/dnpdn/planService/v2/planServicePortType/GetPlanExtensionRequest"/></con:call><con:call id="1cd5db4a-e1dc-4b6e-b5a3-9933b144d29e" name="getPlanExtention"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/dnpdn/planService/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-775ca9c2-beb0-4ff4-be53-ea6d8b2236bf" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns3:userContext xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/">\r
         <ns3:systemName>EIM</ns3:systemName>\r
         <ns3:userName>10d59080-73a2-4587-9931-c18fb90831b2</ns3:userName>\r
         <ns3:userRoleId>7187</ns3:userRoleId>\r
         <ns3:isUserRoleSystemWide>true</ns3:isUserRoleSystemWide>\r
         <ns3:userRights>\r
            <ns3:userRightId>5150001</ns3:userRightId>\r
            <ns3:userRightId>333001</ns3:userRightId>\r
         </ns3:userRights>\r
         <ns3:jobExecutionId>1</ns3:jobExecutionId>\r
      </ns3:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <GetPlanExtensionRequest xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/">\r
         <patientId>10166510</patientId>\r
      </GetPlanExtensionRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/dnpdn/planService/v2/planServicePortType/GetPlanExtensionRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="ca8e9a6a-ca6a-470c-86dc-d1152b43168b" isOneWay="false" action="GetPlans" name="GetPlans" bindingOperationName="GetPlans" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3eb41497-016a-4edf-872e-aa0877e7737b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:v2="http://emias.mos.ru/dnpdn/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetPlansRequest>\r
         <!--Optional:-->\r
         <typ:planOfEventsId>?</typ:planOfEventsId>\r
         <!--Optional:-->\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:documentId>?</typ:documentId>\r
         <!--Optional:-->\r
         <typ:returnActualPlan>?</typ:returnActualPlan>\r
         <!--Optional:-->\r
         <typ:planStartDateFrom>?</typ:planStartDateFrom>\r
         <!--Optional:-->\r
         <typ:planEndDateTo>?</typ:planEndDateTo>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v2:entry key="?">?</v2:entry>\r
         </typ:options>\r
      </typ:GetPlansRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/dnpdn/planService/v2/planServicePortType/GetPlansRequest"/></con:call></con:operation><con:operation id="a665f2de-9e6f-4ee1-9484-505d32236b23" isOneWay="false" action="GetPlanShort" name="GetPlanShort" bindingOperationName="GetPlanShort" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="93ec5cdc-2f0c-4df1-bfb3-1f1d5f89b9d3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:v2="http://emias.mos.ru/dnpdn/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetPlanShortRequest>\r
         <!--Optional:-->\r
         <typ:planOfEventsId>?</typ:planOfEventsId>\r
         <!--Optional:-->\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:documentId>?</typ:documentId>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v2:entry key="?">?</v2:entry>\r
         </typ:options>\r
      </typ:GetPlanShortRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/dnpdn/planService/v2/planServicePortType/GetPlanShortRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="54bbd6d0-ccfe-4093-b373-29ae1809d990" name="getPlanShort"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:v2="http://emias.mos.ru/dnpdn/core/v2/">
   <soap:Header>
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-9d130c8c-53c1-4cf0-94af-d0da7dd509fa" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <ns3:userContext xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/">
         <ns3:systemName>EIM</ns3:systemName>
<ns3:userName>HYkle6XW7ifrlT7wCuuK0iZ9RoePXm2NG92bTaLowfMA8P/yw85Mi/WrVHo89WDhWFgRt66EU3MBtQ3SEhhkrwOOLjNFijcReVF2xegR4E+wxgBS2JRt3CSP4mQfw4YEEJCPprUUC2KPBW+ckkHyt9wOaRq4TQjZ2/wTtdHDEyRs2sYIM1WUZPgc39vRRpfKGMv4keac/eirq9PlTfPQauQdxnGJ9ZDzQbAsUMULVbFW0m78KKR5JzAFpl7YFEx1o9eUT70XdBZDhfdVlljA+T+yRIOpW2SOZOEpVhYAZ8qTVOtKcJk060bDndYdUd1gQ0x6ckT1+CgOxQEbefi/Yw==</ns3:userName>
         <ns3:userRoleId>7187</ns3:userRoleId>
         <ns3:isUserRoleSystemWide>true</ns3:isUserRoleSystemWide>
         <ns3:userRights>
            <ns3:userRightId>5150002</ns3:userRightId>
            <ns3:userRightId>333001</ns3:userRightId>
         </ns3:userRights>
         <ns3:jobExecutionId>1</ns3:jobExecutionId>
      </ns3:userContext>
   </soap:Header>
   <soap:Body>\r
      <typ:GetPlanShortRequest>\r
         <typ:patientId>10166510</typ:patientId>\r
      </typ:GetPlanShortRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/dnpdn/planService/v2/planServicePortType/GetPlanShortRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="76217557-0ecc-43c6-bf6a-be30221139d8" wsaVersion="NONE" name="Контингент" type="wsdl" bindingName="{http://impl.service.soap.emias.lanit.ru/v2/}PGUContingentServicePTB" soapVersion="1_1" anonymous="optional" definition="http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService?wsdl"><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="PGUServicesInfoV2" targetNamespace="http://impl.service.soap.emias.lanit.ru/v2/" xmlns:api="http://api.service.soap.emias.lanit.ru/v2/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://impl.service.soap.emias.lanit.ru/v2/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://api.service.soap.emias.lanit.ru/v2/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiIQ4qBnGzvi2yrsi.16MiA_xKpp83RleFguJcUcDjzvmbO9ApdFmlQfF8YXfI9mLkRpgH5fMr3szT60OOWNDjlmcK8bih9r50ZKQRYXTiKnzTG2._NQFGshLJMiJ8Ki2r0J_e1BSDWREkOA"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getPatientInfo2Response">
    <wsdl:part element="api:getPatientInfo2Response" name="getPatientInfo2Response"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPatientInfo3">
    <wsdl:part element="api:getPatientInfo3" name="getPatientInfo3"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPatientInfo2">
    <wsdl:part element="api:getPatientInfo2" name="getPatientInfo2"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SoapException">
    <wsdl:part element="api:exception" name="SoapException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPatientInfo3Response">
    <wsdl:part element="api:getPatientInfo3Response" name="getPatientInfo3Response"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLpusResponse">
    <wsdl:part element="api:getLpusResponse" name="getLpusResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLpusForAttachment">
    <wsdl:part element="api:getLpusForAttachment" name="getLpusForAttachment"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPatientInfoResponse">
    <wsdl:part element="api:getPatientInfoResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAttachment">
    <wsdl:part element="api:createAttachment" name="createAttachment"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPatientInfo">
    <wsdl:part element="api:getPatientInfo" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLpusForAttachmentResponse">
    <wsdl:part element="api:getLpusForAttachmentResponse" name="getLpusForAttachmentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLpus">
    <wsdl:part element="api:getLpus" name="getLpus"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAttachmentResponse">
    <wsdl:part element="api:createAttachmentResponse" name="createAttachmentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="PGUContingentServicePT">
    <wsdl:operation name="getPatientInfo">
      <wsdl:input message="tns:getPatientInfo" name="getPatientInfo"></wsdl:input>
      <wsdl:output message="tns:getPatientInfoResponse" name="getPatientInfoResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPatientInfo2">
      <wsdl:input message="tns:getPatientInfo2" name="getPatientInfo2"></wsdl:input>
      <wsdl:output message="tns:getPatientInfo2Response" name="getPatientInfo2Response"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAttachment">
      <wsdl:input message="tns:createAttachment" name="createAttachment"></wsdl:input>
      <wsdl:output message="tns:createAttachmentResponse" name="createAttachmentResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpusForAttachment">
      <wsdl:input message="tns:getLpusForAttachment" name="getLpusForAttachment"></wsdl:input>
      <wsdl:output message="tns:getLpusForAttachmentResponse" name="getLpusForAttachmentResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpus">
      <wsdl:input message="tns:getLpus" name="getLpus"></wsdl:input>
      <wsdl:output message="tns:getLpusResponse" name="getLpusResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPatientInfo3">
      <wsdl:input message="tns:getPatientInfo3" name="getPatientInfo3"></wsdl:input>
      <wsdl:output message="tns:getPatientInfo3Response" name="getPatientInfo3Response"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="PGUContingentServicePTB" type="tns:PGUContingentServicePT">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getPatientInfo">
      <soap:operation soapAction="urn://getPatientInfo"/>
      <wsdl:input name="getPatientInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPatientInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPatientInfo2">
      <soap:operation soapAction="urn://getPatientInfo2"/>
      <wsdl:input name="getPatientInfo2">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPatientInfo2Response">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAttachment">
      <soap:operation soapAction="urn://createAttachment"/>
      <wsdl:input name="createAttachment">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAttachmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpusForAttachment">
      <soap:operation soapAction="urn://getLpusForAttachment"/>
      <wsdl:input name="getLpusForAttachment">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLpusForAttachmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpus">
      <soap:operation soapAction="urn://getLpus"/>
      <wsdl:input name="getLpus">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLpusResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPatientInfo3">
      <soap:operation soapAction="urn://getPatientInfo3"/>
      <wsdl:input name="getPatientInfo3">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPatientInfo3Response">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PGUContingentService">
    <wsdl:port binding="tns:PGUContingentServicePTB" name="PGUContingentServiceBinding">
      <soap:address location="http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiIQ4qBnGzvi2yrsi.16MiA_xKpp83RleFguJcUcDjzvmbO9ApdFmlQfF8YXfI9mLkRpgH5fMr3szT60OOWNDjlmcK8bih9r50ZKQRYXTiKnzTG2._NQFGshLJMiJ8Ki2r0J_e1BSDWREkOA</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://api.service.soap.emias.lanit.ru/v2/" xmlns:tns="http://api.service.soap.emias.lanit.ru/v2/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--======================== Элементы =====================================-->
  <!--Получение сведений о пациенте-->
  <xs:element name="getPatientInfo" type="tns:getPatientInfo"/>
  <xs:element name="getPatientInfoResponse" type="tns:getPatientInfoResponse"/>
  <!--Получение сведений о пациенте-->
  <xs:element name="getPatientInfo2" type="tns:getPatientInfo2"/>
  <xs:element name="getPatientInfo2Response" type="tns:getPatientInfo2Response"/>
  <!--Возвращает ЛПУ рекомендованные для прикрепления-->
  <xs:element name="getLpusForAttachment" type="tns:getLpusForAttachment"/>
  <xs:element name="getLpusForAttachmentResponse" type="tns:getLpusForAttachmentResponse"/>
  <!--Создание заявления на прикрепление-->
  <xs:element name="createAttachment" type="tns:createAttachment"/>
  <xs:element name="createAttachmentResponse" type="tns:createAttachmentResponse"/>
  <!--Предоставление переченя филиалов МО, найденных в системе по входным параметрам-->
  <xs:element name="getLpus" type="tns:getLpus"/>
  <xs:element name="getLpusResponse" type="tns:getLpusResponse"/>
  <!--Получение сведений о пациенте v3-->
  <xs:element name="getPatientInfo3" type="tns:getPatientInfo3"/>
  <xs:element name="getPatientInfo3Response" type="tns:getPatientInfo3Response"/>
  <!--======================== Ошибки =====================================-->
  <xs:element name="exception" nillable="true" type="xs:string"/>
  <!--======================== Типы данных =====================================-->
  <xs:complexType name="attachmentNew">
    <xs:sequence>
      <xs:element minOccurs="0" name="applicationId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД заявления</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lpu">
        <xs:annotation>
          <xs:documentation>ЛПУ</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="xs:string"/>
            <xs:element name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="phone" type="xs:string"/>
            <xs:element minOccurs="0" name="groupId" type="xs:string"/>
            <xs:element minOccurs="0" name="address" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="districtNumber" type="xs:int">
        <xs:annotation>
          <xs:documentation>Номер участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="districtType" type="xs:string">
        <xs:annotation>
          <xs:documentation>Тип участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="doctorFio" type="xs:string">
        <xs:annotation>
          <xs:documentation>ФИО врача</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="startDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="endDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="status" type="xs:string">
        <xs:annotation>
          <xs:documentation>Статус</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="rejectReason" type="xs:string">
        <xs:annotation>
          <xs:documentation>Причина отказа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="rejectDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата отказа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="closeReason" type="xs:string">
        <xs:annotation>
          <xs:documentation>Причина закрытия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="closeDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата закрытия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="createDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата сооздания</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Внешняя система</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="attachmentV3">
    <xs:sequence>
      <xs:element minOccurs="0" name="applicationId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД заявления</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lpu">
        <xs:annotation>
          <xs:documentation>ЛПУ</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="xs:string"/>
            <xs:element name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="phone" type="xs:string"/>
            <xs:element minOccurs="0" name="groupId" type="xs:string"/>
            <xs:element minOccurs="0" name="address" type="xs:string"/>
            <xs:element minOccurs="0" name="type" type="tns:LpuType">
              <xs:annotation>
                <xs:documentation>Тип медицинского учреждения</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="districtNumber" type="xs:int">
        <xs:annotation>
          <xs:documentation>Номер участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="districtType" type="xs:string">
        <xs:annotation>
          <xs:documentation>Тип участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="doctorFio" type="xs:string">
        <xs:annotation>
          <xs:documentation>ФИО врача</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="startDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="endDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="status" type="xs:string">
        <xs:annotation>
          <xs:documentation>Статус</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="rejectReason" type="xs:string">
        <xs:annotation>
          <xs:documentation>Причина отказа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="rejectDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата отказа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="closeReason" type="xs:string">
        <xs:annotation>
          <xs:documentation>Причина закрытия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="closeDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата закрытия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="createDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата сооздания</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Внешняя система</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xsd:complexType name="attachment">
    <xs:sequence>
      <xs:element name="applicationId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД заявления</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lpu">
        <xs:annotation>
          <xs:documentation>ЛПУ</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="xs:string"/>
            <xs:element name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="phone" type="xs:string"/>
            <xs:element minOccurs="0" name="groupId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="districtNumber" type="xs:int">
        <xs:annotation>
          <xs:documentation>Номер участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="districtType" type="xs:string">
        <xs:annotation>
          <xs:documentation>Тип участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="doctorFio" type="xs:string">
        <xs:annotation>
          <xs:documentation>ФИО врача</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="startDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="endDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="status" type="xs:string">
        <xs:annotation>
          <xs:documentation>Статус</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="rejectReason" type="xs:string">
        <xs:annotation>
          <xs:documentation>Причина отказа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="rejectDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата отказа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="closeReason" type="xs:string">
        <xs:annotation>
          <xs:documentation>Причина закрытия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="closeDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата закрытия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="createDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата сооздания</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Внешняя система</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="moSelected" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Выбор МО осуществлен</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xsd:complexType>
  <xs:complexType name="idNameType">
    <xs:annotation>
      <xs:documentation>ИД и наименование</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="baseDto">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="district">
    <xs:sequence>
      <xs:element name="id" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="number" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="type" type="tns:idNameType">
        <xs:annotation>
          <xs:documentation>Тип участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="attachmentsCount" type="xs:int">
        <xs:annotation>
          <xs:documentation>Количество прикрепленных</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="medicalEmployee" type="tns:medicalEmployee"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpuServiceDistrict">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element minOccurs="0" name="districtNumber" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="address" nillable="true" type="tns:serviceLpuAddress"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xsd:simpleType name="OmsType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Temp">
        <xsd:annotation>
          <xsd:documentation>Временный полис</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Old">
        <xsd:annotation>
          <xsd:documentation>Полис старого образца</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="New">
        <xsd:annotation>
          <xsd:documentation>Полис нового образца</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Undefined">
        <xsd:annotation>
          <xsd:documentation>Тип полиса неопределен</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xs:complexType name="omsPolicy">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element minOccurs="0" name="birthDate" type="xs:dateTime"/>
      <xs:element name="status" type="xs:string"/>
      <xs:element minOccurs="0" name="smoName" type="xs:string"/>
      <xs:element minOccurs="0" name="issueDate" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="omsPolicyFull">
    <xs:sequence>
      <xs:element name="omsNumber" type="xsd:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xsd:string"/>
      <xs:element name="status" type="xsd:string"/>
      <xs:element minOccurs="0" name="smoName" type="xsd:string"/>
      <xs:element minOccurs="0" name="region" type="xsd:string"/>
      <xs:element minOccurs="0" name="issueDate" type="xsd:dateTime"/>
      <xs:element name="type" type="tns:OmsType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="patient">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="omsPolicy" type="tns:omsPolicy"/>
      <xs:element minOccurs="0" name="attachments">
        <xs:annotation>
          <xs:documentation>Информация о прикреплениях</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="4" minOccurs="0" name="attachment" type="tns:attachment"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="patientAddress">
    <xs:annotation>
      <xs:documentation>Адрес пациента</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="house" type="xs:string">
        <xs:annotation>
          <xs:documentation>Дом</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="building" type="xs:string">
        <xs:annotation>
          <xs:documentation>Корпус</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="construction" type="xs:string">
        <xs:annotation>
          <xs:documentation>Строение</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="flat" type="xs:string">
        <xs:annotation>
          <xs:documentation>Квартира</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="street" type="xs:string">
        <xs:annotation>
          <xs:documentation>Улица</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="addressText">
        <xs:annotation>
          <xs:documentation>Полная строка адреса</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="250"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="receptionTypes">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="receptionView" nillable="true" type="tns:receptionView"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="receptionView">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element minOccurs="0" name="primarySign" type="xs:string"/>
      <xs:element minOccurs="0" name="homeSign" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="replacementResource">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element minOccurs="0" name="reasonReplacement" type="xs:string"/>
          <xs:element minOccurs="0" name="id" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="specialityName" type="xs:string"/>
          <xs:element minOccurs="0" name="firstName" type="xs:string"/>
          <xs:element minOccurs="0" name="lastName" type="xs:string"/>
          <xs:element minOccurs="0" name="secondName" type="xs:string"/>
          <xs:element minOccurs="0" name="receptionTypes" type="tns:receptionTypes"/>
          <xs:element minOccurs="0" name="room" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="serviceDistricts">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="district" nillable="true" type="tns:lpuServiceDistrict"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="serviceLpuAddress">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element minOccurs="0" name="area" type="xs:string"/>
          <xs:element minOccurs="0" name="district" type="xs:string"/>
          <xs:element minOccurs="0" name="street" type="xs:string"/>
          <xs:element minOccurs="0" name="house" type="xs:string"/>
          <xs:element minOccurs="0" name="building" type="xs:string"/>
          <xs:element minOccurs="0" name="construction" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="document">
    <xs:sequence>
      <xs:element minOccurs="0" name="type" type="xs:int">
        <xs:annotation>
          <xs:documentation>Тип</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="number" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала действия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="issuedBy" type="xs:string">
        <xs:annotation>
          <xs:documentation>Кем выдан</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="medicalEmployee">
    <xs:sequence>
      <xs:element name="jobId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД МР в подразделении</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lastName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Фамилия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="firstName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="middleName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Отчество</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="position">
        <xs:annotation>
          <xs:documentation>Должность</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="xs:string">
              <xs:annotation>
                <xs:documentation>ИД должности</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="shortName" type="xs:string">
              <xs:annotation>
                <xs:documentation>Краткое наименование</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="representative">
    <xs:sequence>
      <xs:element minOccurs="0" name="lastName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Фамилия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="firstName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="middleName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Отчество</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="basis" type="xs:string">
        <xs:annotation>
          <xs:documentation>Основания</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="document" type="xs:string">
        <xs:annotation>
          <xs:documentation>Документ</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpuForAttachment">
    <xs:sequence>
      <xs:element name="lpuId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД ЛПУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="groupId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД группы</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Полное наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="address" type="xs:string">
        <xs:annotation>
          <xs:documentation>Адрес</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="phone" type="xs:string">
        <xs:annotation>
          <xs:documentation>Телефон</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="attachmentsCount" type="xs:int">
        <xs:annotation>
          <xs:documentation>Количество прикрепленных</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="recommended" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Рекомендуется для прикрепления</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="district" type="tns:district">
        <xs:annotation>
          <xs:documentation>Участки</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LpuWithAddressPointPgu">
    <xs:annotation>
      <xs:documentation>ЛПУ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long">
        <xs:annotation>
          <xs:documentation>Идентификатор</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="groupId" type="xs:long">
        <xs:annotation>
          <xs:documentation>Идентификатор группы МО</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="mainLpuId" type="xs:long">
        <xs:annotation>
          <xs:documentation>Идентификатор головной организации</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="type" type="tns:LpuType">
        <xs:annotation>
          <xs:documentation>Тип медицинского учреждения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="address" type="tns:LpuAddress">
        <xs:annotation>
          <xs:documentation>Адрес</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="phone" type="xs:string">
        <xs:annotation>
          <xs:documentation>Телефон</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="shortName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Краткое наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headFinance" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак подушевого финансирования</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ogrn" type="xs:string">
        <xs:annotation>
          <xs:documentation>ОГРН МУ</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LpuType">
    <xs:annotation>
      <xs:documentation>Тип медицинского учреждения</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="MUTypeID" type="xs:long">
        <xs:annotation>
          <xs:documentation>Идентификатор типа медицинского учреждения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование типа медицинского учреждения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LpuAddress">
    <xs:annotation>
      <xs:documentation>Адрес МО</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="addressPointId" type="xs:long">
        <xs:annotation>
          <xs:documentation>Идентификатор адресного объекта</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="address" type="xs:string">
        <xs:annotation>
          <xs:documentation>Адрес здания</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="isMain" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак основного адреса</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAttachment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="placeOfBirth" type="xs:string"/>
      <xs:element minOccurs="0" name="citizenship" type="xs:string"/>
      <xs:element minOccurs="0" name="phone" type="xs:string"/>
      <xs:element minOccurs="0" name="email" type="xs:string"/>
      <xs:element name="requestId" type="xs:string"/>
      <xs:element name="lpuId" type="xs:string"/>
      <xs:element name="areaType" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД типа участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="document" type="tns:document"/>
      <xs:element minOccurs="0" name="representative" type="tns:representative"/>
      <xs:element minOccurs="0" name="registrationDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="registrationAddress" type="tns:patientAddress"/>
      <xs:element minOccurs="0" name="actualAddress" type="tns:patientAddress"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAttachmentResponse">
    <xs:sequence>
      <xs:element name="applicationId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPatientInfoBase">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="fio">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="lastName" type="xs:string"/>
            <xs:element name="firstName" type="xs:string"/>
            <xs:element minOccurs="0" name="middleName" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xsd:complexType name="getPatientInfo">
    <xsd:complexContent>
      <xsd:extension base="tns:getPatientInfoBase">
        <xs:sequence>
          <xs:element name="typeAttach" type="xs:int"/>
          <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
        </xs:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="getPatientInfo2">
    <xsd:complexContent>
      <xsd:extension base="tns:getPatientInfoBase">
        <xs:sequence>
          <xs:element name="typeAttach" type="xs:int"/>
          <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
        </xs:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xs:complexType name="getPatientInfoResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:patient"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPatientInfo2Response">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:patientNew"/>
    </xs:sequence>
  </xs:complexType>
  <xsd:complexType name="getPatientInfo3">
    <xsd:complexContent>
      <xsd:extension base="tns:getPatientInfoBase">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="typeAttach">
            <xsd:simpleType>
              <xsd:restriction base="xsd:int">
                <xsd:enumeration value="0">
                  <xs:annotation>
                    <xs:documentation>Небазовое (женская консультация)</xs:documentation>
                  </xs:annotation>
                </xsd:enumeration>
                <xsd:enumeration value="1">
                  <xs:annotation>
                    <xs:documentation>Терапевтическое/Педиатрическое</xs:documentation>
                  </xs:annotation>
                </xsd:enumeration>
                <xsd:enumeration value="2">
                  <xs:annotation>
                    <xs:documentation>Стоматологическое</xs:documentation>
                  </xs:annotation>
                </xsd:enumeration>
              </xsd:restriction>
            </xsd:simpleType>
          </xs:element>
          <xs:element name="onlyMoscowPolicy" type="xsd:boolean">
            <xs:annotation>
              <xs:documentation>Признак предоставления данных пациента только при наличии постоянного московского полиса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="syncAttach" type="xsd:boolean">
            <xs:annotation>
              <xs:documentation>Признак синхронизации прикреплений</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
        </xs:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xs:complexType name="getPatientInfo3Response">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:patientV3"/>
    </xs:sequence>
  </xs:complexType>
  <xsd:complexType name="patientNew">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="omsPolicy" type="tns:omsPolicy"/>
      <xs:element minOccurs="0" name="attachments">
        <xs:annotation>
          <xs:documentation>Информация о прикреплениях</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="4" minOccurs="0" name="attachment" type="tns:attachmentNew"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="moSelected" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Выбор МО осуществлен</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xsd:complexType>
  <xsd:complexType name="patientV3">
    <xs:sequence>
      <xs:element name="id" type="xsd:string"/>
      <xs:element minOccurs="0" name="birthDate" type="xsd:dateTime"/>
      <xs:element name="omsPolicy" type="tns:omsPolicyFull"/>
      <xs:element minOccurs="0" name="attachments">
        <xs:annotation>
          <xs:documentation>Информация о прикреплениях</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="attachment" type="tns:attachmentV3"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element maxOccurs="unbounded" name="moSelected">
        <xs:annotation>
          <xs:documentation>Выбор МО осуществлен</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="areaType" type="xsd:string"/>
            <xs:element name="value" type="xsd:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xsd:complexType>
  <xs:complexType name="getLpusForAttachment">
    <xs:sequence>
      <xs:element name="birthDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата рождения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="capitaFinancing" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак участия в подушевом финансировании</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="typeAttach" type="xs:int">
        <xs:annotation>
          <xs:documentation>Тип прикрепления.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="district" type="xs:string">
        <xs:annotation>
          <xs:documentation>Округ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="lpuName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование ЛПУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="groupId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД группы МУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="address">
        <xs:annotation>
          <xs:documentation>Адрес</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="street" type="xs:string">
              <xs:annotation>
                <xs:documentation>Улица</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="house" type="xs:string">
              <xs:annotation>
                <xs:documentation>Дом</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="building" type="xs:string">
              <xs:annotation>
                <xs:documentation>Корпус</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="construction" type="xs:string">
              <xs:annotation>
                <xs:documentation>Строение</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpusForAttachmentResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="lpu" type="tns:lpuForAttachment"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpus">
    <xs:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="id" type="xsd:long"/>
      <xsd:element minOccurs="0" name="name" type="xsd:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpusResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="lpu" type="tns:LpuWithAddressPointPgu"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService</con:endpoint></con:endpoints><con:operation id="0af81e95-8e34-4896-b36f-526fd4699cd3" isOneWay="false" action="urn://createAttachment" name="createAttachment" bindingOperationName="createAttachment" type="Request-Response" outputName="createAttachmentResponse" inputName="createAttachment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="702bcadf-7fc6-4313-909a-d9f2010b04c9" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://api.service.soap.emias.lanit.ru/v2/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <v2:createAttachment>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <placeOfBirth>?</placeOfBirth>\r
         <!--Optional:-->\r
         <citizenship>?</citizenship>\r
         <!--Optional:-->\r
         <phone>?</phone>\r
         <!--Optional:-->\r
         <email>?</email>\r
         <requestId>?</requestId>\r
         <lpuId>?</lpuId>\r
         <areaType>?</areaType>\r
         <!--Optional:-->\r
         <document>\r
            <!--Optional:-->\r
            <type>?</type>\r
            <!--Optional:-->\r
            <number>?</number>\r
            <!--Optional:-->\r
            <start>?</start>\r
            <!--Optional:-->\r
            <issuedBy>?</issuedBy>\r
         </document>\r
         <!--Optional:-->\r
         <representative>\r
            <!--Optional:-->\r
            <lastName>?</lastName>\r
            <!--Optional:-->\r
            <firstName>?</firstName>\r
            <!--Optional:-->\r
            <middleName>?</middleName>\r
            <!--Optional:-->\r
            <basis>?</basis>\r
            <!--Optional:-->\r
            <document>?</document>\r
         </representative>\r
         <!--Optional:-->\r
         <registrationDate>?</registrationDate>\r
         <!--Optional:-->\r
         <registrationAddress>\r
            <!--Optional:-->\r
            <house>?</house>\r
            <!--Optional:-->\r
            <building>?</building>\r
            <!--Optional:-->\r
            <construction>?</construction>\r
            <!--Optional:-->\r
            <flat>?</flat>\r
            <!--Optional:-->\r
            <street>?</street>\r
            <!--Optional:-->\r
            <addressText>?</addressText>\r
         </registrationAddress>\r
         <!--Optional:-->\r
         <actualAddress>\r
            <!--Optional:-->\r
            <house>?</house>\r
            <!--Optional:-->\r
            <building>?</building>\r
            <!--Optional:-->\r
            <construction>?</construction>\r
            <!--Optional:-->\r
            <flat>?</flat>\r
            <!--Optional:-->\r
            <street>?</street>\r
            <!--Optional:-->\r
            <addressText>?</addressText>\r
         </actualAddress>\r
         <externalSystemId>?</externalSystemId>\r
      </v2:createAttachment>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn://createAttachment"/></con:call></con:operation><con:operation id="6698704b-3d4a-49a9-b5b7-46a477fb3711" isOneWay="false" action="urn://getLpus" name="getLpus" bindingOperationName="getLpus" type="Request-Response" outputName="getLpusResponse" inputName="getLpus" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1b950b59-ca95-4607-a4cb-c733c68e48f3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://api.service.soap.emias.lanit.ru/v2/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <v2:getLpus>\r
         <!--Zero or more repetitions:-->\r
         <id>?</id>\r
         <!--Optional:-->\r
         <name>?</name>\r
      </v2:getLpus>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn://getLpus"/></con:call></con:operation><con:operation id="f5c80d74-0906-4631-a24a-ac5e463ab263" isOneWay="false" action="urn://getLpusForAttachment" name="getLpusForAttachment" bindingOperationName="getLpusForAttachment" type="Request-Response" outputName="getLpusForAttachmentResponse" inputName="getLpusForAttachment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="972d712c-6bae-4ccc-a71d-4a01dea214f2" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://api.service.soap.emias.lanit.ru/v2/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <v2:getLpusForAttachment>\r
         <birthDate>?</birthDate>\r
         <capitaFinancing>?</capitaFinancing>\r
         <typeAttach>?</typeAttach>\r
         <!--Optional:-->\r
         <district>?</district>\r
         <!--Optional:-->\r
         <lpuName>?</lpuName>\r
         <!--Optional:-->\r
         <groupId>?</groupId>\r
         <!--Optional:-->\r
         <address>\r
            <street>?</street>\r
            <!--Optional:-->\r
            <house>?</house>\r
            <!--Optional:-->\r
            <building>?</building>\r
            <!--Optional:-->\r
            <construction>?</construction>\r
         </address>\r
         <externalSystemId>?</externalSystemId>\r
      </v2:getLpusForAttachment>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn://getLpusForAttachment"/></con:call></con:operation><con:operation id="4c3e8e05-a599-4a4a-a8e0-9f3b9891625a" isOneWay="false" action="urn://getPatientInfo" name="getPatientInfo" bindingOperationName="getPatientInfo" type="Request-Response" outputName="getPatientInfoResponse" inputName="getPatientInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9428b157-156b-49b1-b542-9d53b44810a4" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://api.service.soap.emias.lanit.ru/v2/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <v2:getPatientInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <fio>\r
            <lastName>?</lastName>\r
            <firstName>?</firstName>\r
            <!--Optional:-->\r
            <middleName>?</middleName>\r
         </fio>\r
         <typeAttach>?</typeAttach>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </v2:getPatientInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn://getPatientInfo"/></con:call></con:operation><con:operation id="79785e9e-33aa-4ed9-a331-6dd9f9fe1a38" isOneWay="false" action="urn://getPatientInfo2" name="getPatientInfo2" bindingOperationName="getPatientInfo2" type="Request-Response" outputName="getPatientInfo2Response" inputName="getPatientInfo2" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7eb23412-14d8-4ada-986d-b5f77e8eb6b1" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://api.service.soap.emias.lanit.ru/v2/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <v2:getPatientInfo2>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <fio>\r
            <lastName>?</lastName>\r
            <firstName>?</firstName>\r
            <!--Optional:-->\r
            <middleName>?</middleName>\r
         </fio>\r
         <typeAttach>?</typeAttach>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </v2:getPatientInfo2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn://getPatientInfo2"/></con:call></con:operation><con:operation id="f9c139ad-f634-4a9e-83b9-6a166648b391" isOneWay="false" action="urn://getPatientInfo3" name="getPatientInfo3" bindingOperationName="getPatientInfo3" type="Request-Response" outputName="getPatientInfo3Response" inputName="getPatientInfo3" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="60070e74-7a30-470c-9232-4d2f652e67d7" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://api.service.soap.emias.lanit.ru/v2/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <v2:getPatientInfo3>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <fio>\r
            <lastName>?</lastName>\r
            <firstName>?</firstName>\r
            <!--Optional:-->\r
            <middleName>?</middleName>\r
         </fio>\r
         <!--1 or more repetitions:-->\r
         <typeAttach>?</typeAttach>\r
         <onlyMoscowPolicy>?</onlyMoscowPolicy>\r
         <!--Optional:-->\r
         <syncAttach>?</syncAttach>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </v2:getPatientInfo3>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn://getPatientInfo3"/><con:wsrmConfig version="1.2"/></con:call><con:call id="e31483bc-8770-4734-a39b-b74ac9527e5f" name="getPatientInfo3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-3a094e1a-44b0-4fa7-9f50-660124e5f3dc">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <ns2:getPatientInfo3 xmlns:ns2="http://api.service.soap.emias.lanit.ru/v2/" xmlns:ns3="http://api.service.soap.emias.lanit.ru/v33/" xmlns:ns4="http://api.service.soap.emias.lanit.ru/" xmlns:ns5="urn:emias:llo.lookup">\r
         <omsNumber>7796699729001463</omsNumber>\r
         <birthDate>2003-03-20T00:00:00</birthDate>\r
         <typeAttach>0</typeAttach>\r
         <typeAttach>1</typeAttach>\r
         <typeAttach>2</typeAttach>\r
         <onlyMoscowPolicy>false</onlyMoscowPolicy>\r
      </ns2:getPatientInfo3>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn://getPatientInfo3"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="c7d97013-0ee8-451e-85e1-1ee851b0b535" wsaVersion="NONE" name="СУПП" type="wsdl" bindingName="{http://impl.service.soap.emias.lanit.ru/}Pguv1sBinding" soapVersion="1_1" anonymous="optional" definition="http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService?wsdl"><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService?wsdl</con:url><con:content><![CDATA[<!--edited with XMLSpy v2011 rel. 2 (http://www.altova.com) by gomozov (lanit)-->
<wsdl:definitions name="PGUServicesInfoV2" targetNamespace="http://impl.service.soap.emias.lanit.ru/" xmlns:ns1="http://api.service.soap.emias.lanit.ru/" xmlns:ns2="urn:emias:llo.lookup" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://impl.service.soap.emias.lanit.ru/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://api.service.soap.emias.lanit.ru/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkfL9CkBjdVQzHLIl6HyYlWiZpdnb2p5oVnZMYLY5ML2CjZMBTjt6VLxr.IDIG1Sqg--"/>
      <import namespace="urn:emias:llo.lookup" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkfL9CkBjdVQzHLIl6HyYkf.dZFtblZdzCHfK.y1rIGiJlh4.kvxwlTi3K5KhctQQwTShXPUTFdDTQ--"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getAllLpusInfoResponse">
    <wsdl:part element="ns1:getAllLpusInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="checkAvailabilityResponse">
    <wsdl:part element="ns1:checkAvailabilityResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="cancelAppointment">
    <wsdl:part element="ns1:cancelAppointment" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="checkAvailability">
    <wsdl:part element="ns1:checkAvailability" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getReferralsInfo">
    <wsdl:part element="ns1:getReferralsInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="SoapException">
    <wsdl:part element="ns1:exception" name="SoapException"/>
  </wsdl:message>
  <wsdl:message name="getSpecialitiesInfoResponse">
    <wsdl:part element="ns1:getSpecialitiesInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAvailableResourceScheduleInfoResponse">
    <wsdl:part element="ns1:getAvailableResourceScheduleInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getLdpTypesInfoResponse">
    <wsdl:part element="ns1:getLdpTypesInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoResponse">
    <wsdl:part element="ns1:getDoctorsInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getLpusInfo">
    <wsdl:part element="ns1:getLpusInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getLpuTypesInfoResponse">
    <wsdl:part element="ns1:getLpuTypesInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getSpecialitiesInfo">
    <wsdl:part element="ns1:getSpecialitiesInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAppointmentReceptionsByPatient">
    <wsdl:part element="ns1:getAppointmentReceptionsByPatient" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getPatientInfoResponse">
    <wsdl:part element="ns1:getPatientInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getLpuTypesInfo">
    <wsdl:part element="ns1:getLpuTypesInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentResponse">
    <wsdl:part element="ns1:cancelAppointmentResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getLpusInfoResponse">
    <wsdl:part element="ns1:getLpusInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfo">
    <wsdl:part element="ns1:getDoctorsInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getReferralsInfoResponse">
    <wsdl:part element="ns1:getReferralsInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="verifyBuild">
    <wsdl:part element="ns1:verifyBuild" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getLdpTypesInfo">
    <wsdl:part element="ns1:getLdpTypesInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getPatientInfo">
    <wsdl:part element="ns1:getPatientInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createAppointmentResponse">
    <wsdl:part element="ns1:createAppointmentResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="verifyBuildResponse">
    <wsdl:part element="ns1:verifyBuildResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAvailableResourceScheduleInfo">
    <wsdl:part element="ns1:getAvailableResourceScheduleInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAppointmentReceptionsByPatientResponse">
    <wsdl:part element="ns1:getAppointmentReceptionsByPatientResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAllLpusInfo">
    <wsdl:part element="ns1:getAllLpusInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createAppointment">
    <wsdl:part element="ns1:createAppointment" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="digitalPrescription">
    <wsdl:part element="ns2:digitalPrescription" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="digitalPrescriptionResponseType">
    <wsdl:part element="ns2:digitalPrescriptionResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="lookupPrescription">
    <wsdl:part element="ns2:lookupPrescription" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="lookupPrescriptionResponse">
    <wsdl:part element="ns2:lookupPrescriptionResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getLpusForAttachment">
    <wsdl:part element="ns1:getLpusForAttachment" name="getLpusForAttachment"/>
  </wsdl:message>
  <wsdl:message name="getLpusForAttachmentResponse">
    <wsdl:part element="ns1:getLpusForAttachmentResponse" name="getLpusForAttachmentResponse"/>
  </wsdl:message>
  <wsdl:message name="createAttachment">
    <wsdl:part element="ns1:createAttachment" name="createAttachment"/>
  </wsdl:message>
  <wsdl:message name="createAttachmentResponse">
    <wsdl:part element="ns1:createAttachmentResponse" name="createAttachmentResponse"/>
  </wsdl:message>
  <wsdl:message name="updateAttachment">
    <wsdl:part element="ns1:updateAttachment" name="updateAttachment"/>
  </wsdl:message>
  <wsdl:message name="updateAttachmentResponse">
    <wsdl:part element="ns1:updateAttachmentResponse" name="updateAttachmentResponse"/>
  </wsdl:message>
  <wsdl:message name="getLpusList">
    <wsdl:part element="ns1:getLpusList" name="getLpusList"/>
  </wsdl:message>
  <wsdl:message name="getLpusListResponse">
    <wsdl:part element="ns1:getLpusListResponse" name="getLpusListResponse"/>
  </wsdl:message>
  <wsdl:message name="getLpuScheduleInfo">
    <wsdl:part element="ns1:getLpuScheduleInfo" name="getLpuScheduleInfo"/>
  </wsdl:message>
  <wsdl:message name="getLpuScheduleInfoResponse">
    <wsdl:part element="ns1:getLpuScheduleInfoResponse" name="getLpuScheduleInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="shiftAppointment">
    <wsdl:part element="ns1:shiftAppointment" name="shiftAppointment"/>
  </wsdl:message>
  <wsdl:message name="shiftAppointmentResponse">
    <wsdl:part element="ns1:shiftAppointmentResponse" name="shiftAppointmentResponse"/>
  </wsdl:message>
  <wsdl:portType name="Pguv1sPortType">
    <wsdl:operation name="createAppointment">
      <wsdl:input message="tns:createAppointment" name="createAppointment"/>
      <wsdl:output message="tns:createAppointmentResponse" name="createAppointmentResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getAvailableResourceScheduleInfo">
      <wsdl:input message="tns:getAvailableResourceScheduleInfo" name="getAvailableResourceScheduleInfo"/>
      <wsdl:output message="tns:getAvailableResourceScheduleInfoResponse" name="getAvailableResourceScheduleInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfo">
      <wsdl:input message="tns:getDoctorsInfo" name="getDoctorsInfo"/>
      <wsdl:output message="tns:getDoctorsInfoResponse" name="getDoctorsInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getSpecialitiesInfo">
      <wsdl:input message="tns:getSpecialitiesInfo" name="getSpecialitiesInfo"/>
      <wsdl:output message="tns:getSpecialitiesInfoResponse" name="getSpecialitiesInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getLpusForAttachment">
      <wsdl:input message="tns:getLpusForAttachment" name="getLpusForAttachment"/>
      <wsdl:output message="tns:getLpusForAttachmentResponse" name="getLpusForAttachmentResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="createAttachment">
      <wsdl:input message="tns:createAttachment" name="createAttachment"/>
      <wsdl:output message="tns:createAttachmentResponse" name="createAttachmentResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getLpusList">
      <wsdl:input message="tns:getLpusList" name="getLpusList"/>
      <wsdl:output message="tns:getLpusListResponse" name="getLpusListResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getLpuScheduleInfo">
      <wsdl:input message="tns:getLpuScheduleInfo" name="getLpuScheduleInfo"/>
      <wsdl:output message="tns:getLpuScheduleInfoResponse" name="getLpuScheduleInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="shiftAppointment">
      <wsdl:input message="tns:shiftAppointment" name="shiftAppointment"/>
      <wsdl:output message="tns:shiftAppointmentResponse" name="shiftAppointmentResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointment">
      <wsdl:input message="tns:cancelAppointment" name="cancelAppointment"/>
      <wsdl:output message="tns:cancelAppointmentResponse" name="cancelAppointmentResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllLpusInfo">
      <wsdl:input message="tns:getAllLpusInfo" name="getAllLpusInfo"/>
      <wsdl:output message="tns:getAllLpusInfoResponse" name="getAllLpusInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getAppointmentReceptionsByPatient">
      <wsdl:input message="tns:getAppointmentReceptionsByPatient" name="getAppointmentReceptionsByPatient"/>
      <wsdl:output message="tns:getAppointmentReceptionsByPatientResponse" name="getAppointmentReceptionsByPatientResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getLdpTypesInfo">
      <wsdl:input message="tns:getLdpTypesInfo" name="getLdpTypesInfo"/>
      <wsdl:output message="tns:getLdpTypesInfoResponse" name="getLdpTypesInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getLpusInfo">
      <wsdl:input message="tns:getLpusInfo" name="getLpusInfo"/>
      <wsdl:output message="tns:getLpusInfoResponse" name="getLpusInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getLpuTypesInfo">
      <wsdl:input message="tns:getLpuTypesInfo" name="getLpuTypesInfo"/>
      <wsdl:output message="tns:getLpuTypesInfoResponse" name="getLpuTypesInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getPatientInfo">
      <wsdl:input message="tns:getPatientInfo" name="getPatientInfo"/>
      <wsdl:output message="tns:getPatientInfoResponse" name="getPatientInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getReferralsInfo">
      <wsdl:input message="tns:getReferralsInfo" name="getReferralsInfo"/>
      <wsdl:output message="tns:getReferralsInfoResponse" name="getReferralsInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="digitalPrescription">
      <wsdl:input message="tns:digitalPrescription" name="digitalPrescription"/>
      <wsdl:output message="tns:digitalPrescriptionResponseType" name="digitalPrescriptionResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="lookupPrescription">
      <wsdl:input message="tns:lookupPrescription" name="lookupPrescription"/>
      <wsdl:output message="tns:lookupPrescriptionResponse" name="lookupPrescriptionResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="Pguv1sBinding" type="tns:Pguv1sPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="createAppointment">
      <soap:operation soapAction="urn:#createAppointment"/>
      <wsdl:input name="createAppointment">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAppointmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableResourceScheduleInfo">
      <soap:operation soapAction="urn:#getAvailableResourceScheduleInfo"/>
      <wsdl:input name="getAvailableResourceScheduleInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAvailableResourceScheduleInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfo">
      <soap:operation soapAction="urn:#getDoctorsInfo"/>
      <wsdl:input name="getDoctorsInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDoctorsInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSpecialitiesInfo">
      <soap:operation soapAction="urn:#getDoctorsInfo"/>
      <wsdl:input name="getSpecialitiesInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSpecialitiesInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpusForAttachment">
      <soap:operation soapAction="urn:#getLpusForAttachment"/>
      <wsdl:input name="getLpusForAttachment">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLpusForAttachmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAttachment">
      <soap:operation soapAction="urn:#createAttachment"/>
      <wsdl:input name="createAttachment">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAttachmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpusList">
      <soap:operation soapAction="urn:#getLpusList"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpuScheduleInfo">
      <soap:operation soapAction="urn:#getLpuScheduleInfo"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shiftAppointment">
      <soap:operation soapAction="urn:#shiftAppointment"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointment">
      <soap:operation soapAction="urn:#cancelAppointment"/>
      <wsdl:input name="cancelAppointment">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelAppointmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllLpusInfo">
      <soap:operation soapAction="urn:#getAllLpusInfo"/>
      <wsdl:input name="getAllLpusInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllLpusInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAppointmentReceptionsByPatient">
      <soap:operation soapAction="urn:#getAppointmentReceptionsByPatient"/>
      <wsdl:input name="getAppointmentReceptionsByPatient">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAppointmentReceptionsByPatientResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLdpTypesInfo">
      <soap:operation soapAction="urn:#getLdpTypesInfo"/>
      <wsdl:input name="getLdpTypesInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLdpTypesInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpusInfo">
      <soap:operation soapAction="urn:#getLpusInfo"/>
      <wsdl:input name="getLpusInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLpusInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpuTypesInfo">
      <soap:operation soapAction="urn:#getLpuTypesInfo"/>
      <wsdl:input name="getLpuTypesInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLpuTypesInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPatientInfo">
      <soap:operation soapAction="urn:#getPatientInfo"/>
      <wsdl:input name="getPatientInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPatientInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReferralsInfo">
      <soap:operation soapAction="urn:#getReferralsInfo"/>
      <wsdl:input name="getReferralsInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getReferralsInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="digitalPrescription">
      <soap:operation soapAction="urn:#digitalPrescription" style="document"/>
      <wsdl:input name="digitalPrescription">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="digitalPrescriptionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="lookupPrescription">
      <soap:operation soapAction="urn:#lookupPrescription"/>
      <wsdl:input name="lookupPrescription">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="lookupPrescriptionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PguV1sService">
    <wsdl:port binding="tns:Pguv1sBinding" name="Pguv1sPortType">
      <soap:address location="http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkfL9CkBjdVQzHLIl6HyYlWiZpdnb2p5oVnZMYLY5ML2CjZMBTjt6VLxr.IDIG1Sqg--</con:url><con:content><![CDATA[<!--edited with XMLSpy v2011 rel. 2 (http://www.altova.com) by gomozov (lanit)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://api.service.soap.emias.lanit.ru/" xmlns:ns1="http://api.service.soap.emias.lanit.ru/" xmlns:tns="http://api.service.soap.emias.lanit.ru/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--======================== Элементы =====================================-->
  <!--Отмена записи на прием-->
  <xs:element name="cancelAppointment" type="tns:cancelAppointment"/>
  <xs:element name="cancelAppointmentResponse" type="tns:cancelAppointmentResponse"/>
  <!--Создание записи на прием-->
  <xs:element name="createAppointment" type="tns:createAppointment"/>
  <xs:element name="createAppointmentResponse" type="tns:createAppointmentResponse"/>
  <!--Получение полного списка ЛПУ-->
  <xs:element name="getAllLpusInfo" type="tns:getAllLpusInfo"/>
  <xs:element name="getAllLpusInfoResponse" type="tns:getAllLpusInfoResponse"/>
  <!--Получение списка назначений для пациента-->
  <xs:element name="getAppointmentReceptionsByPatient" type="tns:getAppointmentReceptionsByPatient"/>
  <xs:element name="getAppointmentReceptionsByPatientResponse" type="tns:getAppointmentReceptionsByPatientResponse"/>
  <!--Получение расписания врача-->
  <xs:element name="getAvailableResourceScheduleInfo" type="tns:getAvailableResourceScheduleInfo"/>
  <xs:element name="getAvailableResourceScheduleInfoResponse" type="tns:getAvailableResourceScheduleInfoResponse"/>
  <!--Получение списка врачей-->
  <xs:element name="getDoctorsInfo" type="tns:getDoctorsInfo"/>
  <xs:element name="getDoctorsInfoResponse" type="tns:getDoctorsInfoResponse"/>
  <!--Получение видов ЛДП-->
  <xs:element name="getLdpTypesInfo" type="tns:getLdpTypesInfo"/>
  <xs:element name="getLdpTypesInfoResponse" type="tns:getLdpTypesInfoResponse"/>
  <!--Получение сведений о пациенте-->
  <xs:element name="getPatientInfo" type="tns:getPatientInfo"/>
  <xs:element name="getPatientInfoResponse" type="tns:getPatientInfoResponse"/>
  <!--Получение сведений об ЛПУ-->
  <xs:element name="getLpusInfo" type="tns:getLpusInfo"/>
  <xs:element name="getLpusInfoResponse" type="tns:getLpusInfoResponse"/>
  <!--Получение направлений для пациента-->
  <xs:element name="getReferralsInfo" type="tns:getReferralsInfo"/>
  <xs:element name="getReferralsInfoResponse" type="tns:getReferralsInfoResponse"/>
  <!--Получение списка специальностей-->
  <xs:element name="getSpecialitiesInfo" type="tns:getSpecialitiesInfo"/>
  <xs:element name="getSpecialitiesInfoResponse" type="tns:getSpecialitiesInfoResponse"/>
  <!--Получение видов ЛПУ-->
  <xs:element name="getLpuTypesInfo" type="tns:getLpuTypesInfo"/>
  <xs:element name="getLpuTypesInfoResponse" type="tns:getLpuTypesInfoResponse"/>
  <!--Возвращает ЛПУ рекомендованные для прикрепления-->
  <xs:element name="getLpusForAttachment" type="tns:getLpusForAttachment"/>
  <xs:element name="getLpusForAttachmentResponse" type="tns:getLpusForAttachmentResponse"/>
  <!--Создание заявления на прикрепление-->
  <xs:element name="createAttachment" type="tns:createAttachment"/>
  <xs:element name="createAttachmentResponse" type="tns:createAttachmentResponse"/>
  <!--Изменение заявления на прикрепление-->
  <xs:element name="updateAttachment" type="tns:updateAttachment"/>
  <xs:element name="updateAttachmentResponse" type="tns:updateAttachmentResponse"/>
  <!--Перенос записи на прием-->
  <xs:element name="shiftAppointment" type="tns:shiftAppointment"/>
  <xs:element name="shiftAppointmentResponse" type="tns:shiftAppointmentResponse"/>
  <!--Получение списка ЛПУ-->
  <xs:element name="getLpusList" type="tns:getLpusList"/>
  <xs:element name="getLpusListResponse" type="tns:getLpusListResponse"/>
  <!--Получение расписания ЛПУ-->
  <xs:element name="getLpuScheduleInfo" type="tns:getLpuScheduleInfo"/>
  <xs:element name="getLpuScheduleInfoResponse" type="tns:getLpuScheduleInfoResponse"/>
  <!--======================== Неиспользуемые элементы =====================================-->
  <!--Проверка доступности-->
  <xs:element name="checkAvailability" type="tns:checkAvailability"/>
  <xs:element name="checkAvailabilityResponse" type="tns:checkAvailabilityResponse"/>
  <!--Возвращает версию билда-->
  <xs:element name="verifyBuild" type="tns:verifyBuild"/>
  <xs:element name="verifyBuildResponse" type="tns:verifyBuildResponse"/>
  <!--======================== Ошибки =====================================-->
  <xs:element name="exception" nillable="true" type="xs:string"/>
  <!--======================== Типы данных =====================================-->
  <xs:complexType name="allLpu">
    <xs:complexContent>
      <xs:extension base="tns:lpu">
        <xs:sequence>
          <xs:element minOccurs="0" name="director" type="xs:string"/>
          <xs:element minOccurs="0" name="email" type="xs:string"/>
          <xs:element minOccurs="0" name="subordination" type="xs:string"/>
          <xs:element minOccurs="0" name="hasPharmacy" type="xs:string"/>
          <xs:element minOccurs="0" name="hasEmergencyAidStation" type="xs:string"/>
          <xs:element minOccurs="0" name="emergencyAidStation" type="ns1:emergencyAidStation"/>
          <xs:element minOccurs="0" name="hasPediatricDepartment" type="xs:string"/>
          <xs:element minOccurs="0" name="parentLpu" type="ns1:lpu"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="appointmentReception">
    <xs:sequence>
      <xs:element name="appointmentId" type="xs:string"/>
      <xs:element minOccurs="0" name="appointmentNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentReceptionPatient">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="number" type="xs:string"/>
      <xs:element name="typeLpu" type="xs:string"/>
      <xs:element name="nameLpu" type="xs:string"/>
      <xs:element name="lpuAddress" type="xs:string"/>
      <xs:element name="dateBegin" type="xs:dateTime"/>
      <xs:element name="dateEnd" type="xs:dateTime"/>
      <xs:element name="type" type="xs:string"/>
      <xs:element name="availableResourceId" type="xs:string"/>
      <xs:element name="complexResourceId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД КР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="appointmentReceptionToDoctor" type="tns:appointmentReceptionToDoctor"/>
      <xs:element minOccurs="0" name="appointmentReceptionToLdp" type="tns:lpdRegistration"/>
      <xs:element minOccurs="0" name="status" type="xs:string"/>
      <xs:element minOccurs="0" name="enableCanceleration" type="xs:boolean"/>
      <xs:element name="enableShift" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Разрешен ли перенос</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="referral" type="tns:referralInfo">
        <xs:annotation>
          <xs:documentation>Направление</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentReceptionToDoctor">
    <xs:sequence>
      <xs:element minOccurs="0" name="doctorSpecialityCode" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorSpeciality" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorFio" type="xs:string"/>
      <xs:element minOccurs="0" name="viewReceptionCode" type="xs:string"/>
      <xs:element minOccurs="0" name="room" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="attachment">
    <xs:sequence>
      <xs:element name="applicationId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД заявления</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lpu">
        <xs:annotation>
          <xs:documentation>ЛПУ</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="xs:string"/>
            <xs:element name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="phone" type="xs:string"/>
            <xs:element minOccurs="0" name="groupId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="districtNumber" type="xs:int">
        <xs:annotation>
          <xs:documentation>Номер участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="districtType" type="xs:string">
        <xs:annotation>
          <xs:documentation>Тип участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="doctorFio" type="xs:string">
        <xs:annotation>
          <xs:documentation>ФИО врача</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="startDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="endDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="status" type="xs:string">
        <xs:annotation>
          <xs:documentation>Статус</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="moSelected" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Выбор МО осуществлен</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="rejectReason" type="xs:string">
        <xs:annotation>
          <xs:documentation>Причина отказа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="rejectDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата отказа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="closeReason" type="xs:string">
        <xs:annotation>
          <xs:documentation>Причина закрытия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="closeDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата закрытия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="createDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата сооздания</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Внешняя система</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="availableResourceScheduleV2">
    <xs:sequence>
      <xs:element name="availableResourceId" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorSpeciality" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorSpecialityCode" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorFio" type="xs:string"/>
      <xs:element minOccurs="0" name="availableResourceName" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="schedules" type="tns:scheduleOfDay"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="availableResourceV2">
    <xs:sequence>
      <xs:element minOccurs="0" name="id" type="xs:string"/>
      <xs:element minOccurs="0" name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="specialityName" type="xs:string"/>
      <xs:element minOccurs="0" name="firstName" type="xs:string"/>
      <xs:element minOccurs="0" name="secondName" type="xs:string"/>
      <xs:element minOccurs="0" name="lastName" type="xs:string"/>
      <xs:element minOccurs="0" name="receptionTypes" type="tns:receptionTypes"/>
      <xs:element minOccurs="0" name="ldpTypeCode" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuRoomsInfo" type="tns:lpuRoomsInfo"/>
      <xs:element minOccurs="0" name="replacement" type="xs:string"/>
      <xs:element minOccurs="0" name="district" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="baseDto">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="build">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element minOccurs="0" name="serverTime" type="xs:string"/>
          <xs:element minOccurs="0" name="clientTime" type="xs:string"/>
          <xs:element minOccurs="0" name="buildTag" type="xs:string"/>
          <xs:element minOccurs="0" name="svnRevisionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="buildTime" type="xs:string"/>
          <xs:element minOccurs="0" name="scmPath" type="xs:string"/>
          <xs:element minOccurs="0" name="version" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="cancelAppointment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
      <xs:element minOccurs="0" name="appointmentId" type="xs:string"/>
      <xs:element minOccurs="0" name="identificationData" type="tns:identificationData"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cardIdentification">
    <xs:sequence>
      <xs:element name="cardType" type="tns:cardType"/>
      <xs:element name="uecCode" type="xs:string"/>
      <xs:element name="uecInstance" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="cardType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UEC"/>
      <xs:enumeration value="MSC"/>
      <xs:enumeration value="TEMP"/>
      <xs:enumeration value="OTHER"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="checkAvailability">
    <xs:sequence>
      <xs:element minOccurs="0" name="requestDate" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="checkAvailabilityResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointment">
    <xs:sequence>
      <xs:element minOccurs="0" name="lpuId" type="xs:string"/>
      <xs:element minOccurs="0" name="referralId" type="xs:string"/>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="availableResourceId" type="xs:string"/>
      <xs:element minOccurs="0" name="complexResourceId" type="xs:string"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
      <xs:element minOccurs="0" name="receptionDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="startTime" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="endTime" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="receptionTypeCodeOrLdpTypeCode" type="xs:string"/>
      <xs:element minOccurs="0" name="identificationData" type="tns:identificationData"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:appointmentReception"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="district">
    <xs:sequence>
      <xs:element name="id" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="number" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="type" type="ns1:idNameType">
        <xs:annotation>
          <xs:documentation>Тип участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="attachmentsCount" type="xs:int">
        <xs:annotation>
          <xs:documentation>Количество прикрепленных</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="medicalEmployee" type="ns1:medicalEmployee"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="emergencyAidStation">
    <xs:sequence>
      <xs:element minOccurs="0" name="teamCount" type="xs:integer"/>
      <xs:element minOccurs="0" name="phones">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="lpuPhone" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAllLpusInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="lpuTypeCode" type="xs:string"/>
      <xs:element minOccurs="0" name="returnBranches" type="xs:boolean"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAllLpusInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:allLpu"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAppointmentReceptionsByPatient">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAppointmentReceptionsByPatientResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:appointmentReceptionPatient"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableResourceScheduleInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="lpuId" type="xs:string"/>
      <xs:element minOccurs="0" name="availableResourceId" type="xs:string"/>
      <xs:element minOccurs="0" name="complexResourceId" type="xs:string"/>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="referralId" type="xs:string"/>
      <xs:element minOccurs="0" name="appointmentId" type="xs:string"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableResourceScheduleInfoResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:availableResourceScheduleV2"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="specialityId" type="xs:string"/>
      <xs:element minOccurs="0" name="referralId" type="xs:string"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="availableResource" type="tns:availableResourceV2"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLdpTypesInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element minOccurs="0" name="birthDate" type="xs:dateTime"/>
      <xs:element name="lpuId" type="xs:string"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLdpTypesInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ldpType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpuScheduleInfo">
    <xs:sequence>
      <xs:element name="lpuId" type="xs:string"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpuScheduleInfoResponse">
    <xs:sequence>
      <xs:element name="return" type="ns1:lpuScheduleInfo"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpusForAttachment">
    <xs:sequence>
      <xs:element name="birthDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата рождения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="capitaFinancing" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак участия в подушевом финансировании</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="district" type="xs:string">
        <xs:annotation>
          <xs:documentation>Округ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="lpuName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование ЛПУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="groupId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД группы МУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="address">
        <xs:annotation>
          <xs:documentation>Адрес</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="street" type="xs:string">
              <xs:annotation>
                <xs:documentation>Улица</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="house" type="xs:string">
              <xs:annotation>
                <xs:documentation>Дом</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="building" type="xs:string">
              <xs:annotation>
                <xs:documentation>Корпус</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="construction" type="xs:string">
              <xs:annotation>
                <xs:documentation>Строение</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpusForAttachmentResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="lpu" type="ns1:lpuForAttachment"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpusInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="lpuTypeCode" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuName" type="xs:string"/>
      <xs:element minOccurs="0" name="baseLpuAddress" type="xs:string"/>
      <xs:element minOccurs="0" name="serviceLpuAddress" type="tns:serviceLpuAddress"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpusInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:singleLpu"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpuTypesInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpuTypesInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:lpuType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPatientInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="fio">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="lastName" type="xs:string"/>
            <xs:element name="firstName" type="xs:string"/>
            <xs:element minOccurs="0" name="middleName" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPatientInfoResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:patient"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getReferralsInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getReferralsInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:referral"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecialitiesInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecialitiesInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:speciality"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="idNameType">
    <xs:annotation>
      <xs:documentation>ИД и наименование</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="identificationData">
    <xs:sequence>
      <xs:element name="cardOwner" type="tns:cardIdentification"/>
      <xs:element name="identificationDevice" type="tns:identificationDevice"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="identificationDevice">
    <xs:sequence>
      <xs:element name="uecDeviceInstance" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ldpType">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="procedure" type="xs:boolean"/>
      <xs:element minOccurs="0" name="investigation" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpdRegistration">
    <xs:sequence>
      <xs:element minOccurs="0" name="availableResource" type="xs:string"/>
      <xs:element minOccurs="0" name="room" type="xs:string"/>
      <xs:element minOccurs="0" name="viewLdp" type="xs:string"/>
      <xs:element minOccurs="0" name="viewLdpCode" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpu">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string"/>
          <xs:element minOccurs="0" name="lpuNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="lpuType" type="tns:lpuType"/>
          <xs:element minOccurs="0" name="lpuName" type="xs:string"/>
          <xs:element minOccurs="0" name="lpuAddress" type="xs:string"/>
          <xs:element minOccurs="0" name="lpuWorkSchedule" type="tns:lpuWorkSchedule"/>
          <xs:element minOccurs="0" name="phones" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="lpuRoomsInfo">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="lpuRoomView" nillable="true" type="tns:lpuRoomView"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpuRoomView">
    <xs:sequence>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="complexResourceId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuShortName" type="xs:string"/>
      <xs:element minOccurs="0" name="roomNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="availabilityDate" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpuScheduleInfo">
    <xs:sequence>
      <xs:element name="lpuId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД ЛПУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование полное</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" name="addressInfo">
        <xs:annotation>
          <xs:documentation>Адреса МУ</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="xs:string">
              <xs:annotation>
                <xs:documentation>ИД</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="address" type="xs:string">
              <xs:annotation>
                <xs:documentation>Строка адреса</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="isMain" type="xs:boolean">
              <xs:annotation>
                <xs:documentation>Признак основного адреса</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="weekDaySchedule" type="ns1:weekDaySchedule">
        <xs:annotation>
          <xs:documentation>Рабочее расписание</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="availableResource">
        <xs:annotation>
          <xs:documentation>Расписание доступных ресурсов заведения</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="xs:string">
              <xs:annotation>
                <xs:documentation>ИД ДР</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="name" type="xs:string">
              <xs:annotation>
                <xs:documentation>Наименование</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="medicalEmployee">
              <xs:annotation>
                <xs:documentation>Медработник</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:complexContent>
                  <xs:extension base="ns1:medicalEmployee">
                    <xs:sequence>
                      <xs:element maxOccurs="unbounded" minOccurs="0" name="district">
                        <xs:annotation>
                          <xs:documentation>Участок обслуживания</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                          <xs:sequence>
                            <xs:element name="id" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>ИД участка</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element name="number" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>Номер участка</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element name="type" type="ns1:idNameType">
                              <xs:annotation>
                                <xs:documentation>Тип участка</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element name="lpuId" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>ИД ЛПУ</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element name="lpuShortName" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>Сокращенное наименование ЛПУ</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element name="isMainResource" type="xs:boolean">
                              <xs:annotation>
                                <xs:documentation>ДР является основным ресурсом на участке</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                          </xs:sequence>
                        </xs:complexType>
                      </xs:element>
                    </xs:sequence>
                  </xs:extension>
                </xs:complexContent>
              </xs:complexType>
            </xs:element>
            <xs:element name="lpuDepartment">
              <xs:annotation>
                <xs:documentation>Подразделение ЛПУ к которому относится ДР</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="id" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>ИД подразделения</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element name="name" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>Наименование полное</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element name="lpuId" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>ИД ЛПУ</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element name="lpuShortName" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>Краткое наименование ЛПУ</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="schedule">
              <xs:annotation>
                <xs:documentation>Расписание ДР</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="date" type="xs:date">
                    <xs:annotation>
                      <xs:documentation>Дата</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element name="weekDay" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>День недели</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element name="receptionInfo" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>Информация о приеме</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element maxOccurs="unbounded" name="cabinet">
                    <xs:annotation>
                      <xs:documentation>Кабинет</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="number" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>Номер кабинета</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element name="addressId" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>ИД адреса</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="receptionTime">
                          <xs:annotation>
                            <xs:documentation>Время приема</xs:documentation>
                          </xs:annotation>
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="start" type="xs:time">
                                <xs:annotation>
                                  <xs:documentation>Время начала приема</xs:documentation>
                                </xs:annotation>
                              </xs:element>
                              <xs:element name="end" type="xs:time">
                                <xs:annotation>
                                  <xs:documentation>Время окончания приема</xs:documentation>
                                </xs:annotation>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpuServiceDistrict">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element minOccurs="0" name="districtNumber" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="address" nillable="true" type="tns:serviceLpuAddress"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="lpuListItem">
    <xs:sequence>
      <xs:element name="lpuId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД ЛПУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="groupId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД группы</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Полное наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="address" type="xs:string">
        <xs:annotation>
          <xs:documentation>Адрес</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="ageGroup" type="ns1:idNameType">
        <xs:annotation>
          <xs:documentation>Обслуживаемый возрастной контингент</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="district" type="ns1:idNameType">
        <xs:annotation>
          <xs:documentation>Округ по ОМК ТЕ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isPatientAttached" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак что пациент прикреплен</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isCurrent" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Является текущей</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isHeadOfGroup" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Является главной в группе</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpuType">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="ambulatory" type="xs:string"/>
      <xs:element minOccurs="0" name="patientSign" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpuWorkSchedule">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="weekDaySchedule" nillable="true" type="tns:weekDaySchedule"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="omsPolicy">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element minOccurs="0" name="birthDate" type="xs:dateTime"/>
      <xs:element name="status" type="xs:string"/>
      <xs:element minOccurs="0" name="smoName" type="xs:string"/>
      <xs:element minOccurs="0" name="issueDate" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="patient">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="omsPolicy" type="tns:omsPolicy"/>
      <xs:element minOccurs="0" name="attachments">
        <xs:annotation>
          <xs:documentation>Информация о прикреплениях</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="4" minOccurs="0" name="attachment" type="ns1:attachment"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="patientAddress">
    <xs:annotation>
      <xs:documentation>Адрес пациента</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="house" type="xs:string">
        <xs:annotation>
          <xs:documentation>Дом</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="building" type="xs:string">
        <xs:annotation>
          <xs:documentation>Корпус</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="construction" type="xs:string">
        <xs:annotation>
          <xs:documentation>Строение</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="flat" type="xs:string">
        <xs:annotation>
          <xs:documentation>Квартира</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="street" type="xs:string">
        <xs:annotation>
          <xs:documentation>Улица</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="addressText">
        <xs:annotation>
          <xs:documentation>Полная строка адреса</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="250"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="receptionTypes">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="receptionView" nillable="true" type="tns:receptionView"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="receptionView">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element minOccurs="0" name="primarySign" type="xs:string"/>
      <xs:element minOccurs="0" name="homeSign" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="referral">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="comment" type="xs:string"/>
      <xs:element name="startDate" type="xs:dateTime"/>
      <xs:element name="expirationDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="type" type="tns:referralType"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:string"/>
      <xs:element name="lpuType" type="xs:string"/>
      <xs:element name="lpuName" type="xs:string"/>
      <xs:element minOccurs="0" name="freeResourceId" type="xs:string"/>
      <xs:element minOccurs="0" name="toDoctor" type="tns:toDoctor"/>
      <xs:element minOccurs="0" name="toLdp" type="tns:toLdp"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="referralInfo">
    <xs:sequence>
      <xs:element name="referralId" type="xs:string"/>
      <xs:element name="dateStart" type="xs:dateTime"/>
      <xs:element name="dateExpiration" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="availableResourceId" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="referralType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="TO_DOCTOR"/>
      <xs:enumeration value="TO_PROCEDURE"/>
      <xs:enumeration value="TO_INVESTIGATION"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="registrationData">
    <xs:sequence>
      <xs:element minOccurs="0" name="doctorCode" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorName" type="xs:string"/>
      <xs:element minOccurs="0" name="organizationCode" type="xs:string"/>
      <xs:element minOccurs="0" name="organizationStamp" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="replacementResource">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element minOccurs="0" name="reasonReplacement" type="xs:string"/>
          <xs:element minOccurs="0" name="id" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="specialityName" type="xs:string"/>
          <xs:element minOccurs="0" name="firstName" type="xs:string"/>
          <xs:element minOccurs="0" name="lastName" type="xs:string"/>
          <xs:element minOccurs="0" name="secondName" type="xs:string"/>
          <xs:element minOccurs="0" name="receptionTypes" type="tns:receptionTypes"/>
          <xs:element minOccurs="0" name="room" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="resourceSchedule">
    <xs:sequence>
      <xs:element minOccurs="0" name="complexResourceId" type="xs:string"/>
      <xs:element minOccurs="0" name="cabinetName" type="xs:string"/>
      <xs:element name="workTime" type="tns:workTime"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="timePeriods" type="tns:timePeriod"/>
      <xs:element minOccurs="0" name="liveQueueTime" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="scheduleOfDay">
    <xs:sequence>
      <xs:element name="date" type="xs:dateTime"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="resourceSchedule" type="tns:resourceSchedule"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="serviceDistricts">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="district" nillable="true" type="tns:lpuServiceDistrict"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="serviceLpuAddress">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element minOccurs="0" name="area" type="xs:string"/>
          <xs:element minOccurs="0" name="district" type="xs:string"/>
          <xs:element minOccurs="0" name="street" type="xs:string"/>
          <xs:element minOccurs="0" name="house" type="xs:string"/>
          <xs:element minOccurs="0" name="building" type="xs:string"/>
          <xs:element minOccurs="0" name="construction" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="singleLpu">
    <xs:complexContent>
      <xs:extension base="tns:lpu">
        <xs:sequence>
          <xs:element minOccurs="0" name="serviceDistricts" type="tns:serviceDistricts"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="speciality">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="male" type="xs:boolean"/>
      <xs:element minOccurs="0" name="female" type="xs:boolean"/>
      <xs:element minOccurs="0" name="only_by_refferal" type="xs:boolean"/>
      <xs:element minOccurs="0" name="primary" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="timePeriod">
    <xs:sequence>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:element name="allowedAppointment" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="toDoctor">
    <xs:sequence>
      <xs:element minOccurs="0" name="specialityId" type="xs:string"/>
      <xs:element minOccurs="0" name="specialityName" type="xs:string"/>
      <xs:element name="doctorFio" type="xs:string"/>
      <xs:element name="receptionTypeCode" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="toLdp">
    <xs:sequence>
      <xs:element name="ldpTypeId" type="xs:string"/>
      <xs:element name="ldpTypeName" type="xs:string"/>
      <xs:element minOccurs="0" name="ldpCabinetName" type="xs:string"/>
      <xs:element minOccurs="0" name="countProcedures" type="xs:string"/>
      <xs:element minOccurs="0" name="countAssignmentProcedures" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifyBuild">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="verifyBuildResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:build"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="weekDaySchedule">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element minOccurs="0" name="weekDay" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="workItem" nillable="true" type="tns:workItem"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="workItem">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element minOccurs="0" name="from" type="xs:string"/>
          <xs:element minOccurs="0" name="to" type="xs:string"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="createAttachment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="placeOfBirth" type="xs:string"/>
      <xs:element minOccurs="0" name="citizenship" type="xs:string"/>
      <xs:element minOccurs="0" name="phone" type="xs:string"/>
      <xs:element minOccurs="0" name="email" type="xs:string"/>
      <xs:element name="requestId" type="xs:string"/>
      <xs:element name="lpuId" type="xs:string"/>
      <xs:element minOccurs="0" name="document" type="ns1:document"/>
      <xs:element minOccurs="0" name="representative" type="ns1:representative"/>
      <xs:element minOccurs="0" name="registrationDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="registrationAddress" type="ns1:patientAddress"/>
      <xs:element minOccurs="0" name="actualAddress" type="ns1:patientAddress"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAttachmentResponse">
    <xs:sequence>
      <xs:element name="applicationId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="updateAttachment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер полиса ОМС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string">
        <xs:annotation>
          <xs:documentation>Серия полиса ОМС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="birthDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата рождения пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="applicationId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Идентификатор заявления на прикрепление ЕМИАС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lpuId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Идентификатор ЛПУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="externalSystemId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД внешней системы</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="updateAttachmentResponse">
    <xs:sequence>
      <xs:element name="applicationId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД заявления на прикрепление</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shiftAppointment">
    <xs:sequence>
      <xs:element minOccurs="0" name="referralId" type="xs:string"/>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="availableResourceId" type="xs:string"/>
      <xs:element minOccurs="0" name="complexResourceId" type="xs:string"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
      <xs:element minOccurs="0" name="receptionDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="startTime" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="endTime" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="receptionTypeCodeOrLdpTypeCode" type="xs:string"/>
      <xs:element name="appointmentId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shiftAppointmentResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:appointmentReception"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpusList">
    <xs:sequence>
      <xs:element minOccurs="0" name="lpuId" type="xs:string"/>
      <xs:element minOccurs="0" name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="district" type="xs:string"/>
      <xs:element minOccurs="0" name="ageGroup">
        <xs:annotation>
          <xs:documentation>Обслуживаемый возраст</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="minAge">
              <xs:annotation>
                <xs:documentation>Минимальный возраст</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:int">
                  <xs:minInclusive value="0"/>
                  <xs:maxInclusive value="150"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element name="maxAge">
              <xs:annotation>
                <xs:documentation>Максимальный возраст</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:int">
                  <xs:minInclusive value="0"/>
                  <xs:maxInclusive value="150"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="patientInfo">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="omsNumber" type="xs:string"/>
            <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
            <xs:element name="birthDate" type="xs:dateTime"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpusListResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="lpu" type="ns1:lpuListItem"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="document">
    <xs:sequence>
      <xs:element minOccurs="0" name="type" type="xs:int">
        <xs:annotation>
          <xs:documentation>Тип</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="number" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала действия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="issuedBy" type="xs:string">
        <xs:annotation>
          <xs:documentation>Кем выдан</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpuForAttachment">
    <xs:sequence>
      <xs:element name="lpuId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД ЛПУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="groupId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД группы</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Полное наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="address" type="xs:string">
        <xs:annotation>
          <xs:documentation>Адрес</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="phone" type="xs:string">
        <xs:annotation>
          <xs:documentation>Телефон</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="attachmentsCount" type="xs:int">
        <xs:annotation>
          <xs:documentation>Количество прикрепленных</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="recommended" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Рекомендуется для прикрепления</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="district" type="ns1:district">
        <xs:annotation>
          <xs:documentation>Участки</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="medicalEmployee">
    <xs:sequence>
      <xs:element name="jobId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД МР в подразделении</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lastName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Фамилия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="firstName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="middleName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Отчество</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="position">
        <xs:annotation>
          <xs:documentation>Должность</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="xs:string">
              <xs:annotation>
                <xs:documentation>ИД должности</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="shortName" type="xs:string">
              <xs:annotation>
                <xs:documentation>Краткое наименование</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="representative">
    <xs:sequence>
      <xs:element minOccurs="0" name="lastName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Фамилия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="firstName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="middleName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Отчество</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="basis" type="xs:string">
        <xs:annotation>
          <xs:documentation>Основания</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="document" type="xs:string">
        <xs:annotation>
          <xs:documentation>Документ</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="workTime">
    <xs:sequence>
      <xs:element minOccurs="0" name="startTime" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="endTime" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="type" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkfL9CkBjdVQzHLIl6HyYkf.dZFtblZdzCHfK.y1rIGiJlh4.kvxwlTi3K5KhctQQwTShXPUTFdDTQ--</con:url><con:content><![CDATA[<xs:schema targetNamespace="urn:emias:llo.lookup" version="1.0" xmlns:tns="urn:emias:llo.lookup" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:simpleType name="benefitBudget">
    <xs:restriction base="xs:string">
      <xs:enumeration value="federal"/>
      <xs:enumeration value="regional"/>
      <xs:enumeration value="municipal"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="benefitInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="budget" type="tns:benefitBudget"/>
      <xs:element name="code" type="xs:int"/>
      <xs:element minOccurs="0" name="discount" type="tns:discountValue"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="digitalPrescription" type="tns:digitalPrescription"/>
  <xs:complexType name="digitalPrescription">
    <xs:sequence>
      <xs:element minOccurs="0" name="request" type="tns:digitalPrescriptionRequestType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="digitalPrescriptionRequestType">
    <xs:sequence>
      <xs:element minOccurs="0" name="ident" type="xs:string"/>
      <xs:element minOccurs="0" name="mode" type="tns:queryMode"/>
      <xs:element minOccurs="0" name="oms" type="tns:oms"/>
      <xs:element minOccurs="0" name="snils" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="digitalPrescriptionResponse" type="tns:digitalPrescriptionResponse"/>
  <xs:complexType name="digitalPrescriptionResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="result" type="tns:digitalPrescriptionResponseType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="digitalPrescriptionResponseType">
    <xs:sequence>
      <xs:element minOccurs="0" name="oms" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="prescriptionList" nillable="true" type="tns:prescriptionDigital"/>
      <xs:element minOccurs="0" name="result" type="tns:generalResponse"/>
      <xs:element minOccurs="0" name="snils" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="discountValue">
    <xs:restriction base="xs:string">
      <xs:enumeration value="_50"/>
      <xs:enumeration value="_100"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="drugsCodesRef">
    <xs:sequence>
      <xs:element minOccurs="0" name="code" type="xs:string"/>
      <xs:element minOccurs="0" name="reflist" type="xs:long"/>
      <xs:element minOccurs="0" name="version" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="drugsInfo">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="drugsCodes" nillable="true" type="tns:drugsCodesRef"/>
      <xs:element minOccurs="0" name="latTitle" type="xs:string"/>
      <xs:element minOccurs="0" name="mnnToOtn" type="tns:mnnToOtn"/>
      <xs:element minOccurs="0" name="rusTitle" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="drugstore">
    <xs:sequence>
      <xs:element minOccurs="0" name="address" type="xs:string"/>
      <xs:element minOccurs="0" name="ident" type="xs:string"/>
      <xs:element minOccurs="0" name="name" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="dtd">
    <xs:sequence>
      <xs:element minOccurs="0" name="contentUnit" type="xs:long"/>
      <xs:element minOccurs="0" name="contentUnitName" type="xs:string"/>
      <xs:element minOccurs="0" name="contentValue" type="xs:string"/>
      <xs:element minOccurs="0" name="form" type="xs:long"/>
      <xs:element minOccurs="0" name="formUnit" type="xs:long"/>
      <xs:element minOccurs="0" name="formUnitName" type="xs:string"/>
      <xs:element name="formUnitValue" type="xs:double"/>
      <xs:element minOccurs="0" name="latForm" type="xs:string"/>
      <xs:element minOccurs="0" name="latPack" type="xs:string"/>
      <xs:element minOccurs="0" name="pack" type="xs:long"/>
      <xs:element minOccurs="0" name="rusForm" type="xs:string"/>
      <xs:element minOccurs="0" name="rusPack" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="generalResponse">
    <xs:sequence>
      <xs:element name="resultCode" type="xs:int"/>
      <xs:element minOccurs="0" name="resultDescription" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="lookupPrescription" type="tns:lookupPrescription"/>
  <xs:complexType name="lookupPrescription">
    <xs:sequence>
      <xs:element minOccurs="0" name="request" type="tns:prescriptionLookupRequestType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="lookupPrescriptionResponse" type="tns:lookupPrescriptionResponse"/>
  <xs:complexType name="lookupPrescriptionResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="result" type="tns:prescriptionLookupResponseType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="mnnToOtn">
    <xs:sequence>
      <xs:element minOccurs="0" name="mnn" type="xs:long"/>
      <xs:element minOccurs="0" name="otn" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="oms">
    <xs:sequence>
      <xs:element minOccurs="0" name="fullNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="serie" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="prescriptionDigital">
    <xs:sequence>
      <xs:element minOccurs="0" name="amount" type="xs:string"/>
      <xs:element minOccurs="0" name="benefitCode" type="xs:int"/>
      <xs:element minOccurs="0" name="ctime" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="dosage" type="xs:string"/>
      <xs:element minOccurs="0" name="drugstore" type="tns:drugstore"/>
      <xs:element minOccurs="0" name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="rp" type="xs:string"/>
      <xs:element minOccurs="0" name="signature" type="xs:string"/>
      <xs:element minOccurs="0" name="status" type="tns:prescriptionStatus"/>
      <xs:element minOccurs="0" name="type" type="tns:prescriptionType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="prescriptionLookup" type="tns:prescriptionLookup"/>
  <xs:complexType name="prescriptionLookup">
    <xs:sequence>
      <xs:element minOccurs="0" name="request" type="tns:prescriptionLookupRequestType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="prescriptionLookupRequestType">
    <xs:sequence>
      <xs:element minOccurs="0" name="ident" type="xs:string"/>
      <xs:element minOccurs="0" name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="signature" type="xs:string"/>
      <xs:element minOccurs="0" name="type" type="tns:prescriptionType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="prescriptionLookupResponse" type="tns:prescriptionLookupResponse"/>
  <xs:complexType name="prescriptionLookupResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="result" type="tns:prescriptionLookupResponseType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="prescriptionLookupResponseType">
    <xs:sequence>
      <xs:element minOccurs="0" name="benefit" type="tns:benefitInfo"/>
      <xs:element minOccurs="0" name="digSign" type="xs:anyType"/>
      <xs:element minOccurs="0" name="dtd" type="tns:dtd"/>
      <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="medicine" type="tns:drugsInfo"/>
      <xs:element minOccurs="0" name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="pharmacy" type="tns:drugstore"/>
      <xs:element minOccurs="0" name="quantity" type="xs:int"/>
      <xs:element minOccurs="0" name="registrationData" type="tns:registrationData"/>
      <xs:element minOccurs="0" name="registrationDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="result" type="tns:generalResponse"/>
      <xs:element minOccurs="0" name="status" type="tns:prescriptionStatus"/>
      <xs:element minOccurs="0" name="type" type="tns:prescriptionType"/>
      <xs:element minOccurs="0" name="usage" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="prescriptionStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="active"/>
      <xs:enumeration value="inprogress"/>
      <xs:enumeration value="completed"/>
      <xs:enumeration value="canceled"/>
      <xs:enumeration value="expired"/>
      <xs:enumeration value="invalid"/>
      <xs:enumeration value="draft"/>
      <xs:enumeration value="delete"/>
      <xs:enumeration value="activePharmacy"/>
      <xs:enumeration value="previouslySigned"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="prescriptionType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="benefit"/>
      <xs:enumeration value="commercial"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="queryMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="all"/>
      <xs:enumeration value="active"/>
      <xs:enumeration value="our"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="registrationData">
    <xs:sequence>
      <xs:element minOccurs="0" name="doctorCode" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorName" type="xs:string"/>
      <xs:element minOccurs="0" name="organizationCode" type="xs:string"/>
      <xs:element minOccurs="0" name="organizationStamp" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint></con:endpoints><con:operation id="896d7abf-d865-408d-86a3-52dda05d0614" isOneWay="false" action="urn:#cancelAppointment" name="cancelAppointment" bindingOperationName="cancelAppointment" type="Request-Response" outputName="cancelAppointmentResponse" inputName="cancelAppointment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="63227b93-b3bf-495a-9b31-ba527035fe43" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:cancelAppointment>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
         <!--Optional:-->\r
         <appointmentId>?</appointmentId>\r
         <!--Optional:-->\r
         <identificationData>\r
            <cardOwner>\r
               <cardType>?</cardType>\r
               <uecCode>?</uecCode>\r
               <uecInstance>?</uecInstance>\r
            </cardOwner>\r
            <identificationDevice>\r
               <uecDeviceInstance>?</uecDeviceInstance>\r
            </identificationDevice>\r
         </identificationData>\r
      </api:cancelAppointment>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#cancelAppointment"/></con:call></con:operation><con:operation id="b36a243b-209e-42ce-9a65-b45281c16918" isOneWay="false" action="urn:#createAppointment" name="createAppointment" bindingOperationName="createAppointment" type="Request-Response" outputName="createAppointmentResponse" inputName="createAppointment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bfecdc98-7d79-4ad1-8b14-5b954b2eed73" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:createAppointment>\r
         <!--Optional:-->\r
         <lpuId>?</lpuId>\r
         <!--Optional:-->\r
         <referralId>?</referralId>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <availableResourceId>?</availableResourceId>\r
         <!--Optional:-->\r
         <complexResourceId>?</complexResourceId>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
         <!--Optional:-->\r
         <receptionDate>?</receptionDate>\r
         <!--Optional:-->\r
         <startTime>?</startTime>\r
         <!--Optional:-->\r
         <endTime>?</endTime>\r
         <!--Optional:-->\r
         <receptionTypeCodeOrLdpTypeCode>?</receptionTypeCodeOrLdpTypeCode>\r
         <!--Optional:-->\r
         <identificationData>\r
            <cardOwner>\r
               <cardType>?</cardType>\r
               <uecCode>?</uecCode>\r
               <uecInstance>?</uecInstance>\r
            </cardOwner>\r
            <identificationDevice>\r
               <uecDeviceInstance>?</uecDeviceInstance>\r
            </identificationDevice>\r
         </identificationData>\r
      </api:createAppointment>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#createAppointment"/></con:call></con:operation><con:operation id="5f948bad-5a4f-4976-b526-f42082f3926a" isOneWay="false" action="urn:#createAttachment" name="createAttachment" bindingOperationName="createAttachment" type="Request-Response" outputName="createAttachmentResponse" inputName="createAttachment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="616a83b7-ee81-42f5-ad91-80a36f8d4963" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:createAttachment>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <placeOfBirth>?</placeOfBirth>\r
         <!--Optional:-->\r
         <citizenship>?</citizenship>\r
         <!--Optional:-->\r
         <phone>?</phone>\r
         <!--Optional:-->\r
         <email>?</email>\r
         <requestId>?</requestId>\r
         <lpuId>?</lpuId>\r
         <!--Optional:-->\r
         <document>\r
            <!--Optional:-->\r
            <type>?</type>\r
            <!--Optional:-->\r
            <number>?</number>\r
            <!--Optional:-->\r
            <start>?</start>\r
            <!--Optional:-->\r
            <issuedBy>?</issuedBy>\r
         </document>\r
         <!--Optional:-->\r
         <representative>\r
            <!--Optional:-->\r
            <lastName>?</lastName>\r
            <!--Optional:-->\r
            <firstName>?</firstName>\r
            <!--Optional:-->\r
            <middleName>?</middleName>\r
            <!--Optional:-->\r
            <basis>?</basis>\r
            <!--Optional:-->\r
            <document>?</document>\r
         </representative>\r
         <!--Optional:-->\r
         <registrationDate>?</registrationDate>\r
         <!--Optional:-->\r
         <registrationAddress>\r
            <!--Optional:-->\r
            <house>?</house>\r
            <!--Optional:-->\r
            <building>?</building>\r
            <!--Optional:-->\r
            <construction>?</construction>\r
            <!--Optional:-->\r
            <flat>?</flat>\r
            <!--Optional:-->\r
            <street>?</street>\r
            <!--Optional:-->\r
            <addressText>?</addressText>\r
         </registrationAddress>\r
         <!--Optional:-->\r
         <actualAddress>\r
            <!--Optional:-->\r
            <house>?</house>\r
            <!--Optional:-->\r
            <building>?</building>\r
            <!--Optional:-->\r
            <construction>?</construction>\r
            <!--Optional:-->\r
            <flat>?</flat>\r
            <!--Optional:-->\r
            <street>?</street>\r
            <!--Optional:-->\r
            <addressText>?</addressText>\r
         </actualAddress>\r
         <externalSystemId>?</externalSystemId>\r
      </api:createAttachment>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#createAttachment"/></con:call></con:operation><con:operation id="43d7a617-2d2b-4ba1-90a4-1caa1e1bbc2c" isOneWay="false" action="urn:#digitalPrescription" name="digitalPrescription" bindingOperationName="digitalPrescription" type="Request-Response" outputName="digitalPrescriptionResponse" inputName="digitalPrescription" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3e2f8351-7e4e-4671-97f1-a05b933e4927" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:emias:llo.lookup">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:digitalPrescription>\r
         <!--Optional:-->\r
         <request>\r
            <!--Optional:-->\r
            <ident>?</ident>\r
            <!--Optional:-->\r
            <mode>?</mode>\r
            <!--Optional:-->\r
            <oms>\r
               <!--Optional:-->\r
               <fullNumber>?</fullNumber>\r
               <!--Optional:-->\r
               <number>?</number>\r
               <!--Optional:-->\r
               <serie>?</serie>\r
            </oms>\r
            <!--Optional:-->\r
            <snils>?</snils>\r
         </request>\r
      </urn:digitalPrescription>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#digitalPrescription"/></con:call></con:operation><con:operation id="daa47930-05ff-46b1-a540-6e38848a237f" isOneWay="false" action="urn:#getAllLpusInfo" name="getAllLpusInfo" bindingOperationName="getAllLpusInfo" type="Request-Response" outputName="getAllLpusInfoResponse" inputName="getAllLpusInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="854166c5-fc54-4013-be6f-0c242683b8c5" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getAllLpusInfo>\r
         <!--Optional:-->\r
         <lpuTypeCode>?</lpuTypeCode>\r
         <!--Optional:-->\r
         <returnBranches>?</returnBranches>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getAllLpusInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getAllLpusInfo"/></con:call></con:operation><con:operation id="0b42bad0-e55d-462d-b32c-7905224242b5" isOneWay="false" action="urn:#getAppointmentReceptionsByPatient" name="getAppointmentReceptionsByPatient" bindingOperationName="getAppointmentReceptionsByPatient" type="Request-Response" outputName="getAppointmentReceptionsByPatientResponse" inputName="getAppointmentReceptionsByPatient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="78c3a7f4-3a6a-4de4-9677-09f3c2909930" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getAppointmentReceptionsByPatient>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getAppointmentReceptionsByPatient>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getAppointmentReceptionsByPatient"/></con:call></con:operation><con:operation id="a23e6bb5-ed31-4ac9-af8f-97c728779eca" isOneWay="false" action="urn:#getAvailableResourceScheduleInfo" name="getAvailableResourceScheduleInfo" bindingOperationName="getAvailableResourceScheduleInfo" type="Request-Response" outputName="getAvailableResourceScheduleInfoResponse" inputName="getAvailableResourceScheduleInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7e821d3f-4e26-4485-a021-72b75a611019" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getAvailableResourceScheduleInfo>\r
         <!--Optional:-->\r
         <lpuId>?</lpuId>\r
         <!--Optional:-->\r
         <availableResourceId>?</availableResourceId>\r
         <!--Optional:-->\r
         <complexResourceId>?</complexResourceId>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <referralId>?</referralId>\r
         <!--Optional:-->\r
         <appointmentId>?</appointmentId>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getAvailableResourceScheduleInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getAvailableResourceScheduleInfo"/></con:call></con:operation><con:operation id="fae4541b-5145-492e-b334-2d42dc4aeadc" isOneWay="false" action="urn:#getDoctorsInfo" name="getDoctorsInfo" bindingOperationName="getDoctorsInfo" type="Request-Response" outputName="getDoctorsInfoResponse" inputName="getDoctorsInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bf888c8b-ecc2-4636-8924-2d6d479cf3b1" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getDoctorsInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <specialityId>?</specialityId>\r
         <!--Optional:-->\r
         <referralId>?</referralId>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getDoctorsInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getDoctorsInfo"/></con:call></con:operation><con:operation id="831596dc-0ce4-4af9-8ad6-a7608aced97e" isOneWay="false" action="urn:#getLdpTypesInfo" name="getLdpTypesInfo" bindingOperationName="getLdpTypesInfo" type="Request-Response" outputName="getLdpTypesInfoResponse" inputName="getLdpTypesInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="54162d4e-a78b-4784-b4be-2b70a82960d6" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getLdpTypesInfo>\r
         <!--Optional:-->\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <!--Optional:-->\r
         <birthDate>?</birthDate>\r
         <lpuId>?</lpuId>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getLdpTypesInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getLdpTypesInfo"/></con:call></con:operation><con:operation id="19f4f4bc-d38c-407e-9cdc-9d2893076e8e" isOneWay="false" action="urn:#getLpuScheduleInfo" name="getLpuScheduleInfo" bindingOperationName="getLpuScheduleInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="51cf9246-2708-49fa-b92e-b9207e3e431f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getLpuScheduleInfo>\r
         <lpuId>?</lpuId>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getLpuScheduleInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getLpuScheduleInfo"/></con:call></con:operation><con:operation id="51031b23-9fb2-4174-b343-f014bcc5a859" isOneWay="false" action="urn:#getLpusForAttachment" name="getLpusForAttachment" bindingOperationName="getLpusForAttachment" type="Request-Response" outputName="getLpusForAttachmentResponse" inputName="getLpusForAttachment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="24417db8-dd98-4a3b-8b2c-5df6419ac369" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getLpusForAttachment>\r
         <birthDate>?</birthDate>\r
         <capitaFinancing>?</capitaFinancing>\r
         <!--Optional:-->\r
         <district>?</district>\r
         <!--Optional:-->\r
         <lpuName>?</lpuName>\r
         <!--Optional:-->\r
         <groupId>?</groupId>\r
         <!--Optional:-->\r
         <address>\r
            <street>?</street>\r
            <!--Optional:-->\r
            <house>?</house>\r
            <!--Optional:-->\r
            <building>?</building>\r
            <!--Optional:-->\r
            <construction>?</construction>\r
         </address>\r
         <externalSystemId>?</externalSystemId>\r
      </api:getLpusForAttachment>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getLpusForAttachment"/></con:call></con:operation><con:operation id="2c247d77-cc0e-4f8b-9373-384c5d4b227f" isOneWay="false" action="urn:#getLpusInfo" name="getLpusInfo" bindingOperationName="getLpusInfo" type="Request-Response" outputName="getLpusInfoResponse" inputName="getLpusInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="40b7b549-14fe-42e1-994c-46eb2c09cdbb" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getLpusInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <lpuTypeCode>?</lpuTypeCode>\r
         <!--Optional:-->\r
         <lpuName>?</lpuName>\r
         <!--Optional:-->\r
         <baseLpuAddress>?</baseLpuAddress>\r
         <!--Optional:-->\r
         <serviceLpuAddress>\r
            <!--Optional:-->\r
            <area>?</area>\r
            <!--Optional:-->\r
            <district>?</district>\r
            <!--Optional:-->\r
            <street>?</street>\r
            <!--Optional:-->\r
            <house>?</house>\r
            <!--Optional:-->\r
            <building>?</building>\r
            <!--Optional:-->\r
            <construction>?</construction>\r
         </serviceLpuAddress>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getLpusInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getLpusInfo"/></con:call></con:operation><con:operation id="e1918077-a0fc-489a-bd4a-578cd23a8256" isOneWay="false" action="urn:#getLpusList" name="getLpusList" bindingOperationName="getLpusList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="af1a7cc8-ba96-4689-b238-45e5f6823d93" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getLpusList>\r
         <!--Optional:-->\r
         <lpuId>?</lpuId>\r
         <!--Optional:-->\r
         <name>?</name>\r
         <!--Optional:-->\r
         <district>?</district>\r
         <!--Optional:-->\r
         <ageGroup>\r
            <minAge>?</minAge>\r
            <maxAge>?</maxAge>\r
         </ageGroup>\r
         <!--Optional:-->\r
         <patientInfo>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
         </patientInfo>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getLpusList>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getLpusList"/></con:call></con:operation><con:operation id="28013aaa-e32b-4a14-892e-dcb52cfb39ab" isOneWay="false" action="urn:#getLpuTypesInfo" name="getLpuTypesInfo" bindingOperationName="getLpuTypesInfo" type="Request-Response" outputName="getLpuTypesInfoResponse" inputName="getLpuTypesInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5df95e80-6fa4-4d35-b26c-632fe5e99ab9" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getLpuTypesInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getLpuTypesInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getLpuTypesInfo"/></con:call></con:operation><con:operation id="027bfcc1-9f34-49d0-afd9-29f0c0e266b7" isOneWay="false" action="urn:#getPatientInfo" name="getPatientInfo" bindingOperationName="getPatientInfo" type="Request-Response" outputName="getPatientInfoResponse" inputName="getPatientInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="cea47896-dff2-40ef-bce4-6609a01158eb" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getPatientInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <fio>\r
            <lastName>?</lastName>\r
            <firstName>?</firstName>\r
            <!--Optional:-->\r
            <middleName>?</middleName>\r
         </fio>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getPatientInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getPatientInfo"/></con:call></con:operation><con:operation id="82b4a9d1-70f8-4fba-a5cd-12c9833258e2" isOneWay="false" action="urn:#getReferralsInfo" name="getReferralsInfo" bindingOperationName="getReferralsInfo" type="Request-Response" outputName="getReferralsInfoResponse" inputName="getReferralsInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ce385a6a-2ae2-4827-a94e-b6da5b4e2e23" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getReferralsInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getReferralsInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getReferralsInfo"/></con:call></con:operation><con:operation id="790fbd64-6b0b-4869-a08a-702c7aba3f87" isOneWay="false" action="urn:#getDoctorsInfo" name="getSpecialitiesInfo" bindingOperationName="getSpecialitiesInfo" type="Request-Response" outputName="getSpecialitiesInfoResponse" inputName="getSpecialitiesInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="95bf1190-baa7-4419-ae13-55c8fed82d30" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getSpecialitiesInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getSpecialitiesInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getDoctorsInfo"/></con:call></con:operation><con:operation id="fd6844a6-8016-49ae-b737-e94ba1b616e7" isOneWay="false" action="urn:#lookupPrescription" name="lookupPrescription" bindingOperationName="lookupPrescription" type="Request-Response" outputName="lookupPrescriptionResponse" inputName="lookupPrescription" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e442794c-848c-4f85-88b6-8562f448be52" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:emias:llo.lookup">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:lookupPrescription>\r
         <!--Optional:-->\r
         <request>\r
            <!--Optional:-->\r
            <ident>?</ident>\r
            <!--Optional:-->\r
            <number>?</number>\r
            <!--Optional:-->\r
            <signature>?</signature>\r
            <!--Optional:-->\r
            <type>?</type>\r
         </request>\r
      </urn:lookupPrescription>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#lookupPrescription"/></con:call></con:operation><con:operation id="fe4a461a-fb40-4995-80a8-123724bd13a6" isOneWay="false" action="urn:#shiftAppointment" name="shiftAppointment" bindingOperationName="shiftAppointment" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fe9c4535-0f6e-4058-ac9b-ce55b966e48d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:shiftAppointment>\r
         <!--Optional:-->\r
         <referralId>?</referralId>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <availableResourceId>?</availableResourceId>\r
         <!--Optional:-->\r
         <complexResourceId>?</complexResourceId>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
         <!--Optional:-->\r
         <receptionDate>?</receptionDate>\r
         <!--Optional:-->\r
         <startTime>?</startTime>\r
         <!--Optional:-->\r
         <endTime>?</endTime>\r
         <!--Optional:-->\r
         <receptionTypeCodeOrLdpTypeCode>?</receptionTypeCodeOrLdpTypeCode>\r
         <appointmentId>?</appointmentId>\r
      </api:shiftAppointment>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#shiftAppointment"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="489df225-fd9a-46db-9458-cfb4b46c560f" wsaVersion="NONE" name="Таблетница" type="wsdl" bindingName="{http://emias.mos.ru/ln/pillbox/v1/}pillboxServiceBinding" soapVersion="1_2" anonymous="optional" definition="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?wsdl"><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="pillboxService" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ns1="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:nsf="http://emias.mos.ru/system/v1/faults/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://emias.mos.ru/ln/pillbox/v1/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema>
      <xs:import namespace="http://emias.mos.ru/system/v1/faults/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvldqdFB7uVdOh6GuN.w7RXfKrhb_EwQ3M.F845tgMfxNWgobmR09dtAPRbfQCpl8-"/>
      <xs:import namespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvgcacFFL.StO04mqR4w7MS7K3w77el12U41g45dcMaCalLLdoG6VPBu0FEjFOtBeo3qsjcxHsiEaAo0GxuqIEtqhPUISi"/>
      <xs:import namespace="http://emias.mos.ru/ln/pillbox/v1/types/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZS04jWb8VPdS_scHnAfwGOZjKt7IukHypfw"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="endMedicationOutput">
    <wsdl:part element="ns1:EndMedicationResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteScheduleOutput">
    <wsdl:part element="ns1:DeleteScheduleResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDrugInfoOutput">
    <wsdl:part element="ns1:GetDrugInfoResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchTradeNameInput">
    <wsdl:part element="ns1:SearchTradeNameRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getScheduleOutput">
    <wsdl:part element="ns1:GetScheduleResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateMedicationOutput">
    <wsdl:part element="ns1:UpdateMedicationResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchTradeNameOutput">
    <wsdl:part element="ns1:SearchTradeNameResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteScheduleInput">
    <wsdl:part element="ns1:DeleteScheduleRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setReactionOutput">
    <wsdl:part element="ns1:SetReactionResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateMedicationInstructionInput">
    <wsdl:part element="ns1:UpdateMedicationInstructionRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMedicationInput">
    <wsdl:part element="ns1:DeleteMedicationRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateMedicationInstructionOutput">
    <wsdl:part element="ns1:UpdateMedicationInstructionResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fault">
    <wsdl:documentation>Ошибка</wsdl:documentation>
    <wsdl:part element="nsf:fault" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getHistoryAdhocOutput">
    <wsdl:part element="ns1:GetHistoryAdhocResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setTakingCourseInput">
    <wsdl:part element="ns1:SetTakingCourseRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getScheduleProjectOutput">
    <wsdl:part element="ns1:GetScheduleProjectResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setTakingCourseOutput">
    <wsdl:part element="ns1:SetTakingCourseResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDayScheduleOutput">
    <wsdl:part element="ns1:GetDayScheduleResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getHistoryAdhocInput">
    <wsdl:part element="ns1:GetHistoryAdhocRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMedicationInput">
    <wsdl:part element="ns1:GetMedicationRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMedicationOutput">
    <wsdl:part element="ns1:GetMedicationResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setScheduleOutput">
    <wsdl:part element="ns1:SetScheduleResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setTakingAdhocInput">
    <wsdl:part element="ns1:SetTakingAdhocRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMedicationOutput">
    <wsdl:part element="ns1:DeleteMedicationResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchDrugInput">
    <wsdl:part element="ns1:SearchDrugRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegimeInput">
    <wsdl:part element="ns1:GetRegimeRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPatientPillboxListOutput">
    <wsdl:part element="ns1:GetPatientPillboxListResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setScheduleInput">
    <wsdl:part element="ns1:SetScheduleRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setReactionInput">
    <wsdl:part element="ns1:SetReactionRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="Security">
    <wsdl:documentation>Контекст пользователя</wsdl:documentation>
    <wsdl:part element="wsse:Security" name="Security"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateMedicationInput">
    <wsdl:part element="ns1:UpdateMedicationRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setRegimeOutput">
    <wsdl:part element="ns1:SetRegimeResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getHistoryReactionOutput">
    <wsdl:part element="ns1:GetHistoryReactionResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRegimeOutput">
    <wsdl:part element="ns1:GetRegimeResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="endMedicationInput">
    <wsdl:part element="ns1:EndMedicationRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getScheduleInput">
    <wsdl:part element="ns1:GetScheduleRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setRegimeInput">
    <wsdl:part element="ns1:SetRegimeRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getHistoryReactionInput">
    <wsdl:part element="ns1:GetHistoryReactionRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPatientPillboxListInput">
    <wsdl:part element="ns1:GetPatientPillboxListRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDayScheduleInput">
    <wsdl:part element="ns1:GetDayScheduleRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setTakingAdhocOutput">
    <wsdl:part element="ns1:SetTakingAdhocResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getScheduleProjectInput">
    <wsdl:part element="ns1:GetScheduleProjectRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchDrugOutput">
    <wsdl:part element="ns1:SearchDrugResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDrugInfoInput">
    <wsdl:part element="ns1:GetDrugInfoRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="pillboxServicePortType">
    <wsdl:operation name="getPatientPillboxList">
      <wsdl:input message="tns:getPatientPillboxListInput"></wsdl:input>
      <wsdl:output message="tns:getPatientPillboxListOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMedication">
      <wsdl:input message="tns:getMedicationInput"></wsdl:input>
      <wsdl:output message="tns:getMedicationOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateMedication">
      <wsdl:input message="tns:updateMedicationInput"></wsdl:input>
      <wsdl:output message="tns:updateMedicationOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteMedication">
      <wsdl:input message="tns:deleteMedicationInput"></wsdl:input>
      <wsdl:output message="tns:deleteMedicationOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="endMedication">
      <wsdl:input message="tns:endMedicationInput"></wsdl:input>
      <wsdl:output message="tns:endMedicationOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteSchedule">
      <wsdl:input message="tns:deleteScheduleInput"></wsdl:input>
      <wsdl:output message="tns:deleteScheduleOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setReaction">
      <wsdl:input message="tns:setReactionInput"></wsdl:input>
      <wsdl:output message="tns:setReactionOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchDrug">
      <wsdl:input message="tns:searchDrugInput"></wsdl:input>
      <wsdl:output message="tns:searchDrugOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getScheduleProject">
      <wsdl:input message="tns:getScheduleProjectInput"></wsdl:input>
      <wsdl:output message="tns:getScheduleProjectOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSchedule">
      <wsdl:input message="tns:setScheduleInput"></wsdl:input>
      <wsdl:output message="tns:setScheduleOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDaySchedule">
      <wsdl:input message="tns:getDayScheduleInput"></wsdl:input>
      <wsdl:output message="tns:getDayScheduleOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setTakingCourse">
      <wsdl:input message="tns:setTakingCourseInput"></wsdl:input>
      <wsdl:output message="tns:setTakingCourseOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchTradeName">
      <wsdl:input message="tns:searchTradeNameInput"></wsdl:input>
      <wsdl:output message="tns:searchTradeNameOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setTakingAdhoc">
      <wsdl:input message="tns:setTakingAdhocInput"></wsdl:input>
      <wsdl:output message="tns:setTakingAdhocOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSchedule">
      <wsdl:input message="tns:getScheduleInput"></wsdl:input>
      <wsdl:output message="tns:getScheduleOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegime">
      <wsdl:input message="tns:getRegimeInput"></wsdl:input>
      <wsdl:output message="tns:getRegimeOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setRegime">
      <wsdl:input message="tns:setRegimeInput"></wsdl:input>
      <wsdl:output message="tns:setRegimeOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getHistoryReaction">
      <wsdl:input message="tns:getHistoryReactionInput"></wsdl:input>
      <wsdl:output message="tns:getHistoryReactionOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getHistoryAdhoc">
      <wsdl:input message="tns:getHistoryAdhocInput"></wsdl:input>
      <wsdl:output message="tns:getHistoryAdhocOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateMedicationInstruction">
      <wsdl:input message="tns:updateMedicationInstructionInput"></wsdl:input>
      <wsdl:output message="tns:updateMedicationInstructionOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDrugInfo">
      <wsdl:input message="tns:getDrugInfoInput"></wsdl:input>
      <wsdl:output message="tns:getDrugInfoOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="pillboxServiceBinding" type="tns:pillboxServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getPatientPillboxList">
      <soap:operation soapAction="getPatientPillboxList" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:Security" part="Security" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMedication">
      <soap:operation soapAction="getMedication" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:Security" part="Security" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateMedication">
      <soap:operation soapAction="updateMedication" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:Security" part="Security" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteMedication">
      <soap:operation soapAction="deleteMedication" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:Security" part="Security" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="endMedication">
      <soap:operation soapAction="endMedication" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:Security" part="Security" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteSchedule">
      <soap:operation soapAction="deleteSchedule" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:Security" part="Security" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setReaction">
      <soap:operation soapAction="setReaction" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:Security" part="Security" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchDrug">
      <soap:operation soapAction="searchDrug" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:Security" part="Security" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getScheduleProject">
      <soap:operation soapAction="getScheduleProject" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:Security" part="Security" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSchedule">
      <soap:operation soapAction="setSchedule" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:Security" part="Security" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDaySchedule">
      <soap:operation soapAction="getDaySchedule" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:Security" part="Security" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setTakingCourse">
      <soap:operation soapAction="setTakingCourse" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:Security" part="Security" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchTradeName">
      <soap:operation soapAction="searchTradeName" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:Security" part="Security" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setTakingAdhoc">
      <soap:operation soapAction="setTakingAdhoc" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:Security" part="Security" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSchedule">
      <soap:operation soapAction="getSchedule" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:Security" part="Security" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRegime">
      <soap:operation soapAction="getRegime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:Security" part="Security" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setRegime">
      <soap:operation soapAction="setRegime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:Security" part="Security" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getHistoryReaction">
      <soap:operation soapAction="getHistoryReaction" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:Security" part="Security" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getHistoryAdhoc">
      <soap:operation soapAction="getHistoryAdhoc" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:Security" part="Security" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateMedicationInstruction">
      <soap:operation soapAction="updateMedicationInstruction" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:Security" part="Security" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDrugInfo">
      <soap:operation soapAction="getDrugInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:Security" part="Security" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="pillboxService">
    <wsdl:port binding="tns:pillboxServiceBinding" name="pillboxServicePort">
      <soap:address location="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService"/>
    </wsdl:port>
    <wsp:PolicyReference URI="#authPolicy"/>
  </wsdl:service>
  <wsp:Policy wsu:Id="authPolicy">
    <sp:SupportingTokens xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702">
      <wsp:Policy>
        <sp:UsernameToken sp:IncludeToken="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient">
          <wsp:Policy>
            <sp:NoPassword/>
          </wsp:Policy>
        </sp:UsernameToken>
      </wsp:Policy>
    </sp:SupportingTokens>
  </wsp:Policy>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvldqdFB7uVdOh6GuN.w7RXfKrhb_EwQ3M.F845tgMfxNWgobmR09dtAPRbfQCpl8-</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/faults/" version="1.0" xmlns="http://emias.mos.ru/system/v1/faults/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvldqdFB7uVdOh6GuN.w7RXfKrhb_E3x_dhYYljJTnZe1hjllMTwx..g--"/>
  <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvldqdFB7uVdOh6GuN.w7RXfKrhb_E0h_c5mgkptQaYzfoIbZlt7UsTbO8bAgOisA5QFWMxw--"/>
  <!--faults-->
  <xs:element name="fault" type="BaseFault">
    <xs:annotation>
      <xs:documentation>Базовый тип ошибки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SecurityFault">
    <xs:annotation>
      <xs:documentation>Ошибка безопасности</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element ref="uctx:userContext"/>
          <xs:choice>
            <xs:element name="unauthorizedRequestSecurityException" type="UnauthorizedRequestSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="otherSecurityException" type="OtherSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:sequence>
        <xs:attribute fixed="SECURITY" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BusinessFault">
    <xs:annotation>
      <xs:documentation>Бизнес ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Коллекция Сообщений об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hasErrors" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак наличия ошибок в списке сообщений</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="BUSINESS" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UnexpectedFault">
    <xs:annotation>
      <xs:documentation>Непредвиденная ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="version" type="xs:string">
            <xs:annotation>
              <xs:documentation>Версия продукта-сервиса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="stackTrace">
            <xs:annotation>
              <xs:documentation>Стек вызова (последние 10  записей)</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="10" name="stackTraceRecord">
                  <xs:annotation>
                    <xs:documentation>Запись StackTrace</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="declaringClass" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование класса, содержащего метод</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="methodName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование метода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="fileName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование файла</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="lineNumber" type="xs:int">
                        <xs:annotation>
                          <xs:documentation>Номер строки кода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="UNEXPECTED" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="BaseFault">
    <xs:annotation>
      <xs:documentation>Описание базового типа описания ошибки</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--security exceptions-->
  <xs:complexType name="UnauthorizedRequestSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="requiredRights">
        <xs:annotation>
          <xs:documentation>Перечень идентификаторов недостающих Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Идентификатор Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="UNAUTHORIZED_REQUEST_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="OtherSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="message" type="Message">
        <xs:annotation>
          <xs:documentation>Сообщение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="OTHER_SECURITY_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="SecurityExceptionTypes">
    <xs:annotation>
      <xs:documentation>Типы исключений безопасности</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNAUTHORIZED_REQUEST_EXCEPTION"/>
      <xs:enumeration value="OTHER_SECURITY_EXCEPTION"/>
    </xs:restriction>
  </xs:simpleType>
  <!--components-->
  <xs:simpleType name="FaultTypes">
    <xs:annotation>
      <xs:documentation>Тип ошибки</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="SECURITY">
        <xs:annotation>
          <xs:documentation>Непредвиденная ошибка приложения</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BUSINESS">
        <xs:annotation>
          <xs:documentation>Бизнес ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UNEXPECTED">
        <xs:annotation>
          <xs:documentation>Ошибка безопасности</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvldqdFB7uVdOh6GuN.w7RXfKrhb_E0h_c5mgkptQaYzfoIbZlt7UsTbO8bAgOisA5QFWMxw--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/userContext/" version="1.0" xmlns="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvldqdFB7uVdOh6Gud7Q_AFum03faZw_CIndQcg0ujrHiPo3OE76o-"/>
  <xs:element name="userContext" type="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="systemName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Шифр системы-потребителя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя пользователя (логин)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRoleId" type="ID">
        <xs:annotation>
          <xs:documentation>Код Роли</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isUserRoleSystemWide" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак "Общесистемная Роль"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRights">
        <xs:annotation>
          <xs:documentation>Коллекция Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Код Полномочия</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="jobExecutionId" type="ID"/>
      <xs:element minOccurs="0" name="hostIp" type="xs:string">
        <xs:annotation>
          <xs:documentation>IP адрес хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hostName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="options" type="Options">
        <xs:annotation>
          <xs:documentation>Набор именованных значений</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvldqdFB7uVdOh6Gud7Q_AFum03faZw_CIndQcg0ujrHiPo3OE76o-</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.2" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvldqdFB7uVdOh6GuN.w7RXfKrhb_E3x_dhYYljJTnZe1hjllMTwx..g--"/>
  <xs:element name="mail" type="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalOrganizationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalOrganizationName" type="xs:string">
    <xs:annotation>
      <xs:documentation>Наименование медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинского учреждения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityName" type="xs:string">
    <xs:annotation>
      <xs:documentation>Наименование филиала медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="compositionId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор Композиции Think!EHR ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="simiDocumentId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор Документа СИМИ ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--abstract types-->
  <xs:complexType abstract="true" name="Base">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания
компонентов сущностей,
владельцеми которых является
текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор
сущности/записи
на уровне всего ЕМИАС</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="true" name="EntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания сущностей,
владельцем которых является
текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base">
        <xs:attribute name="archived" type="xs:boolean" use="required">
          <xs:annotation>
            <xs:documentation>Признак "Архивная сущность"</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания
компонентов сущностей,
владельцами которых являются
другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignEntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания сущностей,
владельцами которых являются
другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="EntityBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания типов,
реализующих справочники ЕМИАС.НСИ.2</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignEntityBase">
        <xs:sequence>
          <xs:element name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование элемента справочника</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiWithCodeBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания типов,
реализующих справочники ЕМИАС.НСИ.2, в которых имеется бизнес-код</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="NsiBase">
        <xs:attribute name="code" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Бизнес-код</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="SIMIDocumentBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания cведений о документе СИМИ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="simiDocumentId"/>
      <xs:element minOccurs="0" ref="compositionId"/>
    </xs:sequence>
  </xs:complexType>
  <!--async operation status-->
  <xs:element name="operationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор операции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OperationExecutionStatus">
    <xs:annotation>
      <xs:documentation>Статус выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="isCompleted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак окончания выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="completenessProgress" type="OperationCompletenessBase">
        <xs:annotation>
          <xs:documentation>Сведения о текущем статусе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hasSucceded" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак успешности выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
        <xs:annotation>
          <xs:documentation>Коллекция сообщений, порожденных в ходе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор операции</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="false" name="OperationCompletenessPercentage">
    <xs:annotation>
      <xs:documentation>Описание текущего статуса выполнения операции в процентах (0%-100%)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OperationCompletenessBase">
        <xs:sequence>
          <xs:element name="completenessStatus">
            <xs:annotation>
              <xs:documentation>Статус (0%-100%)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:unsignedByte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания текущего статуса выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--calling methods' options-->
  <xs:element name="options" type="Options">
    <xs:annotation>
      <xs:documentation>Параметры вызова метода</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Options">
    <xs:annotation>
      <xs:documentation>Набор именованных значений</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Именованное значение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--pagination-->
  <xs:element name="pagingOptions" type="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="PagingResults">
    <xs:annotation>
      <xs:documentation>Список с пагинацией</xs:documentation>
    </xs:annotation>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageTotal" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество страниц</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morePagesAvailable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Флаг доступности других страниц с результатами для "постраничного листания" (true - если доступны еще страницы; false - иначе)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="totalItemsCount" type="xs:long" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество элементов (на всех страницах)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" ref="sortingOptions"/>
    </xs:sequence>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--sorting-->
  <xs:element name="sortingOptions" type="SortingOptions">
    <xs:annotation>
      <xs:documentation>Параметры сортировки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SortingOptions">
    <xs:annotation>
      <xs:documentation>Условия сортировки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="3" name="sortOrder" type="SortOrder">
        <xs:annotation>
          <xs:documentation>Условия сортировки
(используются в соответствии с
переданной последовательностью)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SortOrder">
    <xs:annotation>
      <xs:documentation>Сортировка</xs:documentation>
    </xs:annotation>
    <xs:attribute name="attributeName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Наименование поля, по которому должна быть произведена сортировка</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="false" name="desceding" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Направление сортировки</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--void response-->
  <xs:element fixed="true" name="result">
    <xs:annotation>
      <xs:documentation>Элемент для использования в методах, не предполагающих возврат какого-либо значения</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:boolean"/>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="DatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--keys-->
  <xs:complexType name="EntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор сущности,
непосредственно принадлежащей
текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор
сущности ЕМИАС,
внешней по отношнению
к текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NsiGlobalId">
    <xs:annotation>
      <xs:documentation>Глобальный идентфикатор
ЕМИАС.НСИ</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvldqdFB7uVdOh6GuN.w7RXfKrhb_E3x_dhYYljJTnZe1hjllMTwx..g--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:simpleType name="GUID">
    <xs:annotation>
      <xs:documentation>Глобальный 128-битный идентификатор (Globally Unique Identifier)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="320"/>
      <xs:pattern value=".+@.+\..+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvgcacFFL.StO04mqR4w7MS7K3w77el12U41g45dcMaCalLLdoG6VPBu0FEjFOtBeo3qsjcxHsiEaAo0GxuqIEtqhPUISi</con:url><con:content><![CDATA[<!--OASIS takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any effort to identify any such rights. Information on OASIS's procedures with respect to rights in OASIS specifications can be found at the OASIS website. Copies of claims of rights made available for publication and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementors or users of this specification, can be obtained from the OASIS Executive Director.
OASIS invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights which may cover technology that may be required to implement this specification. Please address the information to the OASIS Executive Director.
Copyright © OASIS Open 2002-2004. All Rights Reserved.
This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself does not be modified in any way, such as by removing the copyright notice or references to OASIS, except as needed for the purpose of developing OASIS specifications, in which case the procedures for copyrights defined in the OASIS Intellectual Property Rights document must be followed, or as required to translate it into languages other than English.
The limited permissions granted above are perpetual and will not be revoked by OASIS or its successors or assigns.
This document and the information contained herein is provided on an “AS IS” basis and OASIS DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.-->
<xsd:schema attributeFormDefault="unqualified" blockDefault="#all" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" version="0.2" xmlns="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:import namespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvgcacFFL.StO04mqR4w7MS7K3w77el12U41g45dcMaCalLLdoG6VPAPwPGyBO4Au3wLV1eAaXxbwX_n6pMkM1ZgysDqdjNQ--"/>
  <!--<xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>-->
  <!--<xsd:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>-->
  <xsd:complexType name="AttributedString">
    <xsd:annotation>
      <xsd:documentation>This type represents an element with arbitrary attributes.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute ref="wsu:Id"/>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="PasswordString">
    <xsd:annotation>
      <xsd:documentation>This type is used for password elements per Section 4.1.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="wsse:AttributedString">
        <xsd:attribute name="Type" type="xsd:anyURI"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="EncodedString">
    <xsd:annotation>
      <xsd:documentation>This type is used for elements containing stringified binary data.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="wsse:AttributedString">
        <xsd:attribute name="EncodingType" type="xsd:anyURI"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="UsernameTokenType">
    <xsd:annotation>
      <xsd:documentation>This type represents a username token per Section 4.1</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Username" type="wsse:AttributedString"/>
      <xsd:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute ref="wsu:Id"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="BinarySecurityTokenType">
    <xsd:annotation>
      <xsd:documentation>A security token that is encoded in binary</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="wsse:EncodedString">
        <xsd:attribute name="ValueType" type="xsd:anyURI"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="KeyIdentifierType">
    <xsd:annotation>
      <xsd:documentation>A security token key identifier</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="wsse:EncodedString">
        <xsd:attribute name="ValueType" type="xsd:anyURI"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="tUsage">
    <xsd:annotation>
      <xsd:documentation>Typedef to allow a list of usages (as URIs).</xsd:documentation>
    </xsd:annotation>
    <xsd:list itemType="xsd:anyURI"/>
  </xsd:simpleType>
  <xsd:attribute name="Usage" type="tUsage">
    <xsd:annotation>
      <xsd:documentation>This global attribute is used to indicate the usage of a referenced or indicated token within the containing context</xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:complexType name="ReferenceType">
    <xsd:annotation>
      <xsd:documentation>This type represents a reference to an external security token.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="URI" type="xsd:anyURI"/>
    <xsd:attribute name="ValueType" type="xsd:anyURI"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="EmbeddedType">
    <xsd:annotation>
      <xsd:documentation>This type represents a reference to an embedded security token.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:any processContents="lax"/>
    </xsd:choice>
    <xsd:attribute name="ValueType" type="xsd:anyURI"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="SecurityTokenReferenceType">
    <xsd:annotation>
      <xsd:documentation>This type is used reference a security token.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:any processContents="lax"/>
    </xsd:choice>
    <xsd:attribute ref="wsu:Id"/>
    <xsd:attribute ref="wsse:Usage"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="SecurityHeaderType">
    <xsd:annotation>
      <xsd:documentation>This complexType defines header block to use for security-relevant data directed at a specific SOAP actor.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" processContents="lax">
        <xsd:annotation>
          <xsd:documentation>The use of "any" is to allow extensibility and different forms of security data.</xsd:documentation>
        </xsd:annotation>
      </xsd:any>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="TransformationParametersType">
    <xsd:annotation>
      <xsd:documentation>This complexType defines a container for elements to be specified from any namespace as properties/parameters of a DSIG transformation.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" processContents="lax">
        <xsd:annotation>
          <xsd:documentation>The use of "any" is to allow extensibility from any namespace.</xsd:documentation>
        </xsd:annotation>
      </xsd:any>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:element name="UsernameToken" type="wsse:UsernameTokenType">
    <xsd:annotation>
      <xsd:documentation>This element defines the wsse:UsernameToken element per Section 4.1.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="BinarySecurityToken" type="wsse:BinarySecurityTokenType">
    <xsd:annotation>
      <xsd:documentation>This element defines the wsse:BinarySecurityToken element per Section 4.2.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Reference" type="wsse:ReferenceType">
    <xsd:annotation>
      <xsd:documentation>This element defines a security token reference</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Embedded" type="wsse:EmbeddedType">
    <xsd:annotation>
      <xsd:documentation>This element defines a security token embedded reference</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="KeyIdentifier" type="wsse:KeyIdentifierType">
    <xsd:annotation>
      <xsd:documentation>This element defines a key identifier reference</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SecurityTokenReference" type="wsse:SecurityTokenReferenceType">
    <xsd:annotation>
      <xsd:documentation>This element defines the wsse:SecurityTokenReference per Section 4.3.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Security" type="wsse:SecurityHeaderType">
    <xsd:annotation>
      <xsd:documentation>This element defines the wsse:Security SOAP header element per Section 4.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="TransformationParameters" type="wsse:TransformationParametersType">
    <xsd:annotation>
      <xsd:documentation>This element contains properties for transformations from any namespace, including DSIG.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Password" type="wsse:PasswordString"/>
  <xsd:element name="Nonce" type="wsse:EncodedString"/>
  <xsd:simpleType name="FaultcodeEnum">
    <xsd:restriction base="xsd:QName">
      <xsd:enumeration value="wsse:UnsupportedSecurityToken"/>
      <xsd:enumeration value="wsse:UnsupportedAlgorithm"/>
      <xsd:enumeration value="wsse:InvalidSecurity"/>
      <xsd:enumeration value="wsse:InvalidSecurityToken"/>
      <xsd:enumeration value="wsse:FailedAuthentication"/>
      <xsd:enumeration value="wsse:FailedCheck"/>
      <xsd:enumeration value="wsse:SecurityTokenUnavailable"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvgcacFFL.StO04mqR4w7MS7K3w77el12U41g45dcMaCalLLdoG6VPAPwPGyBO4Au3wLV1eAaXxbwX_n6pMkM1ZgysDqdjNQ--</con:url><con:content><![CDATA[<!--OASIS takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any effort to identify any such rights. Information on OASIS's procedures with respect to rights in OASIS specifications can be found at the OASIS website. Copies of claims of rights made available for publication and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementors or users of this specification, can be obtained from the OASIS Executive Director.
OASIS invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights which may cover technology that may be required to implement this specification. Please address the information to the OASIS Executive Director.
Copyright © OASIS Open 2002-2004. All Rights Reserved.
This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself does not be modified in any way, such as by removing the copyright notice or references to OASIS, except as needed for the purpose of developing OASIS specifications, in which case the procedures for copyrights defined in the OASIS Intellectual Property Rights document must be followed, or as required to translate it into languages other than English.
The limited permissions granted above are perpetual and will not be revoked by OASIS or its successors or assigns.
This document and the information contained herein is provided on an “AS IS” basis and OASIS DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.-->
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" version="0.1" xmlns="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--// Fault Codes ///////////////////////////////////////////-->
  <xsd:simpleType name="tTimestampFault">
    <xsd:annotation>
      <xsd:documentation>This type defines the fault code value for Timestamp message expiration.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:QName">
      <xsd:enumeration value="wsu:MessageExpired"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--// Global attributes ////////////////////////////////////-->
  <xsd:attribute name="Id" type="xsd:ID">
    <xsd:annotation>
      <xsd:documentation>This global attribute supports annotating arbitrary elements with an ID.</xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:attributeGroup name="commonAtts">
    <xsd:annotation>
      <xsd:documentation>Convenience attribute group used to simplify this schema.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute ref="wsu:Id" use="optional"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:attributeGroup>
  <!--// Utility types ////////////////////////////////////////-->
  <xsd:complexType name="AttributedDateTime">
    <xsd:annotation>
      <xsd:documentation>This type is for elements whose [children] is a psuedo-dateTime and can have arbitrary attributes.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attributeGroup ref="wsu:commonAtts"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="AttributedURI">
    <xsd:annotation>
      <xsd:documentation>This type is for elements whose [children] is an anyURI and can have arbitrary attributes.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:anyURI">
        <xsd:attributeGroup ref="wsu:commonAtts"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--// Timestamp header components ///////////////////////////-->
  <xsd:complexType name="TimestampType">
    <xsd:annotation>
      <xsd:documentation>This complex type ties together the timestamp related elements into a composite type.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="wsu:Created"/>
      <xsd:element minOccurs="0" ref="wsu:Expires"/>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
        <xsd:any namespace="##other" processContents="lax"/>
      </xsd:choice>
    </xsd:sequence>
    <xsd:attributeGroup ref="wsu:commonAtts"/>
  </xsd:complexType>
  <xsd:element name="Timestamp" type="wsu:TimestampType">
    <xsd:annotation>
      <xsd:documentation>This element allows Timestamps to be applied anywhere element wildcards are present,
including as a SOAP header.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--global element decls to allow individual elements to appear anywhere-->
  <xsd:element name="Expires" type="wsu:AttributedDateTime">
    <xsd:annotation>
      <xsd:documentation>This element allows an expiration time to be applied anywhere element wildcards are present.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Created" type="wsu:AttributedDateTime">
    <xsd:annotation>
      <xsd:documentation>This element allows a creation time to be applied anywhere element wildcards are present.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZS04jWb8VPdS_scHnAfwGOZjKt7IukHypfw</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--схема для типов всех методов, собирается включением отдельных файлов по методам-->
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSn_jGu4wnMXfHxo.eGyw7W7Gciu9RRYzCie2Whc8rZogs8R4UavnWEnw--"/>
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSn_jGz5xnMW_7xmuGEiRTK8CSTOd1y2G_bewt.fQZz4N8-"/>
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZS16yGf9hjoXfvskO.ezgPXulM4rJ11K4E1SUv3qMU6MDh41nQ-"/>
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSk_imb9hjoXfvskO.ezgPXulM4rIjMtnvaZ6z9haUcPSPrU0E-"/>
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSl9SGz5xnMW_7xmuGEiRTK8DiS656O6V_dOr0aW3GLSIw-"/>
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSk_imb9hj2W_fgl_uGwkLB50_jQsRm7eYeoSTA0nQth1Ek"/>
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSz_jGs5xzGTPbqnaCS1AiS7nUvMEaRFHqtLto6EwaE"/>
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSz_iSM4RXhSuri3faZw4h0dGLw6n1q90FpUVPkIf0-"/>
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSn_jGt4RXAXOrplt6YyAbc919lsNMbTytqaYbXpTg9m3Th2IhCoQ--"/>
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSz_jGt4RXAXOrplqCS1AjNSKj72K0yOztv0PADd6Fl"/>
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSn_jG64wT2W_fgl_uGwkLB508IaxcXlnC3_79IDIFJOlZZ"/>
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSz_jGq4xbMVvjGnPuY1AmX7FgvaL.nlRFgH3lbvO3KkuvnsQ--"/>
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSz_iSM4RXxSv7hlsCLygmX7FgvZVPs79T9f_DA9R8VFvmyIA--"/>
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSz_jGq4xbMVvjEl.aFxELB50_6bhdKKkLicdG5q_SCzCGA"/>
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSn_jGt4RXAXOrplqCS1AgO6rgosKGq1lyQ.mOTxRf5"/>
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSn_jGs5xrMVfqri_2OXvR11XTDXRT9DCOEbRzjGg--"/>
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSz_jGs5xrMVfqri_2OnVZlBhzPxfma8wkX_a5Vhg--"/>
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSn_jG26w7RV.38oeuLxBjQ.0VlsNMbU4VUQU7dyIiTDSqTRgMdWQ--"/>
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSn_jG26w7RV.38suqCyA.X7Fgv2yJrn8HOlGbocWy5iZps5w--"/>
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZS16yGf9hjoXfvskO.ezgPX3UU4vNIKeDevNqsvF68GQK3eXmQ96u0Hy9SNt04wIA--"/>
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSn_jG68AjCcfHjnKCS1Ag1brlnL3r18wmy4HlNbftj"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSn_jGu4wnMXfHxo.eGyw7W7Gciu9RRYzCie2Whc8rZogs8R4UavnWEnw--</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_oV9et9CvQ9EyLQOzhjmzs3Otrdpv6_mH2RLieQA--"/>
  <xs:import namespace="http://emias.mos.ru/ln/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp"/>
  <xs:complexType name="PillboxListType">
    <xs:complexContent>
      <xs:extension base="core:PagingResults">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="medication">
            <xs:annotation>
              <xs:documentation>Лекарственное назначение</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element name="pillboxStatus" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>Статус назначения</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" name="medicationInfo" type="core:MedicationBaseType">
                  <xs:annotation>
                    <xs:documentation>Сведения о лекарственном назначении</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" name="medicationTitle" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>Название препарата для графика</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" name="schedulePeriod" type="core:DatePeriod">
                  <xs:annotation>
                    <xs:documentation>Период приёма по графику</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" name="reasonTermination" type="core:NsiTerminationReason">
                  <xs:annotation>
                    <xs:documentation>Причина завершения курса</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" name="singleDose" type="xs:decimal">
                  <xs:annotation>
                    <xs:documentation>Разовая доза</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" name="unitDose" type="core:NsiDoseUnitType">
                  <xs:annotation>
                    <xs:documentation>Единица измерения разовой дозы</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" name="quantityPerDay" type="xs:short">
                  <xs:annotation>
                    <xs:documentation>Количество приемов в сутки</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" name="courseMode" type="core:NsiWithCodeBase">
                  <xs:annotation>
                    <xs:documentation>Периодичность приема</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="param" type="core:KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Дополнительные атрибуты назначения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="GetPatientPillboxListRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="requestGUID" type="core:GUID">
          <xs:annotation>
            <xs:documentation>Идентификатор запроса</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="patientId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор пациента ЕМИАС</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="statusFilter" type="xs:string">
          <xs:annotation>
            <xs:documentation>Фильтр по статусу</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="pagingOptions" type="core:PagingOptions">
          <xs:annotation>
            <xs:documentation>Пагинация</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="core:Options">
          <xs:annotation>
            <xs:documentation>Необязательные именованные параметры</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetPatientPillboxListResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="responseGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор ответа</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="result" type="PillboxListType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/core/v1/" xmlns="http://emias.mos.ru/ln/core/v1/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvldqdFB7uVdOh6Gud7Q_AFum03faZw_CIndQcg0ujrHiPo3OE76o-"/>
  <xs:complexType name="NsiDoseUnitType">
    <xs:annotation>
      <xs:documentation>Единица измерения препарата.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="NsiBase">
        <xs:sequence>
          <xs:element minOccurs="0" name="shortTitle" type="xs:string">
            <xs:annotation>
              <xs:documentation>Сокращение</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NsiDoseMethodType">
    <xs:annotation>
      <xs:documentation>Единица измерения препарата.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="NsiBase">
        <xs:sequence>
          <xs:element minOccurs="0" name="genTitle" type="xs:string">
            <xs:annotation>
              <xs:documentation>Полное наименование</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SlpBaseType">
    <xs:annotation>
      <xs:documentation>Сведения по справочнику лекарственных препаратов ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="title" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование элемента</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор элемента</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="code" type="xs:string">
      <xs:annotation>
        <xs:documentation>Код элемента</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="archived" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Признак архивности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="SMNNBaseType">
    <xs:complexContent>
      <xs:extension base="SlpBaseType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="OTNBaseType">
    <xs:complexContent>
      <xs:extension base="SlpBaseType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DoctorBaseType">
    <xs:annotation>
      <xs:documentation>Сведения о назначившем медработнике</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:string">
        <xs:annotation>
          <xs:documentation>Идентификатор врача</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="jobCode" type="core:ID">
        <xs:annotation>
          <xs:documentation>Идентификатор врачебной должности</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="JobName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Специальность врача</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="FIO" type="xs:string">
        <xs:annotation>
          <xs:documentation>ФИО врача</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="moSource" type="xs:string">
        <xs:annotation>
          <xs:documentation>Источник сведений о враче</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MedicationBaseType">
    <xs:annotation>
      <xs:documentation>Основная информация о лекарственном назначении</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base">
        <xs:sequence>
          <xs:element minOccurs="0" name="patientId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор пациента</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" ref="simiDocumentId">
            <xs:annotation>
              <xs:documentation>Идентификатор назначения в СИМИ</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="createDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата назначения</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="validityPeriod" type="core:DatePeriod">
            <xs:annotation>
              <xs:documentation>Период действия назначения</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="medicationState">
            <xs:complexType>
              <xs:complexContent>
                <xs:extension base="core:NsiWithCodeBase">
                  <xs:annotation>
                    <xs:documentation>Статус назначения</xs:documentation>
                  </xs:annotation>
                </xs:extension>
              </xs:complexContent>
            </xs:complexType>
          </xs:element>
          <xs:element name="isSelfAssigned" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Самоназначение</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="drugName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование препарата</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="isExtemporal" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак индивидуального изготовления</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="medicationType">
            <xs:complexType>
              <xs:complexContent>
                <xs:extension base="core:NsiWithCodeBase">
                  <xs:annotation>
                    <xs:documentation>Тип назначения</xs:documentation>
                  </xs:annotation>
                </xs:extension>
              </xs:complexContent>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NsiUnitDose">
    <xs:annotation>
      <xs:documentation>Справочник единиц измерения доз</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:NsiBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NsiMealsConnection">
    <xs:annotation>
      <xs:documentation>Справочник связанности с едой</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:NsiWithCodeBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NsiSleepConnection">
    <xs:annotation>
      <xs:documentation>Справочник связанности со сном</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:NsiWithCodeBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NsiTerminationReason">
    <xs:annotation>
      <xs:documentation>Справочник причин прекращения</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:NsiWithCodeBase">
        <xs:attribute name="completed" type="xs:boolean" use="required">
          <xs:annotation>
            <xs:documentation>Признак исполненного назначения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NsiCourseMode">
    <xs:annotation>
      <xs:documentation>Справочник периодичности приема</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:NsiWithCodeBase"/>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_oV9et9CvQ9EyLQOzhjmzs3Otrdpv6_mH2RLieQA--</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://emias.mos.ru/ln/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp"/>
  <xs:complexType name="FullTimeSlotType">
    <xs:annotation>
      <xs:documentation>Полная информация о слоте приема, включая данные об исполнении и назначении. Может использоваться также для представления данных о симптоматических приемах.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ShortTimeSlotType">
        <xs:sequence>
          <xs:element name="medicationId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор лекарственного назначения</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="medicationTitle" type="xs:string">
            <xs:annotation>
              <xs:documentation>Название препарата для графика</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="singleDose" type="xs:string">
            <xs:annotation>
              <xs:documentation>Доза на прием</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="medicationType" type="MedicationType">
            <xs:annotation>
              <xs:documentation>Тип назначения</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="pushNotifications" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>PUSH-уведомления</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="mealsConnection" type="core:NsiWithCodeBase">
            <xs:annotation>
              <xs:documentation>Связь с едой</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="sleepConnection" type="core:NsiWithCodeBase">
            <xs:annotation>
              <xs:documentation>Связь со сном</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MedicationType">
    <xs:annotation>
      <xs:documentation>Тип назначения</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:NsiWithCodeBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="InfoMessageType">
    <xs:annotation>
      <xs:documentation>Сообщение для пользователя с маркировкой его статуса/важности.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="colorMark" type="xs:string">
        <xs:annotation>
          <xs:documentation>Цветовая метка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="title" type="xs:string">
        <xs:annotation>
          <xs:documentation>Заголовок сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="details" type="xs:string">
        <xs:annotation>
          <xs:documentation>Дополнительная информация</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TimeSlotType">
    <xs:annotation>
      <xs:documentation>Идентификационная информация слота приема препарата.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="slotCode" type="xs:short">
        <xs:annotation>
          <xs:documentation>Код слота</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="timeStart" type="isoTime">
        <xs:annotation>
          <xs:documentation>Время начала слота</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="timeEnd" type="isoTime">
        <xs:annotation>
          <xs:documentation>Время окончания слота</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ShortTimeSlotType">
    <xs:annotation>
      <xs:documentation>Информация о слоте приема, включая данные об исполнении, но без данных о назначении.
                Может использоваться также для представления данных о симптоматических приемах.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="TimeSlotType">
        <xs:sequence>
          <xs:element minOccurs="0" name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>Исполнение назначений</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="reasonSkip">
            <xs:annotation>
              <xs:documentation>Причина пропуска приема</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:complexContent>
                <xs:extension base="core:NsiWithCodeBase"/>
              </xs:complexContent>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="notes" type="xs:string">
            <xs:annotation>
              <xs:documentation>Примечание пациента</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="factTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата и время фактического исполнения назначения</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="factSingleDose" type="xs:string">
            <xs:annotation>
              <xs:documentation>Фактически принятая разовая доза</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="unitDose" type="core:NsiDoseUnitType">
            <xs:annotation>
              <xs:documentation>Единица измерения дозы</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DoctorFullType">
    <xs:annotation>
      <xs:documentation>Подробные сведения о назначившем медработнике</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:DoctorBaseType">
        <xs:sequence>
          <xs:element name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>ФИО врача</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="jobSpeciality" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование исполняемой должности</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType id="isoTime" name="isoTime">
    <xs:restriction base="xs:string">
      <xs:pattern value="(0[0-9]|1[0-9]|2[0-3]):?[0-5][0-9]:?([0-5][0-9])?Z?([-+](0?[1-9]|1[1-9]|2[0-3]):([0-5][0-9]))?"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSn_jGz5xnMW_7xmuGEiRTK8CSTOd1y2G_bewt.fQZz4N8-</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_oV9et9CvQ9EyLQOzhjmzs3Otrdpv6_mH2RLieQA--"/>
  <xs:import namespace="http://emias.mos.ru/ln/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp"/>
  <xs:element name="GetMedicationRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="requestGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор запроса</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="medicationId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор лекарственного назначения</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="patientId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор пациента ЕМИАС</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="core:Options">
          <xs:annotation>
            <xs:documentation>Необязательные именованные параметры</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetMedicationResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="responseGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор ответа</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="medication">
          <xs:annotation>
            <xs:documentation>Детализированная информация о лекарственном назначении</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="pillboxStatus" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Статус назначения</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="medicationInfo" type="core:MedicationBaseType">
                <xs:annotation>
                  <xs:documentation>Сведения о лекарственном назначении</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="medicationTitle" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Название препарата для графика</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="smnn" type="core:SMNNBaseType">
                <xs:annotation>
                  <xs:documentation>СМНН</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="otn" type="core:OTNBaseType">
                <xs:annotation>
                  <xs:documentation>Торговое наименование</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" ref="core:medicalOrganizationId">
                <xs:annotation>
                  <xs:documentation>Медицинская организация</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" ref="core:medicalOrganizationName">
                <xs:annotation>
                  <xs:documentation>Наименование медицинской организации</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" ref="core:medicalFacilityId">
                <xs:annotation>
                  <xs:documentation>Медицинское учреждение</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" ref="core:medicalFacilityName">
                <xs:annotation>
                  <xs:documentation>Наименование филиала медицинской организации</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="doctor" type="core:DoctorBaseType">
                <xs:annotation>
                  <xs:documentation>Сведения о назначившем медработнике</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="instruction" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Способ применения ЛН</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="intake">
                <xs:annotation>
                  <xs:documentation>Указания по применению</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:choice>
                    <xs:element name="adhoc">
                      <xs:annotation>
                        <xs:documentation>Для симптоматического назначения</xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element minOccurs="0" name="singleDose" type="xs:decimal">
                            <xs:annotation>
                              <xs:documentation>Рекомендованная разовая доза</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element minOccurs="0" name="maxSingleDose" type="xs:decimal">
                            <xs:annotation>
                              <xs:documentation>Максимальная разовая доза</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element minOccurs="0" name="maxQtyPerDay" type="xs:short">
                            <xs:annotation>
                              <xs:documentation>Максимальное количество приемов в сутки</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element minOccurs="0" name="unitDose" type="core:NsiDoseUnitType">
                            <xs:annotation>
                              <xs:documentation>Единица измерения дозы</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="course">
                      <xs:annotation>
                        <xs:documentation>Для курсового назначения</xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element minOccurs="0" name="courseMode" type="core:NsiCourseMode">
                            <xs:annotation>
                              <xs:documentation>Периодичность приема</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element minOccurs="0" name="singleDose" type="xs:decimal">
                            <xs:annotation>
                              <xs:documentation>Разовая доза</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element minOccurs="0" name="quantityPerDay" type="xs:short">
                            <xs:annotation>
                              <xs:documentation>Количество приемов в сутки</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element minOccurs="0" name="courseQuantity" type="xs:short">
                            <xs:annotation>
                              <xs:documentation>Общее количество приемов</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element minOccurs="0" name="unitDose" type="core:NsiDoseUnitType">
                            <xs:annotation>
                              <xs:documentation>Единица измерения дозы</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:choice>
                </xs:complexType>
              </xs:element>
              <xs:element minOccurs="0" name="mealsConnection" type="core:NsiMealsConnection">
                <xs:annotation>
                  <xs:documentation>Связь с едой</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="sleepConnection" type="core:NsiSleepConnection">
                <xs:annotation>
                  <xs:documentation>Связь со сном</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="reasonTermination" type="core:NsiTerminationReason">
                <xs:annotation>
                  <xs:documentation>Причина завершения курса</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="schedulePeriod" type="core:DatePeriod">
                <xs:annotation>
                  <xs:documentation>Период приёма по графику</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZS16yGf9hjoXfvskO.ezgPXulM4rJ11K4E1SUv3qMU6MDh41nQ-</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_oV9et9CvQ9EyLQOzhjmzs3Otrdpv6_mH2RLieQA--"/>
  <xs:import namespace="http://emias.mos.ru/ln/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp"/>
  <xs:element name="UpdateMedicationRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="requestGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор запроса</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="patientId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор пациента ЕМИАС</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="startDate" type="xs:date">
          <xs:annotation>
            <xs:documentation>Дата начала действия назначения</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="endDate" type="xs:date">
          <xs:annotation>
            <xs:documentation>Дата окончания действия назначения</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="drug">
          <xs:annotation>
            <xs:documentation>Назначенный препарат</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:choice>
              <xs:element name="smnnId" type="core:ID">
                <xs:annotation>
                  <xs:documentation>СМНН</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="otnId" type="core:ID">
                <xs:annotation>
                  <xs:documentation>Торговое наименование</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="drugName" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Наименование препарата</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element minOccurs="0" name="comment" type="xs:string">
          <xs:annotation>
            <xs:documentation>Способ применения</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="intake">
          <xs:annotation>
            <xs:documentation>Указания по применению</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:choice>
              <xs:element name="adhoc">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element minOccurs="0" name="singleDose" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="maxSingleDose" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="unitDose" type="core:ID"/>
                    <xs:element minOccurs="0" name="maxQtyPerDay" type="xs:short"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="course">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="courseMode" type="core:ID"/>
                    <xs:element minOccurs="0" name="singleDose" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="unitDose" type="core:ID"/>
                    <xs:element minOccurs="0" name="quantityPerDay" type="xs:short"/>
                    <xs:element minOccurs="0" name="courseQuantity" type="xs:short"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element minOccurs="0" name="mealsConnection" type="core:ID"/>
        <xs:element minOccurs="0" name="sleepConnection" type="core:ID"/>
        <xs:element minOccurs="0" name="options" type="core:Options">
          <xs:annotation>
            <xs:documentation>Необязательные именованные параметры</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="UpdateMedicationResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="responseGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор ответа</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="medicationId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор лекарственного назначения</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSk_imb9hjoXfvskO.ezgPXulM4rIjMtnvaZ6z9haUcPSPrU0E-</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_oV9et9CvQ9EyLQOzhjmzs3Otrdpv6_mH2RLieQA--"/>
  <xs:import namespace="http://emias.mos.ru/ln/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp"/>
  <xs:element name="DeleteMedicationRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="requestGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор запроса</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="medicationId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор лекарственного назначения</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="patientId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор пациента ЕМИАС</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="core:Options">
          <xs:annotation>
            <xs:documentation>Необязательные именованные параметры</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="DeleteMedicationResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="responseGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор ответа</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSl9SGz5xnMW_7xmuGEiRTK8DiS656O6V_dOr0aW3GLSIw-</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_oV9et9CvQ9EyLQOzhjmzs3Otrdpv6_mH2RLieQA--"/>
  <xs:import namespace="http://emias.mos.ru/ln/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp"/>
  <xs:element name="EndMedicationRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="requestGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор запроса</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="medicationId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор лекарственного назначения</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="patientId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор пациента ЕМИАС</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="terminationReasonId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Причина завершения курса</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="notes" type="xs:string">
          <xs:annotation>
            <xs:documentation>Пояснение пациента</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="core:Options">
          <xs:annotation>
            <xs:documentation>Необязательные именованные параметры</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="EndMedicationResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="responseGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор ответа</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSk_imb9hj2W_fgl_uGwkLB50_jQsRm7eYeoSTA0nQth1Ek</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_oV9et9CvQ9EyLQOzhjmzs3Otrdpv6_mH2RLieQA--"/>
  <xs:import namespace="http://emias.mos.ru/ln/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp"/>
  <xs:element name="DeleteScheduleRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="requestGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор запроса</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="medicationId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор лекарственного назначения</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="patientId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор пациента ЕМИАС</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="core:Options">
          <xs:annotation>
            <xs:documentation>Необязательные именованные параметры</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="DeleteScheduleResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="responseGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор ответа</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSz_jGs5xzGTPbqnaCS1AiS7nUvMEaRFHqtLto6EwaE</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_oV9et9CvQ9EyLQOzhjmzs3Otrdpv6_mH2RLieQA--"/>
  <xs:import namespace="http://emias.mos.ru/ln/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp"/>
  <xs:element name="SetReactionRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="requestGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор запроса</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="patientId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор пациента ЕМИАС</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="healthRate" type="xs:int">
          <xs:annotation>
            <xs:documentation>Общее самочувствие</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="description" type="xs:string">
          <xs:annotation>
            <xs:documentation>Описание реакции</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="core:Options">
          <xs:annotation>
            <xs:documentation>Необязательные именованные параметры</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SetReactionResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="responseGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор ответа</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSz_iSM4RXhSuri3faZw4h0dGLw6n1q90FpUVPkIf0-</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_oV9et9CvQ9EyLQOzhjmzs3Otrdpv6_mH2RLieQA--"/>
  <xs:import namespace="http://emias.mos.ru/ln/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp"/>
  <xs:element name="SearchDrugRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="requestGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор запроса</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="searchString" type="xs:string">
          <xs:annotation>
            <xs:documentation>Фрагмент МНН или ТН лекарственного препарата</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="core:Options">
          <xs:annotation>
            <xs:documentation>Необязательные именованные параметры</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SearchDrugResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="responseGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор ответа</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="smnn" type="SearchDrugSMNN">
          <xs:annotation>
            <xs:documentation>СМНН</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="SearchDrugSMNN">
    <xs:annotation>
      <xs:documentation>Лекарственный препарат</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="id" type="core:ID">
        <xs:annotation>
          <xs:documentation>Идентификатор группировочного наименования</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="title" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование элемента</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="otn">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="core:ID">
              <xs:annotation>
                <xs:documentation>Идентификатор элемента ОТН</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="title" type="xs:string">
              <xs:annotation>
                <xs:documentation>Наименование элемента</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element maxOccurs="unbounded" name="unitDose" type="core:NsiDoseUnitType">
        <xs:annotation>
          <xs:documentation>Единица измерения препарата</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSn_jGt4RXAXOrplt6YyAbc919lsNMbTytqaYbXpTg9m3Th2IhCoQ--</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_oV9et9CvQ9EyLQOzhjmzs3Otrdpv6_mH2RLieQA--"/>
  <xs:import namespace="http://emias.mos.ru/ln/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp"/>
  <xs:element name="GetScheduleProjectRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="requestGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор запроса</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="medicationId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор лекарственного назначения</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="patientId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор пациента ЕМИАС</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="startDate" type="xs:date">
          <xs:annotation>
            <xs:documentation>Дата начала приема препарата</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="core:Options">
          <xs:annotation>
            <xs:documentation>Необязательные именованные параметры</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetScheduleProjectResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="responseGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор ответа</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="daySchedule">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="scheduleDate" type="xs:date">
                <xs:annotation>
                  <xs:documentation>Первая дата приема</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="receptionSlot" type="TimeSlotType">
                <xs:annotation>
                  <xs:documentation>Слоты приема</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element minOccurs="0" name="warningMessage" type="InfoMessageType">
          <xs:annotation>
            <xs:documentation>Сообщение пациенту</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="hasPersonalRegime" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Признак стандартного режима дня</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSz_jGt4RXAXOrplqCS1AjNSKj72K0yOztv0PADd6Fl</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_oV9et9CvQ9EyLQOzhjmzs3Otrdpv6_mH2RLieQA--"/>
  <xs:import namespace="http://emias.mos.ru/ln/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp"/>
  <xs:element name="SetScheduleRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="requestGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор запроса</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="medicationId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор лекарственного назначения</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="patientId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор пациента ЕМИАС</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="scheduleName" type="xs:string">
          <xs:annotation>
            <xs:documentation>Название графика</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="pushNotifications" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>PUSH-уведомления</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="daySchedule">
          <xs:annotation>
            <xs:documentation>Дневной график</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="scheduleDate" type="xs:date">
                <xs:annotation>
                  <xs:documentation>Дата графика</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="receptionSlot" type="TimeSlotType">
                <xs:annotation>
                  <xs:documentation>Слоты приема</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="core:Options">
          <xs:annotation>
            <xs:documentation>Необязательные именованные параметры</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SetScheduleResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="responseGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор ответа</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSn_jG64wT2W_fgl_uGwkLB508IaxcXlnC3_79IDIFJOlZZ</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_oV9et9CvQ9EyLQOzhjmzs3Otrdpv6_mH2RLieQA--"/>
  <xs:import namespace="http://emias.mos.ru/ln/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp"/>
  <xs:element name="GetDayScheduleRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="requestGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор запроса</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="patientId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор пациента ЕМИАС</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="periodTerm" type="core:DatePeriod">
          <xs:annotation>
            <xs:documentation>Календарный период</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="core:Options">
          <xs:annotation>
            <xs:documentation>Необязательные именованные параметры</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetDayScheduleResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="responseGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор ответа</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="nickname" type="xs:string">
          <xs:annotation>
            <xs:documentation>Название режима дня</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="daySchedule">
          <xs:annotation>
            <xs:documentation>График на определенный день</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="scheduleDate" type="xs:date">
                <xs:annotation>
                  <xs:documentation>Дата графика</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="receptionSlot" type="FullTimeSlotType">
                <xs:annotation>
                  <xs:documentation>Слоты приема</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSz_jGq4xbMVvjGnPuY1AmX7FgvaL.nlRFgH3lbvO3KkuvnsQ--</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_oV9et9CvQ9EyLQOzhjmzs3Otrdpv6_mH2RLieQA--"/>
  <xs:import namespace="http://emias.mos.ru/ln/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp"/>
  <xs:element name="SetTakingCourseRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="requestGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор запроса</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="patientId" type="xs:long">
          <xs:annotation>
            <xs:documentation>Идентификатор пациента ЕМИАС</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="unbounded" name="takingSlot">
          <xs:annotation>
            <xs:documentation>Принятые препараты</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="medicationId" type="xs:long">
                <xs:annotation>
                  <xs:documentation>Идентификатор лекарственного назначения</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="slotCode" type="xs:short">
                <xs:annotation>
                  <xs:documentation>Код слота</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="timeReception" type="isoTime">
                <xs:annotation>
                  <xs:documentation>Время приема</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="takingDate" type="xs:date">
          <xs:annotation>
            <xs:documentation>Дата приема</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="action" type="xs:string">
          <xs:annotation>
            <xs:documentation>Действие</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="reasonSkipId" type="xs:long">
          <xs:annotation>
            <xs:documentation>Идентификатор причины пропуска приема</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="description" type="xs:string">
          <xs:annotation>
            <xs:documentation>Описание причины</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="core:Options">
          <xs:annotation>
            <xs:documentation>Необязательные именованные параметры</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SetTakingCourseResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="responseGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор ответа</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSz_iSM4RXxSv7hlsCLygmX7FgvZVPs79T9f_DA9R8VFvmyIA--</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_oV9et9CvQ9EyLQOzhjmzs3Otrdpv6_mH2RLieQA--"/>
  <xs:import namespace="http://emias.mos.ru/ln/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp"/>
  <xs:element name="SearchTradeNameRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="requestGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор запроса</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="smnnId" type="core:ID">
          <xs:annotation>
            <xs:documentation>СМНН</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="core:Options">
          <xs:annotation>
            <xs:documentation>Необязательные именованные параметры</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SearchTradeNameResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="responseGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор ответа</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="otn">
          <xs:annotation>
            <xs:documentation>ОТН</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" type="core:ID">
                <xs:annotation>
                  <xs:documentation>Smnn Id</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="title" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Smnn title</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSz_jGq4xbMVvjEl.aFxELB50_6bhdKKkLicdG5q_SCzCGA</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_oV9et9CvQ9EyLQOzhjmzs3Otrdpv6_mH2RLieQA--"/>
  <xs:import namespace="http://emias.mos.ru/ln/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp"/>
  <xs:element name="SetTakingAdhocRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="requestGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор запроса</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="medicationId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор лекарственного назначения</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="patientId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор пациента ЕМИАС</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="factTime" type="xs:dateTime">
          <xs:annotation>
            <xs:documentation>Дата и время фактического исполнения назначения</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="factSingleDose" type="xs:string">
          <xs:annotation>
            <xs:documentation>Фактически принятая разовая доза</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="description" type="xs:string">
          <xs:annotation>
            <xs:documentation>Описание причины</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="core:Options">
          <xs:annotation>
            <xs:documentation>Необязательные именованные параметры</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SetTakingAdhocResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="responseGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор ответа</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSn_jGt4RXAXOrplqCS1AgO6rgosKGq1lyQ.mOTxRf5</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_oV9et9CvQ9EyLQOzhjmzs3Otrdpv6_mH2RLieQA--"/>
  <xs:import namespace="http://emias.mos.ru/ln/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp"/>
  <xs:element name="GetScheduleRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="requestGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор запроса</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="medicationId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор лекарственного назначения</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="patientId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор пациента ЕМИАС</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="periodTerm" type="core:DatePeriod">
          <xs:annotation>
            <xs:documentation>Календарный период</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="core:Options">
          <xs:annotation>
            <xs:documentation>Необязательные именованные параметры</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetScheduleResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="responseGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор ответа</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="medicationId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор лекарственного назначения</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="medicationTitle" type="xs:string">
          <xs:annotation>
            <xs:documentation>Название препарата для графика</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="singleDose" type="xs:string">
          <xs:annotation>
            <xs:documentation>Доза на прием</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="medicationType">
          <xs:annotation>
            <xs:documentation>Тип назначения</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:complexContent>
              <xs:extension base="core:NsiWithCodeBase"/>
            </xs:complexContent>
          </xs:complexType>
        </xs:element>
        <xs:element name="pushNotifications" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>PUSH-уведомления</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="daySchedule">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="scheduleDate" type="xs:date">
                <xs:annotation>
                  <xs:documentation>Первая дата приема</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="receptionSlot" type="ShortTimeSlotType">
                <xs:annotation>
                  <xs:documentation>Слоты приема</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element minOccurs="0" name="nickname" type="xs:string">
          <xs:annotation>
            <xs:documentation>Название режима дня</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSn_jGs5xrMVfqri_2OXvR11XTDXRT9DCOEbRzjGg--</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_oV9et9CvQ9EyLQOzhjmzs3Otrdpv6_mH2RLieQA--"/>
  <xs:import namespace="http://emias.mos.ru/ln/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp"/>
  <xs:element name="GetRegimeRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="requestGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор запроса</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="patientId" type="xs:long">
          <xs:annotation>
            <xs:documentation>Идентификатор пациента ЕМИАС</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="core:Options">
          <xs:annotation>
            <xs:documentation>Необязательные именованные параметры</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetRegimeResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="responseGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор ответа</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="nickname" type="xs:string">
          <xs:annotation>
            <xs:documentation>Название режима дня</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="bedtimeStart" type="xs:int">
          <xs:annotation>
            <xs:documentation>Отход ко сну</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="bedtimeStartTime" type="isoTime">
          <xs:annotation>
            <xs:documentation>Время отхода ко сну</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="bedtimeEnd" type="xs:int">
          <xs:annotation>
            <xs:documentation>Пробуждение</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="bedtimeEndTime" type="isoTime">
          <xs:annotation>
            <xs:documentation>Время пробуждения</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="breakfastSlot" type="xs:int">
          <xs:annotation>
            <xs:documentation>Слот завтрака</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="breakfastTime" type="isoTime">
          <xs:annotation>
            <xs:documentation>Время начала завтрака</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="lunchSlot" type="xs:int">
          <xs:annotation>
            <xs:documentation>Слот обеда</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="lunchTime" type="isoTime">
          <xs:annotation>
            <xs:documentation>Время начала обеда</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="dinnerSlot" type="xs:int">
          <xs:annotation>
            <xs:documentation>Слот ужина</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="dinnerTime" type="isoTime">
          <xs:annotation>
            <xs:documentation>Время начала ужина</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="isEasyScheduleCreation" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Признак упрощенного создания графика приема</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="hasPersonalRegime" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Признак стандартного режима дня</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSz_jGs5xrMVfqri_2OnVZlBhzPxfma8wkX_a5Vhg--</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_oV9et9CvQ9EyLQOzhjmzs3Otrdpv6_mH2RLieQA--"/>
  <xs:import namespace="http://emias.mos.ru/ln/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp"/>
  <xs:element name="SetRegimeRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="requestGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор запроса</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="patientId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор пациента ЕМИАС</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="nickname" type="xs:string">
          <xs:annotation>
            <xs:documentation>Название режима дня</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:sequence>
          <xs:element minOccurs="0" name="bedtimeStart" type="xs:short">
            <xs:annotation>
              <xs:documentation>Отход ко сну</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="bedtimeEnd" type="xs:short">
            <xs:annotation>
              <xs:documentation>Пробуждение</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="breakfastSlot" type="xs:short">
            <xs:annotation>
              <xs:documentation>Слот завтрака</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lunchSlot" type="xs:short">
            <xs:annotation>
              <xs:documentation>Слот обеда</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="dinnerSlot" type="xs:short">
            <xs:annotation>
              <xs:documentation>Слот ужина</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="bedtimeStartTime" type="isoTime">
            <xs:annotation>
              <xs:documentation>Время отхода ко сну</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="bedtimeEndTime" type="isoTime">
            <xs:annotation>
              <xs:documentation>Время пробуждения</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="breakfastTime" type="isoTime">
            <xs:annotation>
              <xs:documentation>Время завтрака</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="lunchTime" type="isoTime">
            <xs:annotation>
              <xs:documentation>Время обеда</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="dinnerTime" type="isoTime">
            <xs:annotation>
              <xs:documentation>Время ужина</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:element minOccurs="0" name="isEasyScheduleCreation" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Признак упрощенного создания графика приема</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="core:Options">
          <xs:annotation>
            <xs:documentation>Необязательные именованные параметры</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SetRegimeResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="responseGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор ответа</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSn_jG26w7RV.38oeuLxBjQ.0VlsNMbU4VUQU7dyIiTDSqTRgMdWQ--</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_oV9et9CvQ9EyLQOzhjmzs3Otrdpv6_mH2RLieQA--"/>
  <xs:import namespace="http://emias.mos.ru/ln/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp"/>
  <xs:element name="GetHistoryReactionRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="requestGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор запроса</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="patientId" type="xs:long">
          <xs:annotation>
            <xs:documentation>Идентификатор пациента ЕМИАС</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="core:Options">
          <xs:annotation>
            <xs:documentation>Необязательные именованные параметры</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetHistoryReactionResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="responseGUID" type="core:GUID">
          <xs:annotation>
            <xs:documentation>Идентификатор ответа</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="reaction">
          <xs:annotation>
            <xs:documentation>Результат поиска</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="reactionTime" type="xs:dateTime">
                <xs:annotation>
                  <xs:documentation>Дата и время проявления реакции</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="healthRate" type="xs:int">
                <xs:annotation>
                  <xs:documentation>Общее самочувствие</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="description" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Описание реакции</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSn_jG26w7RV.38suqCyA.X7Fgv2yJrn8HOlGbocWy5iZps5w--</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_oV9et9CvQ9EyLQOzhjmzs3Otrdpv6_mH2RLieQA--"/>
  <xs:import namespace="http://emias.mos.ru/ln/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp"/>
  <xs:element name="GetHistoryAdhocRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="requestGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор запроса</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="medicationId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор лекарственного назначения</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="patientId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор пациента ЕМИАС</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="periodTerm" type="core:DatePeriod">
          <xs:annotation>
            <xs:documentation>Календарный период</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="core:Options">
          <xs:annotation>
            <xs:documentation>Необязательные именованные параметры</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetHistoryAdhocResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="responseGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор ответа</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="dayHistory">
          <xs:annotation>
            <xs:documentation>Приемы за определенную дату</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="historyDate" type="xs:date">
                <xs:annotation>
                  <xs:documentation>Рекомендованная разовая доза</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="receptionSlots" type="ShortTimeSlotType">
                <xs:annotation>
                  <xs:documentation>Слоты приема</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZS16yGf9hjoXfvskO.ezgPX3UU4vNIKeDevNqsvF68GQK3eXmQ96u0Hy9SNt04wIA--</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_oV9et9CvQ9EyLQOzhjmzs3Otrdpv6_mH2RLieQA--"/>
  <xs:import namespace="http://emias.mos.ru/ln/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp"/>
  <xs:element name="UpdateMedicationInstructionRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="requestGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор запроса</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="medicationId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор лекарственного назначения</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="patientId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор пациента ЕМИАС</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="instruction" type="xs:string">
          <xs:annotation>
            <xs:documentation>Способ применения ЛН</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="core:Options">
          <xs:annotation>
            <xs:documentation>Необязательные именованные параметры</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="UpdateMedicationInstructionResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="responseGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор ответа</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_9CZSn_jG68AjCcfHjnKCS1Ag1brlnL3r18wmy4HlNbftj</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:core="http://emias.mos.ru/ln/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxarkKESysmteACR_oV9et9CvQ9EyLQOzhjmzs3Otrdpv6_mH2RLieQA--"/>
  <xs:import namespace="http://emias.mos.ru/ln/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELko133wfiUgxRM.drVjTE4pPn4Jn.ewT_GHgovWUoUacCW0hXJ3fPwbC3BmJxpTF4NyKNL5wEcn.3PNqjbjdQmR5q_iUctSTq_zxKaBXBSnvmtvBEl75XZS2qmuG8RmgVTdE5icQrW7W8.0GNlQp"/>
  <xs:element name="GetDrugInfoRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="requestGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор запроса</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="drugInfo">
          <xs:complexType>
            <xs:sequence>
              <xs:element minOccurs="0" name="smnnId" type="core:ID">
                <xs:annotation>
                  <xs:documentation>Идентификатор элемента СМНН</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="otnId" type="core:ID">
                <xs:annotation>
                  <xs:documentation>Идентификатор элемента ОТН</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="core:Options">
          <xs:annotation>
            <xs:documentation>Необязательные именованные параметры</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetDrugInfoResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="responseGUID" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор ответа</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="annotation">
          <xs:annotation>
            <xs:documentation>Аннотация</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element minOccurs="0" name="rusTitle" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Наименование препарата на русском языке</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="latTitle" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Наименование препарата на латыни</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="fullText" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Неструктурированная аннотация</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint></con:endpoints><con:operation id="2e853559-e841-470c-98a1-63c7d3936382" isOneWay="false" action="deleteMedication" name="deleteMedication" bindingOperationName="deleteMedication" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="249c5aeb-88d4-417f-9a0b-6fd84c3c7bcc" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <oas:Security>\r
         <!--You may enter ANY elements at this point-->\r
      </oas:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:DeleteMedicationRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:medicationId>?</typ:medicationId>\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:DeleteMedicationRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/deleteMedicationRequest"/></con:call></con:operation><con:operation id="f8931ba5-7d37-44bf-930b-b2b6862bec1a" isOneWay="false" action="deleteSchedule" name="deleteSchedule" bindingOperationName="deleteSchedule" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2fab8297-c99e-492a-8964-dc21cb4bfb32" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <oas:Security>\r
         <!--You may enter ANY elements at this point-->\r
      </oas:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:DeleteScheduleRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:medicationId>?</typ:medicationId>\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:DeleteScheduleRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/deleteScheduleRequest"/></con:call><con:call id="afe6a3fc-99a8-4a3c-b18e-169665c5c53c" name="deleteSchedule"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:DeleteScheduleRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:medicationId>1435308</typ:medicationId>\r
         <typ:patientId>11715757</typ:patientId>\r
      </typ:DeleteScheduleRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/deleteScheduleRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="645541c9-efab-4173-89e7-360093217a1e" isOneWay="false" action="endMedication" name="endMedication" bindingOperationName="endMedication" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b0a7c8b2-d490-4ced-8ba1-688f715c3e71" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <oas:Security>\r
         <!--You may enter ANY elements at this point-->\r
      </oas:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:EndMedicationRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:medicationId>?</typ:medicationId>\r
         <typ:patientId>?</typ:patientId>\r
         <typ:terminationReasonId>?</typ:terminationReasonId>\r
         <!--Optional:-->\r
         <typ:notes>?</typ:notes>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:EndMedicationRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/endMedicationRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="5ea79ba3-3e71-4f82-ba22-40f0e06ffd7a" name="endMedication"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:EndMedicationRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:medicationId>?</typ:medicationId>\r
         <typ:patientId>?</typ:patientId>\r
         <typ:terminationReasonId>?</typ:terminationReasonId>\r
         <!--Optional:-->\r
         <typ:notes>?</typ:notes>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:EndMedicationRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/endMedicationRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="eb26f3ee-72d7-46eb-8554-0ee679bda640" isOneWay="false" action="getDaySchedule" name="getDaySchedule" bindingOperationName="getDaySchedule" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7c166874-e6c3-4491-990a-8a1a9a27499c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <oas:Security>\r
         <!--You may enter ANY elements at this point-->\r
      </oas:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetDayScheduleRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:periodTerm>\r
            <!--Optional:-->\r
            <v1:start>?</v1:start>\r
            <!--Optional:-->\r
            <v1:end>?</v1:end>\r
         </typ:periodTerm>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:GetDayScheduleRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/getDayScheduleRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="dbed2681-3566-4f7b-bbff-6664c17cf61e" name="getDaySchedule"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:GetDayScheduleRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:patientId>30000000506224</typ:patientId>\r
         <typ:periodTerm>\r
            <v1:start>2023-10-11</v1:start>\r
            <v1:end>2023-11-10</v1:end>
         </typ:periodTerm>\r
      </typ:GetDayScheduleRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/getDayScheduleRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="846b372b-b638-46e6-957b-2dd1805d1c6f" isOneWay="false" action="getDrugInfo" name="getDrugInfo" bindingOperationName="getDrugInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7e6c7be6-7dab-44dc-96a2-4d8e6a993659" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <oas:Security>\r
         <!--You may enter ANY elements at this point-->\r
      </oas:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetDrugInfoRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:drugInfo>\r
            <!--Optional:-->\r
            <typ:smnnId>?</typ:smnnId>\r
            <!--Optional:-->\r
            <typ:otnId>?</typ:otnId>\r
         </typ:drugInfo>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:GetDrugInfoRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/getDrugInfoRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="e5ee5f17-d2b7-458c-878b-c0f088d7f674" name="getDrugInfo"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetDrugInfoRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:drugInfo>\r
            <typ:otnId>3675</typ:otnId>\r
         </typ:drugInfo>\r
      </typ:GetDrugInfoRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/getDrugInfoRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="2e64bffc-e353-4d90-90a8-56add1e4c389" isOneWay="false" action="getHistoryAdhoc" name="getHistoryAdhoc" bindingOperationName="getHistoryAdhoc" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3c9532e2-34dc-4c6e-8649-47ce44a2ea2a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <oas:Security>\r
         <!--You may enter ANY elements at this point-->\r
      </oas:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetHistoryAdhocRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:medicationId>?</typ:medicationId>\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:periodTerm>\r
            <!--Optional:-->\r
            <v1:start>?</v1:start>\r
            <!--Optional:-->\r
            <v1:end>?</v1:end>\r
         </typ:periodTerm>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:GetHistoryAdhocRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/getHistoryAdhocRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="20522caa-d443-4de4-a103-768580674757" name="getHistoryAdhoc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:GetHistoryAdhocRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:medicationId>1265672</typ:medicationId>\r
         <typ:patientId>10166510</typ:patientId>\r
         <typ:periodTerm>\r
            <v1:start>2022-10-18</v1:start>\r
         </typ:periodTerm>\r
      </typ:GetHistoryAdhocRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/getHistoryAdhocRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="6534ad8e-28f2-4d0f-a8e0-57da7f812fe7" isOneWay="false" action="getHistoryReaction" name="getHistoryReaction" bindingOperationName="getHistoryReaction" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="357d7cdd-258d-485c-b571-41130f5bc694" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <oas:Security>\r
         <!--You may enter ANY elements at this point-->\r
      </oas:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetHistoryReactionRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:GetHistoryReactionRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/getHistoryReactionRequest"/></con:call></con:operation><con:operation id="7db23864-2bba-47d0-bfa9-40640521e38f" isOneWay="false" action="getMedication" name="getMedication" bindingOperationName="getMedication" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2ab18374-dff3-474f-a558-ffe8b2fd2817" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <oas:Security>\r
         <!--You may enter ANY elements at this point-->\r
      </oas:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetMedicationRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:medicationId>?</typ:medicationId>\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:GetMedicationRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/getMedicationRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="277dc49b-ecad-4d87-ab48-e5d32384d714" name="getMedication"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:GetMedicationRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:medicationId>1429026</typ:medicationId>\r
         <typ:patientId>11715757 </typ:patientId>\r
      </typ:GetMedicationRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/getMedicationRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="a669a60d-73fd-414a-8fc9-f1c494d860c5" isOneWay="false" action="getPatientPillboxList" name="getPatientPillboxList" bindingOperationName="getPatientPillboxList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="305b7592-84e9-4981-b65d-c4c7fc967262" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <oas:Security>\r
         <!--You may enter ANY elements at this point-->\r
      </oas:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetPatientPillboxListRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:patientId>?</typ:patientId>\r
         <typ:statusFilter>?</typ:statusFilter>\r
         <!--Optional:-->\r
         <typ:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v1:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v1:sortOrder attributeName="?" desceding="false"/>\r
            </v1:sortingOptions>\r
         </typ:pagingOptions>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:GetPatientPillboxListRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/getPatientPillboxListRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="298ef4a5-86a0-4bc9-83fc-6081934394ca" name="getPatientPillboxList"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:GetPatientPillboxListRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:patientId>17248972</typ:patientId>\r
         <typ:statusFilter>waiting</typ:statusFilter>\r
         <typ:pagingOptions pageNumber="0" pageSize="20">\r
         </typ:pagingOptions>\r
      </typ:GetPatientPillboxListRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/getPatientPillboxListRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="95091ca6-1f07-4f35-ba3f-35a48674700b" isOneWay="false" action="getRegime" name="getRegime" bindingOperationName="getRegime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1ac7e00d-f266-4704-816f-acf6f7de1c50" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <oas:Security>\r
         <!--You may enter ANY elements at this point-->\r
      </oas:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetRegimeRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:GetRegimeRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/getRegimeRequest"/></con:call></con:operation><con:operation id="e2f076f4-53e0-4d86-a76b-405af28e4f99" isOneWay="false" action="getSchedule" name="getSchedule" bindingOperationName="getSchedule" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3c979523-cde9-44d1-9875-8d746727d3ba" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <oas:Security>\r
         <!--You may enter ANY elements at this point-->\r
      </oas:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetScheduleRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:medicationId>?</typ:medicationId>\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:periodTerm>\r
            <!--Optional:-->\r
            <v1:start>?</v1:start>\r
            <!--Optional:-->\r
            <v1:end>?</v1:end>\r
         </typ:periodTerm>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:GetScheduleRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/getScheduleRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="b2406d81-649e-41e0-bb45-04dc000f5298" name="getSchedule"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:GetScheduleRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:medicationId>1429032</typ:medicationId>\r
         <typ:patientId>11715757</typ:patientId>\r
         <typ:periodTerm>\r
            <v1:start>2023-10-18</v1:start>\r
         </typ:periodTerm>\r
      </typ:GetScheduleRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/getScheduleRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="55e45b63-69c6-4df4-bd5c-a056347a3ca7" isOneWay="false" action="getScheduleProject" name="getScheduleProject" bindingOperationName="getScheduleProject" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="629c809e-8087-4d1b-bc7e-bdb17c127f37" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <oas:Security>\r
         <!--You may enter ANY elements at this point-->\r
      </oas:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetScheduleProjectRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:medicationId>?</typ:medicationId>\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:startDate>?</typ:startDate>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:GetScheduleProjectRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/getScheduleProjectRequest"/></con:call></con:operation><con:operation id="45844aa0-ca16-46a5-9499-6cb78f618ebb" isOneWay="false" action="searchDrug" name="searchDrug" bindingOperationName="searchDrug" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0860a821-35bc-4ffa-b356-6cf114359545" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <oas:Security>\r
         <!--You may enter ANY elements at this point-->\r
      </oas:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:SearchDrugRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:searchString>?</typ:searchString>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:SearchDrugRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/searchDrugRequest"/></con:call><con:call id="f7b0508c-f811-4b1e-94c1-a22065046bcf" name="searchDrug"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>\r
   <soap:Body>\r
      <typ:SearchDrugRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:searchString>Пре</typ:searchString>\r
      </typ:SearchDrugRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/searchDrugRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="1d0b0ed0-7a6d-4f3d-96a9-357565443a2b" isOneWay="false" action="searchTradeName" name="searchTradeName" bindingOperationName="searchTradeName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7e402567-a4a5-4937-9b66-7082e87a297b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <oas:Security>\r
         <!--You may enter ANY elements at this point-->\r
      </oas:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:SearchTradeNameRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:smnnId>?</typ:smnnId>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:SearchTradeNameRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/searchTradeNameRequest"/></con:call></con:operation><con:operation id="afac6856-15e9-4681-be1c-383b167fb254" isOneWay="false" action="setReaction" name="setReaction" bindingOperationName="setReaction" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5e0adaa5-a7ae-4740-8beb-949d31ddf821" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <oas:Security>\r
         <!--You may enter ANY elements at this point-->\r
      </oas:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:SetReactionRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:patientId>?</typ:patientId>\r
         <typ:healthRate>?</typ:healthRate>\r
         <!--Optional:-->\r
         <typ:description>?</typ:description>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:SetReactionRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/setReactionRequest"/></con:call></con:operation><con:operation id="5a16cf50-14ec-4f6a-bb5c-503045f1df88" isOneWay="false" action="setRegime" name="setRegime" bindingOperationName="setRegime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b925856b-bd95-4a6c-bab4-cea147563807" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <oas:Security>\r
         <!--You may enter ANY elements at this point-->\r
      </oas:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:SetRegimeRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:nickname>?</typ:nickname>\r
         <!--Optional:-->\r
         <typ:bedtimeStart>?</typ:bedtimeStart>\r
         <!--Optional:-->\r
         <typ:bedtimeEnd>?</typ:bedtimeEnd>\r
         <!--Optional:-->\r
         <typ:breakfastSlot>?</typ:breakfastSlot>\r
         <!--Optional:-->\r
         <typ:lunchSlot>?</typ:lunchSlot>\r
         <!--Optional:-->\r
         <typ:dinnerSlot>?</typ:dinnerSlot>\r
         <!--Optional:-->\r
         <typ:bedtimeStartTime>?</typ:bedtimeStartTime>\r
         <!--Optional:-->\r
         <typ:bedtimeEndTime>?</typ:bedtimeEndTime>\r
         <!--Optional:-->\r
         <typ:breakfastTime>?</typ:breakfastTime>\r
         <!--Optional:-->\r
         <typ:lunchTime>?</typ:lunchTime>\r
         <!--Optional:-->\r
         <typ:dinnerTime>?</typ:dinnerTime>\r
         <!--Optional:-->\r
         <typ:isEasyScheduleCreation>?</typ:isEasyScheduleCreation>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:SetRegimeRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/setRegimeRequest"/></con:call><con:call id="3345ab68-e17a-471d-ac92-f7c9b69b00e9" name="setRegime"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:SetRegimeRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:nickname>?</typ:nickname>\r
         <!--Optional:-->\r
         <typ:bedtimeStart>?</typ:bedtimeStart>\r
         <!--Optional:-->\r
         <typ:bedtimeEnd>?</typ:bedtimeEnd>\r
         <!--Optional:-->\r
         <typ:breakfastSlot>?</typ:breakfastSlot>\r
         <!--Optional:-->\r
         <typ:lunchSlot>?</typ:lunchSlot>\r
         <!--Optional:-->\r
         <typ:dinnerSlot>?</typ:dinnerSlot>\r
         <!--Optional:-->\r
         <typ:bedtimeStartTime>?</typ:bedtimeStartTime>\r
         <!--Optional:-->\r
         <typ:bedtimeEndTime>?</typ:bedtimeEndTime>\r
         <!--Optional:-->\r
         <typ:breakfastTime>?</typ:breakfastTime>\r
         <!--Optional:-->\r
         <typ:lunchTime>?</typ:lunchTime>\r
         <!--Optional:-->\r
         <typ:dinnerTime>?</typ:dinnerTime>\r
         <!--Optional:-->\r
         <typ:isEasyScheduleCreation>?</typ:isEasyScheduleCreation>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:SetRegimeRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/setRegimeRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="9b968806-e33a-42ac-bcfe-1be8464d6fbe" isOneWay="false" action="setSchedule" name="setSchedule" bindingOperationName="setSchedule" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="53966b23-9156-43ee-a7e9-4430c0736513" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <oas:Security>\r
         <!--You may enter ANY elements at this point-->\r
      </oas:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:SetScheduleRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:medicationId>?</typ:medicationId>\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:scheduleName>?</typ:scheduleName>\r
         <!--Optional:-->\r
         <typ:pushNotifications>?</typ:pushNotifications>\r
         <!--Zero or more repetitions:-->\r
         <typ:daySchedule>\r
            <typ:scheduleDate>?</typ:scheduleDate>\r
            <!--Zero or more repetitions:-->\r
            <typ:receptionSlot>\r
               <!--Optional:-->\r
               <typ:slotCode>?</typ:slotCode>\r
               <typ:timeStart>?</typ:timeStart>\r
               <!--Optional:-->\r
               <typ:timeEnd>?</typ:timeEnd>\r
            </typ:receptionSlot>\r
         </typ:daySchedule>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:SetScheduleRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/setScheduleRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="edbb6272-9e5d-4ac2-bab1-ac740bd1a6bd" name="setSchedule"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-30496a3c-e2b8-453d-8fe0-39a7f07e5f1d" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <SetScheduleRequest xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:ns2="http://emias.mos.ru/ln/core/v1/" xmlns:ns3="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:ns4="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:ns5="http://emias.mos.ru/system/v1/userContext/" xmlns:ns6="http://emias.mos.ru/system/v1/faults/">\r
         <requestGUID>3291f138-1f62-416f-ae9d-395260698dc9</requestGUID>\r
         <medicationId>1228729</medicationId>\r
         <patientId>18373916</patientId>\r
         <scheduleName>Анальгин р-р для в/в и в/м 500 мг/мл 2 мл амп.</scheduleName>\r
         <pushNotifications>true</pushNotifications>\r
         <daySchedule>\r
            <scheduleDate>2023-08-11</scheduleDate>\r
            <receptionSlot>\r
               <slotCode>14</slotCode>\r
               <timeStart>14:00</timeStart>\r
               <timeEnd>14:30</timeEnd>\r
            </receptionSlot>\r
         </daySchedule>\r
         <options>\r
            <ns2:entry key="auto_expand">true</ns2:entry>\r
         </options>\r
      </SetScheduleRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/setScheduleRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="f79be21a-d55f-40ab-833d-5e68881acc63" isOneWay="false" action="setTakingAdhoc" name="setTakingAdhoc" bindingOperationName="setTakingAdhoc" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0dbfe003-1875-46dd-93ad-1b89b7fc61ca" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <oas:Security>\r
         <!--You may enter ANY elements at this point-->\r
      </oas:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:SetTakingAdhocRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:medicationId>?</typ:medicationId>\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:factTime>?</typ:factTime>\r
         <!--Optional:-->\r
         <typ:factSingleDose>?</typ:factSingleDose>\r
         <!--Optional:-->\r
         <typ:description>?</typ:description>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:SetTakingAdhocRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/setTakingAdhocRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="e78f60cb-78c2-4093-a3b7-d09ed925c1c8" isOneWay="false" action="setTakingCourse" name="setTakingCourse" bindingOperationName="setTakingCourse" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="abe0d2d8-9f5e-423f-ab42-5258da824e56" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <oas:Security>\r
         <!--You may enter ANY elements at this point-->\r
      </oas:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:SetTakingCourseRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:patientId>?</typ:patientId>\r
         <!--1 or more repetitions:-->\r
         <typ:takingSlot>\r
            <typ:medicationId>?</typ:medicationId>\r
            <typ:slotCode>?</typ:slotCode>\r
            <!--Optional:-->\r
            <typ:timeReception>?</typ:timeReception>\r
         </typ:takingSlot>\r
         <typ:takingDate>?</typ:takingDate>\r
         <typ:action>?</typ:action>\r
         <!--Optional:-->\r
         <typ:reasonSkipId>?</typ:reasonSkipId>\r
         <!--Optional:-->\r
         <typ:description>?</typ:description>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:SetTakingCourseRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/setTakingCourseRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="a8ce07f8-f585-4997-9373-d948c9a75bfb" name="setTakingCource"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-5905e650-3508-41a8-9d1d-1c5ba90bb618" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <SetTakingCourseRequest xmlns="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:ns2="http://emias.mos.ru/ln/core/v1/" xmlns:ns3="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:ns4="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:ns5="http://emias.mos.ru/system/v1/userContext/" xmlns:ns6="http://emias.mos.ru/system/v1/faults/">\r
         <requestGUID>0e03f68b-4e9f-47ca-a6af-5179c64f861d</requestGUID>\r
         <patientId>16509466</patientId>\r
         <takingSlot>\r
            <medicationId>1229737</medicationId>\r
            <slotCode>0</slotCode>\r
         </takingSlot>\r
         <takingDate>2023-08-14</takingDate>\r
         <action>done</action>\r
      </SetTakingCourseRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/setTakingCourseRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="e3367316-b1fd-4fa5-9a76-c4d9c8e5d4d1" isOneWay="false" action="updateMedication" name="updateMedication" bindingOperationName="updateMedication" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="37526975-0b12-4e8c-bc11-e4c235f5ecbf" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <oas:Security>\r
         <!--You may enter ANY elements at this point-->\r
      </oas:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:UpdateMedicationRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:startDate>?</typ:startDate>\r
         <!--Optional:-->\r
         <typ:endDate>?</typ:endDate>\r
         <typ:drug>\r
            <!--You have a CHOICE of the next 3 items at this level-->\r
            <typ:smnnId>?</typ:smnnId>\r
            <typ:otnId>?</typ:otnId>\r
            <typ:drugName>?</typ:drugName>\r
         </typ:drug>\r
         <!--Optional:-->\r
         <typ:comment>?</typ:comment>\r
         <typ:intake>\r
            <!--You have a CHOICE of the next 2 items at this level-->\r
            <typ:adhoc>\r
               <!--Optional:-->\r
               <typ:singleDose>?</typ:singleDose>\r
               <!--Optional:-->\r
               <typ:maxSingleDose>?</typ:maxSingleDose>\r
               <!--Optional:-->\r
               <typ:unitDose>?</typ:unitDose>\r
               <!--Optional:-->\r
               <typ:maxQtyPerDay>?</typ:maxQtyPerDay>\r
            </typ:adhoc>\r
            <typ:course>\r
               <typ:courseMode>?</typ:courseMode>\r
               <!--Optional:-->\r
               <typ:singleDose>?</typ:singleDose>\r
               <!--Optional:-->\r
               <typ:unitDose>?</typ:unitDose>\r
               <!--Optional:-->\r
               <typ:quantityPerDay>?</typ:quantityPerDay>\r
               <!--Optional:-->\r
               <typ:courseQuantity>?</typ:courseQuantity>\r
            </typ:course>\r
         </typ:intake>\r
         <!--Optional:-->\r
         <typ:mealsConnection>?</typ:mealsConnection>\r
         <!--Optional:-->\r
         <typ:sleepConnection>?</typ:sleepConnection>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:UpdateMedicationRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/updateMedicationRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="5b008353-5c2e-4545-a126-6e4be2a9383c" name="updateMedication"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:UpdateMedicationRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:startDate>?</typ:startDate>\r
         <!--Optional:-->\r
         <typ:endDate>?</typ:endDate>\r
         <typ:drug>\r
            <!--You have a CHOICE of the next 3 items at this level-->\r
            <typ:smnnId>?</typ:smnnId>\r
            <typ:otnId>?</typ:otnId>\r
            <typ:drugName>?</typ:drugName>\r
         </typ:drug>\r
         <!--Optional:-->\r
         <typ:comment>?</typ:comment>\r
         <typ:intake>\r
            <!--You have a CHOICE of the next 2 items at this level-->\r
            <typ:adhoc>\r
               <!--Optional:-->\r
               <typ:singleDose>?</typ:singleDose>\r
               <!--Optional:-->\r
               <typ:maxSingleDose>?</typ:maxSingleDose>\r
               <!--Optional:-->\r
               <typ:unitDose>?</typ:unitDose>\r
               <!--Optional:-->\r
               <typ:maxQtyPerDay>?</typ:maxQtyPerDay>\r
            </typ:adhoc>\r
            <typ:course>\r
               <typ:courseMode>?</typ:courseMode>\r
               <!--Optional:-->\r
               <typ:singleDose>?</typ:singleDose>\r
               <!--Optional:-->\r
               <typ:unitDose>?</typ:unitDose>\r
               <!--Optional:-->\r
               <typ:quantityPerDay>?</typ:quantityPerDay>\r
               <!--Optional:-->\r
               <typ:courseQuantity>?</typ:courseQuantity>\r
            </typ:course>\r
         </typ:intake>\r
         <!--Optional:-->\r
         <typ:mealsConnection>?</typ:mealsConnection>\r
         <!--Optional:-->\r
         <typ:sleepConnection>?</typ:sleepConnection>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:UpdateMedicationRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/updateMedicationRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="8ecdd61d-2a86-4910-86a1-1fb3730d664f" name="corse"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <typ:UpdateMedicationRequest>
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>
         <typ:patientId>11715757</typ:patientId>
         <typ:startDate>${=import java.text.SimpleDateFormat; Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE, +0); new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime());}</typ:startDate>
         <typ:endDate>${=import java.text.SimpleDateFormat; Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE,+7); new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime());}</typ:endDate>
         <typ:drug>
            <typ:otnId>14033</typ:otnId>
         </typ:drug>
         <typ:comment>Текст комментария</typ:comment>
         <typ:intake>
            <typ:course>
               <typ:courseMode>1204087533</typ:courseMode>
               <typ:singleDose>1</typ:singleDose>
               <typ:unitDose>1217034891</typ:unitDose>
               <typ:quantityPerDay>3</typ:quantityPerDay>
               <typ:courseQuantity>9</typ:courseQuantity>
            </typ:course>
         </typ:intake>
         <typ:mealsConnection>1204005078</typ:mealsConnection>
         <typ:sleepConnection>1204005081</typ:sleepConnection>
      </typ:UpdateMedicationRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/updateMedicationRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="1cb2fcdb-75cc-4b01-82a9-1f61c28332c7" isOneWay="false" action="updateMedicationInstruction" name="updateMedicationInstruction" bindingOperationName="updateMedicationInstruction" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="45fc529c-9da6-4250-bce5-17fd42948128" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <oas:Security>\r
         <!--You may enter ANY elements at this point-->\r
      </oas:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:UpdateMedicationInstructionRequest>\r
         <typ:requestGUID>?</typ:requestGUID>\r
         <typ:medicationId>?</typ:medicationId>\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:instruction>?</typ:instruction>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </typ:options>\r
      </typ:UpdateMedicationInstructionRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/ln/pillbox/v1/pillboxServicePortType/updateMedicationInstructionRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="1439b048-ae4a-4b61-8308-039bef9dfa62" wsaVersion="NONE" name="ЧАТбот ЦО" type="wsdl" bindingName="{http://emias.mos.ru/inquiry-purpose/link/v3/soap/}LinkBinding" soapVersion="1_2" anonymous="optional" definition="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService?wsdl"><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="Link" targetNamespace="http://emias.mos.ru/inquiry-purpose/link/v3/soap/" xmlns:anw="http://emias.mos.ru/inquiry-purpose/link/v3/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://emias.mos.ru/inquiry-purpose/link/v3/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:import location="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService?wsdl=AAAADHAjUCM4P2cuZURELh.8CbUekdsqtuYJutdgdd2goRyY5OsyEDjmp4wjpsOSaDUFsgjbXIIaGB2B9y.pJCOMHEBq_jpc7LjCKllx7WWDLA13NR5UeoT.S.U9IneKLJO5kZJRr0gSp4et8ksXothbnfN1cRXq.ThpoKAQ3dUj0lSuora6L9WE9FpKo2VKm.lms0IjsoJpaQN5VVSShqdML.aKzWndyIQPqGA-" namespace="http://emias.mos.ru/inquiry-purpose/link/v3/"></wsdl:import>
  <wsdl:binding name="LinkBinding" type="anw:LinkService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetLink">
      <soap:operation soapAction="GetLink"/>
      <wsdl:input>
        <soap:header message="anw:UserContext" part="UserContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LinkCodeError">
        <soap:fault name="LinkCodeError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetLinks">
      <soap:operation soapAction="GetLinks"/>
      <wsdl:input>
        <soap:header message="anw:UserContext" part="UserContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LinkCodeError">
        <soap:fault name="LinkCodeError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetLinkByAppoinmentId">
      <soap:operation soapAction="GetLinkByAppoinmentId"/>
      <wsdl:input>
        <soap:header message="anw:UserContext" part="UserContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LinkCodeError">
        <soap:fault name="LinkCodeError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetLinksByAppoinmentsId">
      <soap:operation soapAction="GetLinksByAppoinmentsId" soapActionRequired="true"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="anw:UserContext" part="UserContext" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LinkCodeError">
        <soap:fault name="LinkCodeError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetLinkByOms">
      <soap:operation soapAction="GetLinkByOms" soapActionRequired="true"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="anw:UserContext" part="UserContext" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LinkCodeError">
        <soap:fault name="LinkCodeError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="LinkService">
    <wsdl:port binding="tns:LinkBinding" name="LinkBinding">
      <soap:address location="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService?wsdl=AAAADHAjUCM4P2cuZURELh.8CbUekdsqtuYJutdgdd2goRyY5OsyEDjmp4wjpsOSaDUFsgjbXIIaGB2B9y.pJCOMHEBq_jpc7LjCKllx7WWDLA13NR5UeoT.S.U9IneKLJO5kZJRr0gSp4et8ksXothbnfN1cRXq.ThpoKAQ3dUj0lSuora6L9WE9FpKo2VKm.lms0IjsoJpaQN5VVSShqdML.aKzWndyIQPqGA-</con:url><con:content><![CDATA[<wsdl:definitions name="Link" targetNamespace="http://emias.mos.ru/inquiry-purpose/link/v3/" xmlns:nsf="http://emias.mos.ru/system/v1/faults/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tcx="http://emias.mos.ru/system/v1/userContext/" xmlns:tnc="http://emias.mos.ru/inquiry-purpose/link/v3/types/" xmlns:tns="http://emias.mos.ru/inquiry-purpose/link/v3/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:documentation>version="2.0"</wsdl:documentation>
  <wsdl:types>
    <xs:schema targetNamespace="http://emias.mos.ru/inquiry-purpose/link/v3/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://emias.mos.ru/system/v1/faults/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELh.8CbUekdsqtuYJutdgdd2goRyY5OsyEDjmp4wjpsOSaDUFsgjbXIIaGB2B9y.pJCOMHEBq_jpc7LjCKllx7WWDLA13NR5UeoT.S.U9IneKLJO5kZJRr0gSp4et8ksXothbnfN6cRW7oTxusKZX3NV91kSx_K_4ZJ2J6FhV_ThXmvtu3LgAG_jYcjXi19xkho4e"/>
      <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELh.8CbUekdsqtuYJutdgdd2goRyY5OsyEDjmp4wjpsOSaDUFsgjbXIIaGB2B9y.pJCOMHEBq_jpc7LjCKllx7WWDLA13NR5UeoT.S.U9IneKLJO5kZJRr0gSp4et8ksXothbnfN6cRW7oTxusKZX3NV91kSx_K_4ZI6b.EZi4XhbjOd7_l9.oMeMyZwBWnKn_9RQB.Nx098-"/>
      <xs:import namespace="http://emias.mos.ru/inquiry-purpose/link/v3/types/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELh.8CbUekdsqtuYJutdgdd2goRyY5OsyEDjmp4wjpsOSaDUFsgjbXIIaGB2B9y.pJCOMHEBq_jpc7LjCKllx7WWDLA13NR5UeoT.S.U9IneKLJO5kZJRr0gSp4et8ksXothbnfN6cRW7rT92pLwL1oF.11OsvaqsZJeB818M_XNdn_ZstQl7958zZwB4ShFtUgchitrYF_H5aclD16QymrWB"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="GetLinkRequest">
    <wsdl:part element="tnc:GetLinkRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fault">
    <wsdl:documentation>Ошибка</wsdl:documentation>
    <wsdl:part element="nsf:fault" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetLinksResponse">
    <wsdl:part element="tnc:GetLinksResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetLinkResponse">
    <wsdl:part element="tnc:GetLinkResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetLinkByAppoinmentIdResponse">
    <wsdl:part element="tnc:GetLinkByAppoinmentIdResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetLinksByAppoinmenstIdRequest">
    <wsdl:part element="tnc:GetLinksByAppoinmenstIdRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetLinksRequest">
    <wsdl:part element="tnc:GetLinksRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetLinkByOmsResponse">
    <wsdl:part element="tnc:GetLinkByOmsResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UserContext">
    <wsdl:part element="tcx:userContext" name="UserContext"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetLinkByAppoinmentIdRequest">
    <wsdl:part element="tnc:GetLinkByAppoinmentIdRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetLinksByAppoinmentsIdResponse">
    <wsdl:part element="tnc:GetLinksByAppoinmentsIdResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetLinkByOmsRequest">
    <wsdl:part element="tnc:GetLinkByOmsRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="LinkService">
    <wsdl:operation name="GetLink">
      <wsdl:input message="tns:GetLinkRequest"></wsdl:input>
      <wsdl:output message="tns:GetLinkResponse"></wsdl:output>
      <wsdl:fault message="tns:fault" name="LinkCodeError"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetLinks">
      <wsdl:input message="tns:GetLinksRequest"></wsdl:input>
      <wsdl:output message="tns:GetLinksResponse"></wsdl:output>
      <wsdl:fault message="tns:fault" name="LinkCodeError"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetLinkByAppoinmentId">
      <wsdl:input message="tns:GetLinkByAppoinmentIdRequest"></wsdl:input>
      <wsdl:output message="tns:GetLinkByAppoinmentIdResponse"></wsdl:output>
      <wsdl:fault message="tns:fault" name="LinkCodeError"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetLinksByAppoinmentsId">
      <wsdl:input message="tns:GetLinksByAppoinmenstIdRequest"></wsdl:input>
      <wsdl:output message="tns:GetLinksByAppoinmentsIdResponse"></wsdl:output>
      <wsdl:fault message="tns:fault" name="LinkCodeError"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetLinkByOms">
      <wsdl:input message="tns:GetLinkByOmsRequest"></wsdl:input>
      <wsdl:output message="tns:GetLinkByOmsResponse"></wsdl:output>
      <wsdl:fault message="tns:fault" name="LinkCodeError"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELh.8CbUekdsqtuYJutdgdd2goRyY5OsyEDjmp4wjpsOSaDUFsgjbXIIaGB2B9y.pJCOMHEBq_jpc7LjCKllx7WWDLA13NR5UeoT.S.U9IneKLJO5kZJRr0gSp4et8ksXothbnfN6cRW7oTxusKZX3NV91kSx_K_4ZJ2J6FhV_ThXmvtu3LgAG_jYcjXi19xkho4e</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/faults/" version="1.0" xmlns="http://emias.mos.ru/system/v1/faults/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELh.8CbUekdsqtuYJutdgdd2goRyY5OsyEDjmp4wjpsOSaDUFsgjbXIIaGB2B9y.pJCOMHEBq_jpc7LjCKllx7WWDLA13NR5UeoT.S.U9IneKLJO5kZJRr0gSp4et8ksXothbnfN6cRW7oTxusKZX3NV91kSx_K_4ZIOb.YUld3GOi7hrXschJ6B6s5U-"/>
  <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELh.8CbUekdsqtuYJutdgdd2goRyY5OsyEDjmp4wjpsOSaDUFsgjbXIIaGB2B9y.pJCOMHEBq_jpc7LjCKllx7WWDLA13NR5UeoT.S.U9IneKLJO5kZJRr0gSp4et8ksXothbnfN6cRW7oTxusKZX3NV91kSx_K_4ZI6b.EZi4XhbjOd7_l9.oMeMyZwBWnKn_9RQB.Nx098-"/>
  <!--faults-->
  <xs:element name="fault" type="BaseFault">
    <xs:annotation>
      <xs:documentation>Базовый тип ошибки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SecurityFault">
    <xs:annotation>
      <xs:documentation>Ошибка безопасности</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element ref="uctx:userContext"/>
          <xs:choice>
            <xs:element name="unauthorizedRequestSecurityException" type="UnauthorizedRequestSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="otherSecurityException" type="OtherSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:sequence>
        <xs:attribute fixed="SECURITY" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BusinessFault">
    <xs:annotation>
      <xs:documentation>Бизнес ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Коллекция Сообщений об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hasErrors" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак наличия ошибок в списке сообщений</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="BUSINESS" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UnexpectedFault">
    <xs:annotation>
      <xs:documentation>Непредвиденная ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="version" type="xs:string">
            <xs:annotation>
              <xs:documentation>Версия продукта-сервиса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="stackTrace">
            <xs:annotation>
              <xs:documentation>Стек вызова (последние 10  записей)</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="10" name="stackTraceRecord">
                  <xs:annotation>
                    <xs:documentation>Запись StackTrace</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="declaringClass" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование класса, содержащего метод</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="methodName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование метода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="fileName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование файла</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="lineNumber" type="xs:int">
                        <xs:annotation>
                          <xs:documentation>Номер строки кода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="UNEXPECTED" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="BaseFault">
    <xs:annotation>
      <xs:documentation>Описание базового типа описания ошибки</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--security exceptions-->
  <xs:complexType name="UnauthorizedRequestSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="requiredRights">
        <xs:annotation>
          <xs:documentation>Перечень идентификаторов недостающих Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Идентификатор Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="UNAUTHORIZED_REQUEST_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="OtherSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="message" type="Message">
        <xs:annotation>
          <xs:documentation>Сообщение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="OTHER_SECURITY_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="SecurityExceptionTypes">
    <xs:annotation>
      <xs:documentation>Типы исключений безопасности</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNAUTHORIZED_REQUEST_EXCEPTION"/>
      <xs:enumeration value="OTHER_SECURITY_EXCEPTION"/>
    </xs:restriction>
  </xs:simpleType>
  <!--components-->
  <xs:simpleType name="FaultTypes">
    <xs:annotation>
      <xs:documentation>Тип ошибки</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="SECURITY">
        <xs:annotation>
          <xs:documentation>Непредвиденная ошибка приложения</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BUSINESS">
        <xs:annotation>
          <xs:documentation>Бизнес ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UNEXPECTED">
        <xs:annotation>
          <xs:documentation>Ошибка безопасности</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELh.8CbUekdsqtuYJutdgdd2goRyY5OsyEDjmp4wjpsOSaDUFsgjbXIIaGB2B9y.pJCOMHEBq_jpc7LjCKllx7WWDLA13NR5UeoT.S.U9IneKLJO5kZJRr0gSp4et8ksXothbnfN6cRW7oTxusKZX3NV91kSx_K_4ZI6b.EZi4XhbjOd7_l9.oMeMyZwBWnKn_9RQB.Nx098-</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/userContext/" version="1.0" xmlns="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELh.8CbUekdsqtuYJutdgdd2goRyY5OsyEDjmp4wjpsOSaDUFsgjbXIIaGB2B9y.pJCOMHEBq_jpc7LjCKllx7WWDLA13NR5UeoT.S.U9IneKLJO5kZJRr0gSp4et8ksXothbnfN6cRW7oTxusKZXzMN8xw.q4_exOZ8MQGRYULiFg61jGdwxtH1u"/>
  <xs:element name="userContext" type="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="systemName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Шифр системы-потребителя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя пользователя (логин)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRoleId" type="ID">
        <xs:annotation>
          <xs:documentation>Код Роли</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isUserRoleSystemWide" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак "Общесистемная Роль"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRights">
        <xs:annotation>
          <xs:documentation>Коллекция Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Код Полномочия</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="jobExecutionId" type="ID"/>
      <xs:element minOccurs="0" name="hostIp" type="xs:string">
        <xs:annotation>
          <xs:documentation>IP адрес хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hostName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="options" type="Options">
        <xs:annotation>
          <xs:documentation>Набор именованных значений</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELh.8CbUekdsqtuYJutdgdd2goRyY5OsyEDjmp4wjpsOSaDUFsgjbXIIaGB2B9y.pJCOMHEBq_jpc7LjCKllx7WWDLA13NR5UeoT.S.U9IneKLJO5kZJRr0gSp4et8ksXothbnfN6cRW7oTxusKZXzMN8xw.q4_exOZ8MQGRYULiFg61jGdwxtH1u</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELh.8CbUekdsqtuYJutdgdd2goRyY5OsyEDjmp4wjpsOSaDUFsgjbXIIaGB2B9y.pJCOMHEBq_jpc7LjCKllx7WWDLA13NR5UeoT.S.U9IneKLJO5kZJRr0gSp4et8ksXothbnfN6cRW7oTxusKZX3NV91kSx_K_4ZIOb.YUld3GOi7hrXschJ6B6s5U-"/>
  <!--references-->
  <xs:element name="medicalOrganizationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинского учреждения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--async operation status-->
  <xs:element name="operationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор операции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OperationExecutionStatus">
    <xs:annotation>
      <xs:documentation>Статус выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="isCompleted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак окончания выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="completenessProgress" type="OperationCompletenessBase">
        <xs:annotation>
          <xs:documentation>Сведения о текущем статусе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hasSucceded" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак успешности выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
        <xs:annotation>
          <xs:documentation>Коллекция сообщений, порожденных в ходе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор операции</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="false" name="OperationCompletenessPercentage">
    <xs:annotation>
      <xs:documentation>Описание текущего статуса выполнения операции в процентах (0%-100%)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OperationCompletenessBase">
        <xs:sequence>
          <xs:element name="completenessStatus">
            <xs:annotation>
              <xs:documentation>Статус (0%-100%)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:unsignedByte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания текущего статуса выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--calling methods' options-->
  <xs:element name="options" type="Options">
    <xs:annotation>
      <xs:documentation>Параметры вызова метода</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Options">
    <xs:annotation>
      <xs:documentation>Набор именованных значений</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Именованное значение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--pagination-->
  <xs:element name="pagingOptions" type="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="PagingResults">
    <xs:annotation>
      <xs:documentation>Список с пагинацией</xs:documentation>
    </xs:annotation>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageTotal" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество страниц</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morePagesAvailable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Флаг доступности других страниц с результатами для "постраничного листания" (true - если доступны еще страницы; false - иначе)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="totalItemsCount" type="xs:long" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество элементов (на всех страницах)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" ref="sortingOptions"/>
    </xs:sequence>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--sorting-->
  <xs:element name="sortingOptions" type="SortingOptions">
    <xs:annotation>
      <xs:documentation>Параметры сортировки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SortingOptions">
    <xs:annotation>
      <xs:documentation>Условия сортировки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="3" name="sortOrder" type="SortOrder">
        <xs:annotation>
          <xs:documentation>Условия сортировки
(используются в соответствии с
переданной последовательностью)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SortOrder">
    <xs:annotation>
      <xs:documentation>Сортировка</xs:documentation>
    </xs:annotation>
    <xs:attribute name="attributeName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Наименование поля, по которому должна быть произведена сортировка</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="false" name="desceding" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Направление сортировки</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--void response-->
  <xs:element fixed="true" name="result">
    <xs:annotation>
      <xs:documentation>Элемент для использования в методах, не предполагающих возврат какого-либо значения</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:boolean"/>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <!--base types-->
  <xs:complexType name="TimeInterval">
    <xs:annotation>
      <xs:documentation>Временной период (время)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время начала интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время окончания интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELh.8CbUekdsqtuYJutdgdd2goRyY5OsyEDjmp4wjpsOSaDUFsgjbXIIaGB2B9y.pJCOMHEBq_jpc7LjCKllx7WWDLA13NR5UeoT.S.U9IneKLJO5kZJRr0gSp4et8ksXothbnfN6cRW7oTxusKZX3NV91kSx_K_4ZIOb.YUld3GOi7hrXschJ6B6s5U-</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:simpleType name="GUID">
    <xs:annotation>
      <xs:documentation>Глобальный 128-битный идентификатор (Globally Unique Identifier)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELh.8CbUekdsqtuYJutdgdd2goRyY5OsyEDjmp4wjpsOSaDUFsgjbXIIaGB2B9y.pJCOMHEBq_jpc7LjCKllx7WWDLA13NR5UeoT.S.U9IneKLJO5kZJRr0gSp4et8ksXothbnfN6cRW7rT92pLwL1oF.11OsvaqsZJeB818M_XNdn_ZstQl7958zZwB4ShFtUgchitrYF_H5aclD16QymrWB</con:url><con:content><![CDATA[<!--edited with XMLSpy v2011 rel. 2 (http://www.altova.com) by DIT (DIT)-->
<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/inquiry-purpose/link/v3/types/" version="1.0" xmlns="http://emias.mos.ru/inquiry-purpose/link/v3/types/" xmlns:ns1="http://emias.mos.ru/system/v1/userContext/" xmlns:ns2="http://emias.mos.ru/system/v1/faults/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELh.8CbUekdsqtuYJutdgdd2goRyY5OsyEDjmp4wjpsOSaDUFsgjbXIIaGB2B9y.pJCOMHEBq_jpc7LjCKllx7WWDLA13NR5UeoT.S.U9IneKLJO5kZJRr0gSp4et8ksXothbnfN6cRW7oTxusKZXzMN8xw.q4_exOZ8MQGRYULiFg61jGdwxtH1u"/>
  <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELh.8CbUekdsqtuYJutdgdd2goRyY5OsyEDjmp4wjpsOSaDUFsgjbXIIaGB2B9y.pJCOMHEBq_jpc7LjCKllx7WWDLA13NR5UeoT.S.U9IneKLJO5kZJRr0gSp4et8ksXothbnfN6cRW7oTxusKZX3NV91kSx_K_4ZI6b.EZi4XhbjOd7_l9.oMeMyZwBWnKn_9RQB.Nx098-"/>
  <xs:import namespace="http://emias.mos.ru/system/v1/faults/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELh.8CbUekdsqtuYJutdgdd2goRyY5OsyEDjmp4wjpsOSaDUFsgjbXIIaGB2B9y.pJCOMHEBq_jpc7LjCKllx7WWDLA13NR5UeoT.S.U9IneKLJO5kZJRr0gSp4et8ksXothbnfN6cRW7oTxusKZX3NV91kSx_K_4ZJ2J6FhV_ThXmvtu3LgAG_jYcjXi19xkho4e"/>
  <xs:element name="GetLinksRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода GetLinks</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" name="List" type="List"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetLinksResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода GetLinks</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="Links" type="Links"/>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="Warnings" type="ns2:BusinessFault"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetLinkResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода GetLink</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="Link" type="Link"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetLinkRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода GetLink</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="appointmentId" type="ID">
          <xs:annotation>
            <xs:documentation>Идентификатор записи пациента</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="patientId" type="ID">
          <xs:annotation>
            <xs:documentation>Идентификатор пациента</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="positionNomCode" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор Должности МР для обращения из справочника</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetLinkByAppoinmentIdRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода GetLinkByAppoinmentId</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="appointmentId" type="ID">
          <xs:annotation>
            <xs:documentation>Идентификатор записи пациента</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetLinkByAppoinmentIdResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода GetLinkByAppoinmentId</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="Link" type="Link"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetLinksByAppoinmenstIdRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода GetLinksByAppoinmenstId</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" name="list" type="ListOfAppointments"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetLinksByAppoinmentsIdResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода GetLinksByAppoinmentsId</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="Links" type="Links"/>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="Warnings" type="ns2:BusinessFault"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="Links">
    <xs:sequence>
      <xs:element name="appointmentId" type="ID">
        <xs:annotation>
          <xs:documentation>Идентификатор записи пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="domain" type="xs:string">
        <xs:annotation>
          <xs:documentation>Домен</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hash" type="xs:string">
        <xs:annotation>
          <xs:documentation>Хэш-код анкеты для опроса пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="complaintsFlag" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Флаг наличия заполненных жалоб</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Link">
    <xs:sequence>
      <xs:element name="positionNomCode" type="xs:string">
        <xs:annotation>
          <xs:documentation>Идентификатор Должности МР для обращения из справочника</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="domain" type="xs:string">
        <xs:annotation>
          <xs:documentation>Домен</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hash" type="xs:string">
        <xs:annotation>
          <xs:documentation>Хэш-код анкеты для опроса пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="complaintsFlag" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Флаг наличия заполненных жалоб</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="id" type="ID">
        <xs:annotation>
          <xs:documentation>Идентификатор жалобы</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="List">
    <xs:sequence>
      <xs:element name="appointmentId" type="ID">
        <xs:annotation>
          <xs:documentation>Идентификатор записи пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="patientId" type="ID">
        <xs:annotation>
          <xs:documentation>Идентификатор пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="positionNomCode" type="xs:string">
        <xs:annotation>
          <xs:documentation>Идентификатор Должности МР для обращения из справочника</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ListOfAppointments">
    <xs:sequence>
      <xs:element name="appointmentId" type="ID">
        <xs:annotation>
          <xs:documentation>Идентификатор записи пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PatientData">
    <xs:annotation>
      <xs:documentation>Данные пациента</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер полиса ОМС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string">
        <xs:annotation>
          <xs:documentation>Серия полиса ОМС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="birthDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата рождения пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="GetLinkByOmsRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода GetPatientComplaintForAppointment</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="positionNomCode" type="xs:string">
          <xs:annotation>
            <xs:documentation>Идентификатор Должности МР</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:choice>
          <xs:element name="patientId" type="ID">
            <xs:annotation>
              <xs:documentation>Идентификатор пациента</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="patientData" type="PatientData">
            <xs:annotation>
              <xs:documentation>Данные пациента</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:choice>
        <xs:element minOccurs="0" name="options" type="Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetLinkByOmsResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода GetPatientComplaints</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Link" type="Link"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService</con:endpoint></con:endpoints><con:operation id="3c6228c6-bcc6-40c8-ae6b-231698200800" isOneWay="false" action="GetLink" name="GetLink" bindingOperationName="GetLink" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="cc3c4e9b-d8f2-4112-ac72-f42ab8f00f23" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/inquiry-purpose/link/v3/types/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetLinkRequest>\r
         <typ:appointmentId>?</typ:appointmentId>\r
         <typ:patientId>?</typ:patientId>\r
         <typ:positionNomCode>?</typ:positionNomCode>\r
      </typ:GetLinkRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/inquiry-purpose/link/v3/soap/LinkService/GetLinkRequest"/></con:call><con:call id="30aa46e6-128e-4609-8a02-962e0df42c31" name="getLink"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-c6fb34b0-0119-4bcf-a1e2-7c2fed62d02e">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns2:userContext xmlns="http://emias.mos.ru/inquiry-purpose/link/v3/types/" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/system/v1/faults/">\r
         <ns2:systemName>EIM</ns2:systemName>\r
         <ns2:userName>0</ns2:userName>\r
         <ns2:userRoleId>4578</ns2:userRoleId>\r
         <ns2:isUserRoleSystemWide>true</ns2:isUserRoleSystemWide>\r
         <ns2:userRights>\r
            <ns2:userRightId>3028</ns2:userRightId>\r
         </ns2:userRights>\r
         <ns2:jobExecutionId>0</ns2:jobExecutionId>\r
      </ns2:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <GetLinkRequest xmlns="http://emias.mos.ru/inquiry-purpose/link/v3/types/" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/system/v1/faults/">\r
         <appointmentId>391928730373</appointmentId>\r
         <patientId>30379945</patientId>\r
         <positionNomCode>6</positionNomCode>\r
      </GetLinkRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/inquiry-purpose/link/v3/soap/LinkService/GetLinkRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="26f196c5-2375-46db-bd0f-c01649cd79d0" isOneWay="false" action="GetLinkByAppoinmentId" name="GetLinkByAppoinmentId" bindingOperationName="GetLinkByAppoinmentId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4dbc3df0-de9e-4d08-a1e6-8a761b5d276a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/inquiry-purpose/link/v3/types/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetLinkByAppoinmentIdRequest>\r
         <typ:appointmentId>?</typ:appointmentId>\r
      </typ:GetLinkByAppoinmentIdRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/inquiry-purpose/link/v3/soap/LinkService/GetLinkByAppoinmentIdRequest"/></con:call></con:operation><con:operation id="c7406ca5-2aa1-465e-94ee-cba7ec303df9" isOneWay="false" action="GetLinkByOms" name="GetLinkByOms" bindingOperationName="GetLinkByOms" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="067eb6dd-1f0d-4d0c-8a97-a496c3a1b188" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/inquiry-purpose/link/v3/types/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetLinkByOmsRequest>\r
         <typ:positionNomCode>?</typ:positionNomCode>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <typ:patientId>?</typ:patientId>\r
         <typ:patientData>\r
            <typ:omsNumber>?</typ:omsNumber>\r
            <!--Optional:-->\r
            <typ:omsSeries>?</typ:omsSeries>\r
            <typ:birthDate>?</typ:birthDate>\r
         </typ:patientData>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </typ:GetLinkByOmsRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/inquiry-purpose/link/v3/soap/LinkService/GetLinkByOmsRequest"/></con:call></con:operation><con:operation id="8fe2d8f6-f064-4079-b403-f5853422d88c" isOneWay="false" action="GetLinks" name="GetLinks" bindingOperationName="GetLinks" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fbaf2716-63e9-4960-890a-b16f7d304cd0" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/inquiry-purpose/link/v3/types/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetLinksRequest>\r
         <!--1 or more repetitions:-->\r
         <typ:List>\r
            <typ:appointmentId>?</typ:appointmentId>\r
            <typ:patientId>?</typ:patientId>\r
            <typ:positionNomCode>?</typ:positionNomCode>\r
         </typ:List>\r
      </typ:GetLinksRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/inquiry-purpose/link/v3/soap/LinkService/GetLinksRequest"/></con:call></con:operation><con:operation id="5d8ed19b-8bfe-419c-8417-e83e29c323ee" isOneWay="false" action="GetLinksByAppoinmentsId" name="GetLinksByAppoinmentsId" bindingOperationName="GetLinksByAppoinmentsId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="abf67f3c-c876-41df-b990-da140a82fbb1" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/inquiry-purpose/link/v3/types/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetLinksByAppoinmenstIdRequest>\r
         <!--1 or more repetitions:-->\r
         <typ:list>\r
            <typ:appointmentId>?</typ:appointmentId>\r
         </typ:list>\r
      </typ:GetLinksByAppoinmenstIdRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/inquiry-purpose/link/v3/soap/LinkService/GetLinksByAppoinmentsIdRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="4f09c6e2-c07d-4efd-895e-cf3418f0ce3b" wsaVersion="NONE" name="ЦО" type="wsdl" bindingName="{http://emias.mos.ru/inquiry-purpose/inquiry-purpose-orchestration/v1/soap/}InquiryPurposeOrchestrationBinding" soapVersion="1_2" anonymous="optional" definition="http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService?wsdl"><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="InquiryPurposeOrchestration" targetNamespace="http://emias.mos.ru/inquiry-purpose/inquiry-purpose-orchestration/v1/soap/" xmlns:anw="http://emias.mos.ru/inquiry-purpose/inquiry-purpose-orchestration/v1/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://emias.mos.ru/inquiry-purpose/inquiry-purpose-orchestration/v1/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:documentation>version="1.0"</wsdl:documentation>
  <wsdl:import location="http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService?wsdl=AAAADHAjUCM4P2cuZURELkO9rvXI9uYKLLSUhMe72Hydh2GKnbV4lrwvz4k4AsJFseU_PKWHJunuXcMnHKVSjDXxB_jgbB6AtCqOGH9Pcv5dQGkXoQtiQKcije1EPyg5XkDlG7ooDrfr.9qpFVx7xbnJ4ATvPmt96yVOCsclB5Gqb.cvozACwsFYvYAvT6RpCgV6oUpXitBET58D6VWtGQPgouUGBzyJpD4CevzSe6ABE1ptlZQE71Oy.bKlKK4N1IoRJash7Jn2D6Cs323m1hArbgzeJVsa" namespace="http://emias.mos.ru/inquiry-purpose/inquiry-purpose-orchestration/v1/"></wsdl:import>
  <wsdl:binding name="InquiryPurposeOrchestrationBinding" type="anw:InquiryPurposeOrchestrationService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetInquiryPurposes">
      <soap:operation soapAction="GetInquiryPurposes"/>
      <wsdl:input>
        <soap:header message="anw:UserContext" part="UserContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InquiryPurposeOrchestrationCodeError">
        <soap:fault name="InquiryPurposeOrchestrationCodeError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="InquiryPurposeOrchestrationService">
    <wsdl:port binding="tns:InquiryPurposeOrchestrationBinding" name="InquiryPurposeOrchestrationBinding">
      <soap:address location="http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService?wsdl=AAAADHAjUCM4P2cuZURELkO9rvXI9uYKLLSUhMe72Hydh2GKnbV4lrwvz4k4AsJFseU_PKWHJunuXcMnHKVSjDXxB_jgbB6AtCqOGH9Pcv5dQGkXoQtiQKcije1EPyg5XkDlG7ooDrfr.9qpFVx7xbnJ4ATvPmt96yVOCsclB5Gqb.cvozACwsFYvYAvT6RpCgV6oUpXitBET58D6VWtGQPgouUGBzyJpD4CevzSe6ABE1ptlZQE71Oy.bKlKK4N1IoRJash7Jn2D6Cs323m1hArbgzeJVsa</con:url><con:content><![CDATA[<wsdl:definitions name="InquiryPurposeOrchestration" targetNamespace="http://emias.mos.ru/inquiry-purpose/inquiry-purpose-orchestration/v1/" xmlns:nsf="http://emias.mos.ru/system/v1/faults/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tcx="http://emias.mos.ru/system/v1/userContext/" xmlns:tnc="http://emias.mos.ru/inquiry-purpose/inquiry-purpose-orchestration/v1/types/" xmlns:tns="http://emias.mos.ru/inquiry-purpose/inquiry-purpose-orchestration/v1/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:documentation>version="1.0"</wsdl:documentation>
  <wsdl:types>
    <xs:schema targetNamespace="http://emias.mos.ru/inquiry-purpose/inquiry-purpose-orchestration/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://emias.mos.ru/system/v1/faults/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkO9rvXI9uYKLLSUhMe72Hydh2GKnbV4lrwvz4k4AsJFseU_PKWHJunuXcMnHKVSjDXxB_jgbB6AtCqOGH9Pcv5dQGkXoQtiQKcije1EPyg5XkDlG7ooDrfr.9qpFVx7xbnJ4ATvPmt96yVOCsclB5Gqb.cvozANwsEJ5YQoX6IuCwUkpVpI1MkGBNcL8kisA1_h_PF1tHx24K1wQS1o0o3Aiv2Z"/>
      <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkO9rvXI9uYKLLSUhMe72Hydh2GKnbV4lrwvz4k4AsJFseU_PKWHJunuXcMnHKVSjDXxB_jgbB6AtCqOGH9Pcv5dQGkXoQtiQKcije1EPyg5XkDlG7ooDrfr.9qpFVx7xbnJ4ATvPmt96yVOCsclB5Gqb.cvozANwsEJ5YQoX6IuCwUkpVpI1MkGBMQZ4labHx_t6u0HWzSVs4R.Q4s5tFcvjLEA07oeyVI-"/>
      <xs:import namespace="http://emias.mos.ru/inquiry-purpose/inquiry-purpose-orchestration/v1/types/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkO9rvXI9uYKLLSUhMe72Hydh2GKnbV4lrwvz4k4AsJFseU_PKWHJunuXcMnHKVSjDXxB_jgbB6AtCqOGH9Pcv5dQGkXoQtiQKcije1EPyg5XkDlG7ooDrfr.9qpFVx7xbnJ4ATvPmt96yVOCsclB5Gqb.cvozANwsEJ6YcwS7hyAVEnpE1VlcxSBNgE9lGxAgi0_.ABBSOVsnZAZ.3ZdrYGFUl4iJIFrA2k7ra6IqhGjM0Of6Ui7Ybrt7C6pycnBGLL1DkCd9ZZxrxXtQ--"/>
      <xs:element name="GetInquiryPurposesRequest">
        <xs:annotation>
          <xs:documentation>Входные параметры метода GetInquiryPurposes</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="omsNumber" type="xs:string">
              <xs:annotation>
                <xs:documentation>Номер медицинского полиса</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="patientId" type="tnc:ID">
              <xs:annotation>
                <xs:documentation>Идентификатор пациента</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="genderKpi" type="xs:boolean">
              <xs:annotation>
                <xs:documentation>Пол пациента, полученный из КПИ</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="birthDate" type="xs:date">
              <xs:annotation>
                <xs:documentation>Дата рождения пациента</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="paging_options" type="tnc:PagingOptions"/>
            <xs:element minOccurs="0" ref="tnc:options"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetInquiryPurposesResponse">
        <xs:annotation>
          <xs:documentation>Выходные параметры метода GetInquiryPurposes</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Result" type="tnc:OrchestrationServiceResultPage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="fault">
    <wsdl:documentation>Ошибка</wsdl:documentation>
    <wsdl:part element="nsf:fault" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UserContext">
    <wsdl:part element="tcx:userContext" name="UserContext"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetInquiryPurposesResponse">
    <wsdl:part element="tns:GetInquiryPurposesResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetInquiryPurposesRequest">
    <wsdl:part element="tns:GetInquiryPurposesRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="InquiryPurposeOrchestrationService">
    <wsdl:operation name="GetInquiryPurposes">
      <wsdl:input message="tns:GetInquiryPurposesRequest"></wsdl:input>
      <wsdl:output message="tns:GetInquiryPurposesResponse"></wsdl:output>
      <wsdl:fault message="tns:fault" name="InquiryPurposeOrchestrationCodeError"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkO9rvXI9uYKLLSUhMe72Hydh2GKnbV4lrwvz4k4AsJFseU_PKWHJunuXcMnHKVSjDXxB_jgbB6AtCqOGH9Pcv5dQGkXoQtiQKcije1EPyg5XkDlG7ooDrfr.9qpFVx7xbnJ4ATvPmt96yVOCsclB5Gqb.cvozANwsEJ5YQoX6IuCwUkpVpI1MkGBNcL8kisA1_h_PF1tHx24K1wQS1o0o3Aiv2Z</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/faults/" version="1.0" xmlns="http://emias.mos.ru/system/v1/faults/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkO9rvXI9uYKLLSUhMe72Hydh2GKnbV4lrwvz4k4AsJFseU_PKWHJunuXcMnHKVSjDXxB_jgbB6AtCqOGH9Pcv5dQGkXoQtiQKcije1EPyg5XkDlG7ooDrfr.9qpFVx7xbnJ4ATvPmt96yVOCsclB5Gqb.cvozANwsEJ5YQoX6IuCwUkpVpI1MkGBMkZ446lQdMqJR74I38dWOd.sxA-"/>
  <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkO9rvXI9uYKLLSUhMe72Hydh2GKnbV4lrwvz4k4AsJFseU_PKWHJunuXcMnHKVSjDXxB_jgbB6AtCqOGH9Pcv5dQGkXoQtiQKcije1EPyg5XkDlG7ooDrfr.9qpFVx7xbnJ4ATvPmt96yVOCsclB5Gqb.cvozANwsEJ5YQoX6IuCwUkpVpI1MkGBMQZ4labHx_t6u0HWzSVs4R.Q4s5tFcvjLEA07oeyVI-"/>
  <!--faults-->
  <xs:element name="fault" type="BaseFault">
    <xs:annotation>
      <xs:documentation>Базовый тип ошибки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SecurityFault">
    <xs:annotation>
      <xs:documentation>Ошибка безопасности</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element ref="uctx:userContext"/>
          <xs:choice>
            <xs:element name="unauthorizedRequestSecurityException" type="UnauthorizedRequestSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="otherSecurityException" type="OtherSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:sequence>
        <xs:attribute fixed="SECURITY" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BusinessFault">
    <xs:annotation>
      <xs:documentation>Бизнес ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Коллекция Сообщений об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hasErrors" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак наличия ошибок в списке сообщений</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="BUSINESS" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UnexpectedFault">
    <xs:annotation>
      <xs:documentation>Непредвиденная ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="version" type="xs:string">
            <xs:annotation>
              <xs:documentation>Версия продукта-сервиса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="stackTrace">
            <xs:annotation>
              <xs:documentation>Стек вызова (последние 10  записей)</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="10" name="stackTraceRecord">
                  <xs:annotation>
                    <xs:documentation>Запись StackTrace</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="declaringClass" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование класса, содержащего метод</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="methodName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование метода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="fileName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование файла</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="lineNumber" type="xs:int">
                        <xs:annotation>
                          <xs:documentation>Номер строки кода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="UNEXPECTED" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="BaseFault">
    <xs:annotation>
      <xs:documentation>Описание базового типа описания ошибки</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--security exceptions-->
  <xs:complexType name="UnauthorizedRequestSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="requiredRights">
        <xs:annotation>
          <xs:documentation>Перечень идентификаторов недостающих Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Идентификатор Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="UNAUTHORIZED_REQUEST_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="OtherSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="message" type="Message">
        <xs:annotation>
          <xs:documentation>Сообщение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="OTHER_SECURITY_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="SecurityExceptionTypes">
    <xs:annotation>
      <xs:documentation>Типы исключений безопасности</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNAUTHORIZED_REQUEST_EXCEPTION"/>
      <xs:enumeration value="OTHER_SECURITY_EXCEPTION"/>
    </xs:restriction>
  </xs:simpleType>
  <!--components-->
  <xs:simpleType name="FaultTypes">
    <xs:annotation>
      <xs:documentation>Тип ошибки</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="SECURITY">
        <xs:annotation>
          <xs:documentation>Непредвиденная ошибка приложения</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BUSINESS">
        <xs:annotation>
          <xs:documentation>Бизнес ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UNEXPECTED">
        <xs:annotation>
          <xs:documentation>Ошибка безопасности</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkO9rvXI9uYKLLSUhMe72Hydh2GKnbV4lrwvz4k4AsJFseU_PKWHJunuXcMnHKVSjDXxB_jgbB6AtCqOGH9Pcv5dQGkXoQtiQKcije1EPyg5XkDlG7ooDrfr.9qpFVx7xbnJ4ATvPmt96yVOCsclB5Gqb.cvozANwsEJ5YQoX6IuCwUkpVpI1MkGBMQZ4labHx_t6u0HWzSVs4R.Q4s5tFcvjLEA07oeyVI-</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/userContext/" version="1.0" xmlns="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkO9rvXI9uYKLLSUhMe72Hydh2GKnbV4lrwvz4k4AsJFseU_PKWHJunuXcMnHKVSjDXxB_jgbB6AtCqOGH9Pcv5dQGkXoQtiQKcije1EPyg5XkDlG7ooDrfr.9qpFVx7xbnJ4ATvPmt96yVOCsclB5Gqb.cvozANwsEJ5YQoX6IuGxMltBFTy5FPWdW7FXlf9XPcwCIPefPrmXig"/>
  <xs:element name="userContext" type="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="systemName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Шифр системы-потребителя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя пользователя (логин)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRoleId" type="ID">
        <xs:annotation>
          <xs:documentation>Код Роли</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isUserRoleSystemWide" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак "Общесистемная Роль"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRights">
        <xs:annotation>
          <xs:documentation>Коллекция Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Код Полномочия</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="jobExecutionId" type="ID"/>
      <xs:element minOccurs="0" name="hostIp" type="xs:string">
        <xs:annotation>
          <xs:documentation>IP адрес хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hostName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="options" type="Options">
        <xs:annotation>
          <xs:documentation>Набор именованных значений</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkO9rvXI9uYKLLSUhMe72Hydh2GKnbV4lrwvz4k4AsJFseU_PKWHJunuXcMnHKVSjDXxB_jgbB6AtCqOGH9Pcv5dQGkXoQtiQKcije1EPyg5XkDlG7ooDrfr.9qpFVx7xbnJ4ATvPmt96yVOCsclB5Gqb.cvozANwsEJ5YQoX6IuGxMltBFTy5FPWdW7FXlf9XPcwCIPefPrmXig</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkO9rvXI9uYKLLSUhMe72Hydh2GKnbV4lrwvz4k4AsJFseU_PKWHJunuXcMnHKVSjDXxB_jgbB6AtCqOGH9Pcv5dQGkXoQtiQKcije1EPyg5XkDlG7ooDrfr.9qpFVx7xbnJ4ATvPmt96yVOCsclB5Gqb.cvozANwsEJ5YQoX6IuCwUkpVpI1MkGBMkZ446lQdMqJR74I38dWOd.sxA-"/>
  <!--references-->
  <xs:element name="medicalOrganizationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинского учреждения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--async operation status-->
  <xs:element name="operationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор операции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OperationExecutionStatus">
    <xs:annotation>
      <xs:documentation>Статус выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="isCompleted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак окончания выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="completenessProgress" type="OperationCompletenessBase">
        <xs:annotation>
          <xs:documentation>Сведения о текущем статусе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hasSucceded" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак успешности выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
        <xs:annotation>
          <xs:documentation>Коллекция сообщений, порожденных в ходе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор операции</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="false" name="OperationCompletenessPercentage">
    <xs:annotation>
      <xs:documentation>Описание текущего статуса выполнения операции в процентах (0%-100%)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OperationCompletenessBase">
        <xs:sequence>
          <xs:element name="completenessStatus">
            <xs:annotation>
              <xs:documentation>Статус (0%-100%)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:unsignedByte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания текущего статуса выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--calling methods' options-->
  <xs:element name="options" type="Options">
    <xs:annotation>
      <xs:documentation>Параметры вызова метода</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Options">
    <xs:annotation>
      <xs:documentation>Набор именованных значений</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Именованное значение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--pagination-->
  <xs:element name="pagingOptions" type="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="PagingResults">
    <xs:annotation>
      <xs:documentation>Список с пагинацией</xs:documentation>
    </xs:annotation>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageTotal" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество страниц</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morePagesAvailable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Флаг доступности других страниц с результатами для "постраничного листания" (true - если доступны еще страницы; false - иначе)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="totalItemsCount" type="xs:long" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество элементов (на всех страницах)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" ref="sortingOptions"/>
    </xs:sequence>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--sorting-->
  <xs:element name="sortingOptions" type="SortingOptions">
    <xs:annotation>
      <xs:documentation>Параметры сортировки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SortingOptions">
    <xs:annotation>
      <xs:documentation>Условия сортировки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="3" name="sortOrder" type="SortOrder">
        <xs:annotation>
          <xs:documentation>Условия сортировки
(используются в соответствии с
переданной последовательностью)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SortOrder">
    <xs:annotation>
      <xs:documentation>Сортировка</xs:documentation>
    </xs:annotation>
    <xs:attribute name="attributeName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Наименование поля, по которому должна быть произведена сортировка</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="false" name="desceding" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Направление сортировки</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--void response-->
  <xs:element fixed="true" name="result">
    <xs:annotation>
      <xs:documentation>Элемент для использования в методах, не предполагающих возврат какого-либо значения</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:boolean"/>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <!--base types-->
  <xs:complexType name="TimeInterval">
    <xs:annotation>
      <xs:documentation>Временной период (время)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время начала интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время окончания интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkO9rvXI9uYKLLSUhMe72Hydh2GKnbV4lrwvz4k4AsJFseU_PKWHJunuXcMnHKVSjDXxB_jgbB6AtCqOGH9Pcv5dQGkXoQtiQKcije1EPyg5XkDlG7ooDrfr.9qpFVx7xbnJ4ATvPmt96yVOCsclB5Gqb.cvozANwsEJ5YQoX6IuCwUkpVpI1MkGBMkZ446lQdMqJR74I38dWOd.sxA-</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:simpleType name="GUID">
    <xs:annotation>
      <xs:documentation>Глобальный 128-битный идентификатор (Globally Unique Identifier)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkO9rvXI9uYKLLSUhMe72Hydh2GKnbV4lrwvz4k4AsJFseU_PKWHJunuXcMnHKVSjDXxB_jgbB6AtCqOGH9Pcv5dQGkXoQtiQKcije1EPyg5XkDlG7ooDrfr.9qpFVx7xbnJ4ATvPmt96yVOCsclB5Gqb.cvozANwsEJ6YcwS7hyAVEnpE1VlcxSBNgE9lGxAgi0_.ABBSOVsnZAZ.3ZdrYGFUl4iJIFrA2k7ra6IqhGjM0Of6Ui7Ybrt7C6pycnBGLL1DkCd9ZZxrxXtQ--</con:url><con:content><![CDATA[<!--edited with XMLSpy v2011 rel. 2 (http://www.altova.com) by DIT (DIT)-->
<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/inquiry-purpose/inquiry-purpose-orchestration/v1/types/" version="1.0" xmlns="http://emias.mos.ru/inquiry-purpose/inquiry-purpose-orchestration/v1/types/" xmlns:ns1="http://emias.mos.ru/system/v1/userContext/" xmlns:ns2="http://emias.mos.ru/system/v1/faults/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkO9rvXI9uYKLLSUhMe72Hydh2GKnbV4lrwvz4k4AsJFseU_PKWHJunuXcMnHKVSjDXxB_jgbB6AtCqOGH9Pcv5dQGkXoQtiQKcije1EPyg5XkDlG7ooDrfr.9qpFVx7xbnJ4ATvPmt96yVOCsclB5Gqb.cvozANwsEJ5YQoX6IuGxMltBFTy5FPWdW7FXlf9XPcwCIPefPrmXig"/>
  <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkO9rvXI9uYKLLSUhMe72Hydh2GKnbV4lrwvz4k4AsJFseU_PKWHJunuXcMnHKVSjDXxB_jgbB6AtCqOGH9Pcv5dQGkXoQtiQKcije1EPyg5XkDlG7ooDrfr.9qpFVx7xbnJ4ATvPmt96yVOCsclB5Gqb.cvozANwsEJ5YQoX6IuCwUkpVpI1MkGBMQZ4labHx_t6u0HWzSVs4R.Q4s5tFcvjLEA07oeyVI-"/>
  <xs:import namespace="http://emias.mos.ru/system/v1/faults/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkO9rvXI9uYKLLSUhMe72Hydh2GKnbV4lrwvz4k4AsJFseU_PKWHJunuXcMnHKVSjDXxB_jgbB6AtCqOGH9Pcv5dQGkXoQtiQKcije1EPyg5XkDlG7ooDrfr.9qpFVx7xbnJ4ATvPmt96yVOCsclB5Gqb.cvozANwsEJ5YQoX6IuCwUkpVpI1MkGBNcL8kisA1_h_PF1tHx24K1wQS1o0o3Aiv2Z"/>
  <xs:complexType name="Patient">
    <xs:annotation>
      <xs:documentation>Информация о пациенте</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="InquiryPurposeDictionary" type="InquiryPurposeDictionary">
        <xs:annotation>
          <xs:documentation>Доступные цели обращения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="Groups" type="Groups">
        <xs:annotation>
          <xs:documentation>Информация о диспансерном наблюдении</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InquiryPurposeDictionary">
    <xs:annotation>
      <xs:documentation>Информация из справочника целей обращения</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:int">
        <xs:annotation>
          <xs:documentation>Код цели обращения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование цели обращения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="InquiryPurposeInfo" type="InquiryPurposeInfo"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="speciality" type="Speciality"/>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор Цели обращения</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Groups">
    <xs:annotation>
      <xs:documentation>Информация о диспансерном наблюдении</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="specialityCode" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код специальности ведущего врача</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="employeeId" type="ID">
        <xs:annotation>
          <xs:documentation>Идентификатор врача, ведущего пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OrchestrationServiceResultPage">
    <xs:annotation>
      <xs:documentation>Результат</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="PagingResults">
        <xs:sequence>
          <xs:element minOccurs="0" name="Patient" type="Patient"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="Warnings" type="ns2:BusinessFault"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="InquiryPurposeInfo">
    <xs:annotation>
      <xs:documentation>Дополнительная информация из справочника целей обращения</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="ageMin" type="xs:int">
        <xs:annotation>
          <xs:documentation>Минимальный возраст</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ageMax" type="xs:int">
        <xs:annotation>
          <xs:documentation>Максимальный возраст</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="gender" type="Gender">
        <xs:annotation>
          <xs:documentation>Пол</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="areaType" type="AreaType">
        <xs:annotation>
          <xs:documentation>Тип участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ParentInquiryPurposeDictionary" type="ParentInquiryPurposeDictionary">
        <xs:annotation>
          <xs:documentation>Родительский идентификатор ЦО</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Gender">
    <xs:annotation>
      <xs:documentation>Информация по полу пациента</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="globalId" type="ID">
        <xs:annotation>
          <xs:documentation>Глобальный идентификатор</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="title" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование пола</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AreaType">
    <xs:annotation>
      <xs:documentation>Информация о типе участка</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:int">
        <xs:annotation>
          <xs:documentation>Код Типа участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="title" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование Типа участка</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Speciality">
    <xs:annotation>
      <xs:documentation>Информация о специализации</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование специальности</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="code" type="xs:int">
        <xs:annotation>
          <xs:documentation>Код специальности</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ParentInquiryPurposeDictionary">
    <xs:annotation>
      <xs:documentation>Информация из справочника целей обращения о родительской ЦО</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:int">
        <xs:annotation>
          <xs:documentation>Код цели обращения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование цели обращения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор цели обращения</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService</con:endpoint></con:endpoints><con:operation id="c51a4fb7-31b3-4e8a-9038-2993d165eca4" isOneWay="false" action="GetInquiryPurposes" name="GetInquiryPurposes" bindingOperationName="GetInquiryPurposes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="255d5631-79e6-44a0-ba47-1ed5761718ad" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:v1="http://emias.mos.ru/inquiry-purpose/inquiry-purpose-orchestration/v1/" xmlns:typ="http://emias.mos.ru/inquiry-purpose/inquiry-purpose-orchestration/v1/types/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <v1:GetInquiryPurposesRequest>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <patientId>?</patientId>\r
         <!--Optional:-->\r
         <genderKpi>?</genderKpi>\r
         <!--Optional:-->\r
         <birthDate>?</birthDate>\r
         <paging_options pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <typ:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <typ:sortOrder attributeName="?" desceding="false"/>\r
            </typ:sortingOptions>\r
         </paging_options>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </v1:GetInquiryPurposesRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/inquiry-purpose/inquiry-purpose-orchestration/v1/soap/InquiryPurposeOrchestrationService/GetInquiryPurposesRequest"/></con:call><con:call id="1378b0bc-0362-498c-a55c-106427c68ac0" name="getInquiryPurpose"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <ns4:userContext xmlns:ns5="http://emias.mos.ru/system/v1/faults/" xmlns:ns4="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/inquiry-purpose/inquiry-purpose-orchestration/v1/" xmlns:ns2="http://emias.mos.ru/inquiry-purpose/inquiry-purpose-orchestration/v1/types/">\r
         <ns4:systemName>EIM</ns4:systemName>\r
         <ns4:userName>0</ns4:userName>\r
         <ns4:userRoleId>7086</ns4:userRoleId>\r
         <ns4:userRights>\r
            <ns4:userRightId>2024</ns4:userRightId>\r
         </ns4:userRights>\r
         <ns4:jobExecutionId>0</ns4:jobExecutionId>\r
      </ns4:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <ns3:GetInquiryPurposesRequest xmlns:ns2="http://emias.mos.ru/inquiry-purpose/inquiry-purpose-orchestration/v1/types/" xmlns:ns3="http://emias.mos.ru/inquiry-purpose/inquiry-purpose-orchestration/v1/" xmlns:ns4="http://emias.mos.ru/system/v1/userContext/" xmlns:ns5="http://emias.mos.ru/system/v1/faults/">\r
         <omsNumber>7700007178231039</omsNumber>\r
         <birthDate>1939-10-23</birthDate>\r
         <paging_options pageNumber="0" pageSize="100"/>\r
      </ns3:GetInquiryPurposesRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/inquiry-purpose/inquiry-purpose-orchestration/v1/soap/InquiryPurposeOrchestrationService/GetInquiryPurposesRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="7e2e8955-fd96-4d34-9694-7378b0cf5086" wsaVersion="NONE" name="ЦО Жалобы" type="wsdl" bindingName="{http://emias.mos.ru/inquiry-purpose/complaints/v1/soap/}ComplaintsBinding" soapVersion="1_2" anonymous="optional" definition="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService?wsdl"><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="Complaints" targetNamespace="http://emias.mos.ru/inquiry-purpose/complaints/v1/soap/" xmlns:anw="http://emias.mos.ru/inquiry-purpose/complaints/v1/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://emias.mos.ru/inquiry-purpose/complaints/v1/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:documentation>version="1.0"</wsdl:documentation>
  <wsdl:import location="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService?wsdl=AAAADHAjUCM4P2cuZURELmc3kKW5DmhOgWckKRyQAlM4Tm_03rvswK60lTbAYp6WuCeZOf8pcnZtr40Sia5jjtCyZzb25C00P4jkjw7aOnavbo1WdK_36ShahZpGRwxChjbPzb1vyD6dXyD1iar6m_4W18dsp03m.mJeoVS.Ol8FsdstgOW3eVmZB8CBxjSPdVxbj0S4gHktWY8_Mdl_duyXotnC7k2aXLROSn0iHTVlNEs4KSYjeglA0x6Gf5U-" namespace="http://emias.mos.ru/inquiry-purpose/complaints/v1/"></wsdl:import>
  <wsdl:binding name="ComplaintsBinding" type="anw:ComplaintsService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetPatientComplaints">
      <soap:operation soapAction="GetPatientComplaints"/>
      <wsdl:input>
        <soap:header message="anw:UserContext" part="UserContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ComplaintsCodeError">
        <soap:fault name="ComplaintsCodeError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetPatientComplaintForAppointment">
      <soap:operation soapAction="GetPatientComplaintForAppointment"/>
      <wsdl:input>
        <soap:header message="anw:UserContext" part="UserContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ComplaintsCodeError">
        <soap:fault name="ComplaintsCodeError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ComplaintsService">
    <wsdl:port binding="tns:ComplaintsBinding" name="ComplaintsBinding">
      <soap:address location="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService?wsdl=AAAADHAjUCM4P2cuZURELmc3kKW5DmhOgWckKRyQAlM4Tm_03rvswK60lTbAYp6WuCeZOf8pcnZtr40Sia5jjtCyZzb25C00P4jkjw7aOnavbo1WdK_36ShahZpGRwxChjbPzb1vyD6dXyD1iar6m_4W18dsp03m.mJeoVS.Ol8FsdstgOW3eVmZB8CBxjSPdVxbj0S4gHktWY8_Mdl_duyXotnC7k2aXLROSn0iHTVlNEs4KSYjeglA0x6Gf5U-</con:url><con:content><![CDATA[<wsdl:definitions name="Complaints" targetNamespace="http://emias.mos.ru/inquiry-purpose/complaints/v1/" xmlns:nsf="http://emias.mos.ru/system/v1/faults/" xmlns:tcx="http://emias.mos.ru/system/v1/userContext/" xmlns:tnc="http://emias.mos.ru/inquiry-purpose/complaints/v1/types/" xmlns:tns="http://emias.mos.ru/inquiry-purpose/complaints/v1/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:documentation>version="1.0"</wsdl:documentation>
  <wsdl:types>
    <xs:schema targetNamespace="http://emias.mos.ru/inquiry-purpose/complaints/v1/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://emias.mos.ru/system/v1/faults/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmc3kKW5DmhOgWckKRyQAlM4Tm_03rvswK60lTbAYp6WuCeZOf8pcnZtr40Sia5jjtCyZzb25C00P4jkjw7aOnavbo1WdK_36ShahZpGRwxChjbPzb1vyD6dXyD1iar6m_4W18dsp03m.mJeoVS.Ol8Ksdt82OGwaV_eBsDfwiSQK0UZxAy6mngpRsAuLMmFRKSFXkFZBCNt_maHt8jd"/>
      <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmc3kKW5DmhOgWckKRyQAlM4Tm_03rvswK60lTbAYp6WuCeZOf8pcnZtr40Sia5jjtCyZzb25C00P4jkjw7aOnavbo1WdK_36ShahZpGRwxChjbPzb1vyD6dXyD1iar6m_4W18dsp03m.mJeoVS.Ol8Ksdt82OGwaV_eBsDfwiSQK0UZxB.oimYeWoAiOtV4deeBtBTEWh3PyB9QrSGNl05nOPQ-"/>
      <xs:import namespace="http://emias.mos.ru/inquiry-purpose/complaints/v1/types/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmc3kKW5DmhOgWckKRyQAlM4Tm_03rvswK60lTbAYp6WuCeZOf8pcnZtr40Sia5jjtCyZzb25C00P4jkjw7aOnavbo1WdK_36ShahZpGRwxChjbPzb1vyD6dXyD1iar6m_4W18dsp03m.mJeoVS.Ol8Ksdt81OKofUWCDJTcwzONakBNxAm0gmQxVIc4K94hKPqApsbI6AbCG6sURH4jAjh83ombhTG1UKWnOdHP7s2ZvfNB"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="UserContext">
    <wsdl:part element="tcx:userContext" name="UserContext"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPatientComplaintsRequest">
    <wsdl:part element="tnc:GetPatientComplaintsRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPatientComplaintForAppointmentRequest">
    <wsdl:part element="tnc:GetPatientComplaintForAppointmentRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPatientComplaintForAppointmentResponse">
    <wsdl:part element="tnc:GetPatientComplaintForAppointmentResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetPatientComplaintsResponse">
    <wsdl:part element="tnc:GetPatientComplaintsResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fault">
    <wsdl:documentation>Ошибка</wsdl:documentation>
    <wsdl:part element="nsf:fault" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ComplaintsService">
    <wsdl:operation name="GetPatientComplaints">
      <wsdl:input message="tns:GetPatientComplaintsRequest"></wsdl:input>
      <wsdl:output message="tns:GetPatientComplaintsResponse"></wsdl:output>
      <wsdl:fault message="tns:fault" name="ComplaintsCodeError"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetPatientComplaintForAppointment">
      <wsdl:input message="tns:GetPatientComplaintForAppointmentRequest"></wsdl:input>
      <wsdl:output message="tns:GetPatientComplaintForAppointmentResponse"></wsdl:output>
      <wsdl:fault message="tns:fault" name="ComplaintsCodeError"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmc3kKW5DmhOgWckKRyQAlM4Tm_03rvswK60lTbAYp6WuCeZOf8pcnZtr40Sia5jjtCyZzb25C00P4jkjw7aOnavbo1WdK_36ShahZpGRwxChjbPzb1vyD6dXyD1iar6m_4W18dsp03m.mJeoVS.Ol8Ksdt82OGwaV_eBsDfwiSQK0UZxAy6mngpRsAuLMmFRKSFXkFZBCNt_maHt8jd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/faults/" version="1.0" xmlns="http://emias.mos.ru/system/v1/faults/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmc3kKW5DmhOgWckKRyQAlM4Tm_03rvswK60lTbAYp6WuCeZOf8pcnZtr40Sia5jjtCyZzb25C00P4jkjw7aOnavbo1WdK_36ShahZpGRwxChjbPzb1vyD6dXyD1iar6m_4W18dsp03m.mJeoVS.Ol8Ksdt82OGwaV_eBsDfwiSQK0UZxBKoi379BH.6mbmAZxNWaWF.oMY-"/>
  <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmc3kKW5DmhOgWckKRyQAlM4Tm_03rvswK60lTbAYp6WuCeZOf8pcnZtr40Sia5jjtCyZzb25C00P4jkjw7aOnavbo1WdK_36ShahZpGRwxChjbPzb1vyD6dXyD1iar6m_4W18dsp03m.mJeoVS.Ol8Ksdt82OGwaV_eBsDfwiSQK0UZxB.oimYeWoAiOtV4deeBtBTEWh3PyB9QrSGNl05nOPQ-"/>
  <!--faults-->
  <xs:element name="fault" type="BaseFault">
    <xs:annotation>
      <xs:documentation>Базовый тип ошибки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SecurityFault">
    <xs:annotation>
      <xs:documentation>Ошибка безопасности</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element ref="uctx:userContext"/>
          <xs:choice>
            <xs:element name="unauthorizedRequestSecurityException" type="UnauthorizedRequestSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="otherSecurityException" type="OtherSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:sequence>
        <xs:attribute fixed="SECURITY" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BusinessFault">
    <xs:annotation>
      <xs:documentation>Бизнес ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Коллекция Сообщений об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hasErrors" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак наличия ошибок в списке сообщений</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="BUSINESS" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UnexpectedFault">
    <xs:annotation>
      <xs:documentation>Непредвиденная ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="version" type="xs:string">
            <xs:annotation>
              <xs:documentation>Версия продукта-сервиса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="stackTrace">
            <xs:annotation>
              <xs:documentation>Стек вызова (последние 10  записей)</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="10" name="stackTraceRecord">
                  <xs:annotation>
                    <xs:documentation>Запись StackTrace</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="declaringClass" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование класса, содержащего метод</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="methodName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование метода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="fileName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование файла</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="lineNumber" type="xs:int">
                        <xs:annotation>
                          <xs:documentation>Номер строки кода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="UNEXPECTED" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="BaseFault">
    <xs:annotation>
      <xs:documentation>Описание базового типа описания ошибки</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--security exceptions-->
  <xs:complexType name="UnauthorizedRequestSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="requiredRights">
        <xs:annotation>
          <xs:documentation>Перечень идентификаторов недостающих Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Идентификатор Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="UNAUTHORIZED_REQUEST_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="OtherSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="message" type="Message">
        <xs:annotation>
          <xs:documentation>Сообщение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="OTHER_SECURITY_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="SecurityExceptionTypes">
    <xs:annotation>
      <xs:documentation>Типы исключений безопасности</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNAUTHORIZED_REQUEST_EXCEPTION"/>
      <xs:enumeration value="OTHER_SECURITY_EXCEPTION"/>
    </xs:restriction>
  </xs:simpleType>
  <!--components-->
  <xs:simpleType name="FaultTypes">
    <xs:annotation>
      <xs:documentation>Тип ошибки</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="SECURITY">
        <xs:annotation>
          <xs:documentation>Непредвиденная ошибка приложения</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BUSINESS">
        <xs:annotation>
          <xs:documentation>Бизнес ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UNEXPECTED">
        <xs:annotation>
          <xs:documentation>Ошибка безопасности</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmc3kKW5DmhOgWckKRyQAlM4Tm_03rvswK60lTbAYp6WuCeZOf8pcnZtr40Sia5jjtCyZzb25C00P4jkjw7aOnavbo1WdK_36ShahZpGRwxChjbPzb1vyD6dXyD1iar6m_4W18dsp03m.mJeoVS.Ol8Ksdt82OGwaV_eBsDfwiSQK0UZxB.oimYeWoAiOtV4deeBtBTEWh3PyB9QrSGNl05nOPQ-</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/userContext/" version="1.0" xmlns="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmc3kKW5DmhOgWckKRyQAlM4Tm_03rvswK60lTbAYp6WuCeZOf8pcnZtr40Sia5jjtCyZzb25C00P4jkjw7aOnavbo1WdK_36ShahZpGRwxChjbPzb1vyD6dXyD1iar6m_4W18dsp03m.mJeoVS.Ol8Ksdt82OGwaV_eFtbe02.LNB1QmQ7_fIIl9PqPVpXqXt5VKP0V"/>
  <xs:element name="userContext" type="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="systemName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Шифр системы-потребителя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя пользователя (логин)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRoleId" type="ID">
        <xs:annotation>
          <xs:documentation>Код Роли</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isUserRoleSystemWide" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак "Общесистемная Роль"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRights">
        <xs:annotation>
          <xs:documentation>Коллекция Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Код Полномочия</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="jobExecutionId" type="ID"/>
      <xs:element minOccurs="0" name="hostIp" type="xs:string">
        <xs:annotation>
          <xs:documentation>IP адрес хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hostName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="options" type="Options">
        <xs:annotation>
          <xs:documentation>Набор именованных значений</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmc3kKW5DmhOgWckKRyQAlM4Tm_03rvswK60lTbAYp6WuCeZOf8pcnZtr40Sia5jjtCyZzb25C00P4jkjw7aOnavbo1WdK_36ShahZpGRwxChjbPzb1vyD6dXyD1iar6m_4W18dsp03m.mJeoVS.Ol8Ksdt82OGwaV_eFtbe02.LNB1QmQ7_fIIl9PqPVpXqXt5VKP0V</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmc3kKW5DmhOgWckKRyQAlM4Tm_03rvswK60lTbAYp6WuCeZOf8pcnZtr40Sia5jjtCyZzb25C00P4jkjw7aOnavbo1WdK_36ShahZpGRwxChjbPzb1vyD6dXyD1iar6m_4W18dsp03m.mJeoVS.Ol8Ksdt82OGwaV_eBsDfwiSQK0UZxBKoi379BH.6mbmAZxNWaWF.oMY-"/>
  <!--references-->
  <xs:element name="medicalOrganizationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинского учреждения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--async operation status-->
  <xs:element name="operationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор операции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OperationExecutionStatus">
    <xs:annotation>
      <xs:documentation>Статус выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="isCompleted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак окончания выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="completenessProgress" type="OperationCompletenessBase">
        <xs:annotation>
          <xs:documentation>Сведения о текущем статусе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hasSucceded" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак успешности выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
        <xs:annotation>
          <xs:documentation>Коллекция сообщений, порожденных в ходе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор операции</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="false" name="OperationCompletenessPercentage">
    <xs:annotation>
      <xs:documentation>Описание текущего статуса выполнения операции в процентах (0%-100%)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OperationCompletenessBase">
        <xs:sequence>
          <xs:element name="completenessStatus">
            <xs:annotation>
              <xs:documentation>Статус (0%-100%)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:unsignedByte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания текущего статуса выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--calling methods' options-->
  <xs:element name="options" type="Options">
    <xs:annotation>
      <xs:documentation>Параметры вызова метода</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Options">
    <xs:annotation>
      <xs:documentation>Набор именованных значений</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Именованное значение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--pagination-->
  <xs:element name="pagingOptions" type="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="PagingResults">
    <xs:annotation>
      <xs:documentation>Список с пагинацией</xs:documentation>
    </xs:annotation>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageTotal" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество страниц</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morePagesAvailable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Флаг доступности других страниц с результатами для "постраничного листания" (true - если доступны еще страницы; false - иначе)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="totalItemsCount" type="xs:long" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество элементов (на всех страницах)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" ref="sortingOptions"/>
    </xs:sequence>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--sorting-->
  <xs:element name="sortingOptions" type="SortingOptions">
    <xs:annotation>
      <xs:documentation>Параметры сортировки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SortingOptions">
    <xs:annotation>
      <xs:documentation>Условия сортировки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="3" name="sortOrder" type="SortOrder">
        <xs:annotation>
          <xs:documentation>Условия сортировки
(используются в соответствии с
переданной последовательностью)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SortOrder">
    <xs:annotation>
      <xs:documentation>Сортировка</xs:documentation>
    </xs:annotation>
    <xs:attribute name="attributeName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Наименование поля, по которому должна быть произведена сортировка</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="false" name="desceding" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Направление сортировки</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--void response-->
  <xs:element fixed="true" name="result">
    <xs:annotation>
      <xs:documentation>Элемент для использования в методах, не предполагающих возврат какого-либо значения</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:boolean"/>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <!--base types-->
  <xs:complexType name="TimeInterval">
    <xs:annotation>
      <xs:documentation>Временной период (время)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время начала интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время окончания интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmc3kKW5DmhOgWckKRyQAlM4Tm_03rvswK60lTbAYp6WuCeZOf8pcnZtr40Sia5jjtCyZzb25C00P4jkjw7aOnavbo1WdK_36ShahZpGRwxChjbPzb1vyD6dXyD1iar6m_4W18dsp03m.mJeoVS.Ol8Ksdt82OGwaV_eBsDfwiSQK0UZxBKoi379BH.6mbmAZxNWaWF.oMY-</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:simpleType name="GUID">
    <xs:annotation>
      <xs:documentation>Глобальный 128-битный идентификатор (Globally Unique Identifier)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmc3kKW5DmhOgWckKRyQAlM4Tm_03rvswK60lTbAYp6WuCeZOf8pcnZtr40Sia5jjtCyZzb25C00P4jkjw7aOnavbo1WdK_36ShahZpGRwxChjbPzb1vyD6dXyD1iar6m_4W18dsp03m.mJeoVS.Ol8Ksdt81OKofUWCDJTcwzONakBNxAm0gmQxVIc4K94hKPqApsbI6AbCG6sURH4jAjh83ombhTG1UKWnOdHP7s2ZvfNB</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/inquiry-purpose/complaints/v1/types/" version="1.0" xmlns="http://emias.mos.ru/inquiry-purpose/complaints/v1/types/" xmlns:ns1="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmc3kKW5DmhOgWckKRyQAlM4Tm_03rvswK60lTbAYp6WuCeZOf8pcnZtr40Sia5jjtCyZzb25C00P4jkjw7aOnavbo1WdK_36ShahZpGRwxChjbPzb1vyD6dXyD1iar6m_4W18dsp03m.mJeoVS.Ol8Ksdt82OGwaV_eFtbe02.LNB1QmQ7_fIIl9PqPVpXqXt5VKP0V"/>
  <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmc3kKW5DmhOgWckKRyQAlM4Tm_03rvswK60lTbAYp6WuCeZOf8pcnZtr40Sia5jjtCyZzb25C00P4jkjw7aOnavbo1WdK_36ShahZpGRwxChjbPzb1vyD6dXyD1iar6m_4W18dsp03m.mJeoVS.Ol8Ksdt82OGwaV_eBsDfwiSQK0UZxB.oimYeWoAiOtV4deeBtBTEWh3PyB9QrSGNl05nOPQ-"/>
  <xs:complexType name="Complaints">
    <xs:sequence>
      <xs:element name="complaints_text" type="xs:string">
        <xs:annotation>
          <xs:documentation>Жалобы пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="id" type="ID">
        <xs:annotation>
          <xs:documentation>Идентификатор записи</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="GetPatientComplaintsRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода GetPatientComplaints</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="appointmentId" type="xs:long">
          <xs:annotation>
            <xs:documentation>Идентификатор записи, по которой пациент попал на прием</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetPatientComplaintsResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода GetPatientComplaints</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="Complaints" type="Complaints"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetPatientComplaintForAppointmentRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="positionNomCode" type="xs:string"></xs:element>
        <xs:element minOccurs="0" name="complaintId" type="ID"></xs:element>
        <xs:choice>
          <xs:element name="patientId" type="ID"></xs:element>
          <xs:element name="patientData" type="PatientData"></xs:element>
        </xs:choice>
        <xs:element minOccurs="0" name="options" type="Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetPatientComplaintForAppointmentResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="Complaints" type="Complaints"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="PatientData">
    <xs:annotation>
      <xs:documentation>Данные пациента</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер полиса ОМС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string">
        <xs:annotation>
          <xs:documentation>Серия полиса ОМС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="birthDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата рождения пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService</con:endpoint></con:endpoints><con:operation id="bf29b470-7f74-4b23-8304-f1909154197c" isOneWay="false" action="GetPatientComplaintForAppointment" name="GetPatientComplaintForAppointment" bindingOperationName="GetPatientComplaintForAppointment" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ad2e50ce-6ebe-419f-888c-a27974e3a6a3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/inquiry-purpose/complaints/v1/types/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetPatientComplaintForAppointmentRequest>\r
         <typ:positionNomCode>?</typ:positionNomCode>\r
         <!--Optional:-->\r
         <typ:complaintId>?</typ:complaintId>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <typ:patientId>?</typ:patientId>\r
         <typ:patientData>\r
            <typ:omsNumber>?</typ:omsNumber>\r
            <!--Optional:-->\r
            <typ:omsSeries>?</typ:omsSeries>\r
            <typ:birthDate>?</typ:birthDate>\r
         </typ:patientData>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </typ:GetPatientComplaintForAppointmentRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/inquiry-purpose/complaints/v1/soap/ComplaintsService/GetPatientComplaintForAppointmentRequest"/></con:call></con:operation><con:operation id="86df3c1c-a369-4a99-af5c-e621d78d29a1" isOneWay="false" action="GetPatientComplaints" name="GetPatientComplaints" bindingOperationName="GetPatientComplaints" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="851be0c1-3691-4c0d-925c-805087ce5018" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/inquiry-purpose/complaints/v1/types/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetPatientComplaintsRequest>\r
         <typ:appointmentId>?</typ:appointmentId>\r
      </typ:GetPatientComplaintsRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/inquiry-purpose/complaints/v1/soap/ComplaintsService/GetPatientComplaintsRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="237d961f-0eb1-4001-865f-47c45608d75a" wsaVersion="NONE" name="ЧатБот" type="wsdl" bindingName="{http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types}InterviewServiceBinding" soapVersion="1_2" anonymous="optional" definition="http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?wsdl"><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="InterviewWsdl" targetNamespace="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:nsf="http://emias.mos.ru/system/v1/faults/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <xsd:schema>
      <xsd:import namespace="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkVgle.K.grUZc6G5ZwMa4J.6UR2sce7Qp.7oYoqk81D_mgLkpUzu9a5z2Cq"/>
      <xsd:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkljiOuLohDIYemG.sQTOckl.U52l4ajB9S7psD2jNoPlElCV.BBsNBdpKVRyzje"/>
      <xsd:import namespace="http://emias.mos.ru/system/v1/faults/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkljiOuLohDIYemG.sQTOck2615ooJrjC8Knr1lkcocbqC5izqTCxhHheQ--"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="userContext">
    <wsdl:documentation>Контекст пользователя</wsdl:documentation>
    <wsdl:part element="uctx:userContext" name="userContext"/>
  </wsdl:message>
  <wsdl:message name="fault">
    <wsdl:documentation>Ошибка</wsdl:documentation>
    <wsdl:part element="nsf:fault" name="body"/>
  </wsdl:message>
  <!--getDialog-->
  <wsdl:message name="getDialogRequestMessage">
    <wsdl:part element="tns:getDialogRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="getDialogResponseMessage">
    <wsdl:part element="tns:getDialogResponse" name="body"/>
  </wsdl:message>
  <!--sendAnswer-->
  <wsdl:message name="sendAnswerRequestMessage">
    <wsdl:part element="tns:sendAnswerRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="sendAnswerResponseMessage">
    <wsdl:part element="tns:sendAnswerResponse" name="body"/>
  </wsdl:message>
  <!--checkCode-->
  <wsdl:message name="checkCodeRequestMessage">
    <wsdl:part element="tns:checkCodeRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="checkCodeResponseMessage">
    <wsdl:part element="tns:checkCodeResponse" name="body"/>
  </wsdl:message>
  <!--addEvent-->
  <wsdl:message name="addEventRequestMessage">
    <wsdl:part element="tns:addEventRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="addEventResponseMessage">
    <wsdl:part element="tns:addEventResponse" name="body"/>
  </wsdl:message>
  <!--sendResult-->
  <wsdl:message name="sendResultRequestMessage">
    <wsdl:part element="tns:sendResultRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="sendResultResponseMessage">
    <wsdl:part element="tns:sendResultResponse" name="body"/>
  </wsdl:message>
  <!--sendAnamnesisResult-->
  <wsdl:message name="sendAnamnesisResultRequestMessage">
    <wsdl:part element="tns:sendAnamnesisResultRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="sendAnamnesisResultResponseMessage">
    <wsdl:part element="tns:sendAnamnesisResultResponse" name="body"/>
  </wsdl:message>
  <!--tempCheckSymptoms-->
  <wsdl:message name="tempCheckSymptomsRequestMessage">
    <wsdl:part element="tns:tempCheckSymptomsRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="tempCheckSymptomsResponseMessage">
    <wsdl:part element="tns:tempCheckSymptomsResponse" name="body"/>
  </wsdl:message>
  <!--tempGetDialog-->
  <wsdl:message name="tempGetDialogRequestMessage">
    <wsdl:part element="tns:tempGetDialogRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="tempGetDialogResponseMessage">
    <wsdl:part element="tns:tempGetDialogResponse" name="body"/>
  </wsdl:message>
  <!--tempSendResult-->
  <wsdl:message name="tempSendResultRequestMessage">
    <wsdl:part element="tns:tempSendResultRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="tempSendResultResponseMessage">
    <wsdl:part element="tns:tempSendResultResponse" name="body"/>
  </wsdl:message>
  <wsdl:portType name="InterviewServicePortType">
    <wsdl:operation name="getDialog">
      <wsdl:input message="tns:getDialogRequestMessage"/>
      <wsdl:output message="tns:getDialogResponseMessage"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
    <wsdl:operation name="sendAnswer">
      <wsdl:input message="tns:sendAnswerRequestMessage"/>
      <wsdl:output message="tns:sendAnswerResponseMessage"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
    <wsdl:operation name="checkCode">
      <wsdl:input message="tns:checkCodeRequestMessage"/>
      <wsdl:output message="tns:checkCodeResponseMessage"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
    <wsdl:operation name="addEvent">
      <wsdl:input message="tns:addEventRequestMessage"/>
      <wsdl:output message="tns:addEventResponseMessage"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
    <wsdl:operation name="sendResult">
      <wsdl:input message="tns:sendResultRequestMessage"/>
      <wsdl:output message="tns:sendResultResponseMessage"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
    <wsdl:operation name="sendAnamnesisResult">
      <wsdl:input message="tns:sendAnamnesisResultRequestMessage"/>
      <wsdl:output message="tns:sendAnamnesisResultResponseMessage"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
    <wsdl:operation name="tempGetDialog">
      <wsdl:input message="tns:tempGetDialogRequestMessage"/>
      <wsdl:output message="tns:tempGetDialogResponseMessage"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
    <wsdl:operation name="tempCheckSymptoms">
      <wsdl:input message="tns:tempCheckSymptomsRequestMessage"/>
      <wsdl:output message="tns:tempCheckSymptomsResponseMessage"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
    <wsdl:operation name="tempSendResult">
      <wsdl:input message="tns:tempSendResultRequestMessage"/>
      <wsdl:output message="tns:tempSendResultResponseMessage"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="InterviewServiceBinding" type="tns:InterviewServicePortType">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getDialog">
      <soap12:operation soapAction="getDialog" style="document"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"/>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendAnswer">
      <soap12:operation soapAction="sendAnswer" style="document"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"/>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkCode">
      <soap12:operation soapAction="checkCode" style="document"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"/>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addEvent">
      <soap12:operation soapAction="addEvent" style="document"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"/>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendResult">
      <soap12:operation soapAction="sendResult" style="document"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"/>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendAnamnesisResult">
      <soap12:operation soapAction="sendAnamnesisResult" style="document"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"/>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="tempCheckSymptoms">
      <soap12:operation soapAction="tempCheckSymptoms" style="document"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"/>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="tempGetDialog">
      <soap12:operation soapAction="tempGetDialog" style="document"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"/>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="tempSendResult">
      <soap12:operation soapAction="tempSendResult" style="document"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"/>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="InterviewService">
    <wsp:PolicyReference URI="#authPolicy" xmlns:wsp="http://www.w3.org/ns/ws-policy"/>
    <wsdl:port binding="tns:InterviewServiceBinding" name="InterviewServicePort">
      <soap12:address location="http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService"/>
    </wsdl:port>
  </wsdl:service>
  <wsp:Policy wsu:Id="authPolicy" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
    <sp:SupportingTokens xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702">
      <wsp:Policy>
        <sp:UsernameToken sp:IncludeToken="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient">
          <wsp:Policy>
            <sp:NoPassword/>
          </wsp:Policy>
        </sp:UsernameToken>
      </wsp:Policy>
    </sp:SupportingTokens>
  </wsp:Policy>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkVgle.K.grUZc6G5ZwMa4J.6UR2sce7Qp.7oYoqk81D_mgLkpUzu9a5z2Cq</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types" xmlns:tns="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkljiOuLogDeYPjN4dtLcJQ0glQaUebWHqBQrvlkPvFWuQ--"/>
  <xs:element name="getDialogRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="dialogUuid" type="xs:string"/>
        <xs:element minOccurs="0" name="complaints" type="xs:string"/>
        <xs:element minOccurs="0" name="source" type="xs:string"/>
        <xs:element minOccurs="0" name="code" type="xs:string"/>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getDialogResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="success" type="xs:boolean"/>
        <xs:element maxOccurs="1" name="data">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dialogUuid" type="xs:string"/>
              <xs:element name="age" type="xs:integer"/>
              <xs:element name="currentStage" type="xs:string"/>
              <xs:element name="emergency">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="status" type="xs:boolean"/>
                    <xs:element name="comment" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element minOccurs="0" name="finished" type="xs:boolean"/>
              <xs:element minOccurs="0" name="complaintsFinished" type="xs:boolean"/>
              <xs:element minOccurs="0" name="complaintsSent" type="xs:boolean"/>
              <xs:element minOccurs="0" name="anamnesisIsExist" type="xs:boolean"/>
              <xs:element name="gender" type="xs:string"/>
              <xs:element minOccurs="0" name="genderQuestion" type="xs:boolean"/>
              <xs:element name="positionNomCode" type="xs:string"/>
              <xs:element name="question">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element minOccurs="0" name="answerConditions">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element maxOccurs="unbounded" minOccurs="0" name="answerCondition">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="answers">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element maxOccurs="unbounded" minOccurs="0" name="answer" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="block">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element maxOccurs="unbounded" minOccurs="0" name="answer" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="answerPlaceholder" type="xs:string"/>
                    <xs:element name="answerVariants">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element maxOccurs="unbounded" minOccurs="0" name="answer" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="attribute" type="xs:string"/>
                    <xs:element name="entity" type="xs:string"/>
                    <xs:element name="format">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element minOccurs="0" name="delimiter" type="xs:string"/>
                          <xs:element minOccurs="0" name="delimiter2" type="xs:string"/>
                          <xs:element minOccurs="0" name="valuePrefix" type="xs:string"/>
                          <xs:element minOccurs="0" name="valuePostfix" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="questionId" type="xs:string"/>
                    <xs:element name="text" type="xs:string"/>
                    <xs:element name="type" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="referrals">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="referral">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="name" type="xs:string"/>
                          <xs:element name="score" type="xs:integer"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="source" type="xs:string"/>
              <xs:element name="summaryText" type="xs:string"/>
              <xs:element minOccurs="0" name="timestamp" type="xs:string"/>
              <xs:element name="userUuid" type="xs:string"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="sendAnswerRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="dialogUuid" type="xs:string"/>
        <xs:element maxOccurs="unbounded" name="answer" type="xs:string"/>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="sendAnswerResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="success" type="xs:boolean"/>
        <xs:element name="data">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dialogUuid" type="xs:string"/>
              <xs:element name="age" type="xs:integer"/>
              <xs:element name="currentStage" type="xs:string"/>
              <xs:element name="emergency">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="status" type="xs:boolean"/>
                    <xs:element name="comment" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element minOccurs="0" name="finished" type="xs:boolean"/>
              <xs:element minOccurs="0" name="complaintsFinished" type="xs:boolean"/>
              <xs:element minOccurs="0" name="complaintsSent" type="xs:boolean"/>
              <xs:element minOccurs="0" name="anamnesisIsExist" type="xs:boolean"/>
              <xs:element name="gender" type="xs:string"/>
              <xs:element minOccurs="0" name="genderQuestion" type="xs:boolean"/>
              <xs:element name="positionNomCode" type="xs:string"/>
              <xs:element name="question">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element minOccurs="0" name="answerConditions">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element maxOccurs="unbounded" minOccurs="0" name="answerCondition">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="answers">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element maxOccurs="unbounded" minOccurs="0" name="answer" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="block">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element maxOccurs="unbounded" minOccurs="0" name="answer" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="answerPlaceholder" type="xs:string"/>
                    <xs:element name="answerVariants">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element maxOccurs="unbounded" minOccurs="0" name="answer" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="attribute" type="xs:string"/>
                    <xs:element name="entity" type="xs:string"/>
                    <xs:element name="format">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element minOccurs="0" name="delimiter" type="xs:string"/>
                          <xs:element minOccurs="0" name="delimiter2" type="xs:string"/>
                          <xs:element minOccurs="0" name="valuePrefix" type="xs:string"/>
                          <xs:element minOccurs="0" name="valuePostfix" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="questionId" type="xs:string"/>
                    <xs:element name="text" type="xs:string"/>
                    <xs:element name="type" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="referrals">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="referral">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="name" type="xs:string"/>
                          <xs:element name="score" type="xs:integer"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="source" type="xs:string"/>
              <xs:element name="summaryText" type="xs:string"/>
              <xs:element minOccurs="0" name="timestamp" type="xs:string"/>
              <xs:element name="userUuid" type="xs:string"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="checkCodeRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="code" type="xs:string"/>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="checkCodeResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="success" type="xs:boolean"/>
        <xs:element name="data">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="codeIsCorrect" type="xs:boolean"/>
              <xs:element name="positionNomCode" type="xs:string"/>
              <xs:element name="tags">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="tag" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="addEventRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="code" type="xs:string"/>
        <xs:element name="event" type="xs:string"/>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="addEventResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="success" type="xs:boolean"/>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="sendResultRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="dialogUuid" type="xs:string"/>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="sendResultResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="success" type="xs:boolean"/>
        <xs:element name="data">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dialogUuid" type="xs:string"/>
              <xs:element minOccurs="0" name="anamnesisViewType" type="xs:string"/>
              <xs:element minOccurs="0" name="anamnesisStart" type="xs:boolean"/>
              <xs:element name="result" type="xs:string"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="sendAnamnesisResultRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="dialog_uuid" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="sendAnamnesisResultResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="success" type="xs:boolean"/>
        <xs:element name="data">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dialogUuid" type="xs:string"/>
              <xs:element name="documentId" type="xs:integer"/>
              <xs:element name="result" type="xs:string"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--tempCheckSymptoms-->
  <xs:element name="tempCheckSymptomsRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="patientId" type="xs:integer"/>
        <xs:element minOccurs="0" name="positionNomCode" type="xs:string"/>
        <xs:element minOccurs="0" name="complaintsFinished" type="xs:boolean"/>
        <xs:element minOccurs="0" name="complaintsSent" type="xs:boolean"/>
        <xs:element minOccurs="0" name="createdAtAfter" type="xs:dateTime"/>
        <xs:element minOccurs="0" name="createdAtBefore" type="xs:dateTime"/>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="tempCheckSymptomsResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="success" type="xs:boolean"/>
        <xs:element name="dialogs">
          <xs:complexType>
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="dialog">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="dialogUuid" type="xs:string"/>
                    <xs:element name="codeTemp" type="xs:string"/>
                    <xs:element name="code" type="xs:string"/>
                    <xs:element name="positionNomCode" type="xs:string"/>
                    <xs:element name="complaintsFinished" type="xs:boolean"/>
                    <xs:element name="complaintsSent" type="xs:boolean"/>
                    <xs:element name="createdAt" type="xs:dateTime"/>
                    <xs:element name="updatedAt" type="xs:dateTime"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--tempGetDialog-->
  <xs:element name="tempGetDialogRequest">
    <xs:annotation>
      <xs:documentation>Метод создания диалога в рамках эксперимента</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="dialogUuid" type="xs:string"/>
        <xs:element name="complaints" type="xs:string"/>
        <xs:element name="codeTemp" type="xs:string"/>
        <xs:element name="flowNumber" type="xs:string"/>
        <xs:element name="source" type="xs:string"/>
        <xs:element name="patientId" type="xs:integer"/>
        <xs:element name="age" type="xs:integer"/>
        <xs:element name="gender" type="xs:string"/>
        <xs:element name="positionNomCode" type="xs:string"/>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="tempGetDialogResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="success" type="xs:boolean"/>
        <xs:element maxOccurs="1" name="data">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dialogUuid" type="xs:string"/>
              <xs:element name="age" type="xs:integer"/>
              <xs:element name="currentStage" type="xs:string"/>
              <xs:element name="emergency">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="status" type="xs:boolean"/>
                    <xs:element name="comment" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element minOccurs="0" name="finished" type="xs:boolean"/>
              <xs:element minOccurs="0" name="complaintsFinished" type="xs:boolean"/>
              <xs:element minOccurs="0" name="complaintsSent" type="xs:boolean"/>
              <xs:element minOccurs="0" name="anamnesisIsExist" type="xs:boolean"/>
              <xs:element name="gender" type="xs:string"/>
              <xs:element minOccurs="0" name="genderQuestion" type="xs:boolean"/>
              <xs:element name="positionNomCode" type="xs:string"/>
              <xs:element name="question">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element minOccurs="0" name="answerConditions">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element maxOccurs="unbounded" minOccurs="0" name="answerCondition">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="answers">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element maxOccurs="unbounded" minOccurs="0" name="answer" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="block">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element maxOccurs="unbounded" minOccurs="0" name="answer" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="answerPlaceholder" type="xs:string"/>
                    <xs:element name="answerVariants">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element maxOccurs="unbounded" minOccurs="0" name="answer" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="attribute" type="xs:string"/>
                    <xs:element name="entity" type="xs:string"/>
                    <xs:element name="format">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element minOccurs="0" name="delimiter" type="xs:string"/>
                          <xs:element minOccurs="0" name="delimiter2" type="xs:string"/>
                          <xs:element minOccurs="0" name="valuePrefix" type="xs:string"/>
                          <xs:element minOccurs="0" name="valuePostfix" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="questionId" type="xs:string"/>
                    <xs:element name="text" type="xs:string"/>
                    <xs:element name="type" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="referrals">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="referral">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="name" type="xs:string"/>
                          <xs:element name="score" type="xs:integer"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="source" type="xs:string"/>
              <xs:element name="summaryText" type="xs:string"/>
              <xs:element minOccurs="0" name="timestamp" type="xs:string"/>
              <xs:element name="userUuid" type="xs:string"/>
              <xs:element name="userUuidTemp" type="xs:string"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--tempSendResult-->
  <xs:element name="tempSendResultRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="dialogUuid" type="xs:string"/>
        <xs:element name="code" type="xs:string"/>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="tempSendResultResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="success" type="xs:boolean"/>
        <xs:element maxOccurs="1" name="data">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="result" type="xs:string"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkljiOuLogDeYPjN4dtLcJQ0glQaUebWHqBQrvlkPvFWuQ--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.2" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkljiOuLohDIYemG.sQTOcko.U_.ZX2V3HXLpj9bE_zBivmR"/>
  <!--references-->
  <xs:element name="mail" type="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalOrganizationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинского учреждения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="compositionId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор
Композиции Think!EHR
ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="simiDocumentId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор
Документа СИМИ
ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--abstract types-->
  <xs:complexType abstract="true" name="Base">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания
компонентов сущностей,
владельцеми которых является
текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор
сущности/записи
на уровне всего ЕМИАС</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="true" name="EntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания сущностей,
владельцем которых является
текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base">
        <xs:attribute name="archived" type="xs:boolean" use="required">
          <xs:annotation>
            <xs:documentation>Признак "Архивная сущность"</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания
компонентов сущностей,
владельцами которых являются
другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignEntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания сущностей,
владельцами которых являются
другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="EntityBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания типов,
реализующих справочники ЕМИАС.НСИ.2</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignEntityBase">
        <xs:sequence>
          <xs:element name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование элемента справочника</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiWithCodeBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания типов,
реализующих справочники ЕМИАС.НСИ.2, в которых имеется бизнес-код</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="NsiBase">
        <xs:attribute name="code" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Бизнес-код</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="SIMIDocumentBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания cведений о документе СИМИ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="simiDocumentId"/>
      <xs:element minOccurs="0" ref="compositionId"/>
    </xs:sequence>
  </xs:complexType>
  <!--async operation status-->
  <xs:element name="operationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор операции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OperationExecutionStatus">
    <xs:annotation>
      <xs:documentation>Статус выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="isCompleted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак окончания выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="completenessProgress" type="OperationCompletenessBase">
        <xs:annotation>
          <xs:documentation>Сведения о текущем статусе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hasSucceded" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак успешности выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
        <xs:annotation>
          <xs:documentation>Коллекция сообщений, порожденных в ходе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор операции</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="false" name="OperationCompletenessPercentage">
    <xs:annotation>
      <xs:documentation>Описание текущего статуса выполнения операции в процентах (0%-100%)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OperationCompletenessBase">
        <xs:sequence>
          <xs:element name="completenessStatus">
            <xs:annotation>
              <xs:documentation>Статус (0%-100%)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:unsignedByte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания текущего статуса выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--calling methods' options-->
  <xs:element name="options" type="Options">
    <xs:annotation>
      <xs:documentation>Параметры вызова метода</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Options">
    <xs:annotation>
      <xs:documentation>Набор именованных значений</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Именованное значение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--pagination-->
  <xs:element name="pagingOptions" type="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="PagingResults">
    <xs:annotation>
      <xs:documentation>Список с пагинацией</xs:documentation>
    </xs:annotation>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageTotal" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество страниц</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morePagesAvailable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Флаг доступности других страниц с результатами для "постраничного листания" (true - если доступны еще страницы; false - иначе)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="totalItemsCount" type="xs:long" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество элементов (на всех страницах)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" ref="sortingOptions"/>
    </xs:sequence>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--sorting-->
  <xs:element name="sortingOptions" type="SortingOptions">
    <xs:annotation>
      <xs:documentation>Параметры сортировки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SortingOptions">
    <xs:annotation>
      <xs:documentation>Условия сортировки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="3" name="sortOrder" type="SortOrder">
        <xs:annotation>
          <xs:documentation>Условия сортировки
(используются в соответствии с
переданной последовательностью)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SortOrder">
    <xs:annotation>
      <xs:documentation>Сортировка</xs:documentation>
    </xs:annotation>
    <xs:attribute name="attributeName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Наименование поля, по которому должна быть произведена сортировка</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="false" name="desceding" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Направление сортировки</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--void response-->
  <xs:element fixed="true" name="result">
    <xs:annotation>
      <xs:documentation>Элемент для использования в методах, не предполагающих возврат какого-либо значения</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:boolean"/>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <!--base types-->
  <xs:complexType name="TimeInterval">
    <xs:annotation>
      <xs:documentation>Временной период (время)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время начала интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время окончания интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--keys-->
  <xs:complexType name="EntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор сущности,
непосредственно принадлежащей
текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор
сущности ЕМИАС,
внешней по отношнению
к текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NsiGlobalId">
    <xs:annotation>
      <xs:documentation>Глобальный идентфикатор
ЕМИАС.НСИ</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkljiOuLohDIYemG.sQTOcko.U_.ZX2V3HXLpj9bE_zBivmR</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:simpleType name="GUID">
    <xs:annotation>
      <xs:documentation>Глобальный 128-битный идентификатор (Globally Unique Identifier)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="320"/>
      <xs:pattern value=".+@.+\..+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkljiOuLohDIYemG.sQTOckl.U52l4ajB9S7psD2jNoPlElCV.BBsNBdpKVRyzje</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/userContext/" version="1.0" xmlns="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkljiOuLogDeYPjN4dtLcJQ0glQaUebWHqBQrvlkPvFWuQ--"/>
  <xs:element name="userContext" type="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="systemName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Шифр системы-потребителя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя пользователя (логин)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRoleId" type="ID">
        <xs:annotation>
          <xs:documentation>Код Роли</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isUserRoleSystemWide" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак "Общесистемная Роль"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRights">
        <xs:annotation>
          <xs:documentation>Коллекция Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Код Полномочия</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="jobExecutionId" type="ID"/>
      <xs:element minOccurs="0" name="hostIp" type="xs:string">
        <xs:annotation>
          <xs:documentation>IP адрес хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hostName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="options" type="Options">
        <xs:annotation>
          <xs:documentation>Набор именованных значений</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkljiOuLohDIYemG.sQTOck2615ooJrjC8Knr1lkcocbqC5izqTCxhHheQ--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/faults/" version="1.0" xmlns="http://emias.mos.ru/system/v1/faults/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkljiOuLohDIYemG.sQTOcko.U_.ZX2V3HXLpj9bE_zBivmR"/>
  <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkljiOuLohDIYemG.sQTOckl.U52l4ajB9S7psD2jNoPlElCV.BBsNBdpKVRyzje"/>
  <!--faults-->
  <xs:element name="fault" type="BaseFault">
    <xs:annotation>
      <xs:documentation>Базовый тип ошибки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SecurityFault">
    <xs:annotation>
      <xs:documentation>Ошибка безопасности</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element ref="uctx:userContext"/>
          <xs:choice>
            <xs:element name="unauthorizedRequestSecurityException" type="UnauthorizedRequestSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="otherSecurityException" type="OtherSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:sequence>
        <xs:attribute fixed="SECURITY" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BusinessFault">
    <xs:annotation>
      <xs:documentation>Бизнес ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Коллекция Сообщений об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hasErrors" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак наличия ошибок в списке сообщений</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="BUSINESS" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UnexpectedFault">
    <xs:annotation>
      <xs:documentation>Непредвиденная ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="version" type="xs:string">
            <xs:annotation>
              <xs:documentation>Версия продукта-сервиса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="stackTrace">
            <xs:annotation>
              <xs:documentation>Стек вызова (последние 10  записей)</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="10" name="stackTraceRecord">
                  <xs:annotation>
                    <xs:documentation>Запись StackTrace</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="declaringClass" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование класса, содержащего метод</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="methodName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование метода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="fileName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование файла</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="lineNumber" type="xs:int">
                        <xs:annotation>
                          <xs:documentation>Номер строки кода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="UNEXPECTED" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="BaseFault">
    <xs:annotation>
      <xs:documentation>Описание базового типа описания ошибки</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--security exceptions-->
  <xs:complexType name="UnauthorizedRequestSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="requiredRights">
        <xs:annotation>
          <xs:documentation>Перечень идентификаторов недостающих Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Идентификатор Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="UNAUTHORIZED_REQUEST_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="OtherSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="message" type="Message">
        <xs:annotation>
          <xs:documentation>Сообщение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="OTHER_SECURITY_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="SecurityExceptionTypes">
    <xs:annotation>
      <xs:documentation>Типы исключений безопасности</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNAUTHORIZED_REQUEST_EXCEPTION"/>
      <xs:enumeration value="OTHER_SECURITY_EXCEPTION"/>
    </xs:restriction>
  </xs:simpleType>
  <!--components-->
  <xs:simpleType name="FaultTypes">
    <xs:annotation>
      <xs:documentation>Тип ошибки</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="SECURITY">
        <xs:annotation>
          <xs:documentation>Непредвиденная ошибка приложения</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BUSINESS">
        <xs:annotation>
          <xs:documentation>Бизнес ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UNEXPECTED">
        <xs:annotation>
          <xs:documentation>Ошибка безопасности</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint></con:endpoints><con:operation id="a92313d1-aeba-4178-8970-816f9ee6e7e7" isOneWay="false" action="addEvent" name="addEvent" bindingOperationName="addEvent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3cc30605-c96d-4943-96c2-ceb74c1500d6" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:addEventRequest>\r
         <typ:code>?</typ:code>\r
         <typ:event>?</typ:event>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </typ:addEventRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/addEventRequest"/></con:call></con:operation><con:operation id="038707ae-776c-42a9-ae96-a9163344c520" isOneWay="false" action="checkCode" name="checkCode" bindingOperationName="checkCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="23d4f398-ad3a-4588-af27-88249e657048" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:checkCodeRequest>\r
         <typ:code>?</typ:code>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </typ:checkCodeRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/checkCodeRequest"/></con:call></con:operation><con:operation id="0b848c27-4834-4ed3-8659-b7ac9ab8882c" isOneWay="false" action="getDialog" name="getDialog" bindingOperationName="getDialog" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="16853577-51db-4622-8686-edbf3b91ba4d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getDialogRequest>\r
         <typ:dialogUuid>?</typ:dialogUuid>\r
         <!--Optional:-->\r
         <typ:complaints>?</typ:complaints>\r
         <!--Optional:-->\r
         <typ:source>?</typ:source>\r
         <!--Optional:-->\r
         <typ:code>?</typ:code>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </typ:getDialogRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/getDialogRequest"/></con:call><con:call id="1d258352-3190-4da6-98bb-f748d746be35" name="getDialog"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
    <soap:Header>
        <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
            <wsse:UsernameToken xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" wsu:Id="UsernameToken-e3b1a5b3-7ac9-45ec-b9cc-e20a55c72ed8">
                <wsse:Username>EIM/EIM</wsse:Username>
            </wsse:UsernameToken>
        </wsse:Security>
        <ns2:userContext xmlns="https://simptom.emias.ru/api/v1/soap/wsdl/types" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/system/v1/faults/">
            <ns2:systemName>EIM</ns2:systemName>
            <ns2:userName>EIM</ns2:userName>
            <ns2:userRoleId>7187</ns2:userRoleId>
            <ns2:userRights>
                <ns2:userRightId>37070001</ns2:userRightId>
            </ns2:userRights>
            <ns2:jobExecutionId>0</ns2:jobExecutionId>
        </ns2:userContext>
    </soap:Header>
    <soap:Body>
        <getDialogRequest xmlns="https://simptom.emias.ru/api/v1/soap/wsdl/types" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/system/v1/faults/">
            <complaints>Частое мочеиспускание</complaints>
            <source>EIM</source>
            <code>BtKh4</code>
        </getDialogRequest>
    </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/getDialogRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="32e0a0f1-8eae-4419-9f7f-1d7feaa7f2e7" isOneWay="false" action="sendAnamnesisResult" name="sendAnamnesisResult" bindingOperationName="sendAnamnesisResult" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="611e2c08-8b5a-4949-9b84-7f81a638b8d4" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:sendAnamnesisResultRequest>\r
         <typ:dialog_uuid>?</typ:dialog_uuid>\r
      </typ:sendAnamnesisResultRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/sendAnamnesisResultRequest"/></con:call></con:operation><con:operation id="764744d1-3f1d-4b69-818c-4c0cf133e844" isOneWay="false" action="sendAnswer" name="sendAnswer" bindingOperationName="sendAnswer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7e06d78c-2735-4cfd-9764-1511e16f8e25" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:sendAnswerRequest>\r
         <typ:dialogUuid>?</typ:dialogUuid>\r
         <!--1 or more repetitions:-->\r
         <typ:answer>?</typ:answer>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </typ:sendAnswerRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/sendAnswerRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="95017d30-823f-4db7-aad3-836ded45d014" name="sendAnswer"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-408303f7-ed63-4057-bc31-c33f963bf9ab" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns2:userContext xmlns="https://simptom.emias.ru/api/v1/soap/wsdl/types" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/system/v1/faults/">\r
         <ns2:systemName>EIM</ns2:systemName>\r
         <ns2:userName>EIM</ns2:userName>\r
         <ns2:userRoleId>7187</ns2:userRoleId>\r
         <ns2:userRights>\r
            <ns2:userRightId>37070003</ns2:userRightId>\r
         </ns2:userRights>\r
         <ns2:jobExecutionId>0</ns2:jobExecutionId>\r
      </ns2:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <sendAnswerRequest xmlns="https://simptom.emias.ru/api/v1/soap/wsdl/types" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/system/v1/faults/">\r
         <dialogUuid>24d01468734348349fb42793d73b6e54</dialogUuid>\r
         <answer>Нет</answer>\r
      </sendAnswerRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/sendAnswerRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="c4d484d8-826d-4952-abfd-8726f85055f3" isOneWay="false" action="sendResult" name="sendResult" bindingOperationName="sendResult" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="85444d63-b7d8-4465-afe8-f8a7ba42bf1b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:sendResultRequest>\r
         <typ:dialogUuid>?</typ:dialogUuid>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </typ:sendResultRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/sendResultRequest"/></con:call></con:operation><con:operation id="040928a6-3381-415c-9c83-230370ed2943" isOneWay="false" action="tempCheckSymptoms" name="tempCheckSymptoms" bindingOperationName="tempCheckSymptoms" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="77ae212b-f06c-4009-a72e-e330e47f4dfb" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:tempCheckSymptomsRequest>\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:positionNomCode>?</typ:positionNomCode>\r
         <!--Optional:-->\r
         <typ:complaintsFinished>?</typ:complaintsFinished>\r
         <!--Optional:-->\r
         <typ:complaintsSent>?</typ:complaintsSent>\r
         <!--Optional:-->\r
         <typ:createdAtAfter>?</typ:createdAtAfter>\r
         <!--Optional:-->\r
         <typ:createdAtBefore>?</typ:createdAtBefore>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </typ:tempCheckSymptomsRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/tempCheckSymptomsRequest"/></con:call></con:operation><con:operation id="7b411720-f7fd-4b55-9752-7e251a409f41" isOneWay="false" action="tempGetDialog" name="tempGetDialog" bindingOperationName="tempGetDialog" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2cba7d9a-ad11-4c6d-a94a-54b38fe3dbcb" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-e1845a03-2970-4159-9208-cc611742433a" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns2:userContext xmlns="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/system/v1/faults/">\r
         <ns2:systemName>EIM</ns2:systemName>\r
         <ns2:userName>EIM</ns2:userName>\r
         <ns2:userRoleId>7187</ns2:userRoleId>\r
         <ns2:userRights>\r
            <ns2:userRightId>37070008</ns2:userRightId>\r
         </ns2:userRights>\r
         <ns2:jobExecutionId>0</ns2:jobExecutionId>\r
      </ns2:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <tempGetDialogRequest xmlns="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/system/v1/faults/">\r
         <complaints>Боль</complaints>\r
         <codeTemp>A4DfzPJD</codeTemp>\r
         <flowNumber>0</flowNumber>\r
         <source>EIM</source>\r
         <patientId>10166510</patientId>\r
         <age>83</age>\r
         <gender>FEMALE</gender>\r
         <positionNomCode>0</positionNomCode>\r
         <possiblePositionNomCode>1</possiblePositionNomCode>
         <possiblePositionNomCode>2</possiblePositionNomCode>
      </tempGetDialogRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/tempGetDialogRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="6b1d39df-1ffb-4836-a142-e43a365a19b7" isOneWay="false" action="tempSendResult" name="tempSendResult" bindingOperationName="tempSendResult" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="60a57fb2-8c45-41a0-a01f-5ab56f61951f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:tempSendResultRequest>\r
         <typ:dialogUuid>?</typ:dialogUuid>\r
         <typ:code>?</typ:code>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </typ:tempSendResultRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/tempSendResultRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="d6a49dd6-5fcb-4a1e-9844-f7c7705a529d" wsaVersion="NONE" name="ПИН" type="wsdl" bindingName="{http://emias.mos.ru/pindata/pnExternal/v1/types/}pnExternalServiceBinding" soapVersion="1_2" anonymous="optional" definition="http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?wsdl"><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="pnExternalService" targetNamespace="http://emias.mos.ru/pindata/pnExternal/v1/types/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:nsf="http://emias.mos.ru/system/v1/faults/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://emias.mos.ru/pindata/pnExternal/v1/types/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema>
      <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTSYx3_721MTtVEVSGz1v_uEcGjfCRR39.I1YxLVuA3W1gECaSFNnXUTVSS5Tpe.DqIfmytcz3Tij0Og--"/>
      <xs:import namespace="http://emias.mos.ru/system/v1/faults/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTSYx3_721MTtVEVSGz1v_uEcGjfCRR39.I1YxPkmQw1p8UCqECNgZ2_hS4.KFZv.nB2Wh9_k-"/>
      <xs:import namespace="http://emias.mos.ru/pindata/pnExternal/v1/types/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTFpJq_7DuM3pXGj6b1lfspQgZ2vXUDGYpJQJsdlCWy65tocl_9vvWFvjlXrTTscg-"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="fault">
    <wsdl:documentation>Ошибка</wsdl:documentation>
    <wsdl:part element="nsf:fault" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPatientConclusionDetailOutput">
    <wsdl:part element="tns:GetPatientConclusionDetailResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="userContext">
    <wsdl:documentation>Контекст пользователя</wsdl:documentation>
    <wsdl:part element="uctx:userContext" name="userContext"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPatientConclusionsOutput">
    <wsdl:part element="tns:GetPatientConclusionsResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPatientConclusionsInput">
    <wsdl:part element="tns:GetPatientConclusionsRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPatientConclusionDetailInput">
    <wsdl:part element="tns:GetPatientConclusionDetailRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="pnExternalServicePortType">
    <wsdl:operation name="getPatientConclusions">
      <wsdl:input message="tns:getPatientConclusionsInput"></wsdl:input>
      <wsdl:output message="tns:getPatientConclusionsOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPatientConclusionDetail">
      <wsdl:input message="tns:getPatientConclusionDetailInput"></wsdl:input>
      <wsdl:output message="tns:getPatientConclusionDetailOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="pnExternalServiceBinding" type="tns:pnExternalServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getPatientConclusions">
      <soap:operation soapAction="getPatientConclusions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPatientConclusionDetail">
      <soap:operation soapAction="getPatientConclusionDetail" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="pnExternalService">
    <wsdl:port binding="tns:pnExternalServiceBinding" name="conclusionPort">
      <soap:address location="http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService"/>
    </wsdl:port>
    <wsp:PolicyReference URI="#authPolicy"/>
  </wsdl:service>
  <wsp:Policy wsu:Id="authPolicy">
    <sp:SupportingTokens xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702">
      <wsp:Policy>
        <sp:UsernameToken sp:IncludeToken="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient">
          <wsp:Policy>
            <sp:NoPassword/>
          </wsp:Policy>
        </sp:UsernameToken>
      </wsp:Policy>
    </sp:SupportingTokens>
  </wsp:Policy>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTSYx3_721MTtVEVSGz1v_uEcGjfCRR39.I1YxLVuA3W1gECaSFNnXUTVSS5Tpe.DqIfmytcz3Tij0Og--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/userContext/" version="1.0" xmlns="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTSYx3_721MTtVEVSGz1v_uEcWm_GADGRhex9sPO0gffUr1uWJ9Zh1JyE_ZFw-"/>
  <xs:element name="userContext" type="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="systemName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Шифр системы-потребителя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя пользователя (логин)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRoleId" type="ID">
        <xs:annotation>
          <xs:documentation>Код Роли</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isUserRoleSystemWide" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак "Общесистемная Роль"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRights">
        <xs:annotation>
          <xs:documentation>Коллекция Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Код Полномочия</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="jobExecutionId" type="ID"/>
      <xs:element minOccurs="0" name="hostIp" type="xs:string">
        <xs:annotation>
          <xs:documentation>IP адрес хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hostName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="options" type="Options">
        <xs:annotation>
          <xs:documentation>Набор именованных значений</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTSYx3_721MTtVEVSGz1v_uEcWm_GADGRhex9sPO0gffUr1uWJ9Zh1JyE_ZFw-</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.2" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTSYx3_721MTtVEVSGz1v_uEcGjfCRR39.I1YxIFuBS6OKgmeRUl5A.ssQs8NYEw--"/>
  <xs:element name="mail" type="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalOrganizationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинского учреждения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="compositionId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор
Композиции Think!EHR
ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="simiDocumentId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор
Документа СИМИ
ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--abstract types-->
  <xs:complexType abstract="true" name="Base">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания
компонентов сущностей,
владельцеми которых является
текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор
сущности/записи
на уровне всего ЕМИАС</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="true" name="EntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания сущностей,
владельцем которых является
текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base">
        <xs:attribute name="archived" type="xs:boolean" use="required">
          <xs:annotation>
            <xs:documentation>Признак "Архивная сущность"</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания
компонентов сущностей,
владельцами которых являются
другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignEntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания сущностей,
владельцами которых являются
другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="EntityBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания типов,
реализующих справочники ЕМИАС.НСИ.2</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignEntityBase">
        <xs:sequence>
          <xs:element name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование элемента справочника</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiWithCodeBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания типов,
реализующих справочники ЕМИАС.НСИ.2, в которых имеется бизнес-код</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="NsiBase">
        <xs:attribute name="code" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Бизнес-код</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="SIMIDocumentBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания cведений о документе СИМИ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="simiDocumentId"/>
      <xs:element minOccurs="0" ref="compositionId"/>
    </xs:sequence>
  </xs:complexType>
  <!--async operation status-->
  <xs:element name="operationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор операции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OperationExecutionStatus">
    <xs:annotation>
      <xs:documentation>Статус выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="isCompleted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак окончания выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="completenessProgress" type="OperationCompletenessBase">
        <xs:annotation>
          <xs:documentation>Сведения о текущем статусе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hasSucceded" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак успешности выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
        <xs:annotation>
          <xs:documentation>Коллекция сообщений, порожденных в ходе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор операции</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="false" name="OperationCompletenessPercentage">
    <xs:annotation>
      <xs:documentation>Описание текущего статуса выполнения операции в процентах (0%-100%)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OperationCompletenessBase">
        <xs:sequence>
          <xs:element name="completenessStatus">
            <xs:annotation>
              <xs:documentation>Статус (0%-100%)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:unsignedByte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания текущего статуса выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--calling methods' options-->
  <xs:element name="options" type="Options">
    <xs:annotation>
      <xs:documentation>Параметры вызова метода</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Options">
    <xs:annotation>
      <xs:documentation>Набор именованных значений</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Именованное значение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--pagination-->
  <xs:element name="pagingOptions" type="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="PagingResults">
    <xs:annotation>
      <xs:documentation>Список с пагинацией</xs:documentation>
    </xs:annotation>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageTotal" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество страниц</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morePagesAvailable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Флаг доступности других страниц с результатами для "постраничного листания" (true - если доступны еще страницы; false - иначе)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="totalItemsCount" type="xs:long" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество элементов (на всех страницах)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" ref="sortingOptions"/>
    </xs:sequence>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--sorting-->
  <xs:element name="sortingOptions" type="SortingOptions">
    <xs:annotation>
      <xs:documentation>Параметры сортировки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SortingOptions">
    <xs:annotation>
      <xs:documentation>Условия сортировки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="3" name="sortOrder" type="SortOrder">
        <xs:annotation>
          <xs:documentation>Условия сортировки
(используются в соответствии с
переданной последовательностью)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SortOrder">
    <xs:annotation>
      <xs:documentation>Сортировка</xs:documentation>
    </xs:annotation>
    <xs:attribute name="attributeName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Наименование поля, по которому должна быть произведена сортировка</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="false" name="desceding" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Направление сортировки</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--void response-->
  <xs:element fixed="true" name="result">
    <xs:annotation>
      <xs:documentation>Элемент для использования в методах, не предполагающих возврат какого-либо значения</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:boolean"/>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <!--base types-->
  <xs:complexType name="TimeInterval">
    <xs:annotation>
      <xs:documentation>Временной период (время)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время начала интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время окончания интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--keys-->
  <xs:complexType name="EntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор сущности,
непосредственно принадлежащей
текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор
сущности ЕМИАС,
внешней по отношнению
к текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NsiGlobalId">
    <xs:annotation>
      <xs:documentation>Глобальный идентфикатор
ЕМИАС.НСИ</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTSYx3_721MTtVEVSGz1v_uEcGjfCRR39.I1YxIFuBS6OKgmeRUl5A.ssQs8NYEw--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:simpleType name="GUID">
    <xs:annotation>
      <xs:documentation>Глобальный 128-битный идентификатор (Globally Unique Identifier)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="320"/>
      <xs:pattern value=".+@.+\..+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTSYx3_721MTtVEVSGz1v_uEcGjfCRR39.I1YxPkmQw1p8UCqECNgZ2_hS4.KFZv.nB2Wh9_k-</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/faults/" version="1.0" xmlns="http://emias.mos.ru/system/v1/faults/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTSYx3_721MTtVEVSGz1v_uEcGjfCRR39.I1YxIFuBS6OKgmeRUl5A.ssQs8NYEw--"/>
  <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTSYx3_721MTtVEVSGz1v_uEcGjfCRR39.I1YxLVuA3W1gECaSFNnXUTVSS5Tpe.DqIfmytcz3Tij0Og--"/>
  <!--faults-->
  <xs:element name="fault" type="BaseFault">
    <xs:annotation>
      <xs:documentation>Базовый тип ошибки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SecurityFault">
    <xs:annotation>
      <xs:documentation>Ошибка безопасности</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element ref="uctx:userContext"/>
          <xs:choice>
            <xs:element name="unauthorizedRequestSecurityException" type="UnauthorizedRequestSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="otherSecurityException" type="OtherSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:sequence>
        <xs:attribute fixed="SECURITY" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BusinessFault">
    <xs:annotation>
      <xs:documentation>Бизнес ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Коллекция Сообщений об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hasErrors" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак наличия ошибок в списке сообщений</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="BUSINESS" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UnexpectedFault">
    <xs:annotation>
      <xs:documentation>Непредвиденная ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="version" type="xs:string">
            <xs:annotation>
              <xs:documentation>Версия продукта-сервиса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="stackTrace">
            <xs:annotation>
              <xs:documentation>Стек вызова (последние 10  записей)</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="10" name="stackTraceRecord">
                  <xs:annotation>
                    <xs:documentation>Запись StackTrace</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="declaringClass" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование класса, содержащего метод</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="methodName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование метода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="fileName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование файла</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="lineNumber" type="xs:int">
                        <xs:annotation>
                          <xs:documentation>Номер строки кода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="UNEXPECTED" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="BaseFault">
    <xs:annotation>
      <xs:documentation>Описание базового типа описания ошибки</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--security exceptions-->
  <xs:complexType name="UnauthorizedRequestSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="requiredRights">
        <xs:annotation>
          <xs:documentation>Перечень идентификаторов недостающих Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Идентификатор Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="UNAUTHORIZED_REQUEST_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="OtherSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="message" type="Message">
        <xs:annotation>
          <xs:documentation>Сообщение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="OTHER_SECURITY_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="SecurityExceptionTypes">
    <xs:annotation>
      <xs:documentation>Типы исключений безопасности</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNAUTHORIZED_REQUEST_EXCEPTION"/>
      <xs:enumeration value="OTHER_SECURITY_EXCEPTION"/>
    </xs:restriction>
  </xs:simpleType>
  <!--components-->
  <xs:simpleType name="FaultTypes">
    <xs:annotation>
      <xs:documentation>Тип ошибки</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="SECURITY">
        <xs:annotation>
          <xs:documentation>Непредвиденная ошибка приложения</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BUSINESS">
        <xs:annotation>
          <xs:documentation>Бизнес ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UNEXPECTED">
        <xs:annotation>
          <xs:documentation>Ошибка безопасности</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTFpJq_7DuM3pXGj6b1lfspQgZ2vXUDGYpJQJsdlCWy65tocl_9vvWFvjlXrTTscg-</con:url><con:content>&lt;xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/pindata/pnExternal/v1/types/" xmlns:xs="http://www.w3.org/2001/XMLSchema">&#13;
  &lt;!--схема для типов всех методов, собирается включением отдельных файлов по методам-->&#13;
  &lt;xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTFpJq_7DuM3pXGj6b1lfspQgZ2vXUDHU1ITd.LEGAwVpMETyUANiKQClY.cuHvCfyAPFaEjTmTf7kUOE9X8fI"/>&#13;
  &lt;xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTFpJq_7DuM3pXGj6b1lfspQgZ2vXUDHU1ITd.LEGAwVpMETyUANiKQClYzoCLriojaGoLrHDXkK6RJbZmQTn2HHcxcMQ-"/>&#13;
&lt;/xs:schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTFpJq_7DuM3pXGj6b1lfspQgZ2vXUDHU1ITd.LEGAwVpMETyUANiKQClY.cuHvCfyAPFaEjTmTf7kUOE9X8fI</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/pindata/pnExternal/v1/types/" xmlns="http://emias.mos.ru/pindata/pnExternal/v1/types/" xmlns:core="http://emias.mos.ru/pindata/core/v2/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTFpJq_7DuM3pXGj6b1lfspQgZ2uCKT38_O0lpaQad3Eqx7BRCPeRSG4jfA.KMypH8"/>
  <xs:import namespace="http://emias.mos.ru/pindata/core/v2/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTSYx3_721Ij1JEBqXwxz9pBsQ2vXXDGojMdmCFDJ8UtwagvuRx7thTZM-"/>
  <xs:complexType name="ConclusionListPage">
    <xs:complexContent>
      <xs:extension base="core:PagingResults">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="conclusion" type="Conclusion">
            <xs:annotation>
              <xs:documentation>Медицинское заключение</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="GetPatientConclusionsRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="patientId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор пациента в ЕМИАС</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="conclusionType" type="core:ID">
          <xs:annotation>
            <xs:documentation>Вид заключения</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="created" type="core:DatePeriod">
          <xs:annotation>
            <xs:documentation>Вид заключения</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="pagingOptions" type="core:PagingOptions">
          <xs:annotation>
            <xs:documentation>Пагинация</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="core:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetPatientConclusionsResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="ConclusionListPage">
          <xs:annotation>
            <xs:documentation>Результат поиска</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTSYx3_721Ij1JEBqXwxz9pBsQ2vXXDGojMdmCFDJ8UtwagvuRx7thTZM-</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/pindata/core/v2/" xmlns="http://emias.mos.ru/pindata/core/v2/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTSYx3_721MTtVEVSGz1v_uEcWm_GADGRhex9sPO0gffUr1uWJ9Zh1JyE_ZFw-"/>
  <!--Тут будут общие типы между всеми сервисами 2й волны-->
  <xs:complexType name="ConclusionType">
    <xs:annotation>
      <xs:documentation>Сведения о виде медицинского заключения</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="NsiWithCodeBase">
        <xs:sequence>
          <xs:element minOccurs="0" name="formNumber" type="xs:string">
            <xs:annotation>
              <xs:documentation>Номер формы</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ConclusionState">
    <xs:annotation>
      <xs:documentation>Статус по справочнику статусов документов заключений</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="NsiWithCodeBase"/>
    </xs:complexContent>
  </xs:complexType>
  <!--NSI-->
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTFpJq_7DuM3pXGj6b1lfspQgZ2uCKT38_O0lpaQad3Eqx7BRCPeRSG4jfA.KMypH8</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/pindata/pnExternal/v1/types/" xmlns="http://emias.mos.ru/pindata/pnExternal/v1/types/" xmlns:core="http://emias.mos.ru/pindata/core/v2/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://emias.mos.ru/pindata/core/v2/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTSYx3_721Ij1JEBqXwxz9pBsQ2vXXDGojMdmCFDJ8UtwagvuRx7thTZM-"/>
  <xs:complexType name="Conclusion">
    <xs:annotation>
      <xs:documentation>Общий контейнер заключений</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:Base">
        <xs:sequence>
          <xs:element minOccurs="0" name="number" type="xs:string">
            <xs:annotation>
              <xs:documentation>Серия и номер заключения</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="issueDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>Дата подписания заключения</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cancelDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>Дата аннулирования заключения</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="endDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>Дата окончания действия</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="type" type="ConclusionTypeAdvanced">
            <xs:annotation>
              <xs:documentation>Вид заключения</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="egiszState" type="xs:string">
            <xs:annotation>
              <xs:documentation>Статус отправки в РЭМД</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="egiszDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>Дата последнего статуса отправки в РЭМД</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="state" type="core:ConclusionState">
            <xs:annotation>
              <xs:documentation>Статус заключения</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="medicalOrganizationId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор МО</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="medicalOrganizationName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Название МО</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="medicalFacilityId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор МУ</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="medicalFacilityName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Название МУ</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ConclusionTypeAdvanced">
    <xs:annotation>
      <xs:documentation>Вид медицинского заключения</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:ConclusionType">
        <xs:sequence>
          <xs:element name="shortTitle" type="xs:string">
            <xs:annotation>
              <xs:documentation>Краткое наименование вида заключения</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="additionalTitle" type="xs:string">
            <xs:annotation>
              <xs:documentation>Дополнительное наименование вида заключения</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="TransportCategory">
    <xs:complexContent>
      <xs:extension base="core:NsiWithCodeBase">
        <xs:annotation>
          <xs:documentation>Категория транспортных средств</xs:documentation>
        </xs:annotation>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MedicalRestriction">
    <xs:complexContent>
      <xs:extension base="core:NsiBase">
        <xs:annotation>
          <xs:documentation>Медицинское ограничение к управлению транспортными средствами</xs:documentation>
        </xs:annotation>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MedicalIndication">
    <xs:complexContent>
      <xs:extension base="core:NsiBase">
        <xs:annotation>
          <xs:documentation>Медицинское показание к управлению транспортными средствами</xs:documentation>
        </xs:annotation>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Association">
    <xs:complexContent>
      <xs:extension base="core:Base">
        <xs:annotation>
          <xs:documentation>Информация о связанном заключении</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="conclusionType" type="ConclusionTypeAdvanced">
            <xs:annotation>
              <xs:documentation>Вид заключения</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="typeCode" type="xs:string">
            <xs:annotation>
              <xs:documentation>Вид связи</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="conclusionNumber" type="xs:string">
            <xs:annotation>
              <xs:documentation>Номер</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="egiszState" type="xs:string">
            <xs:annotation>
              <xs:documentation>Статус отправки в РЭМД</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ConclusionAdvanced">
    <xs:complexContent>
      <xs:extension base="Conclusion">
        <xs:sequence>
          <xs:element minOccurs="0" name="contraindications" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Противопоказания</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="doctorId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор МР</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="doctorName" type="xs:string">
            <xs:annotation>
              <xs:documentation>ФИО врача</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="categories">
            <xs:complexType>
              <xs:annotation>
                <xs:documentation>категории ТС</xs:documentation>
              </xs:annotation>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="category" type="TransportCategory">
                  <xs:annotation>
                    <xs:documentation>категория ТС</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="restrictions">
            <xs:complexType>
              <xs:annotation>
                <xs:documentation>Ограничения к управлению ТС</xs:documentation>
              </xs:annotation>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="restriction" type="MedicalRestriction">
                  <xs:annotation>
                    <xs:documentation>Ограничение к управлению ТС</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="indications">
            <xs:complexType>
              <xs:annotation>
                <xs:documentation>Показание к управлению ТС</xs:documentation>
              </xs:annotation>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="indication" type="MedicalIndication">
                  <xs:annotation>
                    <xs:documentation>Показания к управлению ТС</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="association" type="Association">
            <xs:annotation>
              <xs:documentation>Связанный документ</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="disclaimer">
            <xs:annotation>
              <xs:documentation>Дисклеймер</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element name="state" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>Статус</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element name="text" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>Текст дисклеймера</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" name="description" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>Дополнительное описание</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" name="conclusionId" type="core:ID">
                  <xs:annotation>
                    <xs:documentation>Идентификатор уведомления</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTFpJq_7DuM3pXGj6b1lfspQgZ2vXUDHU1ITd.LEGAwVpMETyUANiKQClYzoCLriojaGoLrHDXkK6RJbZmQTn2HHcxcMQ-</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/pindata/pnExternal/v1/types/" xmlns="http://emias.mos.ru/pindata/pnExternal/v1/types/" xmlns:core="http://emias.mos.ru/pindata/core/v2/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTFpJq_7DuM3pXGj6b1lfspQgZ2uCKT38_O0lpaQad3Eqx7BRCPeRSG4jfA.KMypH8"/>
  <xs:import namespace="http://emias.mos.ru/pindata/core/v2/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELu26x6A9BbtKAbcbEp.44sgRhOg_WSujqnJcMIaNb9Njn4SIh3b1AOEkz6i0w6jWCoBKLkV96l2mppSkX4pcb_DFcpiOmkmGWofV.OJTSYx3_721Ij1JEBqXwxz9pBsQ2vXXDGojMdmCFDJ8UtwagvuRx7thTZM-"/>
  <xs:element name="GetPatientConclusionDetailRequest">
    <xs:annotation>
      <xs:documentation>Входные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="id" type="core:ID">
          <xs:annotation>
            <xs:documentation>Уникальный идентификатор</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="patientId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор пациента в ЕМИАС</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="core:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetPatientConclusionDetailResponse">
    <xs:annotation>
      <xs:documentation>Выходные данные</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="conclusion" type="ConclusionAdvanced">
          <xs:annotation>
            <xs:documentation>Заключение</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService</con:endpoint></con:endpoints><con:operation id="f95c5bcf-f4ac-4345-a158-c8602b5c1f24" isOneWay="false" action="getPatientConclusionDetail" name="getPatientConclusionDetail" bindingOperationName="getPatientConclusionDetail" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bc144608-ba14-44f7-97c5-74850d3563da" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:typ="http://emias.mos.ru/pindata/pnExternal/v1/types/" xmlns:v2="http://emias.mos.ru/pindata/core/v2/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <typ:GetPatientConclusionDetailRequest>\r
         <typ:id>?</typ:id>\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v2:entry key="?">?</v2:entry>\r
         </typ:options>\r
      </typ:GetPatientConclusionDetailRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/pindata/pnExternal/v1/types/pnExternalServicePortType/getPatientConclusionDetailRequest"/></con:call></con:operation><con:operation id="aeef886f-7523-4ae9-87ce-e8ef2ca5378a" isOneWay="false" action="getPatientConclusions" name="getPatientConclusions" bindingOperationName="getPatientConclusions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2f463a15-1f6d-4d25-aa23-4aa3d6ebbc12" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:typ="http://emias.mos.ru/pindata/pnExternal/v1/types/" xmlns:v2="http://emias.mos.ru/pindata/core/v2/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <typ:GetPatientConclusionsRequest>\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:conclusionType>?</typ:conclusionType>\r
         <!--Optional:-->\r
         <typ:created>\r
            <!--Optional:-->\r
            <v2:start>?</v2:start>\r
            <!--Optional:-->\r
            <v2:end>?</v2:end>\r
         </typ:created>\r
         <!--Optional:-->\r
         <typ:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v2:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v2:sortOrder attributeName="?" desceding="false"/>\r
            </v2:sortingOptions>\r
         </typ:pagingOptions>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v2:entry key="?">?</v2:entry>\r
         </typ:options>\r
      </typ:GetPatientConclusionsRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/pindata/pnExternal/v1/types/pnExternalServicePortType/getPatientConclusionsRequest"/></con:call><con:call id="58b524c7-dfbe-4b57-9d38-154f677f30dc" name="getPatientConclusion"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:typ="http://emias.mos.ru/pindata/pnExternal/v1/types/" xmlns:v2="http://emias.mos.ru/pindata/core/v2/">
   <soap:Header>
    <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
      <wsse:UsernameToken>
        <wsse:Username>EIM/EIM</wsse:Username>
      </wsse:UsernameToken>
    </wsse:Security>
  </soap:Header>\r
   <soap:Body>\r
      <typ:GetPatientConclusionsRequest>\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:conclusionType>?</typ:conclusionType>\r
         <!--Optional:-->\r
         <typ:created>\r
            <!--Optional:-->\r
            <v2:start>?</v2:start>\r
            <!--Optional:-->\r
            <v2:end>?</v2:end>\r
         </typ:created>\r
         <!--Optional:-->\r
         <typ:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v2:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v2:sortOrder attributeName="?" desceding="false"/>\r
            </v2:sortingOptions>\r
         </typ:pagingOptions>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v2:entry key="?">?</v2:entry>\r
         </typ:options>\r
      </typ:GetPatientConclusionsRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/pindata/pnExternal/v1/types/pnExternalServicePortType/getPatientConclusionsRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:RestService" id="31386af6-a5d8-4e98-a64d-722d4fb2ee24" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://emiasinfo1.emias.solit-clouds.ru" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://emiasinfo1.emias.solit-clouds.ru</con:endpoint></con:endpoints><con:resource name="logout" path="/api/v1/user/authentication/logout" id="068d019e-645d-446f-b531-a0ff59c7b1ab"><con:settings/><con:parameters/><con:method name="Method 1" id="bdcedc07-e667-4656-9e06-7dd4943ed2d1" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:log="http://emiasinfo1.emias.solit-clouds.ru/api/v1/user/authentication/logout">log:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="0d9178c4-e1da-4f0e-bf61-a348e7ffdd59" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="check" path="/api/v1/user/authentication/check" id="6944f842-bf8f-4a06-90ea-7173e3eb24d3"><con:settings/><con:parameters/><con:method name="Method 1" id="88e480f2-6a9f-4dca-b947-d0036c496d0b" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:chec="http://emiasinfo1.emias.solit-clouds.ru/api/v1/user/authentication/check">chec:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="0f09a5f6-dfd7-426c-b502-7886ed7414ca" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="getDoctorsInfo" path="/api/v3/saOrchestrator/getDoctorsInfo" id="eb77e026-d1ca-45a7-9a9b-612a6ed85e47"><con:settings/><con:parameters/><con:method name="Method 1" id="014f824e-3b85-402b-87f8-b48f9a1e99ba" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:get="http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/getDoctorsInfo">get:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:get="http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/getDoctorsInfo">get:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="48fab2bb-31e5-42ce-b75f-33a703893d21" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="units" path="/api/v2/medication/units" id="7c423c99-7afc-446f-a13f-c3dcb5cecaaf"><con:settings/><con:parameters/><con:method name="Method 1" id="9ca37866-d249-4f94-9245-9854629aed28" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:unit="http://emiasinfo1.emias.solit-clouds.ru/api/v2/medication/units">unit:Response</con:element></con:representation><con:request name="Request 1" id="8b90abf6-b452-4dfd-9d96-485b6429b5e9" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/medication/units</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="add" path="/api/v1/user/add" id="c3e91acd-71af-4f53-8fdc-f0fc6ad62328"><con:settings/><con:parameters/><con:method name="Method 1" id="8d7d6887-021e-40a8-ac15-c0f15045e111" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>405</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:add="http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/user/add">add:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="2ac0aa9d-a732-4991-8bbf-11077016a84d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://emiasinfo1.emias.solit-clouds.ru</con:endpoint><con:request>{
	"patientId": "${#TestCase#patientId}",
	"omsNumber": "${#TestCase#omsNumber}",
	"birthDate": "${#TestCase#birthDate}",
	"platform": "${#TestCase#platform}",
	"appVersion": "${#TestCase#appVersion}",
	"deviceCloudId": "${=java.util.UUID.randomUUID()}",
	"deviceGuid": "${=java.util.UUID.randomUUID()}"
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="check" path="/api/v1/user/authentication/check" id="49c362ea-0d2d-48cd-a7e4-a3acdc973ae5"><con:settings/><con:parameters/><con:method name="Method 1" id="bb891d7b-ba9a-4855-933d-cd3c4d86331d" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="e1fc39cd-35b6-43c0-bbcd-106ff4b2c7b6" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://emiasinfo1.emias.solit-clouds.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="check" path="/api/v1/user/authentication/check" id="58576111-5d81-4b5f-9007-4e7e9082bc91"><con:settings/><con:parameters/><con:method name="Method 1" id="a443a8a0-665c-474a-8a38-723ea05c4bfc" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="7f2de7ec-4d51-4b59-a707-59a504d5189b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://emiasinfo1.emias.solit-clouds.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:WsdlInterface" id="ac19a251-af19-4938-98b4-9eb8915ba9db" wsaVersion="NONE" name="ЦЛС" type="wsdl" bindingName="{http://emias.mos.ru/laboratory/v1/dictionary/other/soap/}LaboratoryOtherDictionariesServiceBinding" soapVersion="1_2" anonymous="optional" definition="http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries?wsdl"><con:part><con:url>http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries?wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://emias.mos.ru/laboratory/v1/dictionary/other/soap/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://emias.mos.ru/laboratory/v1/dictionary/other/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:dto="http://emias.mos.ru/laboratory/v1/dictionary/other/" xmlns:ct="http://emias.mos.ru/laboratory/v1/common/types/">
  <wsdl:types>
    <xs:schema>
      <xs:import namespace="http://emias.mos.ru/laboratory/v1/dictionary/other/" schemaLocation="http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries?xsd=dictionary-other-wsdl-types.xsd"/>
      <xs:import namespace="http://emias.mos.ru/laboratory/v1/common/types/" schemaLocation="http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries?xsd=common-types.xsd"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="faultMessage">
    <wsdl:part element="ct:LaboratoryFaultInfo" name="errorInfo"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReasonCullTubeResponse">
    <wsdl:part element="dto:getReasonCullTubeResponse" name="response"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMemoryCardRequest">
    <wsdl:part element="dto:getMemoryCardRequest" name="request"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMethodOfObtainingBiopsyMaterialRequest">
    <wsdl:part element="dto:getMethodOfObtainingBiopsyMaterialRequest" name="request"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMemoryCardForLKRequest">
    <wsdl:part element="dto:getMemoryCardForLKRequest" name="request"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReasonCancelAssignmentRequest">
    <wsdl:part element="dto:getReasonCancelAssignmentRequest" name="request"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSamplingTypeResponse">
    <wsdl:part element="dto:getSamplingTypeResponse" name="response"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReasonCullTubeRequest">
    <wsdl:part element="dto:getReasonCullTubeRequest" name="request"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPriorityRequest">
    <wsdl:part element="dto:getPriorityRequest" name="request"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMemoryCardResponse">
    <wsdl:part element="dto:getMemoryCardResponse" name="response"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClinicalLaboratoriesResponse">
    <wsdl:part element="dto:getClinicalLaboratoriesResponse" name="response"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSamplingTypeRequest">
    <wsdl:part element="dto:getSamplingTypeRequest" name="request"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMethodOfObtainingBiopsyMaterialResponse">
    <wsdl:part element="dto:getMethodOfObtainingBiopsyMaterialResponse" name="response"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTakeCytologyBMListResponse">
    <wsdl:part element="dto:getTakeCytologyBMListResponse" name="response"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReasonCancelAssignmentResponse">
    <wsdl:part element="dto:getReasonCancelAssignmentResponse" name="response"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getServiceResponse">
    <wsdl:part element="dto:getServiceResponse" name="response"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getColorsListRequest">
    <wsdl:part element="dto:getColorsListRequest" name="request"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getColorsListResponse">
    <wsdl:part element="dto:getColorsListResponse" name="response"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAddSignRequest">
    <wsdl:part element="dto:getAddSignRequest" name="request"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBiopsyResearchGoalRequest">
    <wsdl:part element="dto:getBiopsyResearchGoalRequest" name="request"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAddSignResponse">
    <wsdl:part element="dto:getAddSignResponse" name="response"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTakeCytologyBMListRequest">
    <wsdl:part element="dto:getTakeCytologyBMListRequest" name="request"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBiopsyResearchGoalResponse">
    <wsdl:part element="dto:getBiopsyResearchGoalResponse" name="response"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContingentCodeResponse">
    <wsdl:part element="dto:getContingentCodeResponse" name="response"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClinicalLaboratoriesRequest">
    <wsdl:part element="dto:getClinicalLaboratoriesRequest" name="request"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContingentCodeRequest">
    <wsdl:part element="dto:getContingentCodeRequest" name="request"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTreatmentResponse">
    <wsdl:part element="dto:getTreatmentResponse" name="response"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPriorityResponse">
    <wsdl:part element="dto:getPriorityResponse" name="response"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getServiceRequest">
    <wsdl:part element="dto:getServiceRequest" name="request"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTreatmentRequest">
    <wsdl:part element="dto:getTreatmentRequest" name="request"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMemoryCardForLKResponse">
    <wsdl:part element="dto:getMemoryCardForLKResponse" name="response"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="LaboratoryOtherDictionariesServicePorts">
    <wsdl:operation name="getClinicalLaboratories">
      <wsdl:documentation>Метод возвращает список всех КДЛ</wsdl:documentation>
      <wsdl:input message="tns:getClinicalLaboratoriesRequest"></wsdl:input>
      <wsdl:output message="tns:getClinicalLaboratoriesResponse"></wsdl:output>
      <wsdl:fault message="tns:faultMessage" name="generalFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSamplingType">
      <wsdl:documentation>Метод возвращает список профилей взятия</wsdl:documentation>
      <wsdl:input message="tns:getSamplingTypeRequest"></wsdl:input>
      <wsdl:output message="tns:getSamplingTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:faultMessage" name="generalFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReasonCullTube">
      <wsdl:documentation>Метод возвращает список причин выбраковки пробирок</wsdl:documentation>
      <wsdl:input message="tns:getReasonCullTubeRequest"></wsdl:input>
      <wsdl:output message="tns:getReasonCullTubeResponse"></wsdl:output>
      <wsdl:fault message="tns:faultMessage" name="generalFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContingentCode">
      <wsdl:documentation>Метод возвращает список кодов контингентов</wsdl:documentation>
      <wsdl:input message="tns:getContingentCodeRequest"></wsdl:input>
      <wsdl:output message="tns:getContingentCodeResponse"></wsdl:output>
      <wsdl:fault message="tns:faultMessage" name="generalFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAddSign">
      <wsdl:documentation>Метод возвращает список дополнительных признаков</wsdl:documentation>
      <wsdl:input message="tns:getAddSignRequest"></wsdl:input>
      <wsdl:output message="tns:getAddSignResponse"></wsdl:output>
      <wsdl:fault message="tns:faultMessage" name="generalFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPriority">
      <wsdl:documentation>Метод возвращает список приоритетов назначений</wsdl:documentation>
      <wsdl:input message="tns:getPriorityRequest"></wsdl:input>
      <wsdl:output message="tns:getPriorityResponse"></wsdl:output>
      <wsdl:fault message="tns:faultMessage" name="generalFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReasonCancelAssignment">
      <wsdl:documentation>Метод возвращает список причин отмены назначений</wsdl:documentation>
      <wsdl:input message="tns:getReasonCancelAssignmentRequest"></wsdl:input>
      <wsdl:output message="tns:getReasonCancelAssignmentResponse"></wsdl:output>
      <wsdl:fault message="tns:faultMessage" name="generalFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getService">
      <wsdl:documentation>Метод получения услуги МГФОМС</wsdl:documentation>
      <wsdl:input message="tns:getServiceRequest"></wsdl:input>
      <wsdl:output message="tns:getServiceResponse"></wsdl:output>
      <wsdl:fault message="tns:faultMessage" name="generalFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMemoryCard">
      <wsdl:documentation>Метод предоставления правил подготовки пациента к взятию биоматериала</wsdl:documentation>
      <wsdl:input message="tns:getMemoryCardRequest"></wsdl:input>
      <wsdl:output message="tns:getMemoryCardResponse"></wsdl:output>
      <wsdl:fault message="tns:faultMessage" name="generalFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMemoryCardForLK">
      <wsdl:documentation>Метод предоставления правил подготовки пациента к взятию биоматериала в ЛК</wsdl:documentation>
      <wsdl:input message="tns:getMemoryCardForLKRequest"></wsdl:input>
      <wsdl:output message="tns:getMemoryCardForLKResponse"></wsdl:output>
      <wsdl:fault message="tns:faultMessage" name="generalFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getColorsList">
      <wsdl:documentation>Метод возвращает список гистологических окрасок</wsdl:documentation>
      <wsdl:input message="tns:getColorsListRequest"></wsdl:input>
      <wsdl:output message="tns:getColorsListResponse"></wsdl:output>
      <wsdl:fault message="tns:faultMessage" name="generalFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBiopsyResearchGoal">
      <wsdl:documentation>Метод возвращает список целей прижизненного патолого-анатомического исследования биопсийного (операционного) материала</wsdl:documentation>
      <wsdl:input message="tns:getBiopsyResearchGoalRequest"></wsdl:input>
      <wsdl:output message="tns:getBiopsyResearchGoalResponse"></wsdl:output>
      <wsdl:fault message="tns:faultMessage" name="generalFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTakeCytologyBMList">
      <wsdl:documentation>Метод возвращает список способов взятия цитологического БМ</wsdl:documentation>
      <wsdl:input message="tns:getTakeCytologyBMListRequest"></wsdl:input>
      <wsdl:output message="tns:getTakeCytologyBMListResponse"></wsdl:output>
      <wsdl:fault message="tns:faultMessage" name="generalFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMethodOfObtainingBiopsyMaterial">
      <wsdl:documentation>Метод возвращает способы получения биопсийного материала</wsdl:documentation>
      <wsdl:input message="tns:getMethodOfObtainingBiopsyMaterialRequest"></wsdl:input>
      <wsdl:output message="tns:getMethodOfObtainingBiopsyMaterialResponse"></wsdl:output>
      <wsdl:fault message="tns:faultMessage" name="generalFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTreatment">
      <wsdl:documentation>Метод возвращает справочник медицинских манипуляций</wsdl:documentation>
      <wsdl:input message="tns:getTreatmentRequest"></wsdl:input>
      <wsdl:output message="tns:getTreatmentResponse"></wsdl:output>
      <wsdl:fault message="tns:faultMessage" name="generalFault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="LaboratoryOtherDictionariesServiceBinding" type="tns:LaboratoryOtherDictionariesServicePorts">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getClinicalLaboratories">
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="generalFault">
        <soap12:fault name="generalFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSamplingType">
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="generalFault">
        <soap12:fault name="generalFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReasonCullTube">
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="generalFault">
        <soap12:fault name="generalFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContingentCode">
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="generalFault">
        <soap12:fault name="generalFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAddSign">
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="generalFault">
        <soap12:fault name="generalFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPriority">
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="generalFault">
        <soap12:fault name="generalFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReasonCancelAssignment">
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="generalFault">
        <soap12:fault name="generalFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getService">
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="generalFault">
        <soap12:fault name="generalFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMemoryCard">
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="generalFault">
        <soap12:fault name="generalFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMemoryCardForLK">
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="generalFault">
        <soap12:fault name="generalFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getColorsList">
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="generalFault">
        <soap12:fault name="generalFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBiopsyResearchGoal">
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="generalFault">
        <soap12:fault name="generalFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTakeCytologyBMList">
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="generalFault">
        <soap12:fault name="generalFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMethodOfObtainingBiopsyMaterial">
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="generalFault">
        <soap12:fault name="generalFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTreatment">
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="generalFault">
        <soap12:fault name="generalFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="LaboratoryOtherDictionariesService">
    <wsdl:port binding="tns:LaboratoryOtherDictionariesServiceBinding" name="LaboratoryOtherDictionariesService">
      <wsdl:documentation>Сервис предоставления данных справочников (кроме ЕСЛИ) ЕМИАС-ЦЛС</wsdl:documentation>
      <soap12:address location="http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries?xsd=dictionary-other-wsdl-types.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/laboratory/v1/dictionary/other/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:dto="http://emias.mos.ru/laboratory/v1/dictionary/other/types/">
  <xs:import namespace="http://emias.mos.ru/laboratory/v1/dictionary/other/types/" schemaLocation="http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries?xsd=dictionary-other-types.xsd"/>
  <xs:element name="getClinicalLaboratoriesRequest">
    <xs:annotation>
      <xs:documentation>Запрос на получение списка всех КДЛ</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="moId" type="xs:long"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getClinicalLaboratoriesResponse">
    <xs:annotation>
      <xs:documentation>Ответ на запрос на получение списка всех КДЛ</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="clinicalLaboratory" type="dto:ClinicalLaboratory">
          <xs:annotation>
            <xs:documentation>Список КДЛ</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getSamplingTypeRequest">
    <xs:annotation>
      <xs:documentation>Запрос на список профилей взятия</xs:documentation>
    </xs:annotation>
    <xs:complexType/>
  </xs:element>
  <xs:element name="getSamplingTypeResponse">
    <xs:annotation>
      <xs:documentation>Ответ на запрос на список профилей взятия</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="samlingType" type="dto:SamplingType">
          <xs:annotation>
            <xs:documentation>Список профилей взятия</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getPriorityRequest">
    <xs:annotation>
      <xs:documentation>Запрос на список приоритетов назначений</xs:documentation>
    </xs:annotation>
    <xs:complexType/>
  </xs:element>
  <xs:element name="getPriorityResponse">
    <xs:annotation>
      <xs:documentation>Ответ на запрос на список приоритетов назначений</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="priority" type="dto:Priority">
          <xs:annotation>
            <xs:documentation>Список приоритетов назначений</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getReasonCullTubeRequest">
    <xs:annotation>
      <xs:documentation>Запрос на список причин выбраковки пробирок</xs:documentation>
    </xs:annotation>
    <xs:complexType/>
  </xs:element>
  <xs:element name="getReasonCullTubeResponse">
    <xs:annotation>
      <xs:documentation>Ответ на список причин выбраковки пробирок</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="reasonCullTube" type="dto:ReasonCullTube">
          <xs:annotation>
            <xs:documentation>Список причин выбраковки пробирок</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getContingentCodeRequest">
    <xs:annotation>
      <xs:documentation>Запрос на список кодов контингента</xs:documentation>
    </xs:annotation>
    <xs:complexType/>
  </xs:element>
  <xs:element name="getContingentCodeResponse">
    <xs:annotation>
      <xs:documentation>Ответ на запрос на список кодов контингента</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="contingentCode" type="dto:ContingentCode">
          <xs:annotation>
            <xs:documentation>Список кодов контингента</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getAddSignRequest">
    <xs:annotation>
      <xs:documentation>Запрос на список дополнительных признаков</xs:documentation>
    </xs:annotation>
    <xs:complexType/>
  </xs:element>
  <xs:element name="getAddSignResponse">
    <xs:annotation>
      <xs:documentation>Ответ на запрос на список дополнительных признаков</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="additionalSign" type="dto:AdditionalSign">
          <xs:annotation>
            <xs:documentation>Список дополнительных признаков</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getReasonCancelAssignmentRequest">
    <xs:annotation>
      <xs:documentation>Запрос списка причин отмены назначений</xs:documentation>
    </xs:annotation>
    <xs:complexType/>
  </xs:element>
  <xs:element name="getReasonCancelAssignmentResponse">
    <xs:annotation>
      <xs:documentation>Ответ на запрос списка причин отмены назначений</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="reasonCancelAssignment" type="dto:ReasonCancelAssignment">
          <xs:annotation>
            <xs:documentation>Список причин отмены назначений</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getMemoryCardRequest">
    <xs:annotation>
      <xs:documentation>Запрос на предоставление правил подготовки пациента к взятию биоматериала</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" name="request" type="dto:PairBiomaterialLaboratory"/>
        <xs:element minOccurs="0" name="devide" type="xs:boolean"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getMemoryCardResponse">
    <xs:annotation>
      <xs:documentation>Ответ на запрос на предоставление правил подготовки пациента к взятию биоматериала</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" minOccurs="1" name="result" type="dto:MemoryCard"/>
        <xs:element name="devide" type="xs:boolean"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getMemoryCardForLKRequest">
    <xs:annotation>
      <xs:documentation>Запрос на предоставление правил подготовки пациента к взятию биоматериала в ЛК</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" minOccurs="1" name="laboratoryId" type="xs:long"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getMemoryCardForLKResponse">
    <xs:annotation>
      <xs:documentation>Ответ на запрос на предоставление правил подготовки пациента к взятию биоматериала в ЛК</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" minOccurs="1" name="result" type="dto:MemoryCardForLK"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getServiceRequest">
    <xs:annotation>
      <xs:documentation>Запрос на получение услуги МГФОМС</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="samplingTypeId" type="xs:long"/>
        <xs:element name="fullYears" type="xs:long"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getServiceResponse">
    <xs:annotation>
      <xs:documentation>Ответ на запрос на получение услуги МГФОМС</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="service" type="dto:Service"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getColorsListRequest">
    <xs:annotation>
      <xs:documentation>Запрос на получение списка гистологических окрасок</xs:documentation>
    </xs:annotation>
    <xs:complexType/>
  </xs:element>
  <xs:element name="getColorsListResponse">
    <xs:annotation>
      <xs:documentation>Ответ на запрос на получение списка гистологических окрасок</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="color" type="dto:Color">
          <xs:annotation>
            <xs:documentation>Список гистологических окрасок</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getBiopsyResearchGoalRequest">
    <xs:annotation>
      <xs:documentation>Запрос на получение списка целей прижизненного патолого-анатомического исследования биопсийного (операционного) материала</xs:documentation>
    </xs:annotation>
    <xs:complexType/>
  </xs:element>
  <xs:element name="getBiopsyResearchGoalResponse">
    <xs:annotation>
      <xs:documentation>Ответ на запрос на получение целей прижизненного патолого-анатомического исследования биопсийного (операционного) материала</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="biopsyResearchGoal" type="dto:BiopsyResearchGoal">
          <xs:annotation>
            <xs:documentation>Список целей прижизненного патолого-анатомического исследования биопсийного (операционного) материала</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getTakeCytologyBMListRequest">
    <xs:annotation>
      <xs:documentation>Запрос на получение списка способов взятия цитологического БМ</xs:documentation>
    </xs:annotation>
    <xs:complexType/>
  </xs:element>
  <xs:element name="getTakeCytologyBMListResponse">
    <xs:annotation>
      <xs:documentation>Ответ на запрос на получение способов взятия цитологического БМ</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="takeCytologyBM" type="dto:TakeCytologyBM">
          <xs:annotation>
            <xs:documentation>Список способов взятия цитологического БМ</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getMethodOfObtainingBiopsyMaterialRequest">
    <xs:annotation>
      <xs:documentation>Запрос на получение списка способов получения биопсийного материала</xs:documentation>
    </xs:annotation>
    <xs:complexType/>
  </xs:element>
  <xs:element name="getMethodOfObtainingBiopsyMaterialResponse">
    <xs:annotation>
      <xs:documentation>Ответ на запрос получения способов получения биопсийного материала</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="methodOfObtainingBiopsyMaterial" type="dto:MethodOfObtainingBiopsyMaterial">
          <xs:annotation>
            <xs:documentation>Список способов получения биопсийного материала</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getTreatmentRequest">
    <xs:annotation>
      <xs:documentation>Запрос на получение медицинских манипуляций</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="laboratoryType" type="xs:int"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getTreatmentResponse">
    <xs:annotation>
      <xs:documentation>Ответ на запрос получения медицинских манипуляций</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="treatment" type="dto:Treatment">
          <xs:annotation>
            <xs:documentation>Список способов получения биопсийного материала</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries?xsd=dictionary-other-types.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/laboratory/v1/dictionary/other/types/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://emias.mos.ru/laboratory/v1/dictionary/other/types/" xmlns:dt="http://emias.mos.ru/laboratory/v1/dictionary/types/">
  <xs:import namespace="http://emias.mos.ru/laboratory/v1/dictionary/types/" schemaLocation="http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries?xsd=dictionary-types.xsd"/>
  <xs:complexType name="ClinicalLaboratory">
    <xs:annotation>
      <xs:documentation>Клинико-диагностическая лаборатория</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="shortName" type="xs:string"/>
      <xs:element name="type" type="xs:string"/>
      <xs:element minOccurs="0" name="moId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BMLocusPair">
    <xs:annotation>
      <xs:documentation>Пара биоматериал + локус</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="locusId" type="xs:long"/>
      <xs:element name="bmId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SamplingType">
    <xs:annotation>
      <xs:documentation>Профиль взятия</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="self" type="xs:boolean"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="bmLocusPair" type="tns:BMLocusPair"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ReasonCullTube">
    <xs:annotation>
      <xs:documentation>Причина выбраковки пробирки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ContingentCode">
    <xs:annotation>
      <xs:documentation>Код контингента</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AdditionalSign">
    <xs:annotation>
      <xs:documentation>Дополнительный признак</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Priority">
    <xs:annotation>
      <xs:documentation>Причина выбраковки пробирки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="cito" type="xs:boolean"/>
      <xs:element name="longTerm" type="xs:boolean"/>
      <xs:element minOccurs="0" name="fromPeriod" type="xs:long"/>
      <xs:element minOccurs="0" name="toPeriod" type="xs:long"/>
      <xs:element minOccurs="0" name="offset" type="xs:long"/>
      <xs:element name="urgency" type="xs:boolean"/>
      <xs:element minOccurs="0" name="freePeriod" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CompatibilityGroup">
    <xs:annotation>
      <xs:documentation>Группа совместимости</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="clinicalLaboratory" type="tns:ClinicalLaboratory"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="laboratoryList" type="dt:Laboratory"/>
      <xs:element minOccurs="0" name="locus" type="dt:Locus"/>
      <xs:element minOccurs="0" name="biomaterial" type="dt:Biomaterial"/>
      <xs:element minOccurs="0" name="takeBiomaterial" type="dt:TakeBM"/>
      <xs:element minOccurs="0" name="vial" type="dt:Vial"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ReasonCancelAssignment">
    <xs:annotation>
      <xs:documentation>Причины отмены назначения</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MemoryCard">
    <xs:annotation>
      <xs:documentation>Памятка для подготовки пациента к процедуре сдачи биоматериала</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="biomaterialId" type="xs:long"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="content" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MemoryCardForLK">
    <xs:annotation>
      <xs:documentation>Памятка для подготовки пациента к процедуре сдачи биоматериала в ЛК</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="laboratoryId" type="xs:long"/>
      <xs:element name="laboratoryName" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="memoText" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PairBiomaterialLaboratory">
    <xs:annotation>
      <xs:documentation>Памятка для подготовки пациента к процедуре сдачи биоматериала</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="biomaterialId" type="xs:long"/>
      <xs:element name="laboratoryId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Service">
    <xs:annotation>
      <xs:documentation>Медицинская услуга МГФОМС</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="title" type="xs:string"/>
      <xs:element name="code" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Color">
    <xs:annotation>
      <xs:documentation>Гистологическая окраска</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BiopsyResearchGoal">
    <xs:annotation>
      <xs:documentation>Цель прижизненного патолого-анатомического исследования биопсийного (операционного)
                материала</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TakeCytologyBM">
    <xs:annotation>
      <xs:documentation>Способ взятия цитологического БМ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MethodOfObtainingBiopsyMaterial">
    <xs:annotation>
      <xs:documentation>Способ получения биопсийного материала</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Treatment">
    <xs:annotation>
      <xs:documentation>Медицинская манипуляция</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="treatmentCode" type="xs:long"/>
      <xs:element name="treatmentTitle" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BmObtainingMethod">
    <xs:annotation>
      <xs:documentation>Справочник способов получения биопсийного материала.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="IGHObjective">
    <xs:annotation>
      <xs:documentation>Задача ИГХ.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="access_kpi" type="xs:boolean"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MgiSpecialization">
    <xs:annotation>
      <xs:documentation>Специализация МГИ исследования.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MGIMethod">
    <xs:annotation>
      <xs:documentation>Метод МГИ исследования.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
      <xs:element name="mgiMaterialType" type="tns:MGIMaterialType"/>
      <xs:element name="mgiSpecialization" type="tns:MgiSpecialization"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MGIMaterialType">
    <xs:annotation>
      <xs:documentation>Тип материала МГИ.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MGIParameters">
    <xs:annotation>
      <xs:documentation>Параметры МГИ исследования.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
      <xs:element name="mgiMethod" type="tns:MGIMethod"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CytologicalConclusion">
    <xs:annotation>
      <xs:documentation>Заключение цитологического диагностического исследования.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="StrokeType">
    <xs:annotation>
      <xs:documentation>Тип гинекологического мазка (цитология).</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PatternOfChanges">
    <xs:annotation>
      <xs:documentation>Характер изменения клеток (гинекологическая цитология)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GynecologistConclusion">
    <xs:annotation>
      <xs:documentation>Заключение гинекологического диагностического исследования.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AdditionalClarifications">
    <xs:annotation>
      <xs:documentation>Дополнительное уточнение (гинекологическая цитология).</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InflammatoryProcess">
    <xs:annotation>
      <xs:documentation>Список воспалительных процессов (цитология)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MGIParametersLIS">
    <xs:annotation>
      <xs:documentation>Параметры МГИ исследования.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BethesdaClassification">
    <xs:annotation>
      <xs:documentation>Список классификаций Бетесда для результатов гинекологических исследований</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element minOccurs="0" name="code" type="xs:string"/>
      <xs:element name="interpretation" type="xs:string"/>
      <xs:element name="conclusion" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries?xsd=dictionary-types.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/laboratory/v1/dictionary/types/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://emias.mos.ru/laboratory/v1/dictionary/types/" xmlns:ct="http://emias.mos.ru/laboratory/v1/common/types/">
  <xs:import namespace="http://emias.mos.ru/laboratory/v1/common/types/" schemaLocation="http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries?xsd=common-types.xsd"/>
  <xs:complexType name="LaboratorySearchItem">
    <xs:annotation>
      <xs:documentation>Критерии поиска в справочнике ЛИ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice minOccurs="0">
        <xs:element name="laboratoryId" type="xs:long"/>
        <xs:element name="laboratoryKindId" type="xs:long"/>
        <xs:element name="laboratorySubKindId" type="xs:long"/>
      </xs:choice>
      <xs:element minOccurs="0" name="accessKPI" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LaboratoryPage">
    <xs:annotation>
      <xs:documentation>Страница результатов поиска элементов справочника ЛИ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="results" type="tns:Laboratory"/>
      <xs:element name="paging" type="ct:ResponsePageInfo"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Laboratory">
    <xs:annotation>
      <xs:documentation>Лабораторное исследование</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД ЛИ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код ЛИ по справочнику ЕСЛИ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="shortName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Краткое наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="omsCode" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код ЛИ по ОМС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="laboratoryKindId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД вида исследования</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="laboratorySubKindId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД подвида исследования</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="takeBMId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД правила подготовки к взятию биоматериала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="needPrintForm" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Требуется печать бланка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="urgency" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак актуальности</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AnthropometricData">
    <xs:annotation>
      <xs:documentation>Антропометрические данные</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="value" type="xs:string"/>
      <xs:element name="type" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="laboratoryId" type="xs:long"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DeviationValue">
    <xs:annotation>
      <xs:documentation>Отклонения от нормы</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="type_mark" type="xs:long"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Biomaterial">
    <xs:annotation>
      <xs:documentation>Биоматериал</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="hl7Code" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LaboratoryKind">
    <xs:annotation>
      <xs:documentation>Вид лабораторного исследования</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="shortName" type="xs:string"/>
      <xs:element minOccurs="0" name="hl7Code" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LaboratorySubKind">
    <xs:annotation>
      <xs:documentation>Подвид лабораторного исследования</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="shortName" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
      <xs:element name="labKindId" type="xs:long"/>
      <xs:element minOccurs="0" name="takeBMId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Locus">
    <xs:annotation>
      <xs:documentation>Локус</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TakeBM">
    <xs:annotation>
      <xs:documentation>Правило взятия БМ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="content" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Test">
    <xs:annotation>
      <xs:documentation>Тест</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="shortName" type="xs:string"/>
      <xs:element name="labId" type="xs:long"/>
      <xs:element name="required" type="xs:boolean"/>
      <xs:element minOccurs="0" name="mnemonicCode" type="xs:string"/>
      <xs:element name="valid" type="xs:boolean"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TestPage">
    <xs:annotation>
      <xs:documentation>Страница результатов поиска элементов справочника тестов</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="results" type="tns:Test"/>
      <xs:element name="paging" type="ct:ResponsePageInfo"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Unit">
    <xs:annotation>
      <xs:documentation>Единица измерения</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="hl7Code" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Vial">
    <xs:annotation>
      <xs:documentation>Расходный материал</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="shortName" type="xs:string"/>
      <xs:element name="fillingOrder" type="xs:long"/>
      <xs:element minOccurs="0" name="hl7Code" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TypRejectTake">
    <xs:annotation>
      <xs:documentation>Типовой отказ приема биоматериала</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="content" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PrepareTakeBM">
    <xs:annotation>
      <xs:documentation>Правило подготовки к взятию БМ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="content" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PrimaryTubeStatus">
    <xs:annotation>
      <xs:documentation>Статус первичной пробирки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RegistryEntryStatus">
    <xs:annotation>
      <xs:documentation>Статус реестровой записи первичной пробирки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ContainerStatus">
    <xs:annotation>
      <xs:documentation>Статус контейнера (пакетоа) первичных пробирок</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TypicalRejectTest">
    <xs:annotation>
      <xs:documentation>Причины отказа</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="content" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <!--Mocks:-->
  <xs:complexType name="BiomaterialExt">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="parentId" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="hl7Code" type="xs:string"/>
      <xs:element name="urgency" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries?xsd=common-types.xsd</con:url><con:content><![CDATA[<xsd:schema elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/laboratory/v1/common/types/" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://emias.mos.ru/laboratory/v1/common/types/">
  <xsd:complexType name="RequestPageInfo">
    <xsd:sequence>
      <xsd:element default="0" minOccurs="1" name="page" type="xsd:int">
        <xsd:annotation>
          <xsd:documentation>Номер страницы</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element default="0" minOccurs="1" name="pageSize" type="xsd:int">
        <xsd:annotation>
          <xsd:documentation>Размер страницы</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ResponsePageInfo">
    <xsd:complexContent>
      <xsd:extension base="tns:RequestPageInfo">
        <xsd:sequence>
          <xsd:element default="0" minOccurs="1" name="total" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>Всего записей</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Validation">
    <xsd:annotation>
      <xsd:documentation>Результат выполнения валидации</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="success" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>Признак - ошибки валидации отсутствуют</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="messages" type="tns:ValidationMessage">
        <xsd:annotation>
          <xsd:documentation>Список сообщений валидации</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ValidationMessage">
    <xsd:annotation>
      <xsd:documentation>Сообщение валидации</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="code" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Код сообщения</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="message" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Текст сообщения</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="parameters" type="tns:ValidationParameter">
        <xsd:annotation>
          <xsd:documentation>Параметры сообщения</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="type" type="tns:ValidationMessageType">
        <xsd:annotation>
          <xsd:documentation>Тип сообщения</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ValidationParameter">
    <xsd:annotation>
      <xsd:documentation>Параметр валидации</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="code" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Код параметра</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="value" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Значение параметра</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="ValidationMessageType">
    <xsd:annotation>
      <xsd:documentation>Тип сообщения</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ERROR">
        <xsd:annotation>
          <xsd:documentation>Сообщение о ошибке</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="WARNING">
        <xsd:annotation>
          <xsd:documentation>Предупреждение</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="INFO">
        <xsd:annotation>
          <xsd:documentation>Информационное сообщение</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name="LaboratoryFaultInfo">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="1" name="validation" type="tns:Validation">
          <xsd:annotation>
            <xsd:documentation>Список ошибок</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="LaboratoryUserContext">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation>Контекст пользователя</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="employeeJobId" type="xsd:long">
          <xsd:annotation>
            <xsd:documentation>Идентификатор исполнения должности</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="lpuId" type="xsd:long">
          <xsd:annotation>
            <xsd:documentation>ИД ЛПУ</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="fullName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>ФИО пользователя</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="position" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Должность медработника</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="availableResourceId" type="xsd:long">
          <xsd:annotation>
            <xsd:documentation>ИД доступного ресурса</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="UserContext">
    <xsd:annotation>
      <xsd:documentation>Контекст пользователя (output)</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="login" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Имя пользователя</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="employeeJobId" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>Идентификатор исполнения должности</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="lpuId" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>ИД ЛПУ</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="fullName" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>ФИО пользователя</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="position" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Должность медработника</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="availableResourceId" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>ИД доступного ресурса</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="User">
    <xsd:annotation>
      <xsd:documentation>Контекст пользователя (output)</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="fio" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>ФИО пользователя</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="lpuId" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>ИД ЛПУ</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="position" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Название должности медработника</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="UserExt">
    <xsd:complexContent>
      <xsd:extension base="tns:User">
        <xsd:sequence>
          <xsd:element name="employeeJobId" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>ИД исполнения должности медработника</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ResponsePageInfoFull">
    <xsd:annotation>
      <xsd:documentation>Параметры пейджинга</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="pageNumber" type="xsd:int">
        <xsd:annotation>
          <xsd:documentation>Номер страницы (zero-based)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="pageTotal" type="xsd:int">
        <xsd:annotation>
          <xsd:documentation>Общее количество страниц</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="pageSize" type="xsd:int">
        <xsd:annotation>
          <xsd:documentation>Размер страницы</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="morePagesAvailable" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>Флаг доступности страниц с результатами для постраничного листания
                        (true - если доступны еще страницы, false - иначе)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="totalItemsCount" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>Общее количество элементов (на всех страницах)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SortingOptions">
    <xsd:annotation>
      <xsd:documentation>Условия сортировки</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="3" name="sortOrder" type="tns:SortOrder">
        <xsd:annotation>
          <xsd:documentation>Условия сортировки (используются в соответствии с переданной последовательностью)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SortOrder">
    <xsd:annotation>
      <xsd:documentation>Сортировка</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="attributeName" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Наименование поля, по которому должна быть произведена сортировка</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute default="false" name="descending" type="xsd:boolean">
      <xsd:annotation>
        <xsd:documentation>Направление сортировки</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="DatePeriod">
    <xsd:annotation>
      <xsd:documentation>Диапазон дат для поиска</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="dateFrom" type="xsd:date"/>
      <xsd:element minOccurs="0" name="dateTo" type="xsd:date"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries</con:endpoint></con:endpoints><con:operation id="b434b771-fe4f-4f44-8c57-96cd195d3eb0" isOneWay="false" action="" name="getAddSign" bindingOperationName="getAddSign" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="56ba5e18-dab1-4f4b-b4db-11cafc594b4b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oth="http://emias.mos.ru/laboratory/v1/dictionary/other/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <oth:getAddSignRequest/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/laboratory/v1/dictionary/other/soap/LaboratoryOtherDictionariesServicePorts/getAddSignRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="8eea6d89-cc92-4240-beec-2edb6be1df30" isOneWay="false" action="" name="getBiopsyResearchGoal" bindingOperationName="getBiopsyResearchGoal" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bc98ca82-e08f-4f80-93ef-7e74e9eb9746" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oth="http://emias.mos.ru/laboratory/v1/dictionary/other/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <oth:getBiopsyResearchGoalRequest/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/laboratory/v1/dictionary/other/soap/LaboratoryOtherDictionariesServicePorts/getBiopsyResearchGoalRequest"/></con:call></con:operation><con:operation id="cf2b82db-bf85-4481-a603-cfe6d20fa3dd" isOneWay="false" action="" name="getClinicalLaboratories" bindingOperationName="getClinicalLaboratories" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b9f40ec3-2d61-4278-8be2-9605bddf5172" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oth="http://emias.mos.ru/laboratory/v1/dictionary/other/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <oth:getClinicalLaboratoriesRequest>\r
         <oth:moId>?</oth:moId>\r
      </oth:getClinicalLaboratoriesRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/laboratory/v1/dictionary/other/soap/LaboratoryOtherDictionariesServicePorts/getClinicalLaboratoriesRequest"/></con:call></con:operation><con:operation id="db2512dc-6bb1-40ca-9d58-c717a0da955e" isOneWay="false" action="" name="getColorsList" bindingOperationName="getColorsList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d01157f5-1c39-4c18-92f2-cb3048e882f3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oth="http://emias.mos.ru/laboratory/v1/dictionary/other/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <oth:getColorsListRequest/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/laboratory/v1/dictionary/other/soap/LaboratoryOtherDictionariesServicePorts/getColorsListRequest"/></con:call></con:operation><con:operation id="41b05eb4-a87b-474a-9fa8-bb681e740adc" isOneWay="false" action="" name="getContingentCode" bindingOperationName="getContingentCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5726b0ac-8f14-434b-971c-3aad2d34b741" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oth="http://emias.mos.ru/laboratory/v1/dictionary/other/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <oth:getContingentCodeRequest/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/laboratory/v1/dictionary/other/soap/LaboratoryOtherDictionariesServicePorts/getContingentCodeRequest"/></con:call></con:operation><con:operation id="880457a6-e933-47dd-b8f3-c68d60795409" isOneWay="false" action="" name="getMemoryCard" bindingOperationName="getMemoryCard" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="34ac1ef3-20c2-4e34-8514-512f664f2251" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oth="http://emias.mos.ru/laboratory/v1/dictionary/other/" xmlns:typ="http://emias.mos.ru/laboratory/v1/dictionary/other/types/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <oth:getMemoryCardRequest>\r
         <oth:request>\r
            <typ:biomaterialId>2</typ:biomaterialId>\r
            <typ:laboratoryId>13214214</typ:laboratoryId>\r
         </oth:request>\r
      </oth:getMemoryCardRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/laboratory/v1/dictionary/other/soap/LaboratoryOtherDictionariesServicePorts/getMemoryCardRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="6a2c482a-ae09-4fd8-94fe-29ee8eb7d306" isOneWay="false" action="" name="getMemoryCardForLK" bindingOperationName="getMemoryCardForLK" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="061d905b-fa27-467f-ab41-217d385533f3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oth="http://emias.mos.ru/laboratory/v1/dictionary/other/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <oth:getMemoryCardForLKRequest>\r
         <!--1 or more repetitions:-->\r
         <oth:laboratoryId>?</oth:laboratoryId>\r
      </oth:getMemoryCardForLKRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/laboratory/v1/dictionary/other/soap/LaboratoryOtherDictionariesServicePorts/getMemoryCardForLKRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="20733dec-a368-4552-bb9e-b42a59818e8e" name="getMemoryCard LK"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/cls/Dictionaries/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-9488b346-9495-4f8c-89a4-c2456681feef">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <ns2:getMemoryCardForLKRequest xmlns="http://emias.mos.ru/laboratory/v1/dictionary/other/types/" xmlns:ns2="http://emias.mos.ru/laboratory/v1/dictionary/other/" xmlns:ns3="http://emias.mos.ru/laboratory/v1/common/types/" xmlns:ns4="http://emias.mos.ru/laboratory/v1/dictionary/types/">\r
         <ns2:laboratoryId>2401</ns2:laboratoryId>\r
      </ns2:getMemoryCardForLKRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/laboratory/v1/dictionary/other/soap/LaboratoryOtherDictionariesServicePorts/getMemoryCardForLKRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="1135cb10-d8ac-4b7b-b9f6-65251934bc26" isOneWay="false" action="" name="getMethodOfObtainingBiopsyMaterial" bindingOperationName="getMethodOfObtainingBiopsyMaterial" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5644d746-24a3-4c5c-8c13-019ba7e3997f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oth="http://emias.mos.ru/laboratory/v1/dictionary/other/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <oth:getMethodOfObtainingBiopsyMaterialRequest/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/laboratory/v1/dictionary/other/soap/LaboratoryOtherDictionariesServicePorts/getMethodOfObtainingBiopsyMaterialRequest"/></con:call></con:operation><con:operation id="39a0f418-b038-433f-8f93-48ce5b9c67bf" isOneWay="false" action="" name="getPriority" bindingOperationName="getPriority" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="dc0e7f32-6eab-43db-af31-11777f4720c9" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oth="http://emias.mos.ru/laboratory/v1/dictionary/other/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <oth:getPriorityRequest/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/laboratory/v1/dictionary/other/soap/LaboratoryOtherDictionariesServicePorts/getPriorityRequest"/></con:call></con:operation><con:operation id="f1813e2b-5b21-4c88-997c-ae66cf5d3712" isOneWay="false" action="" name="getReasonCancelAssignment" bindingOperationName="getReasonCancelAssignment" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e9db594f-a636-4ab0-85bf-df3f5e9add6a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oth="http://emias.mos.ru/laboratory/v1/dictionary/other/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <oth:getReasonCancelAssignmentRequest/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/laboratory/v1/dictionary/other/soap/LaboratoryOtherDictionariesServicePorts/getReasonCancelAssignmentRequest"/></con:call></con:operation><con:operation id="1b291aa1-d098-48ce-95f5-2cff1fe75b61" isOneWay="false" action="" name="getReasonCullTube" bindingOperationName="getReasonCullTube" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="363eb045-c32f-4ac6-b73a-1bea89c82dc8" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oth="http://emias.mos.ru/laboratory/v1/dictionary/other/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <oth:getReasonCullTubeRequest/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/laboratory/v1/dictionary/other/soap/LaboratoryOtherDictionariesServicePorts/getReasonCullTubeRequest"/></con:call></con:operation><con:operation id="24c1a78e-5fea-400b-96ae-8e8e31bf75d4" isOneWay="false" action="" name="getSamplingType" bindingOperationName="getSamplingType" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7bea7c9e-b609-4a6b-9fcf-7f4ff6a6930c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oth="http://emias.mos.ru/laboratory/v1/dictionary/other/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <oth:getSamplingTypeRequest/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/laboratory/v1/dictionary/other/soap/LaboratoryOtherDictionariesServicePorts/getSamplingTypeRequest"/></con:call></con:operation><con:operation id="3a0d14e1-4a9b-4b69-8924-9842dde2d91a" isOneWay="false" action="" name="getService" bindingOperationName="getService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="378183bd-c956-41d1-9b38-ce6849f04ce4" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oth="http://emias.mos.ru/laboratory/v1/dictionary/other/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <oth:getServiceRequest>\r
         <oth:samplingTypeId>?</oth:samplingTypeId>\r
         <oth:fullYears>?</oth:fullYears>\r
      </oth:getServiceRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/laboratory/v1/dictionary/other/soap/LaboratoryOtherDictionariesServicePorts/getServiceRequest"/></con:call></con:operation><con:operation id="a9b3a26a-2c4f-4fa7-8792-113e93a45987" isOneWay="false" action="" name="getTakeCytologyBMList" bindingOperationName="getTakeCytologyBMList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8d8578e6-7fa8-4266-87a1-707ab7395ee8" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oth="http://emias.mos.ru/laboratory/v1/dictionary/other/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <oth:getTakeCytologyBMListRequest/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/laboratory/v1/dictionary/other/soap/LaboratoryOtherDictionariesServicePorts/getTakeCytologyBMListRequest"/></con:call></con:operation><con:operation id="4e70f61c-e49b-4d0f-9157-d6649563f821" isOneWay="false" action="" name="getTreatment" bindingOperationName="getTreatment" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5264c288-2e97-407c-b071-d8997d12c3b8" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cls.test.emias.mos.ru/laboratory/application/api/Dictionaries</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oth="http://emias.mos.ru/laboratory/v1/dictionary/other/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <oth:getTreatmentRequest>\r
         <oth:laboratoryType>?</oth:laboratoryType>\r
      </oth:getTreatmentRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/laboratory/v1/dictionary/other/soap/LaboratoryOtherDictionariesServicePorts/getTreatmentRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="f2ca706e-7330-403f-b213-2913c6da5b27" wsaVersion="NONE" name="Самозапись.ковид" type="wsdl" bindingName="{http://impl.service.soap.emias.lanit.ru/v5/}SelfAppointmentServiceV5Binding" soapVersion="1_2" anonymous="optional" definition="http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService?wsdl"><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SelfAppointmentService" targetNamespace="http://impl.service.soap.emias.lanit.ru/v5/" xmlns:api="http://api.service.soap.emias.lanit.ru/v5/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://impl.service.soap.emias.lanit.ru/v5/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <wsdl:documentation>version="5.3"</wsdl:documentation>
  <wsdl:types>
    <xs:schema xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://api.service.soap.emias.lanit.ru/v5/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkgZHOBQbdVtIxLc_PikST6NqqnKMl046oAJY1fDtJAWPiMuWjfg37DOGBMszdpIrBLH001qZQOXvGFrQ1pyJ.PXXNxPfTSSZJt6ZXh2iXR7arXfe5K180ludu6nm_i.dpE3_AtZ08hvE8ffS1atlxV5ivXnuCTlXJJs8yhPOHrX4mg-"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getAppointmentReceptionsByPatient">
    <wsdl:part element="api:getAppointmentReceptionsByPatient" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentByIDResponse">
    <wsdl:part element="api:cancelAppointmentByIDResponse" name="cancelAppointmentByIDResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelAppointment">
    <wsdl:part element="api:cancelAppointment" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAppointmentToDutyDoctorByPatient">
    <wsdl:part element="api:createAppointmentToDutyDoctorByPatient" name="createAppointmentToDutyDoctorByPatient"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAvailableResourceScheduleInfoResponse">
    <wsdl:part element="api:getAvailableResourceScheduleInfoResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAvailableResourceScheduleInfoForGroup">
    <wsdl:part element="api:getAvailableResourceScheduleInfoForGroup" name="getAvailableResourceScheduleInfoForGroup"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SoapException">
    <wsdl:part element="api:soapException" name="SoapException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReferralsInfo">
    <wsdl:part element="api:getReferralsInfo" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="shiftAppointment">
    <wsdl:part element="api:shiftAppointment" name="shiftAppointment"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentToDutyDoctorByPatientResponse">
    <wsdl:part element="api:cancelAppointmentToDutyDoctorByPatientResponse" name="cancelAppointmentToDutyDoctorByPatientResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAppointmentResponse">
    <wsdl:part element="api:createAppointmentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentBySms">
    <wsdl:part element="api:cancelAppointmentBySms" name="cancelAppointmentBySms"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoForLI">
    <wsdl:part element="api:getDoctorsInfoForLI" name="getDoctorsInfoForLI"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAvailableResourceScheduleInfoForGroupResponse">
    <wsdl:part element="api:getAvailableResourceScheduleInfoForGroupResponse" name="getAvailableResourceScheduleInfoForGroupResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoForLIResponse">
    <wsdl:part element="api:getDoctorsInfoForLIResponse" name="getDoctorsInfoForLIResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAppointment">
    <wsdl:part element="api:createAppointment" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getHealthCareAvailabilityAttributesResponse">
    <wsdl:part element="api:getHealthCareAvailabilityAttributesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAppointmentReceptionsByPatientResponse">
    <wsdl:part element="api:getAppointmentReceptionsByPatientResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSpecialitiesInfoResponse">
    <wsdl:part element="api:getSpecialitiesInfoResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSpecialitiesInfoForGroupResponse">
    <wsdl:part element="api:getSpecialitiesInfoForGroupResponse" name="getSpecialitiesInfoForGroupResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoForGroupResponse">
    <wsdl:part element="api:getDoctorsInfoForGroupResponse" name="getDoctorsInfoForGroupResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAppointmentToDutyDoctorByPatientResponse">
    <wsdl:part element="api:createAppointmentToDutyDoctorByPatientResponse" name="createAppointmentToDutyDoctorByPatientResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReferralsInfoResponse">
    <wsdl:part element="api:getReferralsInfoResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDutyARScheduleByPatient">
    <wsdl:part element="api:getDutyARScheduleByPatient" name="getDutyARScheduleByPatient"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="shiftAppointmentForGroupResponse">
    <wsdl:part element="api:shiftAppointmentForGroupResponse" name="shiftAppointmentForGroupResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLpusForVaccinationResponse">
    <wsdl:part element="api:getLpusForVaccinationResponse" name="getLpusForVaccinationResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAppointmentForGroup">
    <wsdl:part element="api:createAppointmentForGroup" name="createAppointmentForGroup"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDutyARScheduleByPatientResponse">
    <wsdl:part element="api:getDutyARScheduleByPatientResponse" name="getDutyARScheduleByPatientResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentBySmsResponse">
    <wsdl:part element="api:cancelAppointmentBySmsResponse" name="cancelAppointmentBySmsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentToDutyDoctorByPatient">
    <wsdl:part element="api:cancelAppointmentToDutyDoctorByPatient" name="cancelAppointmentToDutyDoctorByPatient"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoForGroup">
    <wsdl:part element="api:getDoctorsInfoForGroup" name="getDoctorsInfoForGroup"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAvailableResourceScheduleInfo">
    <wsdl:part element="api:getAvailableResourceScheduleInfo" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSpecialitiesInfoForGroup">
    <wsdl:part element="api:getSpecialitiesInfoForGroup" name="getSpecialitiesInfoForGroup"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="shiftAppointmentResponse">
    <wsdl:part element="api:shiftAppointmentResponse" name="shiftAppointmentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoResponse">
    <wsdl:part element="api:getDoctorsInfoResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSpecialitiesInfo">
    <wsdl:part element="api:getSpecialitiesInfo" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAppointmentForGroupResponse">
    <wsdl:part element="api:createAppointmentForGroupResponse" name="createAppointmentForGroupResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="shiftAppointmentForGroup">
    <wsdl:part element="api:shiftAppointmentForGroup" name="shiftAppointmentForGroup"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getHealthCareAvailabilityAttributes">
    <wsdl:part element="api:getHealthCareAvailabilityAttributes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfo">
    <wsdl:part element="api:getDoctorsInfo" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAssignmentsInfo">
    <wsdl:part element="api:getAssignmentsInfo" name="getAssignmentsInfo"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLpusForVaccination">
    <wsdl:part element="api:getLpusForVaccination" name="getLpusForVaccination"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentResponse">
    <wsdl:part element="api:cancelAppointmentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentByID">
    <wsdl:part element="api:cancelAppointmentByID" name="cancelAppointmentByID"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAssignmentsInfoResponse">
    <wsdl:part element="api:getAssignmentsInfoResponse" name="getAssignmentsInfoResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="SelfAppointmentServiceV5PT">
    <wsdl:operation name="getHealthCareAvailabilityAttributes">
      <wsdl:input message="tns:getHealthCareAvailabilityAttributes" name="getHealthCareAvailabilityAttributes"></wsdl:input>
      <wsdl:output message="tns:getHealthCareAvailabilityAttributesResponse" name="getHealthCareAvailabilityAttributesResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAppointment">
      <wsdl:input message="tns:createAppointment" name="createAppointment"></wsdl:input>
      <wsdl:output message="tns:createAppointmentResponse" name="createAppointmentResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableResourceScheduleInfo">
      <wsdl:input message="tns:getAvailableResourceScheduleInfo" name="getAvailableResourceScheduleInfo"></wsdl:input>
      <wsdl:output message="tns:getAvailableResourceScheduleInfoResponse" name="getAvailableResourceScheduleInfoResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfo">
      <wsdl:input message="tns:getDoctorsInfo" name="getDoctorsInfo"></wsdl:input>
      <wsdl:output message="tns:getDoctorsInfoResponse" name="getDoctorsInfoResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSpecialitiesInfo">
      <wsdl:input message="tns:getSpecialitiesInfo" name="getSpecialitiesInfo"></wsdl:input>
      <wsdl:output message="tns:getSpecialitiesInfoResponse" name="getSpecialitiesInfoResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shiftAppointment">
      <wsdl:input message="tns:shiftAppointment" name="shiftAppointment"></wsdl:input>
      <wsdl:output message="tns:shiftAppointmentResponse" name="shiftAppointmentResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointment">
      <wsdl:input message="tns:cancelAppointment" name="cancelAppointment"></wsdl:input>
      <wsdl:output message="tns:cancelAppointmentResponse" name="cancelAppointmentResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAppointmentReceptionsByPatient">
      <wsdl:input message="tns:getAppointmentReceptionsByPatient" name="getAppointmentReceptionsByPatient"></wsdl:input>
      <wsdl:output message="tns:getAppointmentReceptionsByPatientResponse" name="getAppointmentReceptionsByPatientResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReferralsInfo">
      <wsdl:input message="tns:getReferralsInfo" name="getReferralsInfo"></wsdl:input>
      <wsdl:output message="tns:getReferralsInfoResponse" name="getReferralsInfoResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDutyARScheduleByPatient">
      <wsdl:input message="tns:getDutyARScheduleByPatient" name="getDutyARScheduleByPatient"></wsdl:input>
      <wsdl:output message="tns:getDutyARScheduleByPatientResponse" name="getDutyARScheduleByPatientResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAppointmentToDutyDoctorByPatient">
      <wsdl:input message="tns:createAppointmentToDutyDoctorByPatient" name="createAppointmentToDutyDoctorByPatient"></wsdl:input>
      <wsdl:output message="tns:createAppointmentToDutyDoctorByPatientResponse" name="createAppointmentToDutyDoctorByPatientResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentToDutyDoctorByPatient">
      <wsdl:input message="tns:cancelAppointmentToDutyDoctorByPatient" name="cancelAppointmentToDutyDoctorByPatient"></wsdl:input>
      <wsdl:output message="tns:cancelAppointmentToDutyDoctorByPatientResponse" name="cancelAppointmentToDutyDoctorByPatientResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentBySms">
      <wsdl:input message="tns:cancelAppointmentBySms" name="cancelAppointmentBySms"></wsdl:input>
      <wsdl:output message="tns:cancelAppointmentBySmsResponse" name="cancelAppointmentBySmsResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentByID">
      <wsdl:input message="tns:cancelAppointmentByID" name="cancelAppointmentByID"></wsdl:input>
      <wsdl:output message="tns:cancelAppointmentByIDResponse" name="cancelAppointmentByIDResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssignmentsInfo">
      <wsdl:input message="tns:getAssignmentsInfo" name="getAssignmentsInfo"></wsdl:input>
      <wsdl:output message="tns:getAssignmentsInfoResponse" name="getAssignmentsInfoResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfoForLI">
      <wsdl:input message="tns:getDoctorsInfoForLI" name="getDoctorsInfoForLI"></wsdl:input>
      <wsdl:output message="tns:getDoctorsInfoForLIResponse" name="getDoctorsInfoForLIResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSpecialitiesInfoForGroup">
      <wsdl:input message="tns:getSpecialitiesInfoForGroup" name="getSpecialitiesInfoForGroup"></wsdl:input>
      <wsdl:output message="tns:getSpecialitiesInfoForGroupResponse" name="getSpecialitiesInfoForGroupResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfoForGroup">
      <wsdl:input message="tns:getDoctorsInfoForGroup" name="getDoctorsInfoForGroup"></wsdl:input>
      <wsdl:output message="tns:getDoctorsInfoForGroupResponse" name="getDoctorsInfoForGroupResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableResourceScheduleInfoForGroup">
      <wsdl:input message="tns:getAvailableResourceScheduleInfoForGroup" name="getAvailableResourceScheduleInfoForGroup"></wsdl:input>
      <wsdl:output message="tns:getAvailableResourceScheduleInfoForGroupResponse" name="getAvailableResourceScheduleInfoForGroupResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAppointmentForGroup">
      <wsdl:input message="tns:createAppointmentForGroup" name="createAppointmentForGroup"></wsdl:input>
      <wsdl:output message="tns:createAppointmentForGroupResponse" name="createAppointmentForGroupResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shiftAppointmentForGroup">
      <wsdl:input message="tns:shiftAppointmentForGroup" name="shiftAppointmentForGroup"></wsdl:input>
      <wsdl:output message="tns:shiftAppointmentForGroupResponse" name="shiftAppointmentForGroupResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpusForVaccination">
      <wsdl:input message="tns:getLpusForVaccination" name="getLpusForVaccination"></wsdl:input>
      <wsdl:output message="tns:getLpusForVaccinationResponse" name="getLpusForVaccinationResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="SelfAppointmentServiceV5Binding" type="tns:SelfAppointmentServiceV5PT">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getHealthCareAvailabilityAttributes">
      <soap12:operation soapAction="urn://getHealthCareAvailabilityAttributes"/>
      <wsdl:input name="getHealthCareAvailabilityAttributes">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getHealthCareAvailabilityAttributesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointment">
      <soap12:operation soapAction="urn://cancelAppointment"/>
      <wsdl:input name="cancelAppointment">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelAppointmentResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAppointmentReceptionsByPatient">
      <soap12:operation soapAction="urn://getAppointmentReceptionsByPatient"/>
      <wsdl:input name="getAppointmentReceptionsByPatient">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAppointmentReceptionsByPatientResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReferralsInfo">
      <soap12:operation soapAction="urn://getReferralsInfo"/>
      <wsdl:input name="getReferralsInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getReferralsInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAppointment">
      <soap12:operation soapAction="urn://createAppointment"/>
      <wsdl:input name="createAppointment">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAppointmentResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableResourceScheduleInfo">
      <soap12:operation soapAction="urn://getAvailableResourceScheduleInfo"/>
      <wsdl:input name="getAvailableResourceScheduleInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAvailableResourceScheduleInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfo">
      <soap12:operation soapAction="urn://getDoctorsInfo"/>
      <wsdl:input name="getDoctorsInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDoctorsInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfoForLI">
      <soap12:operation soapAction="urn://getDoctorsInfoForLI"/>
      <wsdl:input name="getDoctorsInfoForLI">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDoctorsInfoForLIResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSpecialitiesInfo">
      <soap12:operation soapAction="urn://getSpecialitiesInfo"/>
      <wsdl:input name="getSpecialitiesInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSpecialitiesInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shiftAppointment">
      <soap12:operation soapAction="urn://shiftAppointment"/>
      <wsdl:input name="shiftAppointment">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="shiftAppointmentResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDutyARScheduleByPatient">
      <soap12:operation soapAction="urn://getDutyARScheduleByPatient"/>
      <wsdl:input name="getDutyARScheduleByPatient">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDutyARScheduleByPatientResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAppointmentToDutyDoctorByPatient">
      <soap12:operation soapAction="urn://createAppointmentToDutyDoctorByPatient"/>
      <wsdl:input name="createAppointmentToDutyDoctorByPatient">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAppointmentToDutyDoctorByPatientResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentToDutyDoctorByPatient">
      <soap12:operation soapAction="urn://cancelAppointmentToDutyDoctorByPatient"/>
      <wsdl:input name="cancelAppointmentToDutyDoctorByPatient">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelAppointmentToDutyDoctorByPatientResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentBySms">
      <soap12:operation soapAction="urn://cancelAppointmentBySms"/>
      <wsdl:input name="cancelAppointmentBySms">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelAppointmentBySmsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentByID">
      <soap12:operation soapAction="urn://cancelAppointmentByID"/>
      <wsdl:input name="cancelAppointmentByID">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelAppointmentByIDResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssignmentsInfo">
      <soap12:operation soapAction="urn://getAssignmentsInfo"/>
      <wsdl:input name="getAssignmentsInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAssignmentsInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSpecialitiesInfoForGroup">
      <soap12:operation soapAction="urn://getSpecialitiesInfoForGroup"/>
      <wsdl:input name="getSpecialitiesInfoForGroup">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSpecialitiesInfoForGroupResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfoForGroup">
      <soap12:operation soapAction="urn://getDoctorsInfoForGroup"/>
      <wsdl:input name="getDoctorsInfoForGroup">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDoctorsInfoForGroupResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableResourceScheduleInfoForGroup">
      <soap12:operation soapAction="urn://getAvailableResourceScheduleInfoForGroup"/>
      <wsdl:input name="getAvailableResourceScheduleInfoForGroup">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAvailableResourceScheduleInfoForGroupResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAppointmentForGroup">
      <soap12:operation soapAction="urn://createAppointmentForGroup"/>
      <wsdl:input name="createAppointmentForGroup">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAppointmentForGroupResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shiftAppointmentForGroup">
      <soap12:operation soapAction="urn://shiftAppointmentForGroup"/>
      <wsdl:input name="shiftAppointmentForGroup">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="shiftAppointmentForGroupResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpusForVaccination">
      <soap12:operation soapAction="urn://getLpusForVaccination"/>
      <wsdl:input name="getLpusForVaccination">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLpusForVaccinationResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SelfAppointmentServiceV5">
    <wsdl:port binding="tns:SelfAppointmentServiceV5Binding" name="SelfAppointmentServiceV5PTB">
      <soap12:address location="http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkgZHOBQbdVtIxLc_PikST6NqqnKMl046oAJY1fDtJAWPiMuWjfg37DOGBMszdpIrBLH001qZQOXvGFrQ1pyJ.PXXNxPfTSSZJt6ZXh2iXR7arXfe5K180ludu6nm_i.dpE3_AtZ08hvE8ffS1atlxV5ivXnuCTlXJJs8yhPOHrX4mg-</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://api.service.soap.emias.lanit.ru/v5/" version="5.5" xmlns:ns1="http://api.service.soap.emias.lanit.ru/v5/" xmlns:tns="http://api.service.soap.emias.lanit.ru/v5/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--======================== Элементы =====================================-->
  <!--Отмена записи на прием-->
  <xs:element name="cancelAppointment" type="tns:cancelAppointment"/>
  <xs:element name="cancelAppointmentResponse" type="tns:cancelAppointmentResponse"/>
  <!--Создание записи на прием2-->
  <xs:element name="createAppointment" type="tns:createAppointment"/>
  <xs:element name="createAppointmentResponse" type="tns:createAppointmentResponse"/>
  <!--Получение списка записей для пациента-->
  <xs:element name="getAppointmentReceptionsByPatient" type="tns:getAppointmentReceptionsByPatient"/>
  <xs:element name="getAppointmentReceptionsByPatientResponse" type="tns:getAppointmentReceptionsByPatientResponse"/>
  <!--Получение расписания врача-->
  <xs:element name="getAvailableResourceScheduleInfo" type="tns:getAvailableResourceScheduleInfo"/>
  <xs:element name="getAvailableResourceScheduleInfoResponse" type="tns:getAvailableResourceScheduleInfoResponse"/>
  <!--Получение списка врачей-->
  <xs:element name="getDoctorsInfo" type="tns:getDoctorsInfo"/>
  <xs:element name="getDoctorsInfoResponse" type="tns:getDoctorsInfoResponse"/>
  <!--Получение направлений для пациента-->
  <xs:element name="getReferralsInfo" type="tns:getReferralsInfo"/>
  <xs:element name="getReferralsInfoResponse" type="tns:getReferralsInfoResponse"/>
  <!--Получение списка специальностей-->
  <xs:element name="getSpecialitiesInfo" type="tns:getSpecialitiesInfo"/>
  <xs:element name="getSpecialitiesInfoResponse" type="tns:getSpecialitiesInfoResponse"/>
  <!--Перенос записи на прием-->
  <xs:element name="shiftAppointment" type="tns:shiftAppointment"/>
  <xs:element name="shiftAppointmentResponse" type="tns:shiftAppointmentResponse"/>
  <!--Предоставление расписания ближайшего доступного ДВ-->
  <xs:element name="getDutyARScheduleByPatient" type="tns:getDutyARScheduleByPatient"/>
  <xs:element name="getDutyARScheduleByPatientResponse" type="tns:getDutyARScheduleByPatientResponse"/>
  <!--Создание записи к ДВ-->
  <xs:element name="createAppointmentToDutyDoctorByPatient" type="tns:createAppointmentToDutyDoctorByPatient"/>
  <xs:element name="createAppointmentToDutyDoctorByPatientResponse" type="tns:createAppointmentToDutyDoctorByPatientResponse"/>
  <!--Отмена записи к ДВ-->
  <xs:element name="cancelAppointmentToDutyDoctorByPatient" type="tns:cancelAppointmentToDutyDoctorByPatient"/>
  <xs:element name="cancelAppointmentToDutyDoctorByPatientResponse" type="tns:cancelAppointmentToDutyDoctorByPatientResponse"/>
  <!--Предоставление ожидания по самозаписи-->
  <xs:element name="getHealthCareAvailabilityAttributes" type="tns:getHealthCareAvailabilityAttributes"/>
  <xs:element name="getHealthCareAvailabilityAttributesResponse" type="tns:getHealthCareAvailabilityAttributesResponse"/>
  <!--Отмена записи к ДВ-->
  <xs:element name="cancelAppointmentBySms" type="tns:cancelAppointmentBySms"/>
  <xs:element name="cancelAppointmentBySmsResponse" type="tns:cancelAppointmentBySmsResponse"/>
  <!--Отмена записи на прием (вариант 2, для ЦТО)-->
  <xs:element name="cancelAppointmentByID" type="tns:cancelAppointmentByID"/>
  <xs:element name="cancelAppointmentByIDResponse" type="tns:cancelAppointmentByIDResponse"/>
  <!--Предоставление перечня активных назначений пациента на ЛИ-->
  <xs:element name="getAssignmentsInfo" type="tns:getAssignmentsInfo"/>
  <xs:element name="getAssignmentsInfoResponse" type="tns:getAssignmentsInfoResponse"/>
  <!--Получение ДР на лабораторные исследования-->
  <xs:element name="getDoctorsInfoForLI" type="tns:getDoctorsInfoForLI"/>
  <xs:element name="getDoctorsInfoForLIResponse" type="tns:getDoctorsInfoForLIResponse"/>
  <!--Предоставление перечня специальностей доступных для самозаписи группой пациентов-->
  <xs:element name="getSpecialitiesInfoForGroup" type="tns:getSpecialitiesInfoForGroup"/>
  <xs:element name="getSpecialitiesInfoForGroupResponse" type="tns:getSpecialitiesInfoForGroupResponse"/>
  <!--Предоставление перечня ДР, к которым разрешена самозапись пациента-->
  <xs:element name="getDoctorsInfoForGroup" type="tns:getDoctorsInfoForGroup"/>
  <xs:element name="getDoctorsInfoForGroupResponse" type="tns:getDoctorsInfoForGroupResponse"/>
  <!--Предоставление расписания доступного ресурса и его слотов, доступных для самозаписи группе пациентов-->
  <xs:element name="getAvailableResourceScheduleInfoForGroup" type="tns:getAvailableResourceScheduleInfoForGroup"/>
  <xs:element name="getAvailableResourceScheduleInfoForGroupResponse" type="tns:getAvailableResourceScheduleInfoForGroupResponse"/>
  <!--Создание несколько записей-->
  <xs:element name="createAppointmentForGroup" type="tns:createAppointmentForGroup"/>
  <xs:element name="createAppointmentForGroupResponse" type="tns:createAppointmentForGroupResponse"/>
  <!--Перенос нескольких записей-->
  <xs:element name="shiftAppointmentForGroup" type="tns:shiftAppointmentForGroup"/>
  <xs:element name="shiftAppointmentForGroupResponse" type="tns:shiftAppointmentForGroupResponse"/>
  <!--Предоставление перечня ЛПУ для вакцинации-->
  <xs:element name="getLpusForVaccination" type="tns:getLpusForVaccination"/>
  <xs:element name="getLpusForVaccinationResponse" type="tns:getLpusForVaccinationResponse"/>
  <!--======================== Ошибки =====================================-->
  <xs:element name="soapException" type="tns:soapException"/>
  <xs:element name="appointmentCodeErrorFaultInfo" type="tns:appointmentCodeErrorFaultInfo"/>
  <!--======================== Типы данных =====================================-->
  <xs:complexType name="availableResourceBasis">
    <xs:sequence>
      <xs:element minOccurs="0" name="referralId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Идентификатор направления, по которому осуществлялся подбор ДР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="medSpecialityAttachment" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак записи по прикреплению к специальности</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="specialityId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД специализации ДР, по которой осуществлялся подбор ДР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ldpId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД вида ЛДП</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="samplingTypeId" type="xs:long">
        <xs:annotation>
          <xs:documentation>Профиль взятия</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="referralType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="REF_TO_DOCTOR"/>
      <xs:enumeration value="REF_TO_LDP"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="signActiveArchiveType">
    <xs:annotation>
      <xs:documentation>Признак «Архивные и отмененные записи»</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long">
      <xs:enumeration value="0"/>
      <xs:enumeration value="1"/>
      <xs:enumeration value="2"/>
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="baseDto">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="ldpType">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="procedure" type="xs:boolean"/>
      <xs:element minOccurs="0" name="investigation" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpuType">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="ambulatory" type="xs:string"/>
      <xs:element minOccurs="0" name="patientSign" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="diagnosis">
    <xs:annotation>
      <xs:documentation>Диагноз МКБ-10</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="jobInfo">
    <xs:annotation>
      <xs:documentation>Исполнение должности</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="jobExecutionId" type="xs:long"/>
      <xs:element name="fio" type="xs:string"/>
      <xs:element minOccurs="0" name="snils" type="xs:string"/>
      <xs:element name="specialityId" type="xs:long"/>
      <xs:element name="specialityName">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="255"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="referral">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="comment" type="xs:string"/>
      <xs:element name="startTime" type="xs:date"/>
      <xs:element name="endTime" type="xs:date"/>
      <xs:element minOccurs="0" name="type" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuType" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuName" type="xs:string"/>
      <xs:element minOccurs="0" name="availableResourceId" type="xs:long"/>
      <xs:element minOccurs="0" name="toDoctor" type="tns:toDoctor"/>
      <xs:element minOccurs="0" name="toLdp" type="tns:toLdp"/>
      <xs:element name="countActiveAppointment" type="xs:int"/>
      <xs:element name="countAppointmentWithReceptionFact" type="xs:int"/>
      <xs:element minOccurs="0" name="invalid" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="referralDesc">
    <xs:sequence>
      <xs:element name="referralId" type="xs:long"/>
      <xs:element name="startTime" type="xs:date"/>
      <xs:element name="endTime" type="xs:date"/>
      <xs:element minOccurs="0" name="availableResourceId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentDesc">
    <xs:sequence>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element name="appointmentNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="patient" type="tns:patientShort"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="scheduleOfDay">
    <xs:sequence>
      <xs:element name="date" type="xs:date"/>
      <xs:element maxOccurs="unbounded" name="scheduleBySlot" type="tns:scheduleBySlot"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="medicalSpeciality">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="male" type="xs:boolean"/>
      <xs:element minOccurs="0" name="female" type="xs:boolean"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="areaType" type="xs:string"/>
      <xs:element minOccurs="0" name="onlyByRefferal" type="xs:boolean"/>
      <xs:element minOccurs="0" name="therapeutic" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="toDoctor">
    <xs:sequence>
      <xs:element name="specialityId" type="xs:long"/>
      <xs:element name="specialityName" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorFio" type="xs:string"/>
      <xs:element name="receptionTypeId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="toLdp">
    <xs:sequence>
      <xs:element name="ldpTypeId" type="xs:long"/>
      <xs:element name="ldpTypeName" type="xs:string"/>
      <xs:element minOccurs="0" name="countAssignmentProcedures" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentReception">
    <xs:sequence>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element minOccurs="0" name="appointmentNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointment">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="liveQueueTicketId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД талона в ЖО</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="liveQueueTicketNumber" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер талона в ЖО</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lpuId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД ЛПУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="typeLpu" type="xs:string"/>
      <xs:element name="nameLpu" type="xs:string"/>
      <xs:element name="lpuAddress" type="xs:string"/>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:element name="type" type="xs:string"/>
      <xs:element minOccurs="0" name="enableCancel" type="xs:boolean"/>
      <xs:element minOccurs="0" name="enableShift" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Разрешен ли перенос</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="complexResourceId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД КР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="roomId" type="xs:long"/>
      <xs:element minOccurs="0" name="roomNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="addressPointId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД Адресной точки кабинета</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="toDoctor" type="tns:toDoctor"/>
      <xs:element minOccurs="0" name="toLdp" type="tns:toLdp"/>
      <xs:element minOccurs="0" name="toBM" type="ns1:SamplingType"/>
      <xs:element name="statusId" type="xs:int"/>
      <xs:element minOccurs="0" name="referral" type="tns:referralDesc">
        <xs:annotation>
          <xs:documentation>Направление</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="eno" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentReceptionToDoctor">
    <xs:sequence>
      <xs:element minOccurs="0" name="doctorSpecialityCode" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorSpeciality" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorFio" type="xs:string"/>
      <xs:element minOccurs="0" name="viewReceptionCode" type="xs:string"/>
      <xs:element minOccurs="0" name="room" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="availableResource">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="name" type="xs:string"/>
      <xs:element name="arType" type="xs:int"/>
      <xs:element minOccurs="0" name="specialityChangeAbility" type="xs:boolean"/>
      <xs:element minOccurs="0" name="arSpecialityId" type="xs:long"/>
      <xs:element minOccurs="0" name="arSpecialityName" type="xs:string"/>
      <xs:element minOccurs="0" name="mainDoctor" type="ns1:mainDoctor"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="receptionType" type="ns1:receptionType"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="ldpType" type="ns1:ldpTypeForAr"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="samplingType" type="ns1:SamplingType"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="complexResource" type="ns1:complexResource"/>
      <xs:element default="false" name="district" type="xs:boolean"/>
      <xs:element default="false" name="replacement" type="xs:boolean"/>
      <xs:element minOccurs="0" name="nondistrict" type="xs:boolean"/>
      <xs:element default="false" name="availableByReferral" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DutyARScheduleInfo">
    <xs:sequence>
      <xs:element name="startTime" type="xs:time"/>
      <xs:element name="endTime" type="xs:time"/>
      <xs:element name="existedLiveQueueTickets" type="xs:int"/>
      <xs:element name="availableResource" type="tns:availableResource"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResultCreationAppointmentToDutyDoctor">
    <xs:sequence>
      <xs:element name="appointmentDesc" type="tns:appointmentDesc"/>
      <xs:element name="liveQueueTicketId" type="xs:long"/>
      <xs:element name="liveQueueTicketNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="complexResourceId" type="xs:long"/>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:choice minOccurs="0">
        <xs:element name="referralId" type="xs:long"/>
        <xs:element name="receptionTypeId" type="xs:long"/>
      </xs:choice>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element minOccurs="0" name="eno" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentResponse">
    <xs:sequence>
      <xs:element name="appointmentDesc" type="ns1:appointmentDesc"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAppointmentReceptionsByPatient">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element minOccurs="0" name="signActiveArchive" type="tns:signActiveArchiveType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAppointmentReceptionsByPatientResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="appointment" type="tns:appointment"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableResourceScheduleInfo">
    <xs:sequence>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element minOccurs="0" name="complexResourceId" type="xs:long"/>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element minOccurs="0" name="referralId" type="xs:long"/>
      <xs:element minOccurs="0" name="period" type="ns1:DatePeriod"/>
      <xs:element minOccurs="0" name="appointmentId" type="xs:long"/>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableResourceScheduleInfoResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:availableResourceScheduleBySlots"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:choice>
        <xs:element name="appointmentId" type="xs:long"/>
        <xs:element name="referralId" type="xs:long"/>
        <xs:element name="specialityId" type="xs:long"/>
      </xs:choice>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="includeArWithoutSlots" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>По умолчанию - true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="quotaTypes">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="quotaType" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="availableResource" type="tns:availableResource"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getReferralsInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getReferralsInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="referral" type="tns:referral"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecialitiesInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecialitiesInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="medicalSpeciality" type="tns:medicalSpeciality"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shiftAppointment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element minOccurs="0" name="complexResourceId" type="xs:long"/>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:choice minOccurs="0">
        <xs:element name="referralId" type="xs:long"/>
        <xs:element name="receptionTypeId" type="xs:long"/>
      </xs:choice>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shiftAppointmentResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:appointmentDesc"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDutyARScheduleByPatient">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element name="lpuId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDutyARScheduleByPatientResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:DutyARScheduleInfo"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentToDutyDoctorByPatient">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element name="lpuId" type="xs:long"/>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="complexResourceId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentToDutyDoctorByPatientResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:ResultCreationAppointmentToDutyDoctor"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentToDutyDoctorByPatient">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element name="appointmentId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentToDutyDoctorByPatientResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getHealthCareAvailabilityAttributes">
    <xs:sequence>
      <xs:element name="patientId" type="xs:long">
        <xs:annotation>
          <xs:documentation>Идентификатор пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:choice minOccurs="0">
        <xs:element name="referralId" type="xs:long"/>
        <xs:element name="specialityId" type="xs:long"/>
        <xs:element name="ldpId" type="xs:long"/>
        <xs:element name="samplingTypeId" type="xs:long"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getHealthCareAvailabilityAttributesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="availabilityInfo" type="tns:availabilityInfo"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="availabilityInfo">
    <xs:sequence>
      <xs:element name="nearestAppointmentDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время ближайшего свободного талона</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="availableResourceBasis" type="tns:availableResourceBasis">
        <xs:annotation>
          <xs:documentation>Группирующая сущность: основание для подбора ДР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="externalSystemId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД внешней системы, через которую осуществлялся подбор ДР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="creationDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время создания записи</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ldpId" type="xs:long"/>
      <xs:element minOccurs="0" name="nearestMainDoctorDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время ближайшего свободного талона основного врача</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="nearestReplacementDoctorDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время ближайшего свободного талона замещающего врача</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentBySms">
    <xs:sequence>
      <xs:element name="patientPhoneNumber" type="xs:string"/>
      <xs:element name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentBySmsResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentByID">
    <xs:sequence>
      <xs:element name="appointmentId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentByIDResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAssignmentsInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер полиса ОМС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string">
        <xs:annotation>
          <xs:documentation>Серия полиса ОМС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="birthDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата рождения пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element default="false" minOccurs="0" name="returnExtended" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Вернуть расширенную версию направления</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="externalSystemId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Обозначение внешней системы</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAssignmentsInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="assignment" type="ns1:AssignmentGroup">
        <xs:annotation>
          <xs:documentation>Активные назначения пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoForLI">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="assignment" type="ns1:Assignment">
        <xs:annotation>
          <xs:documentation>Назначение</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="appointmentId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoForLIResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="availableResource" type="tns:availableResource"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecialitiesInfoForGroup">
    <xs:sequence>
      <xs:element maxOccurs="10" minOccurs="2" name="patientGroupEntry" type="tns:patientGroupEntry"/>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecialitiesInfoForGroupResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="medicalSpeciality" type="tns:medicalSpeciality"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoForGroup">
    <xs:sequence>
      <xs:element maxOccurs="10" minOccurs="2" name="patientGroupEntry">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="tns:patientGroupEntry">
              <xs:sequence>
                <xs:element minOccurs="0" name="appointmentId" type="xs:long"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="specialityId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoForGroupResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="availableResource" type="tns:availableResource"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableResourceScheduleInfoForGroup">
    <xs:sequence>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element maxOccurs="10" minOccurs="2" name="patientGroupEntry">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="tns:patientGroupEntry">
              <xs:sequence>
                <xs:element minOccurs="0" name="appointmentId" type="xs:long"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableResourceScheduleInfoForGroupResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:availableResourceScheduleBySlots"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentForGroup">
    <xs:sequence>
      <xs:element maxOccurs="10" minOccurs="2" name="patientGroupEntry">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="tns:patientGroupEntry">
              <xs:sequence>
                <xs:element name="appTime" type="tns:TimeInterval"/>
                <xs:element name="complexResourceId" type="xs:long"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="receptionTypeId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentForGroupResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="appointmentDesc" type="ns1:appointmentDesc"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shiftAppointmentForGroup">
    <xs:sequence>
      <xs:element maxOccurs="10" minOccurs="2" name="patientGroupEntry">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="tns:patientGroupEntry">
              <xs:sequence>
                <xs:element name="appTime" type="tns:TimeInterval"/>
                <xs:element name="complexResourceId" type="xs:long"/>
                <xs:element name="appointmentId" type="xs:long"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="receptionTypeId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shiftAppointmentForGroupResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="appointmentDesc" type="tns:appointmentDesc"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentCodeErrorFaultInfo">
    <xs:annotation>
      <xs:documentation>Error</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="messageText" type="xs:string"/>
      <xs:element minOccurs="0" name="userId" type="xs:string"/>
      <xs:element minOccurs="0" name="operation" type="xs:string"/>
      <xs:element minOccurs="0" name="resource" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="availableResourceScheduleBySlots">
    <xs:sequence>
      <xs:element name="availableResource" type="ns1:availableResource"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="scheduleOfDay" type="ns1:scheduleOfDay"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentLock">
    <xs:sequence>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element minOccurs="0" name="arSpecialityId" type="xs:long"/>
      <xs:element minOccurs="0" name="arSamplingTypeId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="patient" type="tns:patientShort"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="scheduleBySlot">
    <xs:sequence>
      <xs:element name="complexResourceId" type="xs:long"/>
      <xs:element name="cabinetNumber" type="xs:string"/>
      <xs:element maxOccurs="unbounded" name="slot" type="ns1:slot"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="slot">
    <xs:sequence>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="mainDoctor">
    <xs:sequence>
      <xs:element minOccurs="0" name="specialityName" type="xs:string"/>
      <xs:element name="specialityId" type="xs:long"/>
      <xs:element name="firstName" type="xs:string"/>
      <xs:element name="lastName" type="xs:string"/>
      <xs:element minOccurs="0" name="secondName" type="xs:string"/>
      <xs:element name="mejiId" type="xs:long"/>
      <xs:element name="employeeId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Assignment">
    <xs:sequence>
      <xs:element name="moId" type="xs:long"/>
      <xs:element name="samplingTypeId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД профиля взятия БМ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="period" type="ns1:DatePeriod"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentGroup">
    <xs:sequence>
      <xs:element name="moId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД МО принимающее (головное ЛПУ куста)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="toBM" type="ns1:SamplingType">
        <xs:annotation>
          <xs:documentation>Профиль взятия БМ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="period" type="ns1:DatePeriod">
        <xs:annotation>
          <xs:documentation>Период действия назначения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="active" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак активности назначения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="appointmentAvailable" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак возможности создать запись</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="appointmentOpenDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата открытия записи по назначению</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="appointmentId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД активной записи по данному назначению</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" name="registryEntry" type="ns1:registryEntry">
        <xs:annotation>
          <xs:documentation>Реестровые записи</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:sequence>
      <xs:element name="dateFrom" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dateTo" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="registryEntry">
    <xs:sequence>
      <xs:element name="entryId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД реестровой записи</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="laboratoryId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД лабораторного исследования</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="laboratoryName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование ЛИ (краткое)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="biomaterialId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД биоматериала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="biomaterialName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование биоматериала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hasMemo" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак наличия памятки</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="diagnosis" type="ns1:diagnosis">
        <xs:annotation>
          <xs:documentation>Информация о диагнозе</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="issuedDoctor" type="ns1:jobInfo">
        <xs:annotation>
          <xs:documentation>Информация о назначившем враче</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="receptionType">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="primary" type="xs:string"/>
      <xs:element minOccurs="0" name="home" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ldpTypeForAr">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="complexResource">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="room" type="ns1:room"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="room">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element minOccurs="0" name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuShortName" type="xs:string"/>
      <xs:element minOccurs="0" name="addressPointId" type="xs:long"/>
      <xs:element minOccurs="0" name="defaultAddress" type="xs:string"/>
      <xs:element name="availabilityDate" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SamplingType">
    <xs:sequence>
      <xs:element name="id" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД профиля взятия БМ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Название профиля</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="self" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак самовзятого БМ</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpusForVaccination">
    <xs:sequence>
      <xs:element name="omsNumber">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="17"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="omsSeries">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="6"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element minOccurs="0" name="specialityId" type="xs:long"/>
      <xs:element name="externalSystemId">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="30"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpusForVaccinationResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="lpu" type="ns1:lpu"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpu">
    <xs:sequence>
      <xs:element name="lpuId" type="xs:long"/>
      <xs:element name="shortName" type="xs:string"/>
      <xs:element maxOccurs="unbounded" name="addressPoint" type="ns1:addressPoint"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addressPoint">
    <xs:sequence>
      <xs:element name="addressPointId" type="xs:long"/>
      <xs:element name="addressString" type="xs:string"/>
      <xs:element minOccurs="0" name="terCode" type="xs:string"/>
      <xs:element minOccurs="0" name="terName" type="xs:string"/>
      <xs:element maxOccurs="unbounded" name="arSpecialityId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="soapException">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="text" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="appointmentLock" type="tns:appointmentLock"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="patientGroupError" type="tns:patientShort"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="patientShort">
    <xs:sequence>
      <xs:element minOccurs="0" name="patientId" type="xs:long"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="patientGroupEntry">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TimeInterval">
    <xs:sequence>
      <xs:element name="start" type="xs:dateTime"/>
      <xs:element name="end" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint></con:endpoints><con:operation id="4ea735c3-fa72-436d-995d-00217d259712" isOneWay="false" action="urn://cancelAppointment" name="cancelAppointment" bindingOperationName="cancelAppointment" type="Request-Response" outputName="cancelAppointmentResponse" inputName="cancelAppointment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="11fb031c-5c9b-48b2-97aa-043e58def9f6" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:cancelAppointment>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <appointmentId>?</appointmentId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:cancelAppointment>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/cancelAppointment"/></con:call></con:operation><con:operation id="25dd79c8-09f5-4173-949c-ba9559ca1fb3" isOneWay="false" action="urn://cancelAppointmentByID" name="cancelAppointmentByID" bindingOperationName="cancelAppointmentByID" type="Request-Response" outputName="cancelAppointmentByIDResponse" inputName="cancelAppointmentByID" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="536b9d5c-496a-4fe9-aea8-d0b8f63f2ae2" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:cancelAppointmentByID>\r
         <appointmentId>?</appointmentId>\r
      </v5:cancelAppointmentByID>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/cancelAppointmentByID"/></con:call></con:operation><con:operation id="8402ff0c-62ff-4e4d-8820-98b19765da56" isOneWay="false" action="urn://cancelAppointmentBySms" name="cancelAppointmentBySms" bindingOperationName="cancelAppointmentBySms" type="Request-Response" outputName="cancelAppointmentBySmsResponse" inputName="cancelAppointmentBySms" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a64d5d36-9423-48d8-acf4-fcdaf9e9eff7" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:cancelAppointmentBySms>\r
         <patientPhoneNumber>?</patientPhoneNumber>\r
         <message>?</message>\r
      </v5:cancelAppointmentBySms>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/cancelAppointmentBySms"/></con:call></con:operation><con:operation id="9ade00a3-b9e4-433b-9719-99fc42aa6c5b" isOneWay="false" action="urn://cancelAppointmentToDutyDoctorByPatient" name="cancelAppointmentToDutyDoctorByPatient" bindingOperationName="cancelAppointmentToDutyDoctorByPatient" type="Request-Response" outputName="cancelAppointmentToDutyDoctorByPatientResponse" inputName="cancelAppointmentToDutyDoctorByPatient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8fe549fa-de85-4d23-a462-069b3a940fcf" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:cancelAppointmentToDutyDoctorByPatient>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <externalSystemId>?</externalSystemId>\r
         <appointmentId>?</appointmentId>\r
      </v5:cancelAppointmentToDutyDoctorByPatient>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/cancelAppointmentToDutyDoctorByPatient"/></con:call></con:operation><con:operation id="b921d302-ec6f-49e8-8dc8-9713457348a8" isOneWay="false" action="urn://createAppointment" name="createAppointment" bindingOperationName="createAppointment" type="Request-Response" outputName="createAppointmentResponse" inputName="createAppointment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="cae40942-11fe-4c43-8f60-e71442d6c24b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:createAppointment>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <availableResourceId>?</availableResourceId>\r
         <complexResourceId>?</complexResourceId>\r
         <startTime>?</startTime>\r
         <endTime>?</endTime>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <referralId>?</referralId>\r
         <receptionTypeId>?</receptionTypeId>\r
         <externalSystemId>?</externalSystemId>\r
         <!--Optional:-->\r
         <eno>?</eno>\r
      </v5:createAppointment>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/createAppointment"/></con:call></con:operation><con:operation id="40825eca-158f-4fe2-9b15-40faf4fb3701" isOneWay="false" action="urn://createAppointmentForGroup" name="createAppointmentForGroup" bindingOperationName="createAppointmentForGroup" type="Request-Response" outputName="createAppointmentForGroupResponse" inputName="createAppointmentForGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b51b13cd-3fe2-4f0c-9ee9-e6cb265c3347" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:createAppointmentForGroup>\r
         <!--2 to 10 repetitions:-->\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <appTime>\r
               <start>?</start>\r
               <end>?</end>\r
            </appTime>\r
            <complexResourceId>?</complexResourceId>\r
         </patientGroupEntry>\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <appTime>\r
               <start>?</start>\r
               <end>?</end>\r
            </appTime>\r
            <complexResourceId>?</complexResourceId>\r
         </patientGroupEntry>\r
         <availableResourceId>?</availableResourceId>\r
         <receptionTypeId>?</receptionTypeId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:createAppointmentForGroup>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/createAppointmentForGroup"/></con:call></con:operation><con:operation id="bdefff2d-f6d3-42de-af50-0427b03cbc33" isOneWay="false" action="urn://createAppointmentToDutyDoctorByPatient" name="createAppointmentToDutyDoctorByPatient" bindingOperationName="createAppointmentToDutyDoctorByPatient" type="Request-Response" outputName="createAppointmentToDutyDoctorByPatientResponse" inputName="createAppointmentToDutyDoctorByPatient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="720dca4c-e02c-4262-9b55-0ad5e75c4690" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:createAppointmentToDutyDoctorByPatient>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <externalSystemId>?</externalSystemId>\r
         <lpuId>?</lpuId>\r
         <availableResourceId>?</availableResourceId>\r
         <complexResourceId>?</complexResourceId>\r
      </v5:createAppointmentToDutyDoctorByPatient>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/createAppointmentToDutyDoctorByPatient"/></con:call></con:operation><con:operation id="df74467e-53ea-4ee4-94bf-a76e7df78b59" isOneWay="false" action="urn://getAppointmentReceptionsByPatient" name="getAppointmentReceptionsByPatient" bindingOperationName="getAppointmentReceptionsByPatient" type="Request-Response" outputName="getAppointmentReceptionsByPatientResponse" inputName="getAppointmentReceptionsByPatient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d3473105-b1be-4362-860b-1b6d876afe9b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getAppointmentReceptionsByPatient>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <externalSystemId>?</externalSystemId>\r
         <!--Optional:-->\r
         <signActiveArchive>?</signActiveArchive>\r
      </v5:getAppointmentReceptionsByPatient>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getAppointmentReceptionsByPatient"/></con:call></con:operation><con:operation id="67ea2d6f-4b61-47a3-9f17-6acd561915e7" isOneWay="false" action="urn://getAssignmentsInfo" name="getAssignmentsInfo" bindingOperationName="getAssignmentsInfo" type="Request-Response" outputName="getAssignmentsInfoResponse" inputName="getAssignmentsInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="de4143e9-f585-45e9-8d49-67734527d2eb" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getAssignmentsInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <returnExtended>false</returnExtended>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getAssignmentsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getAssignmentsInfo"/></con:call></con:operation><con:operation id="934a5c5b-2f1f-4897-8078-22ac5e7a84f8" isOneWay="false" action="urn://getAvailableResourceScheduleInfo" name="getAvailableResourceScheduleInfo" bindingOperationName="getAvailableResourceScheduleInfo" type="Request-Response" outputName="getAvailableResourceScheduleInfoResponse" inputName="getAvailableResourceScheduleInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0e5e27f8-8025-4fdb-ba7a-38764989c9d6" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getAvailableResourceScheduleInfo>\r
         <availableResourceId>?</availableResourceId>\r
         <!--Optional:-->\r
         <complexResourceId>?</complexResourceId>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <referralId>?</referralId>\r
         <!--Optional:-->\r
         <period>\r
            <dateFrom>?</dateFrom>\r
            <dateTo>?</dateTo>\r
         </period>\r
         <!--Optional:-->\r
         <appointmentId>?</appointmentId>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getAvailableResourceScheduleInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getAvailableResourceScheduleInfo"/></con:call></con:operation><con:operation id="9d070a4d-e8cd-4113-9b55-1c5e613d7262" isOneWay="false" action="urn://getAvailableResourceScheduleInfoForGroup" name="getAvailableResourceScheduleInfoForGroup" bindingOperationName="getAvailableResourceScheduleInfoForGroup" type="Request-Response" outputName="getAvailableResourceScheduleInfoForGroupResponse" inputName="getAvailableResourceScheduleInfoForGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5efb6983-0725-40ec-ad42-3d349cd09fc2" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getAvailableResourceScheduleInfoForGroup>\r
         <availableResourceId>?</availableResourceId>\r
         <!--2 to 10 repetitions:-->\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <!--Optional:-->\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <!--Optional:-->\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getAvailableResourceScheduleInfoForGroup>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getAvailableResourceScheduleInfoForGroup"/></con:call></con:operation><con:operation id="f191cbb3-5f7c-4377-a195-4385f50c2f0f" isOneWay="false" action="urn://getDoctorsInfo" name="getDoctorsInfo" bindingOperationName="getDoctorsInfo" type="Request-Response" outputName="getDoctorsInfoResponse" inputName="getDoctorsInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2e7d01ff-ad7a-4d17-96b0-5d265f3fa146" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getDoctorsInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--You have a CHOICE of the next 3 items at this level-->\r
         <appointmentId>?</appointmentId>\r
         <referralId>?</referralId>\r
         <specialityId>?</specialityId>\r
         <!--Optional:-->\r
         <lpuId>?</lpuId>\r
         <!--Optional:-->\r
         <includeArWithoutSlots>?</includeArWithoutSlots>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getDoctorsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getDoctorsInfo"/><con:wsrmConfig version="1.2"/></con:call><con:call id="50981b05-6379-4fa0-8a35-0cc07f02690f" name="getDoctorsInfo"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken>\r
            <wsse:Username>EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <v5:getDoctorsInfo>\r
         <omsNumber>7700007104620689</omsNumber>\r
         <birthDate>1989-06-12</birthDate>\r
         <specialityId>2011</specialityId>\r
         <lpuId>204</lpuId>\r
         <externalSystemId>EIM</externalSystemId>\r
      </v5:getDoctorsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getDoctorsInfo"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="68a5697e-3411-4166-b5e5-d7e9c09e2ac4" isOneWay="false" action="urn://getDoctorsInfoForGroup" name="getDoctorsInfoForGroup" bindingOperationName="getDoctorsInfoForGroup" type="Request-Response" outputName="getDoctorsInfoForGroupResponse" inputName="getDoctorsInfoForGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="114f6077-d665-48d6-9344-f4cc0b9b2546" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getDoctorsInfoForGroup>\r
         <!--2 to 10 repetitions:-->\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <!--Optional:-->\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <!--Optional:-->\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <specialityId>?</specialityId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getDoctorsInfoForGroup>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getDoctorsInfoForGroup"/></con:call></con:operation><con:operation id="44b6f877-a0a6-43b2-81cb-583cc93ce694" isOneWay="false" action="urn://getDoctorsInfoForLI" name="getDoctorsInfoForLI" bindingOperationName="getDoctorsInfoForLI" type="Request-Response" outputName="getDoctorsInfoForLIResponse" inputName="getDoctorsInfoForLI" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="15e38261-4271-4b8a-8d06-28ed95395ff7" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getDoctorsInfoForLI>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <assignment>\r
            <moId>?</moId>\r
            <samplingTypeId>?</samplingTypeId>\r
            <period>\r
               <dateFrom>?</dateFrom>\r
               <dateTo>?</dateTo>\r
            </period>\r
         </assignment>\r
         <!--Optional:-->\r
         <appointmentId>?</appointmentId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getDoctorsInfoForLI>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getDoctorsInfoForLI"/></con:call></con:operation><con:operation id="ea931866-a1ee-432a-aeff-2c118fbc1450" isOneWay="false" action="urn://getDutyARScheduleByPatient" name="getDutyARScheduleByPatient" bindingOperationName="getDutyARScheduleByPatient" type="Request-Response" outputName="getDutyARScheduleByPatientResponse" inputName="getDutyARScheduleByPatient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="95f313e3-e5d4-4965-a556-1cd440fa0b54" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getDutyARScheduleByPatient>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <externalSystemId>?</externalSystemId>\r
         <lpuId>?</lpuId>\r
      </v5:getDutyARScheduleByPatient>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getDutyARScheduleByPatient"/></con:call></con:operation><con:operation id="a225fddf-19cb-4905-8ee6-bf3a64c2ab5d" isOneWay="false" action="urn://getHealthCareAvailabilityAttributes" name="getHealthCareAvailabilityAttributes" bindingOperationName="getHealthCareAvailabilityAttributes" type="Request-Response" outputName="getHealthCareAvailabilityAttributesResponse" inputName="getHealthCareAvailabilityAttributes" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2a6aee78-b59f-43b5-a156-ef0708e205e5" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getHealthCareAvailabilityAttributes>\r
         <patientId>?</patientId>\r
         <!--You have a CHOICE of the next 4 items at this level-->\r
         <referralId>?</referralId>\r
         <specialityId>?</specialityId>\r
         <ldpId>?</ldpId>\r
         <samplingTypeId>?</samplingTypeId>\r
      </v5:getHealthCareAvailabilityAttributes>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getHealthCareAvailabilityAttributes"/></con:call></con:operation><con:operation id="5124a171-9bca-4c6b-b880-576c5801c496" isOneWay="false" action="urn://getLpusForVaccination" name="getLpusForVaccination" bindingOperationName="getLpusForVaccination" type="Request-Response" outputName="getLpusForVaccinationResponse" inputName="getLpusForVaccination" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1c109358-6154-4c71-9022-d4c5f0476f2b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getLpusForVaccination>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <specialityId>?</specialityId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getLpusForVaccination>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getLpusForVaccination"/></con:call><con:call id="b75c7e58-aaf7-409b-916c-f51a8f0e958f" name="getLpusForVaccination"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <v5:getLpusForVaccination>\r
         <omsNumber>7793899793001224</omsNumber>\r
         <birthDate>2001-06-06</birthDate>\r
         <externalSystemId>EIM</externalSystemId>\r
      </v5:getLpusForVaccination>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getLpusForVaccination"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="7e92d6a3-af3a-426b-a71e-c1a1b46a42e1" isOneWay="false" action="urn://getReferralsInfo" name="getReferralsInfo" bindingOperationName="getReferralsInfo" type="Request-Response" outputName="getReferralsInfoResponse" inputName="getReferralsInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="99061358-afa7-4690-8cd2-0bfbe8d5898f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getReferralsInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getReferralsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getReferralsInfo"/></con:call></con:operation><con:operation id="98134de2-80b1-4803-9231-e66bfa964dba" isOneWay="false" action="urn://getSpecialitiesInfo" name="getSpecialitiesInfo" bindingOperationName="getSpecialitiesInfo" type="Request-Response" outputName="getSpecialitiesInfoResponse" inputName="getSpecialitiesInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7432033a-1346-4c8d-b68e-d7c0da9f5fbb" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getSpecialitiesInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getSpecialitiesInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getSpecialitiesInfo"/></con:call></con:operation><con:operation id="6454979d-f663-43aa-88f3-ab9982637896" isOneWay="false" action="urn://getSpecialitiesInfoForGroup" name="getSpecialitiesInfoForGroup" bindingOperationName="getSpecialitiesInfoForGroup" type="Request-Response" outputName="getSpecialitiesInfoForGroupResponse" inputName="getSpecialitiesInfoForGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="25fabc9b-fef2-4a8b-a299-a92551f886e2" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getSpecialitiesInfoForGroup>\r
         <!--2 to 10 repetitions:-->\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
         </patientGroupEntry>\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
         </patientGroupEntry>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getSpecialitiesInfoForGroup>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getSpecialitiesInfoForGroup"/></con:call></con:operation><con:operation id="ff7f3692-043c-4163-ac77-2128a5c3a351" isOneWay="false" action="urn://shiftAppointment" name="shiftAppointment" bindingOperationName="shiftAppointment" type="Request-Response" outputName="shiftAppointmentResponse" inputName="shiftAppointment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a6f71f55-974e-400c-9c09-7a1ebdbf5e7a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:shiftAppointment>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <availableResourceId>?</availableResourceId>\r
         <!--Optional:-->\r
         <complexResourceId>?</complexResourceId>\r
         <startTime>?</startTime>\r
         <endTime>?</endTime>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <referralId>?</referralId>\r
         <receptionTypeId>?</receptionTypeId>\r
         <appointmentId>?</appointmentId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:shiftAppointment>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/shiftAppointment"/></con:call></con:operation><con:operation id="b88110b6-6f46-4499-9854-ed7f68b3d65a" isOneWay="false" action="urn://shiftAppointmentForGroup" name="shiftAppointmentForGroup" bindingOperationName="shiftAppointmentForGroup" type="Request-Response" outputName="shiftAppointmentForGroupResponse" inputName="shiftAppointmentForGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="60543f7d-ad66-4bc9-a89c-24eb0d7ba075" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:shiftAppointmentForGroup>\r
         <!--2 to 10 repetitions:-->\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <appTime>\r
               <start>?</start>\r
               <end>?</end>\r
            </appTime>\r
            <complexResourceId>?</complexResourceId>\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <appTime>\r
               <start>?</start>\r
               <end>?</end>\r
            </appTime>\r
            <complexResourceId>?</complexResourceId>\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <availableResourceId>?</availableResourceId>\r
         <receptionTypeId>?</receptionTypeId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:shiftAppointmentForGroup>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/shiftAppointmentForGroup"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="89aa699b-ece0-4cd7-a059-441f087619b1" wsaVersion="NONE" name="Госпитализации" type="wsdl" bindingName="{http://emias.mos.ru/hospitalization/hospitalService/v2/}hospitalServiceBinding" soapVersion="1_2" anonymous="optional" definition="http://esbcamel.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamel.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?wsdl"><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="hospitalServiceV2" targetNamespace="http://emias.mos.ru/hospitalization/hospitalService/v2/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ns1="http://emias.mos.ru/hospitalization/hospitalService/v2/types/" xmlns:nsf="http://emias.mos.ru/system/v1/faults/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://emias.mos.ru/hospitalization/hospitalService/v2/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <wsdl:documentation>Версия 1.4.3.128</wsdl:documentation>
  <wsdl:types>
    <xs:schema>
      <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfEnz4Aq8EXihXLYVPF.1JQugAOTDB3XtiTgBkXUbvh0Ip781WlYcmvrJdZp8GzrY-"/>
      <xs:import namespace="http://emias.mos.ru/system/v1/faults/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfEnz4Aq8EXihXLYVPF.1JQvsSKS72wTtuWByg9TI1WJQ1OHSqO66HMx71"/>
      <xs:import namespace="http://emias.mos.ru/hospitalization/hospitalService/v2/types/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfVD2kF6sZXjcQJJ1ICudKQvUcLzLrxnR6eB1iBVf_hs9m.ZCDetDRV4DIesEDk_xQES6ZlxUAymHvEA4X"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getHospitalPatientOutput">
    <wsdl:part element="ns1:getHospitalizationInfoByPatientResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fault">
    <wsdl:documentation>Ошибка</wsdl:documentation>
    <wsdl:part element="nsf:fault" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getHospitalPatientInput">
    <wsdl:part element="ns1:getHospitalizationInfoByPatientRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="userContext">
    <wsdl:documentation>Контекст пользователя</wsdl:documentation>
    <wsdl:part element="uctx:userContext" name="userContext"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="hospitalServicePortType">
    <wsdl:operation name="getHospitalizationInfoByPatient">
      <wsdl:input message="tns:getHospitalPatientInput"></wsdl:input>
      <wsdl:output message="tns:getHospitalPatientOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="hospitalServiceBinding" type="tns:hospitalServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getHospitalizationInfoByPatient">
      <soap:operation soapAction="getHospitalizationInfoByPatient"/>
      <wsdl:input>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="hospitalServiceV2">
    <wsdl:port binding="tns:hospitalServiceBinding" name="hospitalServicePort">
      <soap:address location="http://esbcamel.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService"/>
    </wsdl:port>
    <wsp:PolicyReference URI="#authPolicy"/>
  </wsdl:service>
  <wsp:Policy wsu:Id="authPolicy">
    <sp:SupportingTokens xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702">
      <wsp:Policy>
        <sp:UsernameToken sp:IncludeToken="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient">
          <wsp:Policy>
            <sp:NoPassword/>
          </wsp:Policy>
        </sp:UsernameToken>
      </wsp:Policy>
    </sp:SupportingTokens>
  </wsp:Policy>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfEnz4Aq8EXihXLYVPF.1JQugAOTDB3XtiTgBkXUbvh0Ip781WlYcmvrJdZp8GzrY-</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/userContext/" xmlns="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfEnz4Aq8EXihXLYVPF.1JQuUAOMlNthnEiDjF8Ke3UJvOzdI-"/>
  <xs:element name="userContext" type="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="systemName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Шифр системы-потребителя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя пользователя (логин)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRoleId" type="ID">
        <xs:annotation>
          <xs:documentation>Идентификатор Роли пользователя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isUserRoleSystemWide" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак "Общесистемная Роль пользователя"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRights">
        <xs:annotation>
          <xs:documentation>Коллекция Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>ИД Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="jobExecutionId" type="ID"/>
      <xs:element minOccurs="0" name="hostIp" type="xs:string">
        <xs:annotation>
          <xs:documentation>IP адрес хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hostName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfEnz4Aq8EXihXLYVPF.1JQuUAOMlNthnEiDjF8Ke3UJvOzdI-</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfEnz4Aq8EXihXLYVPF.1JQvsSKS72wTtuWByg9TI1WJQ1OHSqO66HMx71</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/faults/" xmlns="http://emias.mos.ru/system/v1/faults/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfEnz4Aq8EXihXLYVPF.1JQuUAOMlNthnEiDjF8Ke3UJvOzdI-"/>
  <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfEnz4Aq8EXihXLYVPF.1JQugAOTDB3XtiTgBkXUbvh0Ip781WlYcmvrJdZp8GzrY-"/>
  <!--faults-->
  <xs:element name="fault" type="BaseFault">
    <xs:annotation>
      <xs:documentation>Базовый тип ошибки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SecurityFault">
    <xs:annotation>
      <xs:documentation>Ошибка безопасности</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element ref="uctx:userContext"/>
          <xs:choice>
            <xs:element name="unauthorizedRequestSecurityException" type="UnauthorizedRequestSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="otherSecurityException" type="OtherSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:sequence>
        <xs:attribute fixed="SECURITY" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BusinessFault">
    <xs:annotation>
      <xs:documentation>Бизнес ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Коллекция Сообщений об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hasErrors" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак наличия ошибок в списке сообщений</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="BUSINESS" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UnexpectedFault">
    <xs:annotation>
      <xs:documentation>Непредвиденная ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="version" type="xs:string">
            <xs:annotation>
              <xs:documentation>Версия продукта-сервиса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="stackTrace">
            <xs:annotation>
              <xs:documentation>Стек вызова (последние 10 записей)</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="10" name="stackTraceRecord">
                  <xs:annotation>
                    <xs:documentation>Запись StackTrace</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="declaringClass" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование класса, содержащего метод</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="methodName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование метода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="fileName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование файла</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="lineNumber" type="xs:int">
                        <xs:annotation>
                          <xs:documentation>Номер строки кода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="UNEXPECTED" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="BaseFault">
    <xs:annotation>
      <xs:documentation>Описание базового типа описания ошибки</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--security exceptions-->
  <xs:complexType name="UnauthorizedRequestSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="requiredRights">
        <xs:annotation>
          <xs:documentation>Перечень идентификаторов недостающих Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Идентификатор Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="UNAUTHORIZED_REQUEST_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="OtherSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="message" type="Message">
        <xs:annotation>
          <xs:documentation>Сообщение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="OTHER_SECURITY_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="SecurityExceptionTypes">
    <xs:annotation>
      <xs:documentation>Типы исключений безопасности</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNAUTHORIZED_REQUEST_EXCEPTION"/>
      <xs:enumeration value="OTHER_SECURITY_EXCEPTION"/>
    </xs:restriction>
  </xs:simpleType>
  <!--components-->
  <xs:simpleType name="FaultTypes">
    <xs:annotation>
      <xs:documentation>Тип ошибки</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="SECURITY">
        <xs:annotation>
          <xs:documentation>Непредвиденная ошибка приложения</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BUSINESS">
        <xs:annotation>
          <xs:documentation>Бизнес ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UNEXPECTED">
        <xs:annotation>
          <xs:documentation>Ошибка безопасности</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfVD2kF6sZXjcQJJ1ICudKQvUcLzLrxnR6eB1iBVf_hs9m.ZCDetDRV4DIesEDk_xQES6ZlxUAymHvEA4X</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/hospitalization/hospitalService/v2/types/" version="Версия 1.4.3.128" xmlns:core="http://emias.mos.ru/hospitalization/core/v2/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://emias.mos.ru/hospitalization/core/v2/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfVD2kF6sZXjcQJJ1ICudKQv4cLiesxCc4Uwt0O.EIWYW92Xo6qRmYgGvsQQ--"/>
  <xs:element name="getHospitalizationInfoByPatientRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода getHospitalizationInfoByPatient</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="patientId" type="xs:long"/>
        <xs:element name="options" type="core:Options"/>
        <xs:element maxOccurs="1" minOccurs="0" name="datePeriod" type="core:DatePeriod"/>
        <xs:element maxOccurs="1" minOccurs="0" name="pagingOptions" type="core:PagingSortingOptions"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getHospitalizationInfoByPatientResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="pagingResults" type="core:PagingResultsImpl">
          <xs:annotation>
            <xs:documentation>Параметры пагинации</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="1" minOccurs="0" name="patientId" type="xs:long">
          <xs:annotation>
            <xs:documentation>Идентификатор Пациента</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="1" minOccurs="0" name="hospitalizationSign" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Признак госпитализации пациента</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="1" minOccurs="0" name="deathSign" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Признак смерти пациента</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="hospitalizations" type="core:Hospitalization">
          <xs:annotation>
            <xs:documentation>Госпитализации</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfVD2kF6sZXjcQJJ1ICudKQv4cLiesxCc4Uwt0O.EIWYW92Xo6qRmYgGvsQQ--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/hospitalization/core/v2/" xmlns="http://emias.mos.ru/hospitalization/core/v2/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfEnz4Aq8EXihXPZNOBqZcH_lbwVjIfo.5RvA5BOhllxkY"/>
  <xs:complexType name="Hospitalization">
    <xs:annotation>
      <xs:documentation>Сущность Госпитализации</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="docId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Идентификатор документа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hospitalDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время госпитализации</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="admissionsDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время поступления в стационар</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MOName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование стационарной МО</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MOId" type="xs:long">
        <xs:annotation>
          <xs:documentation>Идентификатор МО (МО, в которой осуществлялось лечение)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="departmentName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование стационарного отделения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="diagnosis" type="Diagnosis">
        <xs:annotation>
          <xs:documentation>Диагноз при поступлении (развернутый клинический диагноз)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hospitalizationStatus" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Статус случая госпитализации</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="epicrisis" nillable="true" type="HospitalizationEpicris">
        <xs:annotation>
          <xs:documentation>Выписные эпикризы</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="deathFact" nillable="true" type="HospitalizationDeathFact">
        <xs:annotation>
          <xs:documentation>Выписные эпикризы</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="HospitalizationDeathFact">
    <xs:sequence>
      <xs:element name="docId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Идентификатор документа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="deathDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата смерти пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="HospitalizationEpicris">
    <xs:sequence>
      <xs:element name="docId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Идентификатор документа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hospitalAdmissionsDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Идентификатор документа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="extractDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Идентификатор документа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="isConfidential" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Идентификатор документа</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Diagnosis">
    <xs:sequence>
      <xs:element name="diagnosisTypeCode" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код типа диагноза</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MKB10Code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код диагноза по МКБ-10</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MKB10Name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование диагноза по МКБ-10</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="detailedDiagnosis" type="xs:string">
        <xs:annotation>
          <xs:documentation>Развернутый клинический диагноз</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PagingSortingOptions">
    <xs:complexContent>
      <xs:extension base="PagingOptions">
        <xs:sequence>
          <xs:element minOccurs="0" name="sortingOptions" type="SortingOptions">
            <xs:annotation>
              <xs:documentation>Параметры сортировки</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SortingOptions">
    <xs:annotation>
      <xs:documentation>Параметры сортировки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="3" minOccurs="1" name="sortOrder" type="SortOrder">
        <xs:annotation>
          <xs:documentation>Условия сортировки (используются в соответствии с переданной
                        последовательностью)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SortOrder">
    <xs:annotation>
      <xs:documentation>Условия сортировки
                (используются в соответствии с переданной последовательностью)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="1" minOccurs="1" name="attributeName" type="SortVariant">
        <xs:annotation>
          <xs:documentation>Наименование поля, по которому должна быть произведена сортировка.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="descending" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Направление сортировки.
                        Возможные значения:
                        true - сортировка по убыванию;
                        false - сортировка по возрастанию
                        По умолчанию устанавливается значение true.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="SortVariant">
    <xs:restriction base="xs:string">
      <xs:enumeration value="hospitalizationMOName"/>
      <xs:enumeration value="hospitalizationsdiagnosisTypeCode"/>
      <xs:enumeration value="hospitalizationhospitalDate"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfEnz4Aq8EXihXPZNOBqZcH_lbwVjIfo.5RvA5BOhllxkY</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfEnz4Aq8EXihXLYVPF.1JQuUAOMlNthnEiDjF8Ke3UJvOzdI-"/>
  <!--references-->
  <xs:element name="medicalOrganizationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинского учреждения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--async operation status-->
  <xs:element name="operationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор операции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OperationExecutionStatus">
    <xs:annotation>
      <xs:documentation>Статус выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="isCompleted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак окончания выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="completenessProgress" type="OperationCompletenessBase">
        <xs:annotation>
          <xs:documentation>Сведения о текущем статусе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hasSucceded" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак успешности выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
        <xs:annotation>
          <xs:documentation>Коллекция сообщений, порожденных в ходе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор операции</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessPercentage">
    <xs:annotation>
      <xs:documentation>Описание текущего статуса выполнения операции в процентах (0%-100%)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OperationCompletenessBase">
        <xs:sequence>
          <xs:element name="completenessStatus">
            <xs:annotation>
              <xs:documentation>Статус (0%-100%)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:unsignedByte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания текущего статуса выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--calling methods' options-->
  <xs:element name="options" type="Options">
    <xs:annotation>
      <xs:documentation>Параметры вызова метода</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Options">
    <xs:annotation>
      <xs:documentation>Набор именованных значений</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Именованное значение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--pagination-->
  <xs:element name="pagingOptions" type="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="PagingResults">
    <xs:annotation>
      <xs:documentation>Список с пагинацией</xs:documentation>
    </xs:annotation>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageTotal" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество страниц</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morePagesAvailable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Флаг доступности других страниц с результатами для "постраничного листания" (true -
                    если доступны еще страницы; false - иначе)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="totalItemsCount" type="xs:long" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество элементов в выборке</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PagingResultsImpl">
    <xs:complexContent>
      <xs:extension base="PagingResults"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--base types-->
  <xs:complexType name="TimeInterval">
    <xs:annotation>
      <xs:documentation>Временной период (время)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время начала интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время окончания интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService</con:endpoint></con:endpoints><con:operation id="7895c131-2dbf-4631-a669-8277d54fd164" isOneWay="false" action="getHospitalizationInfoByPatient" name="getHospitalizationInfoByPatient" bindingOperationName="getHospitalizationInfoByPatient" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0dc3d2a5-3588-462a-905b-6b5aff62ceaa" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">\r
   <soap:Header>\r
      <ns3:userContext xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns2="http://emias.mos.ru/hospitalization/core/v2/" xmlns="http://emias.mos.ru/hospitalization/hospitalService/v2/types/">\r
         <ns3:systemName>EIM</ns3:systemName>\r
         <ns3:userName>10d59080-73a2-4587-9931-c18fb90831b2</ns3:userName>\r
         <ns3:userRoleId>7064</ns3:userRoleId>\r
         <ns3:isUserRoleSystemWide>true</ns3:isUserRoleSystemWide>\r
         <ns3:userRights>\r
            <ns3:userRightId>570001</ns3:userRightId>\r
         </ns3:userRights>\r
         <ns3:jobExecutionId>0</ns3:jobExecutionId>\r
      </ns3:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <getHospitalizationInfoByPatientRequest xmlns="http://emias.mos.ru/hospitalization/hospitalService/v2/types/" xmlns:ns2="http://emias.mos.ru/hospitalization/core/v2/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/">\r
         <patientId>30202501</patientId>\r
         <options>\r
            <ns2:entry key="hospitalizationForLK">true</ns2:entry>\r
            <ns2:entry key="restrictionsHemodialysis">true</ns2:entry>\r
            <ns2:entry key="actualHospital">true</ns2:entry>\r
         </options>\r
         <pagingOptions pageNumber="0" pageSize="20">\r
            <ns2:sortingOptions>\r
               <ns2:sortOrder>\r
                  <ns2:attributeName>hospitalizationhospitalDate</ns2:attributeName>\r
                  <ns2:descending>true</ns2:descending>\r
               </ns2:sortOrder>\r
            </ns2:sortingOptions>\r
         </pagingOptions>\r
      </getHospitalizationInfoByPatientRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/hospitalization/hospitalService/v2/hospitalServicePortType/getHospitalizationInfoByPatientRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="cb78a655-5330-4950-88db-8c88a0783161" name="Работающий etHosp"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-4ba4f99e-bdcd-4398-8ae7-635f72546a29" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns3:userContext xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns2="http://emias.mos.ru/hospitalization/core/v2/" xmlns="http://emias.mos.ru/hospitalization/hospitalService/v2/types/">\r
         <ns3:systemName>EIM</ns3:systemName>\r
         <ns3:userName>10d59080-73a2-4587-9931-c18fb90831b2</ns3:userName>\r
         <ns3:userRoleId>7064</ns3:userRoleId>\r
         <ns3:isUserRoleSystemWide>true</ns3:isUserRoleSystemWide>\r
         <ns3:userRights>\r
            <ns3:userRightId>570001</ns3:userRightId>\r
         </ns3:userRights>\r
         <ns3:jobExecutionId>0</ns3:jobExecutionId>\r
      </ns3:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <getHospitalizationInfoByPatientRequest xmlns="http://emias.mos.ru/hospitalization/hospitalService/v2/types/" xmlns:ns2="http://emias.mos.ru/hospitalization/core/v2/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/">\r
         <patientId>10166510</patientId>\r
         <options>\r
            <ns2:entry key="hospitalizationForLK">true</ns2:entry>\r
            <ns2:entry key="restrictionsHemodialysis">true</ns2:entry>\r
         </options>\r
         <pagingOptions pageNumber="0" pageSize="50">\r
            <ns2:sortingOptions>\r
               <ns2:sortOrder>\r
                  <ns2:attributeName>hospitalizationhospitalDate</ns2:attributeName>\r
                  <ns2:descending>true</ns2:descending>\r
               </ns2:sortOrder>\r
            </ns2:sortingOptions>\r
         </pagingOptions>\r
      </getHospitalizationInfoByPatientRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/hospitalization/hospitalService/v2/hospitalServicePortType/getHospitalizationInfoByPatientRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="1b65bd2f-740d-4648-bb74-996aa24c1dab" wsaVersion="NONE" name="ГИБДД" type="wsdl" bindingName="{http://emias2.gov.ru/emias/appointment/v1/soap/}EmiasGibddAppointmentBinding" soapVersion="1_2" anonymous="optional" definition="http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService?wsdl"><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService?wsdl</con:url><con:content><![CDATA[<definitions name="EmiasGibddAppointment" targetNamespace="http://emias2.gov.ru/emias/appointment/v1/soap/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:anw="http://emias2.gov.ru/emias/appointment/v1/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://emias2.gov.ru/emias/appointment/v1/soap/">
  <documentation>version="1.0"</documentation>
  <import location="http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService?wsdl=AAAADHAjUCM4P2cuZURELj5RSlgzK2dAjd_SqktYBl5MQzZneqwqv6LRr8dwVApKYKYfYAxtOjSjDGmxAeZ_phaf5bE179GWAye7P4cbluUFG8_.1TEhKq7sXewYC90.s01CgI12df8Vf05Vk12bRmQBJW8jZ_CaSXGh6B5yYzPjskuepI3OlhkVE7gantaTFTyd2dUh6I_R6g--" namespace="http://emias2.gov.ru/emias/appointment/v1/"></import>
  <types></types>
  <binding name="EmiasGibddAppointmentBinding" type="anw:EmiasGibddAppointmentService">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="GetAvailableResourceScheduleInfo">
      <soap12:operation soapAction="GetAvailableResourceScheduleInfo"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
      <fault name="AppointmentCodeError">
        <soap12:fault name="AppointmentCodeError"/>
      </fault>
    </operation>
    <operation name="CreateAppointment">
      <soap12:operation soapAction="CreateAppointment"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
      <fault name="AppointmentCodeError">
        <soap12:fault name="AppointmentCodeError"/>
      </fault>
    </operation>
    <operation name="GetAppointmentReceptionsByPatient">
      <soap12:operation soapAction="GetAppointmentReceptionsByPatient"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
      <fault name="AppointmentCodeError">
        <soap12:fault name="AppointmentCodeError"/>
      </fault>
    </operation>
    <operation name="CancelAppointment">
      <soap12:operation soapAction="CancelAppointment"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
      <fault name="AppointmentCodeError">
        <soap12:fault name="AppointmentCodeError"/>
      </fault>
    </operation>
    <operation name="TransferAppointment">
      <soap12:operation soapAction="TransferAppointment"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
      <fault name="AppointmentCodeError">
        <soap12:fault name="AppointmentCodeError"/>
      </fault>
    </operation>
    <operation name="GetReferenceTypes">
      <soap12:operation soapAction="GetReferenceTypes"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
      <fault name="AppointmentCodeError">
        <soap12:fault name="AppointmentCodeError"/>
      </fault>
    </operation>
    <operation name="GetLpuList">
      <soap12:operation soapAction="GetLpuList"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
      <fault name="AppointmentCodeError">
        <soap12:fault name="AppointmentCodeError"/>
      </fault>
    </operation>
    <operation name="GetLpuList2">
      <soap12:operation soapAction="GetLpuList2"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
      <fault name="AppointmentCodeError">
        <soap12:fault name="AppointmentCodeError"/>
      </fault>
    </operation>
  </binding>
  <service name="EmiasGibddAppointment">
    <port binding="tns:EmiasGibddAppointmentBinding" name="EmiasGibddAppointmentBinding">
      <soap12:address location="http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService?wsdl=AAAADHAjUCM4P2cuZURELj5RSlgzK2dAjd_SqktYBl5MQzZneqwqv6LRr8dwVApKYKYfYAxtOjSjDGmxAeZ_phaf5bE179GWAye7P4cbluUFG8_.1TEhKq7sXewYC90.s01CgI12df8Vf05Vk12bRmQBJW8jZ_CaSXGh6B5yYzPjskuepI3OlhkVE7gantaTFTyd2dUh6I_R6g--</con:url><con:content><![CDATA[<definitions name="EmiasGibddAppointment" targetNamespace="http://emias2.gov.ru/emias/appointment/v1/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:base="http://emias2.gov.ru/emias/gibdd/v1/types/" xmlns:tns="http://emias2.gov.ru/emias/appointment/v1/" xmlns:uni-fault="http://emias2.gov.ru/universal/v1/types/exceptions/">
  <documentation>version="1.0"</documentation>
  <types>
    <schema targetNamespace="http://emias2.gov.ru/emias/appointment/v1/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ttns="http://emias2.gov.ru/emias/appointment/v1/types/">
      <import namespace="http://emias2.gov.ru/emias/appointment/v1/types/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELj5RSlgzK2dAjd_SqktYBl5MQzZneqwqv6LRr8dwVApKYKYfYAxtOjSjDGmxAeZ_phaf5bE179GWAye7P4cbluUFG8_.1TEhKq7sXewYC90.s01CgI12df8Vf05Vk12bRmQBJW8jaPCaGC2w6AF0ZCn6ukCE_dfAlRgK84SdIA51nxaRZhXxP7XHJg.pbjw-"/>
      <import namespace="http://emias2.gov.ru/emias/gibdd/v1/types/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELj5RSlgzK2dAjd_SqktYBl5MQzZneqwqv6LRr8dwVApKYKYfYAxtOjSjDGmxAeZ_phaf5bE179GWAye7P4cbluUFG8_.1TEhKq7sXewYC90.s01CgI12df8Vf05Vk12bRmQBJW8jaPCaGCup.gp5Jynur0uD_tvKgdKC8CtHhryu4yGJ_YKADYg-"/>
      <import namespace="http://emias2.gov.ru/universal/v1/types/exceptions/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELj5RSlgzK2dAjd_SqktYBl5MQzZneqwqv6LRr8dwVApKYKYfYAxtOjSjDGmxAeZ_phaf5bE179GWAye7P4cbluUFG8_.1TEhKq7sXewYC90.s01CgI12df8Vf05Vk12bRmQBJW8jaPCaGCqh7QJpeXPvrEpoDJ.q7_f05j3gqY9nDBNh"/>
      <element name="GetAvailableResourceScheduleInfoRequest">
        <complexType>
          <sequence>
            <element name="lpuId" type="base:LpuKey"/>
            <element name="referenceId" type="long"/>
            <element name="startDate" type="dateTime"/>
            <element name="endDate" type="dateTime"/>
            <element default="false" minOccurs="0" name="actual" type="boolean"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetAvailableResourceScheduleInfoResponse">
        <complexType>
          <sequence>
            <element maxOccurs="unbounded" minOccurs="0" name="arScheduleContainers" type="ttns:ARScheduleContainer"/>
            <element maxOccurs="unbounded" minOccurs="0" name="slot" type="base:Slot"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetAppointmentReceptionsByPatientRequest">
        <complexType>
          <sequence>
            <element default="false" minOccurs="0" name="upcoming" type="boolean"/>
            <element name="oms" type="string"/>
            <element name="birthDate" type="date"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetAppointmentReceptionsByPatientResponse">
        <complexType>
          <sequence>
            <element maxOccurs="unbounded" minOccurs="0" name="appointments" type="ttns:Appointment"/>
          </sequence>
        </complexType>
      </element>
      <element name="CancelAppointmentRequest">
        <complexType>
          <sequence>
            <element name="appointmentId" type="long"/>
            <element minOccurs="0" name="cancelReason" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CancelAppointmentResponse">
        <complexType>
          <sequence>
            <element name="code" type="string"/>
            <element name="messageText" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetReferenceTypesRequest">
        <complexType>
          <sequence></sequence>
        </complexType>
      </element>
      <element name="GetReferenceTypesResponse">
        <complexType>
          <sequence>
            <element maxOccurs="unbounded" minOccurs="0" name="referenceType" type="ttns:ReferenceType"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetLpuListRequest">
        <complexType>
          <sequence>
            <element minOccurs="0" name="lpuId" type="base:LpuKey"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetLpuListResponse">
        <complexType>
          <sequence>
            <element maxOccurs="unbounded" minOccurs="0" name="lpu" type="base:Lpu"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetLpuList2Request">
        <complexType>
          <sequence>
            <element minOccurs="0" name="lpuId" type="base:LpuKey"/>
          </sequence>
        </complexType>
      </element>
      <element name="GetLpuList2Response">
        <complexType>
          <sequence>
            <element maxOccurs="unbounded" minOccurs="0" name="lpu" type="ttns:Lpu2"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateAppointmentRequest">
        <complexType>
          <sequence>
            <element name="oms" type="string"/>
            <element name="birthday" type="date"/>
            <element name="availableResourceId" type="base:AvailableResourceKey"/>
            <element name="startDate" type="dateTime"/>
            <element name="referenceId" type="long"/>
            <element minOccurs="0" name="comment" type="string"/>
            <element minOccurs="0" name="recChannel" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="CreateAppointmentResponse">
        <complexType>
          <sequence>
            <element name="id" type="long"/>
            <element minOccurs="0" name="number" type="string"/>
            <element minOccurs="0" name="fio" type="string"/>
            <element minOccurs="0" name="roomCode" type="string"/>
            <element minOccurs="0" name="roomTitle" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="TransferAppointmentRequest">
        <complexType>
          <sequence>
            <element name="appointmentId" type="long"/>
            <element minOccurs="0" name="transferReason" type="string"/>
            <element name="availableResourceId" type="base:AvailableResourceKey"/>
            <element name="startDate" type="dateTime"/>
            <!--<element name="referenceId" type="long"/>-->
            <element minOccurs="0" name="comment" type="string"/>
            <element minOccurs="0" name="recChannel" type="string"/>
          </sequence>
        </complexType>
      </element>
    </schema>
  </types>
  <message name="GetAvailableResourceScheduleInfo">
    <part element="tns:GetAvailableResourceScheduleInfoRequest" name="body"></part>
  </message>
  <message name="GetLpuList">
    <part element="tns:GetLpuListRequest" name="body"></part>
  </message>
  <message name="AvailableResourceScheduleInfo">
    <part element="tns:GetAvailableResourceScheduleInfoResponse" name="body"></part>
  </message>
  <message name="GetAppointmentReceptionsByPatient">
    <part element="tns:GetAppointmentReceptionsByPatientRequest" name="body"></part>
  </message>
  <message name="CreateAppointmentResponse">
    <part element="tns:CreateAppointmentResponse" name="body"></part>
  </message>
  <message name="CancelAppointment">
    <part element="tns:CancelAppointmentRequest" name="body"></part>
  </message>
  <message name="LpuList">
    <part element="tns:GetLpuListResponse" name="body"></part>
  </message>
  <message name="GetReferenceTypes">
    <part element="tns:GetReferenceTypesRequest" name="body"></part>
  </message>
  <message name="ReferenceTypes">
    <part element="tns:GetReferenceTypesResponse" name="body"></part>
  </message>
  <message name="AppointmentCodeError">
    <part element="uni-fault:GibddCodeErrorFaultInfo" name="dody"></part>
  </message>
  <message name="AppointmentReceptionsByPatient">
    <part element="tns:GetAppointmentReceptionsByPatientResponse" name="body"></part>
  </message>
  <message name="CreateAppointment">
    <part element="tns:CreateAppointmentRequest" name="body"></part>
  </message>
  <message name="LpuList2">
    <part element="tns:GetLpuList2Response" name="body"></part>
  </message>
  <message name="GetLpuList2">
    <part element="tns:GetLpuList2Request" name="body"></part>
  </message>
  <message name="TransferAppointmentResponse">
    <part element="tns:CreateAppointmentResponse" name="body"></part>
  </message>
  <message name="TransferAppointment">
    <part element="tns:TransferAppointmentRequest" name="body"></part>
  </message>
  <message name="ObjectNotFoundException">
    <documentation>Объект/сущность не были найдены</documentation>
    <part element="uni-fault:objectNotFoundFaultInfo" name="body"></part>
  </message>
  <message name="CancelAppointmentResponse">
    <part element="tns:CancelAppointmentResponse" name="body"></part>
  </message>
  <portType name="EmiasGibddAppointmentService">
    <operation name="CreateAppointment">
      <input message="tns:CreateAppointment"></input>
      <output message="tns:CreateAppointmentResponse"></output>
      <fault message="tns:AppointmentCodeError" name="AppointmentCodeError"></fault>
    </operation>
    <operation name="GetAvailableResourceScheduleInfo">
      <input message="tns:GetAvailableResourceScheduleInfo"></input>
      <output message="tns:AvailableResourceScheduleInfo"></output>
      <fault message="tns:AppointmentCodeError" name="AppointmentCodeError"></fault>
    </operation>
    <operation name="GetAppointmentReceptionsByPatient">
      <input message="tns:GetAppointmentReceptionsByPatient"></input>
      <output message="tns:AppointmentReceptionsByPatient"></output>
      <fault message="tns:AppointmentCodeError" name="AppointmentCodeError"></fault>
    </operation>
    <operation name="CancelAppointment">
      <input message="tns:CancelAppointment"></input>
      <output message="tns:CancelAppointmentResponse"></output>
      <fault message="tns:AppointmentCodeError" name="AppointmentCodeError"></fault>
    </operation>
    <operation name="TransferAppointment">
      <input message="tns:TransferAppointment"></input>
      <output message="tns:TransferAppointmentResponse"></output>
      <fault message="tns:AppointmentCodeError" name="AppointmentCodeError"></fault>
    </operation>
    <operation name="GetReferenceTypes">
      <input message="tns:GetReferenceTypes"></input>
      <output message="tns:ReferenceTypes"></output>
      <fault message="tns:AppointmentCodeError" name="AppointmentCodeError"></fault>
    </operation>
    <operation name="GetLpuList">
      <input message="tns:GetLpuList"></input>
      <output message="tns:LpuList"></output>
      <fault message="tns:AppointmentCodeError" name="AppointmentCodeError"></fault>
    </operation>
    <operation name="GetLpuList2">
      <input message="tns:GetLpuList2"></input>
      <output message="tns:LpuList2"></output>
      <fault message="tns:AppointmentCodeError" name="AppointmentCodeError"></fault>
    </operation>
  </portType>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELj5RSlgzK2dAjd_SqktYBl5MQzZneqwqv6LRr8dwVApKYKYfYAxtOjSjDGmxAeZ_phaf5bE179GWAye7P4cbluUFG8_.1TEhKq7sXewYC90.s01CgI12df8Vf05Vk12bRmQBJW8jaPCaGC2w6AF0ZCn6ukCE_dfAlRgK84SdIA51nxaRZhXxP7XHJg.pbjw-</con:url><con:content><![CDATA[<schema elementFormDefault="qualified" targetNamespace="http://emias2.gov.ru/emias/appointment/v1/types/" version="1.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:base="http://emias2.gov.ru/emias/gibdd/v1/types/" xmlns:tns="http://emias2.gov.ru/emias/appointment/v1/types/">
  <import namespace="http://emias2.gov.ru/emias/gibdd/v1/types/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELj5RSlgzK2dAjd_SqktYBl5MQzZneqwqv6LRr8dwVApKYKYfYAxtOjSjDGmxAeZ_phaf5bE179GWAye7P4cbluUFG8_.1TEhKq7sXewYC90.s01CgI12df8Vf05Vk12bRmQBJW8jaPCaGCup.gp5Jynur0uD_tvKgdKC8CtHhryu4yGJ_YKADYg-"/>
  <simpleType name="NumberId">
    <restriction base="long"/>
  </simpleType>
  <complexType name="ARScheduleContainer">
    <annotation>
      <documentation>Контейнер ИД ДР и слотов расписания</documentation>
    </annotation>
    <sequence>
      <element name="arId" type="long"/>
      <element maxOccurs="unbounded" name="scheduleContainer">
        <complexType>
          <sequence>
            <element name="scheduleId" type="base:AvailableResourceScheduleKey"/>
            <element maxOccurs="unbounded" minOccurs="0" name="slot" type="base:Slot">
              <annotation>
                <documentation>Слоты расписания ДР для записи</documentation>
              </annotation>
            </element>
          </sequence>
        </complexType>
      </element>
    </sequence>
  </complexType>
  <complexType name="Patient">
    <annotation>
      <documentation>Пациент</documentation>
    </annotation>
    <sequence>
      <element name="birthday" type="dateTime"/>
      <element name="oms" type="string"/>
      <element minOccurs="0" name="mobilePhone" type="string"/>
      <element minOccurs="0" name="email" type="string"/>
    </sequence>
  </complexType>
  <complexType name="ReferenceType">
    <annotation>
      <documentation>Вид справки</documentation>
    </annotation>
    <sequence>
      <element name="referenceTypeId" type="long"/>
      <element name="referenceTypeName" type="string"/>
    </sequence>
  </complexType>
  <complexType name="Appointment">
    <annotation>
      <documentation>Запись</documentation>
    </annotation>
    <sequence>
      <element name="id" type="long"/>
      <element name="patient" type="tns:Patient"/>
      <element minOccurs="0" name="appointmentNum" type="string"/>
      <element name="startDate" type="dateTime"/>
      <element name="endDate" type="dateTime"/>
      <element name="actual" type="boolean"/>
      <element minOccurs="0" name="comments" type="string"/>
      <element name="availableResource">
        <complexType>
          <sequence>
            <element name="availableResourceId" type="long"/>
            <element name="availableResourceTitle" type="string"/>
            <element name="roomCode" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="lpu" type="base:LpuShort"/>
      <element name="referenceType" type="tns:ReferenceType"/>
      <element minOccurs="0" name="cancelType" type="string"/>
      <element name="createDate" type="dateTime"/>
      <element minOccurs="0" name="editDate" type="dateTime"/>
    </sequence>
  </complexType>
  <complexType name="Lpu2">
    <annotation>
      <documentation>ЛПУ</documentation>
    </annotation>
    <sequence>
      <element name="id" type="base:LpuKey"/>
      <element name="name" type="string"/>
      <element name="shortName" type="string"/>
      <element name="moId" type="base:LpuKey"/>
      <element name="lpuAddress" type="string"/>
      <element name="phone" type="string"/>
      <element name="website" type="string"/>
      <element name="email" type="string"/>
      <element name="lpuSchedule" type="base:LpuScheduleShort"/>
    </sequence>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELj5RSlgzK2dAjd_SqktYBl5MQzZneqwqv6LRr8dwVApKYKYfYAxtOjSjDGmxAeZ_phaf5bE179GWAye7P4cbluUFG8_.1TEhKq7sXewYC90.s01CgI12df8Vf05Vk12bRmQBJW8jaPCaGCup.gp5Jynur0uD_tvKgdKC8CtHhryu4yGJ_YKADYg-</con:url><con:content><![CDATA[<schema elementFormDefault="qualified" targetNamespace="http://emias2.gov.ru/emias/gibdd/v1/types/" version="1.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://emias2.gov.ru/emias/gibdd/v1/types/">
  <simpleType name="NumberId">
    <restriction base="long"/>
  </simpleType>
  <simpleType name="NsiCodeType">
    <annotation>
      <documentation>Тип, определяющий код записи НСИ</documentation>
    </annotation>
    <restriction base="string"/>
  </simpleType>
  <simpleType name="NsiName">
    <annotation>
      <documentation>Тип, описывающий значение записи НСИ</documentation>
    </annotation>
    <restriction base="string"/>
  </simpleType>
  <complexType name="Speciality">
    <annotation>
      <documentation>МО</documentation>
    </annotation>
    <sequence>
      <element name="nsiCodeType" type="tns:NsiCodeType"/>
      <element name="nsiName" type="tns:NsiName"/>
    </sequence>
  </complexType>
  <simpleType name="LpuKey">
    <annotation>
      <documentation>ИД МУ</documentation>
    </annotation>
    <restriction base="tns:NumberId"/>
  </simpleType>
  <simpleType name="QuotaRuleKey">
    <annotation>
      <documentation>ИД Квоты</documentation>
    </annotation>
    <restriction base="tns:NumberId"/>
  </simpleType>
  <complexType name="Lpu">
    <annotation>
      <documentation>МО</documentation>
    </annotation>
    <sequence>
      <element name="id" type="tns:LpuKey"/>
      <element name="name" type="string"/>
      <element name="shortName" type="string"/>
      <element name="moId" type="tns:LpuKey"/>
      <element name="lpuAddress" type="string"/>
      <element name="lpuSchedule" type="tns:LpuScheduleShort"/>
    </sequence>
  </complexType>
  <complexType name="LpuShort">
    <annotation>
      <documentation>Краткое МО</documentation>
    </annotation>
    <sequence>
      <element name="id" type="tns:LpuKey"/>
      <element name="name" type="string"/>
      <element name="shortName" type="string"/>
      <element name="lpuAddress" type="string"/>
      <element name="moId" type="tns:LpuKey"/>
    </sequence>
  </complexType>
  <complexType name="LpuSchedule">
    <annotation>
      <documentation>Расписание ЛПУ</documentation>
    </annotation>
    <sequence>
      <element name="LpuId" type="tns:LpuKey"/>
      <element name="begin" type="tns:LpuScheduleStartTime"/>
      <element name="end" type="tns:LpuScheduleEndTime"/>
      <element name="arSchedules" type="tns:ScheduleKey"/>
    </sequence>
  </complexType>
  <complexType name="LpuScheduleShort">
    <annotation>
      <documentation>Расписание ЛПУ</documentation>
    </annotation>
    <sequence>
      <element name="LpuScheduleId" type="tns:LpuKey"/>
      <element name="begin" type="dateTime"/>
      <element name="end" type="dateTime"/>
    </sequence>
  </complexType>
  <complexType name="LpuScheduleStartTime">
    <annotation>
      <documentation>Дата начала действия</documentation>
    </annotation>
    <sequence>
      <element name="startTime" type="date"/>
    </sequence>
  </complexType>
  <complexType name="LpuScheduleEndTime">
    <annotation>
      <documentation>Дата окончания действия</documentation>
    </annotation>
    <sequence>
      <element name="endTime" type="date"/>
    </sequence>
  </complexType>
  <complexType name="DayOfWeekSchedule">
    <annotation>
      <documentation>Расписание по дням недели</documentation>
    </annotation>
    <sequence>
      <element name="dayOfWeek" type="tns:DayOfWeek"/>
      <element name="startTime" type="tns:ScheduleTime"/>
      <element name="endTime" type="tns:ScheduleTime"/>
    </sequence>
  </complexType>
  <simpleType name="DayOfWeek">
    <annotation>
      <documentation>Номер дня недели</documentation>
    </annotation>
    <restriction base="tns:NumberId">
      <minInclusive value="1"/>
      <maxInclusive value="7"/>
    </restriction>
  </simpleType>
  <simpleType name="ScheduleTime">
    <annotation>
      <documentation>Время из расписание</documentation>
    </annotation>
    <restriction base="time">
      <pattern value="([0-1][0-9]|[2][0-3]):[0-5][0-9]:00"/>
    </restriction>
  </simpleType>
  <simpleType name="ScheduleKey">
    <annotation>
      <documentation>ИД расписания</documentation>
    </annotation>
    <restriction base="tns:NumberId"/>
  </simpleType>
  <simpleType name="AvailableResourceKey">
    <annotation>
      <documentation>Идентификатор доступного ресурса</documentation>
    </annotation>
    <restriction base="tns:NumberId"/>
  </simpleType>
  <simpleType name="GridSize">
    <annotation>
      <documentation>Среднее время приёма</documentation>
    </annotation>
    <restriction base="unsignedInt"/>
  </simpleType>
  <simpleType name="Horizon">
    <annotation>
      <documentation>Горизонт записи в днях</documentation>
    </annotation>
    <restriction base="unsignedInt"/>
  </simpleType>
  <simpleType name="AvailableResourceScheduleKey">
    <annotation>
      <documentation>ИД расписания ДР</documentation>
    </annotation>
    <restriction base="tns:NumberId"/>
  </simpleType>
  <complexType name="AvailableResourceSchedule">
    <annotation>
      <documentation>Расписание ДР</documentation>
    </annotation>
    <sequence>
      <element name="id" type="tns:AvailableResourceScheduleKey"/>
      <element name="availableResource" type="tns:AvailableResource"/>
      <element name="gridSize" type="tns:GridSize"/>
      <element name="horizon" type="tns:Horizon"/>
      <element maxOccurs="unbounded" minOccurs="0" name="quotaRule" type="tns:QuotaRule"/>
    </sequence>
  </complexType>
  <complexType name="AvailableResource">
    <sequence>
      <element name="id" type="tns:AvailableResourceKey"/>
      <element name="name" type="tns:AvailableResourceName"/>
      <element name="selfAppointment" type="boolean"/>
      <element maxOccurs="unbounded" name="doctors" type="tns:MedicalEmployeeAvailableResource"/>
      <element name="roomCode" type="string"/>
    </sequence>
  </complexType>
  <simpleType name="AvailableResourceName">
    <annotation>
      <documentation>Имя доступного ресурса</documentation>
    </annotation>
    <restriction base="string"/>
  </simpleType>
  <complexType name="MedicalEmployee">
    <annotation>
      <documentation>Исполнение должности сотрудника</documentation>
    </annotation>
    <sequence>
      <element name="id" type="tns:NumberId"/>
      <element name="lastName" type="string"/>
      <element name="firstName" type="string"/>
      <element minOccurs="0" name="secondName" type="string"/>
    </sequence>
  </complexType>
  <complexType name="MedicalEmployeeAvailableResource">
    <annotation>
      <documentation>Исполнение должности сотрудника в ДР</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:MedicalEmployee">
        <sequence>
          <!--<element name="isMain" type="boolean"/>
                    <element name="isRelevance" type="boolean"/>-->
          <element name="speciality" type="tns:Speciality"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="Rule">
    <annotation>
      <documentation>Правило рабочего времени, Правило установки квот, Правило отмены записи</documentation>
    </annotation>
    <sequence>
      <element name="id" type="tns:NumberId"/>
      <element name="begin" type="date"/>
      <element name="end" type="date"/>
      <element minOccurs="0" name="excludedDates" type="tns:excludedDates"/>
      <element name="lastEditDate" type="date"/>
      <element name="datesTemplate" type="tns:DatesTemplate"/>
      <element maxOccurs="unbounded" minOccurs="0" name="ruleCapacity" type="tns:RuleCapacity"/>
      <element maxOccurs="unbounded" name="quotaTypeId" type="tns:QuotaTypeKey"/>
      <element maxOccurs="unbounded" name="referenceTypeId" type="tns:ReferenceTypeKey"/>
      <element name="arId" type="tns:NumberId"/>
    </sequence>
  </complexType>
  <complexType name="QuotaRule">
    <annotation>
      <documentation>Правила</documentation>
    </annotation>
    <sequence>
      <element name="id" type="tns:QuotaRuleKey"/>
      <element name="startTime" type="time"/>
      <element name="endTime" type="time"/>
      <element name="startDate" type="date"/>
      <element name="endDate" type="date"/>
      <element name="template" type="tns:DatesTemplate"/>
      <element minOccurs="0" name="referenceType" type="long"/>
      <element name="quotaTypeCode" type="long"/>
      <element name="selectedDatesContainer" type="tns:SelectedDates"/>
    </sequence>
  </complexType>
  <complexType name="SelectedDates">
    <annotation>
      <documentation>Выбранные даты</documentation>
    </annotation>
    <sequence>
      <element maxOccurs="unbounded" name="dates" type="date"/>
    </sequence>
  </complexType>
  <complexType name="excludedDates">
    <annotation>
      <documentation>Исключаемые Исключаемые даты</documentation>
    </annotation>
    <sequence>
      <element maxOccurs="unbounded" name="excludedDay" type="date">
        <annotation>
          <documentation>Исключаемые даты</documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <simpleType name="DayOfWeekNumber">
    <annotation>
      <documentation>Номер дня недели</documentation>
    </annotation>
    <restriction base="tns:NumberId">
      <minInclusive value="1"/>
      <maxInclusive value="7"/>
    </restriction>
  </simpleType>
  <complexType abstract="true" name="DatesTemplate">
    <annotation>
      <documentation>Общий шаблон</documentation>
    </annotation>
    <sequence>
      <element minOccurs="0" name="templateName" type="string"/>
    </sequence>
  </complexType>
  <complexType name="DayOfWeekDatesTemplate">
    <annotation>
      <documentation>По дням недели</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:DatesTemplate">
        <sequence>
          <element maxOccurs="7" name="dayOfWeek" type="tns:DayOfWeekNumber"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="EvenDatesTemplate">
    <annotation>
      <documentation>По четным или нечетным числам</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:DatesTemplate">
        <sequence>
          <element name="isEven" type="boolean"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="RuleCapacity">
    <sequence>
      <element name="begin" type="tns:RuleTime">
        <annotation>
          <documentation>Время с</documentation>
        </annotation>
      </element>
      <element name="end" type="tns:RuleTime">
        <annotation>
          <documentation>Время по</documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <simpleType name="RuleTime">
    <annotation>
      <documentation>Время объема правила</documentation>
    </annotation>
    <restriction base="time">
      <pattern value="([0-1][0-9]|[2][0-3]):[0-5][0-9]:00"/>
    </restriction>
  </simpleType>
  <simpleType name="QuotaTypeKey">
    <annotation>
      <documentation>ИД вида квоты</documentation>
    </annotation>
    <restriction base="tns:NumberId"/>
  </simpleType>
  <simpleType name="ReferenceTypeKey">
    <annotation>
      <documentation>ИД вида справки</documentation>
    </annotation>
    <restriction base="tns:NumberId"/>
  </simpleType>
  <simpleType name="ReferenceTypeTitle">
    <annotation>
      <documentation>Название вида справки</documentation>
    </annotation>
    <restriction base="string"/>
  </simpleType>
  <simpleType name="arId">
    <annotation>
      <documentation>ИД ДР</documentation>
    </annotation>
    <restriction base="tns:NumberId"/>
  </simpleType>
  <simpleType name="RuleKey">
    <annotation>
      <documentation>ИД правила</documentation>
    </annotation>
    <restriction base="tns:NumberId"/>
  </simpleType>
  <simpleType name="AppointmentTypeKey">
    <annotation>
      <documentation>ИД типа справки</documentation>
    </annotation>
    <restriction base="tns:NumberId"/>
  </simpleType>
  <simpleType name="AppointmentKey">
    <annotation>
      <documentation>ИД справки</documentation>
    </annotation>
    <restriction base="tns:NumberId"/>
  </simpleType>
  <complexType name="QuotaType">
    <annotation>
      <documentation>Вид квоты</documentation>
    </annotation>
    <sequence>
      <element name="id" type="tns:QuotaTypeKey"/>
      <element name="shortName" type="string"/>
      <element name="fullName" type="string"/>
      <element name="code" type="long"/>
      <element name="quotaTypeMode" type="string"/>
    </sequence>
  </complexType>
  <complexType name="Slot">
    <annotation>
      <documentation>Слот расписания ДР</documentation>
    </annotation>
    <sequence>
      <element name="startTime" type="dateTime"/>
      <element name="endTime" type="dateTime"/>
      <element maxOccurs="unbounded" minOccurs="0" name="quotaRuleId" type="tns:QuotaRuleKey"/>
      <element name="arId" type="long"/>
      <element name="isAvailable" type="boolean"/>
      <element name="isBusy" type="boolean"/>
    </sequence>
  </complexType>
  <complexType name="AvailableResourceEmployee">
    <annotation>
      <documentation>Медработник в доступном ресурсе</documentation>
    </annotation>
    <sequence>
      <element name="id" type="tns:StaffUnitKey"/>
      <!--<element name="isMain" type="boolean"/>-->
    </sequence>
  </complexType>
  <simpleType name="StaffUnitKey">
    <annotation>
      <documentation>ИД медработника в подразделении. Оно же - исполнение должности</documentation>
    </annotation>
    <restriction base="tns:NumberId"/>
  </simpleType>
  <complexType name="AvailableResourceIds">
    <annotation>
      <documentation>Список ID доступных ресурсов</documentation>
    </annotation>
    <sequence>
      <element maxOccurs="unbounded" name="availableResourceId" type="tns:AvailableResourceKey">
        <annotation>
          <documentation>ID доступных ресурсов</documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELj5RSlgzK2dAjd_SqktYBl5MQzZneqwqv6LRr8dwVApKYKYfYAxtOjSjDGmxAeZ_phaf5bE179GWAye7P4cbluUFG8_.1TEhKq7sXewYC90.s01CgI12df8Vf05Vk12bRmQBJW8jaPCaGCqh7QJpeXPvrEpoDJ.q7_f05j3gqY9nDBNh</con:url><con:content><![CDATA[<schema elementFormDefault="qualified" targetNamespace="http://emias2.gov.ru/universal/v1/types/exceptions/" version="1" xmlns="http://www.w3.org/2001/XMLSchema">
  <element name="objectNotFoundFaultInfo">
    <complexType>
      <sequence>
        <element name="code" type="string"/>
        <element name="objectId" type="string"/>
        <element name="objectType" type="string"/>
        <element name="reason" type="string"/>
      </sequence>
    </complexType>
  </element>
  <element name="objectIsOutdatedFaultInfo">
    <complexType>
      <sequence>
        <element name="code" type="string"/>
        <element name="reason" type="string"/>
        <element name="entityId" type="string"/>
        <element name="entityType" type="string"/>
      </sequence>
    </complexType>
  </element>
  <element name="GibddCodeErrorFaultInfo">
    <complexType>
      <annotation>
        <documentation>Ошибка</documentation>
      </annotation>
      <sequence>
        <element name="code" type="string"/>
        <element name="messageText" type="string"/>
      </sequence>
    </complexType>
  </element>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService</con:endpoint></con:endpoints><con:operation id="ba21276e-36f0-450a-b30c-f398c1be221f" isOneWay="false" action="CancelAppointment" name="CancelAppointment" bindingOperationName="CancelAppointment" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1c0a8409-9749-4925-8cc5-1eaa49059b3b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v1="http://emias2.gov.ru/emias/appointment/v1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v1:CancelAppointmentRequest>\r
         <appointmentId>?</appointmentId>\r
         <!--Optional:-->\r
         <cancelReason>?</cancelReason>\r
      </v1:CancelAppointmentRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias2.gov.ru/emias/appointment/v1/soap/EmiasGibddAppointmentService/CancelAppointmentRequest"/></con:call></con:operation><con:operation id="055306cf-fdb3-4e44-8f14-8cb848efced9" isOneWay="false" action="CreateAppointment" name="CreateAppointment" bindingOperationName="CreateAppointment" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f40d1014-aa05-429f-b99c-22c5f699674c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v1="http://emias2.gov.ru/emias/appointment/v1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v1:CreateAppointmentRequest>\r
         <oms>?</oms>\r
         <birthday>?</birthday>\r
         <availableResourceId>?</availableResourceId>\r
         <startDate>?</startDate>\r
         <referenceId>?</referenceId>\r
         <!--Optional:-->\r
         <comment>?</comment>\r
         <!--Optional:-->\r
         <recChannel>?</recChannel>\r
      </v1:CreateAppointmentRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias2.gov.ru/emias/appointment/v1/soap/EmiasGibddAppointmentService/CreateAppointmentRequest"/></con:call><con:call id="72b7e641-5cec-4de7-bf59-d0c9d6efe4dd" name="create"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v1="http://emias2.gov.ru/emias/appointment/v1/">\r
<soap:Header>
 <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
  <wsse:UsernameToken>
   <wsse:Username>EIP</wsse:Username>
  </wsse:UsernameToken>
 </wsse:Security>
</soap:Header>
   <soap:Body>\r
      <v1:CreateAppointmentRequest>\r
         <oms>7758010875002485</oms>\r
         <birthday>1989-01-24</birthday>\r
         <availableResourceId>5601</availableResourceId>\r
         <startDate>2024-02-27T15:45:00</startDate>\r
         <referenceId>21</referenceId>\r
      </v1:CreateAppointmentRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias2.gov.ru/emias/appointment/v1/soap/EmiasGibddAppointmentService/CreateAppointmentRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="62df9149-0c06-4e0a-956e-58c5fb526bdb" isOneWay="false" action="GetAppointmentReceptionsByPatient" name="GetAppointmentReceptionsByPatient" bindingOperationName="GetAppointmentReceptionsByPatient" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="dd4dd013-1651-4b35-b88f-254ad3e9005f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v1="http://emias2.gov.ru/emias/appointment/v1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v1:GetAppointmentReceptionsByPatientRequest>\r
         <!--Optional:-->\r
         <upcoming>false</upcoming>\r
         <oms>?</oms>\r
         <birthDate>?</birthDate>\r
      </v1:GetAppointmentReceptionsByPatientRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias2.gov.ru/emias/appointment/v1/soap/EmiasGibddAppointmentService/GetAppointmentReceptionsByPatientRequest"/></con:call><con:call id="377d201e-ccb6-4a6d-a015-ae49d4b9fca9" name="getAppointmentReceptionByPatient"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v1="http://emias2.gov.ru/emias/appointment/v1/">\r
<soap:Header>
 <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
  <wsse:UsernameToken>
   <wsse:Username>EIP</wsse:Username>
  </wsse:UsernameToken>
 </wsse:Security>
</soap:Header>
   <soap:Body>\r
      <v1:GetAppointmentReceptionsByPatientRequest>\r
         <!--Optional:-->\r
         <upcoming>true</upcoming>\r
         <oms>7758010875002485</oms>\r
         <birthDate>1989-01-24</birthDate>\r
      </v1:GetAppointmentReceptionsByPatientRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias2.gov.ru/emias/appointment/v1/soap/EmiasGibddAppointmentService/GetAppointmentReceptionsByPatientRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="279fa1d2-e998-43f6-ab74-ea86e1e8f47b" isOneWay="false" action="GetAvailableResourceScheduleInfo" name="GetAvailableResourceScheduleInfo" bindingOperationName="GetAvailableResourceScheduleInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6614e7ef-7013-4e0a-a9e2-1c9ba5d81ba0" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v1="http://emias2.gov.ru/emias/appointment/v1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v1:GetAvailableResourceScheduleInfoRequest>\r
         <lpuId>?</lpuId>\r
         <referenceId>?</referenceId>\r
         <startDate>?</startDate>\r
         <endDate>?</endDate>\r
         <!--Optional:-->\r
         <actual>false</actual>\r
      </v1:GetAvailableResourceScheduleInfoRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias2.gov.ru/emias/appointment/v1/soap/EmiasGibddAppointmentService/GetAvailableResourceScheduleInfoRequest"/></con:call><con:call id="baa396aa-4279-42df-bbea-36c56bea1f98" name="avResource"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v1="http://emias2.gov.ru/emias/appointment/v1/">\r
<soap:Header>
 <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
  <wsse:UsernameToken>
   <wsse:Username>EIP</wsse:Username>
  </wsse:UsernameToken>
 </wsse:Security>
</soap:Header>
   <soap:Body>\r
      <v1:GetAvailableResourceScheduleInfoRequest>\r
         <lpuId>32</lpuId>\r
         <referenceId>21</referenceId>\r
         <startDate>2024-02-26T15:00:00</startDate>\r
         <endDate>2024-12-31T15:00:00</endDate>\r
         <!--Optional:-->\r
         <actual>true</actual>\r
      </v1:GetAvailableResourceScheduleInfoRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias2.gov.ru/emias/appointment/v1/soap/EmiasGibddAppointmentService/GetAvailableResourceScheduleInfoRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="4966059c-6bfa-4c1a-95f4-329a6868b2c7" isOneWay="false" action="GetLpuList" name="GetLpuList" bindingOperationName="GetLpuList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="54bc9779-02f4-4785-a059-aa9aba6f6caa" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v1="http://emias2.gov.ru/emias/appointment/v1/">\r
<soap:Header>
 <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
  <wsse:UsernameToken>
   <wsse:Username>EIP</wsse:Username>
  </wsse:UsernameToken>
 </wsse:Security>
</soap:Header>
   <soap:Body>\r
      <v1:GetLpuListRequest>\r
         <lpuId>141</lpuId>\r
      </v1:GetLpuListRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias2.gov.ru/emias/appointment/v1/soap/EmiasGibddAppointmentService/GetLpuListRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="c61a27b4-461e-4c95-b7cb-78120b097a60" isOneWay="false" action="GetLpuList2" name="GetLpuList2" bindingOperationName="GetLpuList2" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a172e026-112d-40de-ae1c-a9a17203b97c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v1="http://emias2.gov.ru/emias/appointment/v1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v1:GetLpuList2Request>\r
         <!--Optional:-->\r
         <lpuId>?</lpuId>\r
      </v1:GetLpuList2Request>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias2.gov.ru/emias/appointment/v1/soap/EmiasGibddAppointmentService/GetLpuList2Request"/></con:call><con:call id="ea3416e6-6a1e-4c2d-ab40-a1215c542aa4" name="lpuList2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-279cf459-a179-45ac-93a4-99bae6931497">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <ns2:GetLpuList2Request xmlns:ns2="http://emias2.gov.ru/emias/appointment/v1/" xmlns:ns3="http://emias2.gov.ru/universal/v1/types/exceptions/" xmlns:ns4="http://emias2.gov.ru/emias/appointment/v1/types/" xmlns:ns5="http://emias2.gov.ru/emias/gibdd/v1/types/"/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias2.gov.ru/emias/appointment/v1/soap/EmiasGibddAppointmentService/GetLpuList2Request"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="5a4f53a6-8e85-4bd8-8324-7a71d2b4eef7" isOneWay="false" action="GetReferenceTypes" name="GetReferenceTypes" bindingOperationName="GetReferenceTypes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f7103fa9-fbe3-43b0-b06c-b6791d76174f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v1="http://emias2.gov.ru/emias/appointment/v1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v1:GetReferenceTypesRequest/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias2.gov.ru/emias/appointment/v1/soap/EmiasGibddAppointmentService/GetReferenceTypesRequest"/></con:call></con:operation><con:operation id="dae35cab-c273-4ef1-a553-7a9e85246c8f" isOneWay="false" action="TransferAppointment" name="TransferAppointment" bindingOperationName="TransferAppointment" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="693bf974-b715-417c-ab9d-e6874f70f47c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v1="http://emias2.gov.ru/emias/appointment/v1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v1:TransferAppointmentRequest>\r
         <appointmentId>?</appointmentId>\r
         <!--Optional:-->\r
         <transferReason>?</transferReason>\r
         <availableResourceId>?</availableResourceId>\r
         <startDate>?</startDate>\r
         <!--Optional:-->\r
         <comment>?</comment>\r
         <!--Optional:-->\r
         <recChannel>?</recChannel>\r
      </v1:TransferAppointmentRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias2.gov.ru/emias/appointment/v1/soap/EmiasGibddAppointmentService/TransferAppointmentRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="571f0d05-738e-4dd1-bcd4-a814a459b0d6" wsaVersion="NONE" name="Очередь.Табло" type="wsdl" bindingName="{http://emias.mos.ru/eboard/boardManageService/v3/}boardManageServiceBinding_v3" soapVersion="1_2" anonymous="optional" definition="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService?wsdl"><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="boardManageService_v3" targetNamespace="http://emias.mos.ru/eboard/boardManageService/v3/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ns1="http://emias.mos.ru/eboard/boardManageService/v3/types/" xmlns:nsf="http://emias.mos.ru/system/v1/faults/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://emias.mos.ru/eboard/boardManageService/v3/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema>
      <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELg3EwOkjZU5D_kLe2dmA4Dz3vJ.B79CayAMIIH_gRuHLM4KCpOsD_5Y5hDRPwtUxvG5nR54t8Cdnw_QKdN8VYHVEUH6U1E_NsRujkBnjH.KooJ5HR.M_vE0uDtyzGEmbm5A0z3_vsyallsqkbyQb6sz1hk39kry.Kp93T617rg6TX.3Bd1iCVX1cGwdQbWv0go5SRuaejNin5.o-"/>
      <xs:import namespace="http://emias.mos.ru/system/v1/faults/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELg3EwOkjZU5D_kLe2dmA4Dz3vJ.B79CayAMIIH_gRuHLM4KCpOsD_5Y5hDRPwtUxvG5nR54t8Cdnw_QKdN8VYHVEUH6U1E_NsRujkBnjH.KooJ5HR.M_vE0uDtyzGEmbm5A0z3_vsyallsqkbyQb6sz1hk39kry.Kp93T75pvhCkQ63NYURhKZNIF7CubZ5FxM0JzQJI"/>
      <xs:import namespace="http://emias.mos.ru/eboard/boardManageService/v3/types/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELg3EwOkjZU5D_kLe2dmA4Dz3vJ.B79CayAMIIH_gRuHLM4KCpOsD_5Y5hDRPwtUxvG5nR54t8Cdnw_QKdN8VYHVEUH6U1E_NsRujkBnjH.KooJ5HR.M_vE0uDtyzThTQwsR52G35.Guoi875bgQT5d68kGfrlK.6Z4xoF.smvwWgVfCbalOSKPipv32r3jtBSH77NvgoKw--"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getBoardOutput">
    <wsdl:part element="ns1:getBoardResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="archiveBoardInfoOutput">
    <wsdl:part element="ns1:archiveBoardInfoResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBoardInfoListOutput">
    <wsdl:part element="ns1:getBoardInfoListResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="archiveBoardInfoInput">
    <wsdl:part element="ns1:archiveBoardInfoRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBoardInput">
    <wsdl:part element="ns1:getBoardRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMoBoardListOutput">
    <wsdl:part element="ns1:getMoBoardListResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fault">
    <wsdl:documentation>Ошибка</wsdl:documentation>
    <wsdl:part element="nsf:fault" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBoardInfoListInput">
    <wsdl:part element="ns1:getBoardInfoListRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateBoardIOutput">
    <wsdl:part element="ns1:updateBoardResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createBoardInput">
    <wsdl:part element="ns1:createBoardRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMoBoardListInput">
    <wsdl:part element="ns1:getMoBoardListRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createBoardOutput">
    <wsdl:part element="ns1:createBoardResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="archiveBoardInput">
    <wsdl:part element="ns1:archiveBoardRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateBoardInput">
    <wsdl:part element="ns1:updateBoardRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBoardListInput">
    <wsdl:part element="ns1:getBoardListRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="archiveBoardOutput">
    <wsdl:part element="ns1:archiveBoardResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBoardListOutput">
    <wsdl:part element="ns1:getBoardListResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="userContext">
    <wsdl:documentation>Контекст пользователя</wsdl:documentation>
    <wsdl:part element="uctx:userContext" name="userContext"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="boardManageServicePortType">
    <wsdl:operation name="getBoardList">
      <wsdl:documentation>Метод для получения списка электронных табло</wsdl:documentation>
      <wsdl:input message="tns:getBoardListInput"></wsdl:input>
      <wsdl:output message="tns:getBoardListOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBoard">
      <wsdl:documentation>Метод для получения электронного табло</wsdl:documentation>
      <wsdl:input message="tns:getBoardInput"></wsdl:input>
      <wsdl:output message="tns:getBoardOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createBoard">
      <wsdl:documentation>Метод для создания электронного табло</wsdl:documentation>
      <wsdl:input message="tns:createBoardInput"></wsdl:input>
      <wsdl:output message="tns:createBoardOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateBoard">
      <wsdl:documentation>Метод для обновления электронного табло</wsdl:documentation>
      <wsdl:input message="tns:updateBoardInput"></wsdl:input>
      <wsdl:output message="tns:updateBoardIOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="archiveBoard">
      <wsdl:documentation>Метод для удаления(архивации) электронного табло</wsdl:documentation>
      <wsdl:input message="tns:archiveBoardInput"></wsdl:input>
      <wsdl:output message="tns:archiveBoardOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBoardInfoList">
      <wsdl:documentation>Метод получения изменений для каждого электронного табло из списка в МУ</wsdl:documentation>
      <wsdl:input message="tns:getBoardInfoListInput"></wsdl:input>
      <wsdl:output message="tns:getBoardInfoListOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="archiveBoardInfo">
      <wsdl:documentation>Метод отмены запланированных изменений электронного табло</wsdl:documentation>
      <wsdl:input message="tns:archiveBoardInfoInput"></wsdl:input>
      <wsdl:output message="tns:archiveBoardInfoOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMoBoardList">
      <wsdl:documentation>Метод получения списка табло в МО (МУ)</wsdl:documentation>
      <wsdl:input message="tns:getMoBoardListInput"></wsdl:input>
      <wsdl:output message="tns:getMoBoardListOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="boardManageServiceBinding_v3" type="tns:boardManageServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getBoardList">
      <soap:operation soapAction="getBoardList" soapActionRequired="true"/>
      <wsdl:input>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBoard">
      <soap:operation soapAction="getBoard" soapActionRequired="true"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createBoard">
      <soap:operation soapAction="createBoard" soapActionRequired="true"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateBoard">
      <soap:operation soapAction="updateBoard" soapActionRequired="true"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="archiveBoard">
      <soap:operation soapAction="archiveBoard" soapActionRequired="true"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBoardInfoList">
      <soap:operation soapAction="getBoardInfoList" soapActionRequired="true"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="archiveBoardInfo">
      <soap:operation soapAction="archiveBoardInfo" soapActionRequired="true"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMoBoardList">
      <soap:operation soapAction="getMoBoardList" soapActionRequired="true"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="boardManageService_v3">
    <wsdl:documentation>Сервис для работы с электронным табло</wsdl:documentation>
    <wsdl:port binding="tns:boardManageServiceBinding_v3" name="boardManageServicePortType">
      <soap:address location="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELg3EwOkjZU5D_kLe2dmA4Dz3vJ.B79CayAMIIH_gRuHLM4KCpOsD_5Y5hDRPwtUxvG5nR54t8Cdnw_QKdN8VYHVEUH6U1E_NsRujkBnjH.KooJ5HR.M_vE0uDtyzGEmbm5A0z3_vsyallsqkbyQb6sz1hk39kry.Kp93T617rg6TX.3Bd1iCVX1cGwdQbWv0go5SRuaejNin5.o-</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/userContext/" version="1.0" xmlns="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELg3EwOkjZU5D_kLe2dmA4Dz3vJ.B79CayAMIIH_gRuHLM4KCpOsD_5Y5hDRPwtUxvG5nR54t8Cdnw_QKdN8VYHVEUH6U1E_NsRujkBnjH.KooJ5HR.M_vE0uDtyzGEmbm5A0z3_vsyallsqkbyQb6sz1llv8g_elNcc.ErwbX1WvDta7irHtSmojFK8U"/>
  <xs:element name="userContext" type="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="systemName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Шифр системы-потребителя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя пользователя (логин)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRoleId" type="ID">
        <xs:annotation>
          <xs:documentation>Код Роли</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isUserRoleSystemWide" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак "Общесистемная Роль"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRights">
        <xs:annotation>
          <xs:documentation>Коллекция Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Код Полномочия</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="jobExecutionId" type="ID"/>
      <xs:element minOccurs="0" name="hostIp" type="xs:string">
        <xs:annotation>
          <xs:documentation>IP адрес хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hostName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="options" type="Options">
        <xs:annotation>
          <xs:documentation>Набор именованных значений</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELg3EwOkjZU5D_kLe2dmA4Dz3vJ.B79CayAMIIH_gRuHLM4KCpOsD_5Y5hDRPwtUxvG5nR54t8Cdnw_QKdN8VYHVEUH6U1E_NsRujkBnjH.KooJ5HR.M_vE0uDtyzGEmbm5A0z3_vsyallsqkbyQb6sz1llv8g_elNcc.ErwbX1WvDta7irHtSmojFK8U</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.2" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELg3EwOkjZU5D_kLe2dmA4Dz3vJ.B79CayAMIIH_gRuHLM4KCpOsD_5Y5hDRPwtUxvG5nR54t8Cdnw_QKdN8VYHVEUH6U1E_NsRujkBnjH.KooJ5HR.M_vE0uDtyzGEmbm5A0z3_vsyallsqkbyQb6sz1hk39kry.Kp93T6B7ryZwYBlaZBnVqSA1n3qObxQ-"/>
  <!--references-->
  <xs:element name="mail" type="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalOrganizationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинского учреждения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="compositionId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор
Композиции Think!EHR
ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="simiDocumentId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор
Документа СИМИ
ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--abstract types-->
  <xs:complexType abstract="true" name="Base">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания
компонентов сущностей,
владельцеми которых является
текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор
сущности/записи
на уровне всего ЕМИАС</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="true" name="EntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания сущностей,
владельцем которых является
текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base">
        <xs:attribute name="archived" type="xs:boolean" use="required">
          <xs:annotation>
            <xs:documentation>Признак "Архивная сущность"</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания
компонентов сущностей,
владельцами которых являются
другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignEntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания сущностей,
владельцами которых являются
другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="EntityBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания типов,
реализующих справочники ЕМИАС.НСИ.2</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignEntityBase">
        <xs:sequence>
          <xs:element name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование элемента справочника</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiWithCodeBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания типов,
реализующих справочники ЕМИАС.НСИ.2, в которых имеется бизнес-код</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="NsiBase">
        <xs:attribute name="code" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Бизнес-код</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="SIMIDocumentBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания cведений о документе СИМИ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="simiDocumentId"/>
      <xs:element minOccurs="0" ref="compositionId"/>
    </xs:sequence>
  </xs:complexType>
  <!--async operation status-->
  <xs:element name="operationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор операции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OperationExecutionStatus">
    <xs:annotation>
      <xs:documentation>Статус выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="isCompleted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак окончания выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="completenessProgress" type="OperationCompletenessBase">
        <xs:annotation>
          <xs:documentation>Сведения о текущем статусе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hasSucceded" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак успешности выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
        <xs:annotation>
          <xs:documentation>Коллекция сообщений, порожденных в ходе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор операции</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="false" name="OperationCompletenessPercentage">
    <xs:annotation>
      <xs:documentation>Описание текущего статуса выполнения операции в процентах (0%-100%)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OperationCompletenessBase">
        <xs:sequence>
          <xs:element name="completenessStatus">
            <xs:annotation>
              <xs:documentation>Статус (0%-100%)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:unsignedByte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания текущего статуса выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--calling methods' options-->
  <xs:element name="options" type="Options">
    <xs:annotation>
      <xs:documentation>Параметры вызова метода</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Options">
    <xs:annotation>
      <xs:documentation>Набор именованных значений</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Именованное значение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--pagination-->
  <xs:element name="pagingOptions" type="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="PagingResults">
    <xs:annotation>
      <xs:documentation>Список с пагинацией</xs:documentation>
    </xs:annotation>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageTotal" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество страниц</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morePagesAvailable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Флаг доступности других страниц с результатами для "постраничного листания" (true - если доступны еще страницы; false - иначе)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="totalItemsCount" type="xs:long" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество элементов (на всех страницах)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" ref="sortingOptions"/>
    </xs:sequence>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--sorting-->
  <xs:element name="sortingOptions" type="SortingOptions">
    <xs:annotation>
      <xs:documentation>Параметры сортировки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SortingOptions">
    <xs:annotation>
      <xs:documentation>Условия сортировки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="3" name="sortOrder" type="SortOrder">
        <xs:annotation>
          <xs:documentation>Условия сортировки
(используются в соответствии с
переданной последовательностью)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SortOrder">
    <xs:annotation>
      <xs:documentation>Сортировка</xs:documentation>
    </xs:annotation>
    <xs:attribute name="attributeName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Наименование поля, по которому должна быть произведена сортировка</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="false" name="desceding" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Направление сортировки</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--void response-->
  <xs:element fixed="true" name="result">
    <xs:annotation>
      <xs:documentation>Элемент для использования в методах, не предполагающих возврат какого-либо значения</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:boolean"/>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <!--base types-->
  <xs:complexType name="TimeInterval">
    <xs:annotation>
      <xs:documentation>Временной период (время)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время начала интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время окончания интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--keys-->
  <xs:complexType name="EntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор сущности,
непосредственно принадлежащей
текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор
сущности ЕМИАС,
внешней по отношнению
к текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NsiGlobalId">
    <xs:annotation>
      <xs:documentation>Глобальный идентфикатор
ЕМИАС.НСИ</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELg3EwOkjZU5D_kLe2dmA4Dz3vJ.B79CayAMIIH_gRuHLM4KCpOsD_5Y5hDRPwtUxvG5nR54t8Cdnw_QKdN8VYHVEUH6U1E_NsRujkBnjH.KooJ5HR.M_vE0uDtyzGEmbm5A0z3_vsyallsqkbyQb6sz1hk39kry.Kp93T6B7ryZwYBlaZBnVqSA1n3qObxQ-</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:simpleType name="GUID">
    <xs:annotation>
      <xs:documentation>Глобальный 128-битный идентификатор (Globally Unique Identifier)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="320"/>
      <xs:pattern value=".+@.+\..+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELg3EwOkjZU5D_kLe2dmA4Dz3vJ.B79CayAMIIH_gRuHLM4KCpOsD_5Y5hDRPwtUxvG5nR54t8Cdnw_QKdN8VYHVEUH6U1E_NsRujkBnjH.KooJ5HR.M_vE0uDtyzGEmbm5A0z3_vsyallsqkbyQb6sz1hk39kry.Kp93T75pvhCkQ63NYURhKZNIF7CubZ5FxM0JzQJI</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/faults/" version="1.0" xmlns="http://emias.mos.ru/system/v1/faults/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELg3EwOkjZU5D_kLe2dmA4Dz3vJ.B79CayAMIIH_gRuHLM4KCpOsD_5Y5hDRPwtUxvG5nR54t8Cdnw_QKdN8VYHVEUH6U1E_NsRujkBnjH.KooJ5HR.M_vE0uDtyzGEmbm5A0z3_vsyallsqkbyQb6sz1hk39kry.Kp93T6B7ryZwYBlaZBnVqSA1n3qObxQ-"/>
  <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELg3EwOkjZU5D_kLe2dmA4Dz3vJ.B79CayAMIIH_gRuHLM4KCpOsD_5Y5hDRPwtUxvG5nR54t8Cdnw_QKdN8VYHVEUH6U1E_NsRujkBnjH.KooJ5HR.M_vE0uDtyzGEmbm5A0z3_vsyallsqkbyQb6sz1hk39kry.Kp93T617rg6TX.3Bd1iCVX1cGwdQbWv0go5SRuaejNin5.o-"/>
  <!--faults-->
  <xs:element name="fault" type="BaseFault">
    <xs:annotation>
      <xs:documentation>Базовый тип ошибки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SecurityFault">
    <xs:annotation>
      <xs:documentation>Ошибка безопасности</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element ref="uctx:userContext"/>
          <xs:choice>
            <xs:element name="unauthorizedRequestSecurityException" type="UnauthorizedRequestSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="otherSecurityException" type="OtherSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:sequence>
        <xs:attribute fixed="SECURITY" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BusinessFault">
    <xs:annotation>
      <xs:documentation>Бизнес ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Коллекция Сообщений об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hasErrors" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак наличия ошибок в списке сообщений</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="BUSINESS" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UnexpectedFault">
    <xs:annotation>
      <xs:documentation>Непредвиденная ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="version" type="xs:string">
            <xs:annotation>
              <xs:documentation>Версия продукта-сервиса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="stackTrace">
            <xs:annotation>
              <xs:documentation>Стек вызова (последние 10  записей)</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="10" name="stackTraceRecord">
                  <xs:annotation>
                    <xs:documentation>Запись StackTrace</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="declaringClass" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование класса, содержащего метод</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="methodName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование метода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="fileName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование файла</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="lineNumber" type="xs:int">
                        <xs:annotation>
                          <xs:documentation>Номер строки кода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="UNEXPECTED" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="BaseFault">
    <xs:annotation>
      <xs:documentation>Описание базового типа описания ошибки</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--security exceptions-->
  <xs:complexType name="UnauthorizedRequestSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="requiredRights">
        <xs:annotation>
          <xs:documentation>Перечень идентификаторов недостающих Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Идентификатор Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="UNAUTHORIZED_REQUEST_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="OtherSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="message" type="Message">
        <xs:annotation>
          <xs:documentation>Сообщение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="OTHER_SECURITY_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="SecurityExceptionTypes">
    <xs:annotation>
      <xs:documentation>Типы исключений безопасности</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNAUTHORIZED_REQUEST_EXCEPTION"/>
      <xs:enumeration value="OTHER_SECURITY_EXCEPTION"/>
    </xs:restriction>
  </xs:simpleType>
  <!--components-->
  <xs:simpleType name="FaultTypes">
    <xs:annotation>
      <xs:documentation>Тип ошибки</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="SECURITY">
        <xs:annotation>
          <xs:documentation>Непредвиденная ошибка приложения</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BUSINESS">
        <xs:annotation>
          <xs:documentation>Бизнес ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UNEXPECTED">
        <xs:annotation>
          <xs:documentation>Ошибка безопасности</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELg3EwOkjZU5D_kLe2dmA4Dz3vJ.B79CayAMIIH_gRuHLM4KCpOsD_5Y5hDRPwtUxvG5nR54t8Cdnw_QKdN8VYHVEUH6U1E_NsRujkBnjH.KooJ5HR.M_vE0uDtyzThTQwsR52G35.Guoi875bgQT5d68kGfrlK.6Z4xoF.smvwWgVfCbalOSKPipv32r3jtBSH77NvgoKw--</con:url><con:content><![CDATA[<!--edited with XMLSpy v2018 rel. 2 sp1 (x64) (http://www.altova.com) by max (maxim)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/eboard/boardManageService/v3/types/" xmlns:core="http://emias.mos.ru/eboard/core/v1/" xmlns:core2="http://emias.mos.ru/eboard/core/v2/" xmlns:tns="http://emias.mos.ru/eboard/boardManageService/v3/types/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://emias.mos.ru/eboard/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELg3EwOkjZU5D_kLe2dmA4Dz3vJ.B79CayAMIIH_gRuHLM4KCpOsD_5Y5hDRPwtUxvG5nR54t8Cdnw_QKdN8VYHVEUH6U1E_NsRujkBnjH.KooJ5HR.M_vE0uDtyzGEmbm5A0z3_vsyCoi875bmcR5M2.20K_yKGgYMI0m7PKKrtFHIf3vmGrx3I-"/>
  <xs:import namespace="http://emias.mos.ru/eboard/core/v2/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELg3EwOkjZU5D_kLe2dmA4Dz3vJ.B79CayAMIIH_gRuHLM4KCpOsD_5Y5hDRPwtUxvG5nR54t8Cdnw_QKdN8VYHVEUH6U1E_NsRujkBnjH.KooJ5HR.M_vE0uDtyzGEmbm5M0z3_vsyCoi875bmcR5M2.20K8yKGgYID.uPAlIuQ06TkN9iQLrDk-"/>
  <!--Custom type-->
  <xs:complexType name="CreateOrUpdateBoardParameters">
    <xs:annotation>
      <xs:documentation>Параметры для создания/обновления Сущности "Электронное табло"</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="status">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="ACTIVE"/>
            <xs:enumeration value="ARCHIVE"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="archiveDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата архивации</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="rooms">
        <xs:annotation>
          <xs:documentation>Коллекция "Кабинет"</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="room">
              <xs:annotation>
                <xs:documentation>Кабинет</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="number" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>Номер кабинета</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:choice>
                    <xs:element name="rirRoomId" type="core:ID">
                      <xs:annotation>
                        <xs:documentation>Идентификатор кабинета владельцем владельцем которого
                                                    является другой продукт ЕМИАС(РИР.2)</xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="svmrLocationId" type="core:ID">
                      <xs:annotation>
                        <xs:documentation>Идентификатор кабинета владельцем владельцем которого
                                                    является другой продукт ЕМИАС(СВМР.2)</xs:documentation>
                      </xs:annotation>
                    </xs:element>
                  </xs:choice>
                  <xs:element name="isAdded" type="xs:boolean">
                    <xs:annotation>
                      <xs:documentation>Признак добавления кабинета</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element name="isDeleted" type="xs:boolean">
                    <xs:annotation>
                      <xs:documentation>Признак удаления кабинета</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element minOccurs="0" name="nsiCabinetNameId" type="core:ID">
                    <xs:annotation>
                      <xs:documentation>Идентификатор наименования кабинета в НСИ</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element name="roomTypeId" type="core:ID">
                    <xs:annotation>
                      <xs:documentation>Идентификатор типа кабинета</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="boardInfo">
        <xs:annotation>
          <xs:documentation>Информация о табло</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:annotation>
            <xs:documentation>Параметры для создания/обновления Сущности "Информация о табло" / Изменения в
                            табло</xs:documentation>
          </xs:annotation>
          <xs:sequence>
            <xs:element minOccurs="0" name="activationDate" type="xs:date">
              <xs:annotation>
                <xs:documentation>Дата активация инфомрации о табло</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="addressPointId" type="core:ID">
              <xs:annotation>
                <xs:documentation>Идентификатор объекта БТИ(ИД здания)</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="name" type="xs:string">
              <xs:annotation>
                <xs:documentation>Наименование Электронного табло</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="muId" type="core:ID">
              <xs:annotation>
                <xs:documentation>Идентификатор медицинского учреждения</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="hostname" type="xs:string">
              <xs:annotation>
                <xs:documentation>hostname устройства</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="deviceName" type="xs:string">
              <xs:annotation>
                <xs:documentation>Наименование устройства</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="textForPatients" type="xs:string">
              <xs:annotation>
                <xs:documentation>Текст сообщения для пациентов, неявившихся на прием</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="id" type="core:ID" use="optional">
            <xs:annotation>
              <xs:documentation>Идентификатор Сущности "Информация о табло" / Изменения в табло</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--List Page-->
  <xs:complexType name="BoardListResultPage">
    <xs:annotation>
      <xs:documentation>Результирующая выборка для метода getBoardList</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:PagingResults">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="board" type="core2:BoardExtension"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BoardInfoListResultPage">
    <xs:annotation>
      <xs:documentation>Результирующая выборка для метода getBoardInfoList</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:PagingResults">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="boardInfo">
            <xs:complexType>
              <xs:complexContent>
                <xs:extension base="core2:BoardInfoShort">
                  <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="room" type="core2:RoomShortWithRelevanceAttribute">
                      <xs:annotation>
                        <xs:documentation>Номер кабинета</xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="boardId" type="core:ID">
                      <xs:annotation>
                        <xs:documentation>Идентификатор сущности "Электронное табло"</xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="isPlannedActiveBoardInfo" type="xs:boolean">
                      <xs:annotation>
                        <xs:documentation>Признак активного запланированного изменения
                                                    информации об электронном табло</xs:documentation>
                      </xs:annotation>
                    </xs:element>
                  </xs:sequence>
                </xs:extension>
              </xs:complexContent>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--request & response-->
  <!--метод getBoardList-->
  <xs:element name="getBoardListRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры для метода getBoardList</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="muId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор МУ</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="core:options"/>
        <xs:element ref="core:pagingOptions"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getBoardListResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры для метода getBoardList</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="tns:BoardListResultPage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--метод getBoard-->
  <xs:element name="getBoardRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры для метода getBoard</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="hostname" type="xs:string">
          <xs:annotation>
            <xs:documentation>hostname устройства</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="boardId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор сущности "Электронное табло"</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="core:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getBoardResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры для метода getBoard</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="board" type="core2:BoardExtension"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--метод createBoard-->
  <xs:element name="createBoardRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры для метода createBoard</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="board" type="tns:CreateOrUpdateBoardParameters"/>
        <xs:element minOccurs="0" ref="core:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="createBoardResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры для метода createBoard</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="board" type="core2:BoardExtension"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--метод updateBoard-->
  <xs:element name="updateBoardRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры для метода updateBoard</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" name="board">
          <xs:complexType>
            <xs:complexContent>
              <xs:extension base="tns:CreateOrUpdateBoardParameters">
                <xs:attribute name="id" type="core:ID" use="required">
                  <xs:annotation>
                    <xs:documentation>Идентификатор сущности "Электронное табло"</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:extension>
            </xs:complexContent>
          </xs:complexType>
        </xs:element>
        <xs:element minOccurs="0" ref="core:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="updateBoardResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры для метода updateBoard</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="core:result"/>
        <xs:element maxOccurs="unbounded" name="boardInfoId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор Сущности "Информация о табло"</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--метод archiveBoard-->
  <xs:element name="archiveBoardRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры для метода archiveBoard</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="boardId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор сущности "Электронное табло"</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="core:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="archiveBoardResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры для метода archiveBoard</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="core:result"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--Метод получения изменений для каждого электронного табло из списка в МУ-->
  <xs:element name="getBoardInfoListRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры для метода getBoardInfoList</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="muId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор медицинского учреждения</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="boardId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор сущности "Электронное табло"</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="boardInfoId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор сущности "Информация о табло"</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="isPlannedActiveBoardInfo" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Признак активного запланированного изменения информации об электронном табло</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="core:pagingOptions"/>
        <xs:element minOccurs="0" ref="core:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getBoardInfoListResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры для метода getBoardInfoList</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="tns:BoardInfoListResultPage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--Метод отмены запланированных изменений электронного табло-->
  <xs:element name="archiveBoardInfoRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры для метода archiveBoardInfo</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="boardInfoId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор сущности "Информация о табло"</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="canceledBoardInfo" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Признак отмененных изменений информации электронного табло</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="core:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="archiveBoardInfoResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры для метода archiveBoardInfo</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="core:result"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--Метод получения списка табло в МО (МУ)-->
  <xs:element name="getMoBoardListRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры для метода getMoBoardList</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="moId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор медицинской организации</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="muId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор медицинского учреждения</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="longWaitTimePeriod" type="xs:time">
          <xs:annotation>
            <xs:documentation>Временной период для отображения признака "Долгое ожидание"</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="longWaitChoice" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Фильтр предоставления табло с признаком "Долгое ожидание"</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="core:pagingOptions"/>
        <xs:element minOccurs="0" ref="core:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getMoBoardListResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры для метода getMoBoardList</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="tns:BoardListResultPage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELg3EwOkjZU5D_kLe2dmA4Dz3vJ.B79CayAMIIH_gRuHLM4KCpOsD_5Y5hDRPwtUxvG5nR54t8Cdnw_QKdN8VYHVEUH6U1E_NsRujkBnjH.KooJ5HR.M_vE0uDtyzGEmbm5A0z3_vsyCoi875bmcR5M2.20K_yKGgYMI0m7PKKrtFHIf3vmGrx3I-</con:url><con:content><![CDATA[<!--edited with XMLSpy v2018 rel. 2 sp1 (x64) (http://www.altova.com) by MESMERiZE (MSM)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/eboard/core/v1/" xmlns:core="http://emias.mos.ru/eboard/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELg3EwOkjZU5D_kLe2dmA4Dz3vJ.B79CayAMIIH_gRuHLM4KCpOsD_5Y5hDRPwtUxvG5nR54t8Cdnw_QKdN8VYHVEUH6U1E_NsRujkBnjH.KooJ5HR.M_vE0uDtyzGEmbm5A0z3_vsyallsqkbyQb6sz1llv8g_elNcc.ErwbX1WvDta7irHtSmojFK8U"/>
  <xs:element name="ticket" type="xs:string">
    <xs:annotation>
      <xs:documentation>Номер талона записи</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--entities(short)-->
  <xs:complexType name="BoardShort">
    <xs:annotation>
      <xs:documentation>Сущность "Электронное табло"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:EntityBase">
        <xs:sequence>
          <xs:element name="status">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="ACTIVE"/>
                <xs:enumeration value="ARHIVE"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="archiveDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата архивации</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="createDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата создания табло</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BoardInfoShort">
    <xs:annotation>
      <xs:documentation>Сущность "Информация о табло" / Изменения в табло</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:EntityBase">
        <xs:sequence>
          <xs:element name="activationDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>Дата активация информации о табло</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="addressPointId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор объекта БТИ(ИД здания)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование Электронного табло</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="muId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор медицинского учреждения</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="deviceName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование устройства</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="archiveDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата архивации записи</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="textForPatients" type="xs:string">
            <xs:annotation>
              <xs:documentation>Текст сообщения для пациентов, неявившихся на прием</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="RoomShort">
    <xs:annotation>
      <xs:documentation>Сущность "Кабинет"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:Base">
        <xs:sequence>
          <xs:element minOccurs="0" name="rirRoomId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор кабинета владельцем владельцем которого является другой
                                продукт ЕМИАС(РИР.2)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="svmrLocationId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор кабинета владельцем владельцем которого является другой
                                продукт ЕМИАС(СВМР.2)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="number" type="xs:string">
            <xs:annotation>
              <xs:documentation>Номер кабинета</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="RoomShortWithRelevanceAttribute">
    <xs:annotation>
      <xs:documentation>Сущность "Кабинет"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:RoomShort">
        <xs:sequence>
          <xs:element name="isAdded" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак добавления кабинета</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="isDeleted" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак удаления кабинета</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AppointmentShort">
    <xs:annotation>
      <xs:documentation>Сущность "Запись"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:Base">
        <xs:sequence>
          <xs:element name="appointmentId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор Записи, владелец которого другой продукт ЕМИАС</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="muId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор МУ</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="startTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата начала записи</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="endTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата окончания записи</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="status">
            <xs:annotation>
              <xs:documentation>Статус</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="CREATE"/>
                <xs:enumeration value="PATIENT_INVITED"/>
                <xs:enumeration value="CANCELED"/>
                <xs:enumeration value="RECEPTION"/>
                <xs:enumeration value="SKIPPED"/>
                <xs:enumeration value="FINISH"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element name="patientId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор пациента ЕМИАС</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="type">
            <xs:annotation>
              <xs:documentation>Тип события</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="BM"/>
                <xs:enumeration value="DOCTOR"/>
                <xs:enumeration value="LDP"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element name="createDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата создания</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ResourceShort">
    <xs:annotation>
      <xs:documentation>Cущность "Ресурс"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:Base">
        <xs:sequence>
          <xs:element name="availableName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование доступного ресурса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="availableResourceId" type="xs:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор доступного ресурса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="rirRoomId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор кабинета владельцем владельцем которого является другой
                                продукт ЕМИАС (РИР.2)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="svmrLocationId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор кабинета владельцем владельцем которого является другой
                                продукт ЕМИАС(СВМР.2)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="complexResourceId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор ресурса</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AppointmentStatusHistoryShort">
    <xs:annotation>
      <xs:documentation>Сущность "История статусов записи"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:Base">
        <xs:sequence>
          <xs:element name="createDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата создания статуса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>Статус</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="EmployeeShort">
    <xs:annotation>
      <xs:documentation>Сущность "Врач"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:Base">
        <xs:sequence>
          <xs:element name="specialityId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор специальности</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="specialityTitle" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование специальности</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="lastName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Фамилия врача</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="firstName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Имя врача</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="middleName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Отчество врача</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--entities(extension)-->
  <xs:complexType name="RoomExtension">
    <xs:annotation>
      <xs:documentation>Расширенные сведения о Кабинете</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:RoomShort">
        <xs:sequence minOccurs="0">
          <xs:element minOccurs="0" name="appointments">
            <xs:annotation>
              <xs:documentation>Коллекция "Запись"</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="1" name="appointment" type="core:AppointmentExtension"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AppointmentExtension">
    <xs:annotation>
      <xs:documentation>Расширенные сведения о Записи</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:AppointmentShort">
        <xs:sequence>
          <xs:element name="resource" type="core:ResourceExtension">
            <xs:annotation>
              <xs:documentation>Ресурс</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="statusHistory">
            <xs:annotation>
              <xs:documentation>Коллекция "История статусов"</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="status" type="core:AppointmentStatusHistoryShort"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element ref="core:ticket"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ResourceExtension">
    <xs:annotation>
      <xs:documentation>Расширенные сведения о Ресурсе</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:ResourceShort">
        <xs:sequence>
          <xs:element minOccurs="0" name="employee" type="core:EmployeeShort">
            <xs:annotation>
              <xs:documentation>Врач</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BoardExtension">
    <xs:annotation>
      <xs:documentation>Расширенные сведения об Электронном табло</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:BoardShort">
        <xs:sequence>
          <xs:element name="boardInfo" type="core:BoardInfoExtension">
            <xs:annotation>
              <xs:documentation>информация о табло</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AppointmentWithRoomShort">
    <xs:annotation>
      <xs:documentation>Сведения о Записи пациента и Кабинете</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:AppointmentShort">
        <xs:sequence minOccurs="0">
          <xs:element name="room" type="core:RoomShort"/>
          <xs:element minOccurs="0" name="statusCreateDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата создания статуса</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BoardInfoExtension">
    <xs:annotation>
      <xs:documentation>Расширенные сведения о "Табло"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:BoardInfoShort">
        <xs:sequence>
          <xs:element minOccurs="0" name="rooms">
            <xs:annotation>
              <xs:documentation>Коллекция "Кабинет"</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="room" type="core:RoomShort"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AppointmentFullInfo">
    <xs:annotation>
      <xs:documentation>Расширенные сведения о Записи</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:AppointmentShort">
        <xs:annotation>
          <xs:documentation>Идентификатор табло</xs:documentation>
          <xs:documentation>Наименование табло</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="resource" type="core:ResourceExtension">
            <xs:annotation>
              <xs:documentation>Ресурс</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="statusHistory">
            <xs:annotation>
              <xs:documentation>Коллекция "История статусов"</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="status" type="core:AppointmentStatusHistoryShort"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="room" type="core:RoomShort"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DateTimePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELg3EwOkjZU5D_kLe2dmA4Dz3vJ.B79CayAMIIH_gRuHLM4KCpOsD_5Y5hDRPwtUxvG5nR54t8Cdnw_QKdN8VYHVEUH6U1E_NsRujkBnjH.KooJ5HR.M_vE0uDtyzGEmbm5M0z3_vsyCoi875bmcR5M2.20K8yKGgYID.uPAlIuQ06TkN9iQLrDk-</con:url><con:content><![CDATA[<!--edited with XMLSpy v2011 rel. 2 (http://www.altova.com) by qwerty (qwerty)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/eboard/core/v2/" xmlns="http://emias.mos.ru/eboard/core/v2/" xmlns:core="http://emias.mos.ru/eboard/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELg3EwOkjZU5D_kLe2dmA4Dz3vJ.B79CayAMIIH_gRuHLM4KCpOsD_5Y5hDRPwtUxvG5nR54t8Cdnw_QKdN8VYHVEUH6U1E_NsRujkBnjH.KooJ5HR.M_vE0uDtyzGEmbm5A0z3_vsyallsqkbyQb6sz1llv8g_elNcc.ErwbX1WvDta7irHtSmojFK8U"/>
  <xs:import namespace="http://emias.mos.ru/eboard/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELg3EwOkjZU5D_kLe2dmA4Dz3vJ.B79CayAMIIH_gRuHLM4KCpOsD_5Y5hDRPwtUxvG5nR54t8Cdnw_QKdN8VYHVEUH6U1E_NsRujkBnjH.KooJ5HR.M_vE0uDtyzGEmbm5A0z3_vsyCoi875bmcR5M2.20K_yKGgYMI0m7PKKrtFHIf3vmGrx3I-"/>
  <!--entities(short)-->
  <xs:complexType name="BoardInfoShort">
    <xs:annotation>
      <xs:documentation>Сущность "Информация о табло" /  Изменения в табло</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:EntityBase">
        <xs:sequence>
          <xs:element name="activationDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>Дата активация информации о табло</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="addressPointId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор объекта БТИ(ИД здания)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование Электронного табло</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="mu" type="Mu"/>
          <xs:element name="muId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор медицинского учреждения</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="hostname" type="xs:string">
            <xs:annotation>
              <xs:documentation>hostname устройства</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="deviceName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование устройства</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="archiveDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата архивации записи</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="textForPatients" type="xs:string">
            <xs:annotation>
              <xs:documentation>Текст сообщения для пациентов, неявившихся на прием.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="longWait" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Долгое ожидание</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="RoomShort">
    <xs:annotation>
      <xs:documentation>Сущность "Кабинет"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:Base">
        <xs:sequence>
          <xs:element minOccurs="0" name="rirRoomId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор кабинета владельцем владельцем которого является другой
								продукт ЕМИАС(РИР.2)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="svmrLocationId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор кабинета владельцем владельцем которого является другой
								продукт ЕМИАС(СВМР.2)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="number" type="xs:string">
            <xs:annotation>
              <xs:documentation>Номер кабинета</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="nsiCabinetName" type="NsiWithCode">
            <xs:annotation>
              <xs:documentation>Наименование кабинета из справочника НСИ INFO_BOARD_CABINET_NAMES</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="nsiRoomType" type="NsiRoomType">
            <xs:annotation>
              <xs:documentation>Вид кабинета</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NsiWithCode">
    <xs:complexContent>
      <xs:extension base="core:NsiWithCodeBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="RoomShortWithRelevanceAttribute">
    <xs:annotation>
      <xs:documentation>Сущность "Кабинет"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="RoomShort">
        <xs:sequence>
          <xs:element name="isAdded" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак добавления кабинета</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="isDeleted" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак удаления кабинета</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AppointmentShort">
    <xs:annotation>
      <xs:documentation>Сущность "Запись"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:Base">
        <xs:sequence>
          <xs:element name="appointmentId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор Записи, владелец которого другой продукт ЕМИАС</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="muId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор МУ</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="startTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата начала записи</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="endTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата окончания записи</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="status">
            <xs:annotation>
              <xs:documentation>Статус</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="CREATE"/>
                <xs:enumeration value="PATIENT_INVITED"/>
                <xs:enumeration value="CANCELED"/>
                <xs:enumeration value="RECEPTION"/>
                <xs:enumeration value="SKIPPED"/>
                <xs:enumeration value="FINISH"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element name="patientId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор пациента ЕМИАС</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="type">
            <xs:annotation>
              <xs:documentation>Тип события</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="BM"/>
                <xs:enumeration value="DOCTOR"/>
                <xs:enumeration value="LDP"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element name="createDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата создания</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="workPlace" type="xs:string">
            <xs:annotation>
              <xs:documentation>Рабочее место</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="userId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Идентификатор пользователя</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--entities(extension)-->
  <xs:complexType name="RoomExtension">
    <xs:annotation>
      <xs:documentation>Расширенные сведения о Кабинете</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="RoomShort">
        <xs:sequence minOccurs="0">
          <xs:element minOccurs="0" name="appointments">
            <xs:annotation>
              <xs:documentation>Коллекция "Запись"</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="1" name="appointment" type="AppointmentExtension"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AppointmentExtension">
    <xs:annotation>
      <xs:documentation>Расширенные сведения о Записи</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="AppointmentShort">
        <xs:sequence>
          <xs:element name="resource" type="core:ResourceExtension">
            <xs:annotation>
              <xs:documentation>Ресурс</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="statusHistory">
            <xs:annotation>
              <xs:documentation>Коллекция "История статусов"</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="status" type="core:AppointmentStatusHistoryShort"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element ref="core:ticket"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BoardExtension">
    <xs:annotation>
      <xs:documentation>Расширенные сведения об Электронном табло</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:BoardShort">
        <xs:sequence>
          <xs:element name="boardInfo" type="BoardInfoExtension">
            <xs:annotation>
              <xs:documentation>информация о табло</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AppointmentWithRoomShort">
    <xs:annotation>
      <xs:documentation>Сведения о Записи пациента и Кабинете</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="AppointmentShort">
        <xs:sequence minOccurs="0">
          <xs:element name="room" type="RoomShort"/>
          <xs:element minOccurs="0" name="statusCreateDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата создания статуса</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BoardInfoExtension">
    <xs:annotation>
      <xs:documentation>Расширенные сведения о "Табло"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BoardInfoShort">
        <xs:sequence>
          <xs:element minOccurs="0" name="rooms">
            <xs:annotation>
              <xs:documentation>Коллекция "Кабинет"</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="room" type="RoomShort"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AppointmentFullInfo">
    <xs:annotation>
      <xs:documentation>Расширенные сведения о Записи</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="AppointmentShort">
        <xs:annotation>
          <xs:documentation>Идентификатор табло</xs:documentation>
          <xs:documentation>Наименование табло</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="resource" type="core:ResourceExtension">
            <xs:annotation>
              <xs:documentation>Ресурс</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="statusHistory">
            <xs:annotation>
              <xs:documentation>Коллекция "История статусов"</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="status" type="core:AppointmentStatusHistoryShort"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="room" type="RoomShort"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NsiRoomType">
    <xs:annotation>
      <xs:documentation>Тип, используемый для описания типа кабинета.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base">
        <xs:sequence>
          <xs:element name="manualRoomName" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Необходимость выбора названия кабинета вручную</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование элемента справочника</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="archived" type="xs:boolean" use="required">
          <xs:annotation>
            <xs:documentation>Признак "Архивная сущность"</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="code" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Бизнес-код</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Mu">
    <xs:complexContent>
      <xs:extension base="NsiBase"/>
    </xs:complexContent>
  </xs:complexType>
  <!--<xs:complexType name="NsiRestricted">
		<xs:complexContent>
		<xs:restriction base="core:NsiWithCodeBase">
			<xs:attribute name="archived" type="xs:boolean" use="required">
				<xs:annotation>
					<xs:documentation>Признак "Архивная сущность"</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="code" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation>Бизнес-код</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:restriction>
	</xs:complexContent>
	</xs:complexType>-->
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService</con:endpoint></con:endpoints><con:operation id="8261f3d9-2d59-4455-8593-f902dbfedd9e" isOneWay="false" action="archiveBoard" name="archiveBoard" bindingOperationName="archiveBoard" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fe042f75-89af-4959-af9c-f313e964b19c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/eboard/boardManageService/v3/types/" xmlns:v1="http://emias.mos.ru/eboard/core/v1/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:archiveBoardRequest>\r
         <typ:boardId>?</typ:boardId>\r
         <!--Optional:-->\r
         <v1:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </v1:options>\r
      </typ:archiveBoardRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/eboard/boardManageService/v3/boardManageServicePortType/archiveBoardRequest"/></con:call></con:operation><con:operation id="e8b6d3c3-6645-4da1-b554-e018e304c666" isOneWay="false" action="archiveBoardInfo" name="archiveBoardInfo" bindingOperationName="archiveBoardInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f96e3c24-44df-4eb0-80f3-cfbee67708e2" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/eboard/boardManageService/v3/types/" xmlns:v1="http://emias.mos.ru/eboard/core/v1/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:archiveBoardInfoRequest>\r
         <typ:boardInfoId>?</typ:boardInfoId>\r
         <typ:canceledBoardInfo>?</typ:canceledBoardInfo>\r
         <!--Optional:-->\r
         <v1:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </v1:options>\r
      </typ:archiveBoardInfoRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/eboard/boardManageService/v3/boardManageServicePortType/archiveBoardInfoRequest"/></con:call></con:operation><con:operation id="832d12a2-1ced-4e89-bd05-f93458ac9b83" isOneWay="false" action="createBoard" name="createBoard" bindingOperationName="createBoard" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="88af272f-4ec1-4fe1-970b-fc8ceb3ac608" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/eboard/boardManageService/v3/types/" xmlns:v1="http://emias.mos.ru/eboard/core/v1/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:createBoardRequest>\r
         <typ:board>\r
            <typ:status>?</typ:status>\r
            <!--Optional:-->\r
            <typ:archiveDate>?</typ:archiveDate>\r
            <!--Optional:-->\r
            <typ:rooms>\r
               <!--1 or more repetitions:-->\r
               <typ:room>\r
                  <typ:number>?</typ:number>\r
                  <!--You have a CHOICE of the next 2 items at this level-->\r
                  <typ:rirRoomId>?</typ:rirRoomId>\r
                  <typ:svmrLocationId>?</typ:svmrLocationId>\r
                  <typ:isAdded>?</typ:isAdded>\r
                  <typ:isDeleted>?</typ:isDeleted>\r
                  <!--Optional:-->\r
                  <typ:nsiCabinetNameId>?</typ:nsiCabinetNameId>\r
                  <typ:roomTypeId>?</typ:roomTypeId>\r
               </typ:room>\r
            </typ:rooms>\r
            <typ:boardInfo id="?">\r
               <!--Optional:-->\r
               <typ:activationDate>?</typ:activationDate>\r
               <!--Optional:-->\r
               <typ:addressPointId>?</typ:addressPointId>\r
               <typ:name>?</typ:name>\r
               <typ:muId>?</typ:muId>\r
               <!--Optional:-->\r
               <typ:hostname>?</typ:hostname>\r
               <!--Optional:-->\r
               <typ:deviceName>?</typ:deviceName>\r
               <!--Optional:-->\r
               <typ:textForPatients>?</typ:textForPatients>\r
            </typ:boardInfo>\r
         </typ:board>\r
         <!--Optional:-->\r
         <v1:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </v1:options>\r
      </typ:createBoardRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/eboard/boardManageService/v3/boardManageServicePortType/createBoardRequest"/></con:call></con:operation><con:operation id="5ee39ca3-a380-40e8-a248-1a5a60e69be3" isOneWay="false" action="getBoard" name="getBoard" bindingOperationName="getBoard" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d64149a7-b805-40a6-8c2a-e52f9f38c23b" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/eboard/boardManageService/v3/types/" xmlns:v1="http://emias.mos.ru/eboard/core/v1/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getBoardRequest>\r
         <!--Optional:-->\r
         <typ:hostname>?</typ:hostname>\r
         <!--Optional:-->\r
         <typ:boardId>?</typ:boardId>\r
         <!--Optional:-->\r
         <v1:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </v1:options>\r
      </typ:getBoardRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/eboard/boardManageService/v3/boardManageServicePortType/getBoardRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="3fd667f6-fc68-4b71-ab9e-da71adb73145" isOneWay="false" action="getBoardInfoList" name="getBoardInfoList" bindingOperationName="getBoardInfoList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c214d0f9-3b5e-4dde-81bd-b94e01ffe4b8" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/eboard/boardManageService/v3/types/" xmlns:v1="http://emias.mos.ru/eboard/core/v1/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getBoardInfoListRequest>\r
         <typ:muId>?</typ:muId>\r
         <!--Optional:-->\r
         <typ:boardId>?</typ:boardId>\r
         <!--Optional:-->\r
         <typ:boardInfoId>?</typ:boardInfoId>\r
         <typ:isPlannedActiveBoardInfo>?</typ:isPlannedActiveBoardInfo>\r
         <v1:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v1:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v1:sortOrder attributeName="?" desceding="false"/>\r
            </v1:sortingOptions>\r
         </v1:pagingOptions>\r
         <!--Optional:-->\r
         <v1:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </v1:options>\r
      </typ:getBoardInfoListRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/eboard/boardManageService/v3/boardManageServicePortType/getBoardInfoListRequest"/></con:call></con:operation><con:operation id="50624a76-99a8-4dd3-ac01-a676254fa93e" isOneWay="false" action="getBoardList" name="getBoardList" bindingOperationName="getBoardList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4d54ff45-908c-47cc-879b-b987afe70045" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/eboard/boardManageService/v3/types/" xmlns:v1="http://emias.mos.ru/eboard/core/v1/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getBoardListRequest>\r
         <typ:muId>?</typ:muId>\r
         <!--Optional:-->\r
         <v1:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </v1:options>\r
         <v1:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v1:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v1:sortOrder attributeName="?" desceding="false"/>\r
            </v1:sortingOptions>\r
         </v1:pagingOptions>\r
      </typ:getBoardListRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/eboard/boardManageService/v3/boardManageServicePortType/getBoardListRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="f4e9f597-2027-4a21-b9bc-8fc9ce0d4e77" name="getBoardList"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-070f617d-3b14-414e-a5e4-92fa2d14e520">\r
            <wsse:Username>EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <userContext xmlns="http://emias.mos.ru/system/v1/userContext/">\r
         <systemName>EIM</systemName>\r
         <userName>0</userName>\r
         <userRoleId>7187</userRoleId>\r
         <isUserRoleSystemWide>false</isUserRoleSystemWide>\r
         <userRights>\r
            <!--Zero or more repetitions:-->\r
            <userRightId>505201</userRightId>\r
         </userRights>\r
         <jobExecutionId>0</jobExecutionId>\r
      </userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <getBoardListRequest xmlns="http://emias.mos.ru/eboard/boardManageService/v3/types/" xmlns:ns2="http://emias.mos.ru/eboard/core/v1/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/eboard/core/v2/" xmlns:ns5="http://emias.mos.ru/eboard/ticketService/v1/types/" xmlns:ns6="http://emias.mos.ru/system/v1/faults/">\r
         <muId>204</muId>\r
         <ns2:pagingOptions pageNumber="0" pageSize="30"/>\r
      </getBoardListRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/eboard/boardManageService/v3/boardManageServicePortType/getBoardListRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="51dcf370-b238-420a-80f4-37eb0cfd1efd" isOneWay="false" action="getMoBoardList" name="getMoBoardList" bindingOperationName="getMoBoardList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="47423998-04ae-41c5-b1e2-98d5325a8fee" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/eboard/boardManageService/v3/types/" xmlns:v1="http://emias.mos.ru/eboard/core/v1/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getMoBoardListRequest>\r
         <typ:moId>?</typ:moId>\r
         <!--Optional:-->\r
         <typ:muId>?</typ:muId>\r
         <!--Optional:-->\r
         <typ:longWaitTimePeriod>?</typ:longWaitTimePeriod>\r
         <typ:longWaitChoice>?</typ:longWaitChoice>\r
         <v1:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v1:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v1:sortOrder attributeName="?" desceding="false"/>\r
            </v1:sortingOptions>\r
         </v1:pagingOptions>\r
         <!--Optional:-->\r
         <v1:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </v1:options>\r
      </typ:getMoBoardListRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/eboard/boardManageService/v3/boardManageServicePortType/getMoBoardListRequest"/></con:call></con:operation><con:operation id="b51f53a9-fd2f-4d66-8656-b456f5d8ada7" isOneWay="false" action="updateBoard" name="updateBoard" bindingOperationName="updateBoard" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bc1211ed-cf9b-40a4-a9bf-83e8a9c79c41" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/eboard/boardManageService/v3/types/" xmlns:v1="http://emias.mos.ru/eboard/core/v1/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:updateBoardRequest>\r
         <!--1 or more repetitions:-->\r
         <typ:board id="?">\r
            <typ:status>?</typ:status>\r
            <!--Optional:-->\r
            <typ:archiveDate>?</typ:archiveDate>\r
            <!--Optional:-->\r
            <typ:rooms>\r
               <!--1 or more repetitions:-->\r
               <typ:room>\r
                  <typ:number>?</typ:number>\r
                  <!--You have a CHOICE of the next 2 items at this level-->\r
                  <typ:rirRoomId>?</typ:rirRoomId>\r
                  <typ:svmrLocationId>?</typ:svmrLocationId>\r
                  <typ:isAdded>?</typ:isAdded>\r
                  <typ:isDeleted>?</typ:isDeleted>\r
                  <!--Optional:-->\r
                  <typ:nsiCabinetNameId>?</typ:nsiCabinetNameId>\r
                  <typ:roomTypeId>?</typ:roomTypeId>\r
               </typ:room>\r
            </typ:rooms>\r
            <typ:boardInfo id="?">\r
               <!--Optional:-->\r
               <typ:activationDate>?</typ:activationDate>\r
               <!--Optional:-->\r
               <typ:addressPointId>?</typ:addressPointId>\r
               <typ:name>?</typ:name>\r
               <typ:muId>?</typ:muId>\r
               <!--Optional:-->\r
               <typ:hostname>?</typ:hostname>\r
               <!--Optional:-->\r
               <typ:deviceName>?</typ:deviceName>\r
               <!--Optional:-->\r
               <typ:textForPatients>?</typ:textForPatients>\r
            </typ:boardInfo>\r
         </typ:board>\r
         <!--Optional:-->\r
         <v1:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </v1:options>\r
      </typ:updateBoardRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/eboard/boardManageService/v3/boardManageServicePortType/updateBoardRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="34e77a0b-fb98-49b3-8ffb-96c82403e08f" wsaVersion="NONE" name="Очередь.Записи" type="wsdl" bindingName="{http://emias.mos.ru/eboard/ticketService/v1/}ticketServiceBinding" soapVersion="1_2" anonymous="optional" definition="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService?wsdl"><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="ticketService" targetNamespace="http://emias.mos.ru/eboard/ticketService/v1/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ns="http://emias.mos.ru/eboard/core/v1/" xmlns:ns1="http://emias.mos.ru/eboard/ticketService/v1/types/" xmlns:nsf="http://emias.mos.ru/system/v1/faults/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns="http://emias.mos.ru/eboard/ticketService/v1/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema>
      <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmWtRgEBZs.Ve17_KuG_yBn51EvfnP3qRG7eMmmScOWBDGzmdJ1yeBeDP9zAj5i9R_HDapghRX2Re8.vddbsUiS_cedxL_njM.mxBsLTNbQyP0_NFWG49uvlYxwbFPBzCrNYsNV0PVtFo5CuPXj3Gx1A.iq.uIXEH3XAiT6Ckts.EimMGKA.CECZfWi4P_fQw3s-"/>
      <xs:import namespace="http://emias.mos.ru/system/v1/faults/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmWtRgEBZs.Ve17_KuG_yBn51EvfnP3qRG7eMmmScOWBDGzmdJ1yeBeDP9zAj5i9R_HDapghRX2Re8.vddbsUiS_cedxL_njM.mxBsLTNbQyP0_NFWG49uvlYxwbFPBzCrNYsNV0PVtFo5CuPXj3Gx1A.jmsqJvzAzXMnyJWs9Y4oy65L42LiIQw5CnV"/>
      <xs:import namespace="http://emias.mos.ru/eboard/ticketService/v1/types/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmWtRgEBZs.Ve17_KuG_yBn51EvfnP3qRG7eMmmScOWBDGzmdJ1yeBeDP9zAj5i9R_HDapghRX2Re8.vddbsUiS_cedxL_njM.mxBsLTNbQyP0_NFWG49uvlYxwbFPZ.F7cFsZZpNUsAtZ2OLG_sXAgU.in884P.AH7Hwj6F2JXZ2vV_YS9U6xPEliYdc7Q-"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getTicketListOutput">
    <wsdl:part element="ns1:getTicketListResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="userContext">
    <wsdl:documentation>Контекст пользователя</wsdl:documentation>
    <wsdl:part element="uctx:userContext" name="userContext"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTicketListInput">
    <wsdl:part element="ns1:getTicketListRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTicketByAppointmentIdOutput">
    <wsdl:part element="ns1:getTicketByAppointmentIdResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fault">
    <wsdl:documentation>Ошибка</wsdl:documentation>
    <wsdl:part element="nsf:fault" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTicketByAppointmentIdInput">
    <wsdl:part element="ns1:getTicketByAppointmentIdRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="NewMessage"></wsdl:message>
  <wsdl:portType name="ticketServicePortType">
    <wsdl:operation name="getTicketByAppointmentId">
      <wsdl:documentation>Метод для получения номера талона записи</wsdl:documentation>
      <wsdl:input message="tns:getTicketByAppointmentIdInput"></wsdl:input>
      <wsdl:output message="tns:getTicketByAppointmentIdOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTicketList">
      <wsdl:documentation>Метод для получения списка номеров талонов записей</wsdl:documentation>
      <wsdl:input message="tns:getTicketListInput"></wsdl:input>
      <wsdl:output message="tns:getTicketListOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ticketServiceBinding" type="tns:ticketServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getTicketByAppointmentId">
      <soap:operation soapAction="getTicketByAppointmentId" soapActionRequired="true"/>
      <wsdl:input>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTicketList">
      <soap:operation soapAction="getTicketList" soapActionRequired="true"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ticketService">
    <wsdl:documentation>Сервис для получения номера талона записи</wsdl:documentation>
    <wsdl:port binding="tns:ticketServiceBinding" name="ticketServicePortType">
      <soap:address location="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmWtRgEBZs.Ve17_KuG_yBn51EvfnP3qRG7eMmmScOWBDGzmdJ1yeBeDP9zAj5i9R_HDapghRX2Re8.vddbsUiS_cedxL_njM.mxBsLTNbQyP0_NFWG49uvlYxwbFPBzCrNYsNV0PVtFo5CuPXj3Gx1A.iq.uIXEH3XAiT6Ckts.EimMGKA.CECZfWi4P_fQw3s-</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/userContext/" version="1.0" xmlns="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmWtRgEBZs.Ve17_KuG_yBn51EvfnP3qRG7eMmmScOWBDGzmdJ1yeBeDP9zAj5i9R_HDapghRX2Re8.vddbsUiS_cedxL_njM.mxBsLTNbQyP0_NFWG49uvlYxwbFPBzCrNYsNV0PVtFs4avLDPsBEUJpzt6KK2zMBAGj3_azKzfqT7P"/>
  <xs:element name="userContext" type="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="systemName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Шифр системы-потребителя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя пользователя (логин)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRoleId" type="ID">
        <xs:annotation>
          <xs:documentation>Код Роли</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isUserRoleSystemWide" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак "Общесистемная Роль"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRights">
        <xs:annotation>
          <xs:documentation>Коллекция Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Код Полномочия</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="jobExecutionId" type="ID"/>
      <xs:element minOccurs="0" name="hostIp" type="xs:string">
        <xs:annotation>
          <xs:documentation>IP адрес хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hostName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="options" type="Options">
        <xs:annotation>
          <xs:documentation>Набор именованных значений</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmWtRgEBZs.Ve17_KuG_yBn51EvfnP3qRG7eMmmScOWBDGzmdJ1yeBeDP9zAj5i9R_HDapghRX2Re8.vddbsUiS_cedxL_njM.mxBsLTNbQyP0_NFWG49uvlYxwbFPBzCrNYsNV0PVtFs4avLDPsBEUJpzt6KK2zMBAGj3_azKzfqT7P</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.2" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmWtRgEBZs.Ve17_KuG_yBn51EvfnP3qRG7eMmmScOWBDGzmdJ1yeBeDP9zAj5i9R_HDapghRX2Re8.vddbsUiS_cedxL_njM.mxBsLTNbQyP0_NFWG49uvlYxwbFPBzCrNYsNV0PVtFo5CuPXj3Gx1A.ie.uTGdftg54Sn8n18hza4y8E0-"/>
  <!--references-->
  <xs:element name="mail" type="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalOrganizationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинского учреждения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="compositionId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор
Композиции Think!EHR
ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="simiDocumentId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор
Документа СИМИ
ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--abstract types-->
  <xs:complexType abstract="true" name="Base">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания
компонентов сущностей,
владельцеми которых является
текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор
сущности/записи
на уровне всего ЕМИАС</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="true" name="EntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания сущностей,
владельцем которых является
текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base">
        <xs:attribute name="archived" type="xs:boolean" use="required">
          <xs:annotation>
            <xs:documentation>Признак "Архивная сущность"</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания
компонентов сущностей,
владельцами которых являются
другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignEntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания сущностей,
владельцами которых являются
другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="EntityBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания типов,
реализующих справочники ЕМИАС.НСИ.2</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignEntityBase">
        <xs:sequence>
          <xs:element name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование элемента справочника</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiWithCodeBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания типов,
реализующих справочники ЕМИАС.НСИ.2, в которых имеется бизнес-код</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="NsiBase">
        <xs:attribute name="code" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Бизнес-код</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="SIMIDocumentBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания cведений о документе СИМИ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="simiDocumentId"/>
      <xs:element minOccurs="0" ref="compositionId"/>
    </xs:sequence>
  </xs:complexType>
  <!--async operation status-->
  <xs:element name="operationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор операции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OperationExecutionStatus">
    <xs:annotation>
      <xs:documentation>Статус выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="isCompleted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак окончания выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="completenessProgress" type="OperationCompletenessBase">
        <xs:annotation>
          <xs:documentation>Сведения о текущем статусе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hasSucceded" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак успешности выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
        <xs:annotation>
          <xs:documentation>Коллекция сообщений, порожденных в ходе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор операции</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="false" name="OperationCompletenessPercentage">
    <xs:annotation>
      <xs:documentation>Описание текущего статуса выполнения операции в процентах (0%-100%)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OperationCompletenessBase">
        <xs:sequence>
          <xs:element name="completenessStatus">
            <xs:annotation>
              <xs:documentation>Статус (0%-100%)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:unsignedByte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания текущего статуса выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--calling methods' options-->
  <xs:element name="options" type="Options">
    <xs:annotation>
      <xs:documentation>Параметры вызова метода</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Options">
    <xs:annotation>
      <xs:documentation>Набор именованных значений</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Именованное значение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--pagination-->
  <xs:element name="pagingOptions" type="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="PagingResults">
    <xs:annotation>
      <xs:documentation>Список с пагинацией</xs:documentation>
    </xs:annotation>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageTotal" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество страниц</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morePagesAvailable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Флаг доступности других страниц с результатами для "постраничного листания" (true - если доступны еще страницы; false - иначе)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="totalItemsCount" type="xs:long" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество элементов (на всех страницах)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" ref="sortingOptions"/>
    </xs:sequence>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--sorting-->
  <xs:element name="sortingOptions" type="SortingOptions">
    <xs:annotation>
      <xs:documentation>Параметры сортировки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SortingOptions">
    <xs:annotation>
      <xs:documentation>Условия сортировки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="3" name="sortOrder" type="SortOrder">
        <xs:annotation>
          <xs:documentation>Условия сортировки
(используются в соответствии с
переданной последовательностью)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SortOrder">
    <xs:annotation>
      <xs:documentation>Сортировка</xs:documentation>
    </xs:annotation>
    <xs:attribute name="attributeName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Наименование поля, по которому должна быть произведена сортировка</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="false" name="desceding" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Направление сортировки</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--void response-->
  <xs:element fixed="true" name="result">
    <xs:annotation>
      <xs:documentation>Элемент для использования в методах, не предполагающих возврат какого-либо значения</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:boolean"/>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <!--base types-->
  <xs:complexType name="TimeInterval">
    <xs:annotation>
      <xs:documentation>Временной период (время)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время начала интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время окончания интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--keys-->
  <xs:complexType name="EntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор сущности,
непосредственно принадлежащей
текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор
сущности ЕМИАС,
внешней по отношнению
к текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NsiGlobalId">
    <xs:annotation>
      <xs:documentation>Глобальный идентфикатор
ЕМИАС.НСИ</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmWtRgEBZs.Ve17_KuG_yBn51EvfnP3qRG7eMmmScOWBDGzmdJ1yeBeDP9zAj5i9R_HDapghRX2Re8.vddbsUiS_cedxL_njM.mxBsLTNbQyP0_NFWG49uvlYxwbFPBzCrNYsNV0PVtFo5CuPXj3Gx1A.ie.uTGdftg54Sn8n18hza4y8E0-</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:simpleType name="GUID">
    <xs:annotation>
      <xs:documentation>Глобальный 128-битный идентификатор (Globally Unique Identifier)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="320"/>
      <xs:pattern value=".+@.+\..+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmWtRgEBZs.Ve17_KuG_yBn51EvfnP3qRG7eMmmScOWBDGzmdJ1yeBeDP9zAj5i9R_HDapghRX2Re8.vddbsUiS_cedxL_njM.mxBsLTNbQyP0_NFWG49uvlYxwbFPBzCrNYsNV0PVtFo5CuPXj3Gx1A.jmsqJvzAzXMnyJWs9Y4oy65L42LiIQw5CnV</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/faults/" version="1.0" xmlns="http://emias.mos.ru/system/v1/faults/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmWtRgEBZs.Ve17_KuG_yBn51EvfnP3qRG7eMmmScOWBDGzmdJ1yeBeDP9zAj5i9R_HDapghRX2Re8.vddbsUiS_cedxL_njM.mxBsLTNbQyP0_NFWG49uvlYxwbFPBzCrNYsNV0PVtFo5CuPXj3Gx1A.ie.uTGdftg54Sn8n18hza4y8E0-"/>
  <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmWtRgEBZs.Ve17_KuG_yBn51EvfnP3qRG7eMmmScOWBDGzmdJ1yeBeDP9zAj5i9R_HDapghRX2Re8.vddbsUiS_cedxL_njM.mxBsLTNbQyP0_NFWG49uvlYxwbFPBzCrNYsNV0PVtFo5CuPXj3Gx1A.iq.uIXEH3XAiT6Ckts.EimMGKA.CECZfWi4P_fQw3s-"/>
  <!--faults-->
  <xs:element name="fault" type="BaseFault">
    <xs:annotation>
      <xs:documentation>Базовый тип ошибки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SecurityFault">
    <xs:annotation>
      <xs:documentation>Ошибка безопасности</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element ref="uctx:userContext"/>
          <xs:choice>
            <xs:element name="unauthorizedRequestSecurityException" type="UnauthorizedRequestSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="otherSecurityException" type="OtherSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:sequence>
        <xs:attribute fixed="SECURITY" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BusinessFault">
    <xs:annotation>
      <xs:documentation>Бизнес ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Коллекция Сообщений об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hasErrors" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак наличия ошибок в списке сообщений</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="BUSINESS" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UnexpectedFault">
    <xs:annotation>
      <xs:documentation>Непредвиденная ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="version" type="xs:string">
            <xs:annotation>
              <xs:documentation>Версия продукта-сервиса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="stackTrace">
            <xs:annotation>
              <xs:documentation>Стек вызова (последние 10  записей)</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="10" name="stackTraceRecord">
                  <xs:annotation>
                    <xs:documentation>Запись StackTrace</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="declaringClass" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование класса, содержащего метод</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="methodName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование метода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="fileName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование файла</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="lineNumber" type="xs:int">
                        <xs:annotation>
                          <xs:documentation>Номер строки кода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="UNEXPECTED" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="BaseFault">
    <xs:annotation>
      <xs:documentation>Описание базового типа описания ошибки</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--security exceptions-->
  <xs:complexType name="UnauthorizedRequestSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="requiredRights">
        <xs:annotation>
          <xs:documentation>Перечень идентификаторов недостающих Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Идентификатор Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="UNAUTHORIZED_REQUEST_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="OtherSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="message" type="Message">
        <xs:annotation>
          <xs:documentation>Сообщение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="OTHER_SECURITY_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="SecurityExceptionTypes">
    <xs:annotation>
      <xs:documentation>Типы исключений безопасности</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNAUTHORIZED_REQUEST_EXCEPTION"/>
      <xs:enumeration value="OTHER_SECURITY_EXCEPTION"/>
    </xs:restriction>
  </xs:simpleType>
  <!--components-->
  <xs:simpleType name="FaultTypes">
    <xs:annotation>
      <xs:documentation>Тип ошибки</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="SECURITY">
        <xs:annotation>
          <xs:documentation>Непредвиденная ошибка приложения</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BUSINESS">
        <xs:annotation>
          <xs:documentation>Бизнес ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UNEXPECTED">
        <xs:annotation>
          <xs:documentation>Ошибка безопасности</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmWtRgEBZs.Ve17_KuG_yBn51EvfnP3qRG7eMmmScOWBDGzmdJ1yeBeDP9zAj5i9R_HDapghRX2Re8.vddbsUiS_cedxL_njM.mxBsLTNbQyP0_NFWG49uvlYxwbFPZ.F7cFsZZpNUsAtZ2OLG_sXAgU.in884P.AH7Hwj6F2JXZ2vV_YS9U6xPEliYdc7Q-</con:url><con:content><![CDATA[<!--edited with XMLSpy v2018 rel. 2 sp1 (x64) (http://www.altova.com) by max (maxim)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/eboard/ticketService/v1/types/" xmlns:core="http://emias.mos.ru/eboard/core/v1/" xmlns:tns="http://emias.mos.ru/eboard/ticketService/v1/types/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://emias.mos.ru/eboard/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmWtRgEBZs.Ve17_KuG_yBn51EvfnP3qRG7eMmmScOWBDGzmdJ1yeBeDP9zAj5i9R_HDapghRX2Re8.vddbsUiS_cedxL_njM.mxBsLTNbQyP0_NFWG49uvlYxwbFPZ.F7cFsZZ.M1oO_p_sZ2XpUeMuZkbfWeAHQp.PNHzEB3I-"/>
  <xs:complexType name="AppointmentWithTicket">
    <xs:annotation>
      <xs:documentation>Описание сущности "Запись" c номером талона</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:Base">
        <xs:sequence>
          <xs:element name="appointmentId">
            <xs:annotation>
              <xs:documentation>Идентификатор Записи, владелец которого другой продукт ЕМИАС</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element ref="core:ticket"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="TicketListResultPage">
    <xs:annotation>
      <xs:documentation>Результирующая выборка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:PagingResults">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="appointmentWithTicket" type="tns:AppointmentWithTicket"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--request & response-->
  <!--метод getTicketByAppointmentId-->
  <xs:element name="getTicketByAppointmentIdRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры для метода getTicket</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="appointmentId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="core:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getTicketByAppointmentIdResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры для метода getTicket</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="core:ticket"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--метод getTicketList-->
  <xs:element name="getTicketListRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры для метода getTicketList</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" name="appointmentId" type="core:ID">
          <xs:annotation>
            <xs:documentation>Идентификатор сущности "Запись"</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="core:pagingOptions"/>
        <xs:element minOccurs="0" ref="core:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getTicketListResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры для метода getTicketList</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="tns:TicketListResultPage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmWtRgEBZs.Ve17_KuG_yBn51EvfnP3qRG7eMmmScOWBDGzmdJ1yeBeDP9zAj5i9R_HDapghRX2Re8.vddbsUiS_cedxL_njM.mxBsLTNbQyP0_NFWG49uvlYxwbFPZ.F7cFsZZ.M1oO_p_sZ2XpUeMuZkbfWeAHQp.PNHzEB3I-</con:url><con:content><![CDATA[<!--edited with XMLSpy v2018 rel. 2 sp1 (x64) (http://www.altova.com) by MESMERiZE (MSM)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/eboard/core/v1/" xmlns:core="http://emias.mos.ru/eboard/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmWtRgEBZs.Ve17_KuG_yBn51EvfnP3qRG7eMmmScOWBDGzmdJ1yeBeDP9zAj5i9R_HDapghRX2Re8.vddbsUiS_cedxL_njM.mxBsLTNbQyP0_NFWG49uvlYxwbFPBzCrNYsNV0PVtFs4avLDPsBEUJpzt6KK2zMBAGj3_azKzfqT7P"/>
  <xs:element name="ticket" type="xs:string">
    <xs:annotation>
      <xs:documentation>Номер талона записи</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--entities(short)-->
  <xs:complexType name="BoardShort">
    <xs:annotation>
      <xs:documentation>Сущность "Электронное табло"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:EntityBase">
        <xs:sequence>
          <xs:element name="status">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="ACTIVE"/>
                <xs:enumeration value="ARHIVE"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="archiveDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата архивации</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="createDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата создания табло</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BoardInfoShort">
    <xs:annotation>
      <xs:documentation>Сущность "Информация о табло" / Изменения в табло</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:EntityBase">
        <xs:sequence>
          <xs:element name="activationDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>Дата активация информации о табло</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="addressPointId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор объекта БТИ(ИД здания)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование Электронного табло</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="muId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор медицинского учреждения</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="deviceName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование устройства</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="archiveDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата архивации записи</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="textForPatients" type="xs:string">
            <xs:annotation>
              <xs:documentation>Текст сообщения для пациентов, неявившихся на прием</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="RoomShort">
    <xs:annotation>
      <xs:documentation>Сущность "Кабинет"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:Base">
        <xs:sequence>
          <xs:element minOccurs="0" name="rirRoomId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор кабинета владельцем владельцем которого является другой
                                продукт ЕМИАС(РИР.2)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="svmrLocationId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор кабинета владельцем владельцем которого является другой
                                продукт ЕМИАС(СВМР.2)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="number" type="xs:string">
            <xs:annotation>
              <xs:documentation>Номер кабинета</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="RoomShortWithRelevanceAttribute">
    <xs:annotation>
      <xs:documentation>Сущность "Кабинет"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:RoomShort">
        <xs:sequence>
          <xs:element name="isAdded" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак добавления кабинета</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="isDeleted" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак удаления кабинета</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AppointmentShort">
    <xs:annotation>
      <xs:documentation>Сущность "Запись"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:Base">
        <xs:sequence>
          <xs:element name="appointmentId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор Записи, владелец которого другой продукт ЕМИАС</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="muId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор МУ</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="startTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата начала записи</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="endTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата окончания записи</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="status">
            <xs:annotation>
              <xs:documentation>Статус</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="CREATE"/>
                <xs:enumeration value="PATIENT_INVITED"/>
                <xs:enumeration value="CANCELED"/>
                <xs:enumeration value="RECEPTION"/>
                <xs:enumeration value="SKIPPED"/>
                <xs:enumeration value="FINISH"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element name="patientId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор пациента ЕМИАС</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="type">
            <xs:annotation>
              <xs:documentation>Тип события</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="BM"/>
                <xs:enumeration value="DOCTOR"/>
                <xs:enumeration value="LDP"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element name="createDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата создания</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ResourceShort">
    <xs:annotation>
      <xs:documentation>Cущность "Ресурс"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:Base">
        <xs:sequence>
          <xs:element name="availableName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование доступного ресурса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="availableResourceId" type="xs:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор доступного ресурса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="rirRoomId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор кабинета владельцем владельцем которого является другой
                                продукт ЕМИАС (РИР.2)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="svmrLocationId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор кабинета владельцем владельцем которого является другой
                                продукт ЕМИАС(СВМР.2)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="complexResourceId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор ресурса</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AppointmentStatusHistoryShort">
    <xs:annotation>
      <xs:documentation>Сущность "История статусов записи"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:Base">
        <xs:sequence>
          <xs:element name="createDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата создания статуса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="status" type="xs:string">
            <xs:annotation>
              <xs:documentation>Статус</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="EmployeeShort">
    <xs:annotation>
      <xs:documentation>Сущность "Врач"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:Base">
        <xs:sequence>
          <xs:element name="specialityId" type="core:ID">
            <xs:annotation>
              <xs:documentation>Идентификатор специальности</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="specialityTitle" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование специальности</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="lastName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Фамилия врача</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="firstName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Имя врача</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="middleName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Отчество врача</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--entities(extension)-->
  <xs:complexType name="RoomExtension">
    <xs:annotation>
      <xs:documentation>Расширенные сведения о Кабинете</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:RoomShort">
        <xs:sequence minOccurs="0">
          <xs:element minOccurs="0" name="appointments">
            <xs:annotation>
              <xs:documentation>Коллекция "Запись"</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="1" name="appointment" type="core:AppointmentExtension"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AppointmentExtension">
    <xs:annotation>
      <xs:documentation>Расширенные сведения о Записи</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:AppointmentShort">
        <xs:sequence>
          <xs:element name="resource" type="core:ResourceExtension">
            <xs:annotation>
              <xs:documentation>Ресурс</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="statusHistory">
            <xs:annotation>
              <xs:documentation>Коллекция "История статусов"</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="status" type="core:AppointmentStatusHistoryShort"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element ref="core:ticket"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ResourceExtension">
    <xs:annotation>
      <xs:documentation>Расширенные сведения о Ресурсе</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:ResourceShort">
        <xs:sequence>
          <xs:element minOccurs="0" name="employee" type="core:EmployeeShort">
            <xs:annotation>
              <xs:documentation>Врач</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BoardExtension">
    <xs:annotation>
      <xs:documentation>Расширенные сведения об Электронном табло</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:BoardShort">
        <xs:sequence>
          <xs:element name="boardInfo" type="core:BoardInfoExtension">
            <xs:annotation>
              <xs:documentation>информация о табло</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AppointmentWithRoomShort">
    <xs:annotation>
      <xs:documentation>Сведения о Записи пациента и Кабинете</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:AppointmentShort">
        <xs:sequence minOccurs="0">
          <xs:element name="room" type="core:RoomShort"/>
          <xs:element minOccurs="0" name="statusCreateDate" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Дата создания статуса</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BoardInfoExtension">
    <xs:annotation>
      <xs:documentation>Расширенные сведения о "Табло"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:BoardInfoShort">
        <xs:sequence>
          <xs:element minOccurs="0" name="rooms">
            <xs:annotation>
              <xs:documentation>Коллекция "Кабинет"</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="room" type="core:RoomShort"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AppointmentFullInfo">
    <xs:annotation>
      <xs:documentation>Расширенные сведения о Записи</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:AppointmentShort">
        <xs:annotation>
          <xs:documentation>Идентификатор табло</xs:documentation>
          <xs:documentation>Наименование табло</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="resource" type="core:ResourceExtension">
            <xs:annotation>
              <xs:documentation>Ресурс</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="statusHistory">
            <xs:annotation>
              <xs:documentation>Коллекция "История статусов"</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="status" type="core:AppointmentStatusHistoryShort"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="room" type="core:RoomShort"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DateTimePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService</con:endpoint></con:endpoints><con:operation id="ee01ea99-2f2e-4ffc-8f0f-946387ca7e84" isOneWay="false" action="getTicketByAppointmentId" name="getTicketByAppointmentId" bindingOperationName="getTicketByAppointmentId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="30cccd44-f3be-4369-8565-c82c8c34ef61" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/eboard/ticketService/v1/types/" xmlns:v1="http://emias.mos.ru/eboard/core/v1/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getTicketByAppointmentIdRequest>\r
         <typ:appointmentId>?</typ:appointmentId>\r
         <!--Optional:-->\r
         <v1:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </v1:options>\r
      </typ:getTicketByAppointmentIdRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/eboard/ticketService/v1/ticketServicePortType/getTicketByAppointmentIdRequest"/></con:call><con:call id="f6bdfb9e-a54e-4233-b71e-56ed403abf36" name="getTicketByAppointmentId"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-e01bd8e3-a802-4a99-8563-c0463ec799e9">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns3:userContext xmlns="http://emias.mos.ru/eboard/ticketService/v1/types/" xmlns:ns2="http://emias.mos.ru/eboard/core/v1/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/">\r
         <ns3:systemName>EIM</ns3:systemName>\r
         <ns3:userName>EIM</ns3:userName>\r
         <ns3:userRoleId>7187</ns3:userRoleId>\r
         <ns3:isUserRoleSystemWide>true</ns3:isUserRoleSystemWide>\r
         <ns3:userRights>\r
            <ns3:userRightId>505401</ns3:userRightId>\r
         </ns3:userRights>\r
         <ns3:jobExecutionId>0</ns3:jobExecutionId>\r
      </ns3:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <getTicketByAppointmentIdRequest xmlns="http://emias.mos.ru/eboard/ticketService/v1/types/" xmlns:ns2="http://emias.mos.ru/eboard/core/v1/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/">\r
         <appointmentId>391900972348</appointmentId>\r
      </getTicketByAppointmentIdRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/eboard/ticketService/v1/ticketServicePortType/getTicketByAppointmentIdRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="3b914ecd-13f4-43da-b8d6-d1a38b1e51c7" isOneWay="false" action="getTicketList" name="getTicketList" bindingOperationName="getTicketList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4876d501-f036-4670-b5a9-d04c66c4e128" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/eboard/ticketService/v1/types/" xmlns:v1="http://emias.mos.ru/eboard/core/v1/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getTicketListRequest>\r
         <!--1 or more repetitions:-->\r
         <typ:appointmentId>?</typ:appointmentId>\r
         <v1:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v1:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v1:sortOrder attributeName="?" desceding="false"/>\r
            </v1:sortingOptions>\r
         </v1:pagingOptions>\r
         <!--Optional:-->\r
         <v1:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </v1:options>\r
      </typ:getTicketListRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/eboard/ticketService/v1/ticketServicePortType/getTicketListRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:RestService" id="86b599a0-0df2-4240-8047-dc3b2ab585e8" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://application-emiasinfo4.emias.solit-clouds.ru" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://application-emiasinfo4.emias.solit-clouds.ru</con:endpoint></con:endpoints><con:resource name="{medicationId}" path="/api/v2/medication/{medicationId}" id="d96ab2dd-cdf0-41fc-a6b0-d3ef14ecbc8b"><con:settings/><con:parameters><con:parameter><con:name>medicationId</con:name><con:value>medicationId</con:value><con:style>TEMPLATE</con:style><con:default>medicationId</con:default></con:parameter><con:parameter><con:name>patientId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>EI-token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="7e9e58bf-dc75-4200-b6e2-b42005130b28" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401 500 400 403 404</con:status><con:params/><con:element xmlns:ns="http://application-emiasinfo4.emias.solit-clouds.ru/api/v2/medication/1429026">ns:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ns="http://application-emiasinfo4.emias.solit-clouds.ru/api/v2/medication/1429026">ns:Response</con:element></con:representation><con:request name="Request 1" id="abd332b3-b1f0-46f9-89ab-5f17beb0ab81" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://application-emiasinfo4.emias.solit-clouds.ru</con:endpoint><con:request/><con:originalUri>http://application-emiasinfo4.emias.solit-clouds.ru/api/v2/medication/1429026</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="medicationId" value="1429026"/>
  <con:entry key="patientId" value="11715757"/>
  <con:entry key="EI-token" value="nMy1BkAkF5U_ugbtQhVsr03pNNF6O_stRBPUeb9XdNk"/>
</con:parameters><con:parameterOrder><con:entry>medicationId</con:entry><con:entry>patientId</con:entry><con:entry>EI-token</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="getLpusForVaccinations" path="/api/v2/saOrchestratorCovid/getLpusForVaccinations" id="92104073-8e2a-4646-8b8c-95e091311cf0"><con:settings/><con:parameters><con:parameter><con:name>Mock-saOrchestrator</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="280f0bdb-8d7e-4e15-a4a5-f1ca88b3ce39" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500 404 400</con:status><con:params/><con:element xmlns:get="http://application-emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/getLpusForVaccinations">get:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:get="http://application-emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/getLpusForVaccinations">get:Response</con:element></con:representation><con:request name="Request 1" id="461d56ab-c615-456a-bf05-f0e95d26c367" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber" : "7789789727001182",
    "birthDate": "2012-10-22"
}</con:request><con:originalUri>http://application-emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/getLpusForVaccinations</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>Mock-saOrchestrator</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="getReferralsInfo" path="/api/v2/saOrchestrator/getReferralsInfo" id="04b904ca-478b-471b-8048-dfa5b49dc7ef"><con:settings/><con:parameters/><con:method name="Method 1" id="f4aabe99-1a31-41b6-bca4-c84f560f0d8c" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:get="http://emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestrator/getReferralsInfo">get:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:get="http://application-emiasinfo3.emias.solit-clouds.ru/api/v2/saOrchestrator/getReferralsInfo">get:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="756d86f7-c843-4d9f-8a8b-d48facd2815c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Mock-id" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry/></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="b2d15ca9-7738-45f4-ba10-ba5080de5223" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://notification-emiasinfo1.emias.solit-clouds.ru" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://notification-emiasinfo1.emias.solit-clouds.ru</con:endpoint></con:endpoints><con:resource name="env" path="/actuator/env" id="f11b3854-204e-4728-884b-49a47afaac00"><con:settings/><con:parameters/><con:method name="Method 1" id="df9a5317-c0ac-4b7d-afaf-28ccd487b0ed" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/vnd.spring-boot.actuator.v3+json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:env="http://notification-emiasinfo1.emias.solit-clouds.ru/actuator/env">env:Response</con:element></con:representation><con:request name="Request 1" id="adada609-6fe3-4216-9457-de14bb47a415" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://notification-emiasinfo1.emias.solit-clouds.ru</con:endpoint><con:request/><con:originalUri>http://notification-emiasinfo1.emias.solit-clouds.ru/actuator/env</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:WsdlInterface" id="c888db5f-ef1b-4825-b383-55500b1b58d6" wsaVersion="NONE" name="ИД" type="wsdl" bindingName="{http://emias.mos.ru/emiasid/assignmentService/v2_2/}assignmentServiceBindings" soapVersion="1_2" anonymous="optional" definition="http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?wsdl"><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="assignmentService" targetNamespace="http://emias.mos.ru/emiasid/assignmentService/v2_2/" xmlns="http://emias.mos.ru/emiasid/assignmentService/v2_2/types/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ns="http://emias.mos.ru/emiasid/core/v2/" xmlns:ns1="http://emias.mos.ru/emiasid/assignmentService/v2/types/" xmlns:ns2="http://emias.mos.ru/emiasid/assignmentService/v2_2/types/" xmlns:nsf="http://emias.mos.ru/system/v1/faults/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns="http://emias.mos.ru/emiasid/assignmentService/v2_2/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema>
      <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChBMVMgIpTOzt5nCr6DvvidC2egssQt2UejzC0cbdeW8cBYzb6CL5_pY_tg--"/>
      <xs:import namespace="http://emias.mos.ru/system/v1/faults/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChBMVMgIpTOzt5nCr.yn_l.eqOgc6Xu7blzhVJMWuDvaGbDLr5X4-"/>
      <xs:import namespace="http://emias.mos.ru/emiasid/assignmentService/v2_2/types/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChFQCZRAuWuik_izg8zzZnuGvfRwsFN.IXX2I.lwDpQ7MQ44vzA5VG.hIN.6sgp8FMI8Huw--"/>
      <xs:import namespace="http://emias.mos.ru/emiasid/core/v2/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChFQCZRIyW.Tt5nOr5TvutHJd6OPyNMVQ65VUOgNJmg--"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="userContext">
    <wsdl:documentation>Контекст пользователя</wsdl:documentation>
    <wsdl:part element="uctx:userContext" name="userContext"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAssignmentHistoryOutput">
    <wsdl:part element="ns1:getAssignmentHistoryResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="mappingLegacyIdsInput">
    <wsdl:part element="ns1:mappingLegacyIdsRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAssignmentsByEmployeeOutput">
    <wsdl:part element="ns1:getAssignmentsByEmployeeResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchAssignmentsExtensionInput">
    <wsdl:part element="searchAssignmentsExtensionRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="screeningInfoInput">
    <wsdl:part element="screeningInfoRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActiveAssignmentsByPatientOutput">
    <wsdl:part element="getActiveAssignmentsByPatientResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAssignmentsByEmployeeInput">
    <wsdl:part element="ns1:getAssignmentsByEmployeeRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAssignmentHistoryInput">
    <wsdl:part element="ns1:getAssignmentHistoryRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchAssignmentsExtensionOutput">
    <wsdl:part element="ns1:searchAssignmentsExtensionResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchAssignmentsShortOutput">
    <wsdl:part element="ns1:searchAssignmentsShortResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="mappingLegacyShortOutput">
    <wsdl:part element="mappingLegacyShortResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchAssignmentsShortInput">
    <wsdl:part element="searchAssignmentsShortRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchAssignmentsDescribeOutput">
    <wsdl:part element="searchAssignmentsDescribeResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="screeningInfoOutput">
    <wsdl:part element="screeningInfoResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAssignmentsByIdsOutput">
    <wsdl:part element="ns1:getAssignmentsByIdsResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAssignmentsByPatientOutput">
    <wsdl:part element="ns1:getAssignmentsByPatientResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="mappingLegacyIdsOutput">
    <wsdl:part element="ns1:mappingLegacyIdsResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="mappingLegacyShortInput">
    <wsdl:part element="mappingLegacyShortRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActiveAssignmentsByPatientInput">
    <wsdl:part element="getActiveAssignmentsByPatientRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fault">
    <wsdl:documentation>Ошибка</wsdl:documentation>
    <wsdl:part element="nsf:fault" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAssignmentsByIdsInput">
    <wsdl:part element="ns1:getAssignmentsByIdsRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchAssignmentsDescribeInput">
    <wsdl:part element="searchAssignmentsDescribeRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAssignmentsByPatientInput">
    <wsdl:part element="ns1:getAssignmentsByPatientRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="assignmentServicePortType">
    <wsdl:operation name="getAssignmentsByPatient">
      <wsdl:documentation>Получить Назначения/Направления Пациента</wsdl:documentation>
      <wsdl:input message="tns:getAssignmentsByPatientInput"></wsdl:input>
      <wsdl:output message="tns:getAssignmentsByPatientOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActiveAssignmentsByPatient">
      <wsdl:documentation>Получить Назначения/Направления Пациента</wsdl:documentation>
      <wsdl:input message="tns:getActiveAssignmentsByPatientInput"></wsdl:input>
      <wsdl:output message="tns:getActiveAssignmentsByPatientOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssignmentsByIds">
      <wsdl:documentation>Получить Назначение(я)/Направление(я) по идентификатору(ам):
- ID назначения на инструментальную диагностику
- ID документ СИМИ
- ID композиций Think!Ehr
- ID Записи Пациента на проведение исследования
- ID Клинического события, связанного с Назначением</wsdl:documentation>
      <wsdl:input message="tns:getAssignmentsByIdsInput"></wsdl:input>
      <wsdl:output message="tns:getAssignmentsByIdsOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssignmentsByEmployee">
      <wsdl:documentation>Получить Назначения, назначенные конкретным Врачом</wsdl:documentation>
      <wsdl:input message="tns:getAssignmentsByEmployeeInput"></wsdl:input>
      <wsdl:output message="tns:getAssignmentsByEmployeeOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchAssignmentsExtension">
      <wsdl:documentation>Поиск расширенных сведений о Назначениях по набору параметров 2</wsdl:documentation>
      <wsdl:input message="tns:searchAssignmentsExtensionInput"></wsdl:input>
      <wsdl:output message="tns:searchAssignmentsExtensionOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchAssignmentsShort">
      <wsdl:documentation>Поиск кратких сведений о Назначениях по набору параметров</wsdl:documentation>
      <wsdl:input message="tns:searchAssignmentsShortInput"></wsdl:input>
      <wsdl:output message="tns:searchAssignmentsShortOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssignmentHistory">
      <wsdl:documentation>Получить
историю Действий над Назначением
по его идентификатору</wsdl:documentation>
      <wsdl:input message="tns:getAssignmentHistoryInput"></wsdl:input>
      <wsdl:output message="tns:getAssignmentHistoryOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="mappingLegacyIds">
      <wsdl:documentation>Получить соответствие идентификаторов:
- Назначения/Направления ЕМИАС.ИД Направлению ЕМИАС.СУПП
-  Направления ЕМИАС.СУПП Назначению/Направлению ЕМИАС.ИД

!!!LEGACY!!!
Метод предназначен только для обеспечения обратной совместимости
и будет существовать только до момента вывода ЕМИАС.СУПП из ПЭ
!!!LEGACY!!!</wsdl:documentation>
      <wsdl:input message="tns:mappingLegacyIdsInput"></wsdl:input>
      <wsdl:output message="tns:mappingLegacyIdsOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="mappingLegacyShort">
      <wsdl:documentation>Получить соответствие идентификаторов:
				- Назначения/Направления ЕМИАС.ИД Направлению ЕМИАС.СУПП
				-  Направления ЕМИАС.СУПП Назначению/Направлению ЕМИАС.ИД

				!!!LEGACY!!!
				Метод предназначен только для обеспечения обратной совместимости
				и будет существовать только до момента вывода ЕМИАС.СУПП из ПЭ
				!!!LEGACY!!!</wsdl:documentation>
      <wsdl:input message="tns:mappingLegacyShortInput"></wsdl:input>
      <wsdl:output message="tns:mappingLegacyShortOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchAssignmentsDescribe">
      <wsdl:documentation>Поиск расширенных сведений о Назначениях по набору параметров 2</wsdl:documentation>
      <wsdl:input message="tns:searchAssignmentsDescribeInput"></wsdl:input>
      <wsdl:output message="tns:searchAssignmentsDescribeOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="screeningInfo">
      <wsdl:documentation>Вычисление периода действия назначения для скрининга беременных</wsdl:documentation>
      <wsdl:input message="tns:screeningInfoInput"></wsdl:input>
      <wsdl:output message="tns:screeningInfoOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="assignmentServiceBindings" type="tns:assignmentServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getAssignmentsByPatient">
      <soap:operation soapAction="getAssignmentsByPatient" soapActionRequired="true"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActiveAssignmentsByPatient">
      <soap:operation soapAction="getActiveAssignmentsByPatient" soapActionRequired="true"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssignmentsByIds">
      <soap:operation soapAction="getAssignmentsByIds" soapActionRequired="true"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssignmentsByEmployee">
      <soap:operation soapAction="getAssignmentsByEmployee" soapActionRequired="true"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchAssignmentsExtension">
      <soap:operation soapAction="searchAssignmentsExtension" soapActionRequired="true"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchAssignmentsShort">
      <soap:operation soapAction="searchAssignmentsShort" soapActionRequired="true"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssignmentHistory">
      <soap:operation soapAction="getAssignmentHistory" soapActionRequired="true"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="mappingLegacyIds">
      <soap:operation soapAction="mappingLegacyIds" soapActionRequired="true"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="mappingLegacyShort">
      <soap:operation soapAction="mappingLegacyShort" soapActionRequired="true"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchAssignmentsDescribe">
      <soap:operation soapAction="searchAssignmentsDescribe" soapActionRequired="true"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="screeningInfo">
      <soap:operation soapAction="screeningInfo" soapActionRequired="true"/>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="assignmentService">
    <wsdl:documentation>Сервис Назначения на ИД (Версия 2.2)</wsdl:documentation>
    <wsdl:port binding="tns:assignmentServiceBindings" name="assignmentServicePort">
      <soap:address location="http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChBMVMgIpTOzt5nCr6DvvidC2egssQt2UejzC0cbdeW8cBYzb6CL5_pY_tg--</con:url><con:content><![CDATA[<!--edited with XMLSpy v2011 rel. 2 (http://www.altova.com) by DIT (DIT)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/userContext/" xmlns="http://emias.mos.ru/system/v1/userContext/" xmlns:core="http://emias.mos.ru/emias/core/v1/" xmlns:sys="http://emias.mos.ru/system/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://emias.mos.ru/system/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChBMVMgIpTOzt5nCr5TvuNU58L2W9UO8bLJtJUOaYRQ--"/>
  <xs:import namespace="http://emias.mos.ru/emias/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChBMFJAM4B_fyvjn2.ZO9rDG.Bd.7cjlx0udsysA-"/>
  <xs:element name="userContext" type="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="systemName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Шифр системы-потребителя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя пользователя (логин)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRoleId" type="sys:ID">
        <xs:annotation>
          <xs:documentation>Идентификатор Роли пользователя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isUserRoleSystemWide" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак "Общесистемная Роль пользователя"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRights">
        <xs:annotation>
          <xs:documentation>Коллекция Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userRightId" type="sys:ID">
              <xs:annotation>
                <xs:documentation>ИД Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="jobExecutionId" type="sys:ID"/>
      <xs:element minOccurs="0" name="hostIp" type="xs:string">
        <xs:annotation>
          <xs:documentation>IP адрес хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hostName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="options" type="core:Options"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChBMVMgIpTOzt5nCr5TvuNU58L2W9UO8bLJtJUOaYRQ--</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/" xmlns:tns="http://emias.mos.ru/system/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="tns:ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="tns:KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="tns:ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="tns:ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:simpleType name="GUID">
    <xs:annotation>
      <xs:documentation>Глобальный 128-битный идентификатор (Globally Unique Identifier)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChBMFJAM4B_fyvjn2.ZO9rDG.Bd.7cjlx0udsysA-</con:url><con:content><![CDATA[<!--edited with XMLSpy v2011 rel. 2 (http://www.altova.com) by ceperaaa (-)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/emias/core/v1/" xmlns:sys="http://emias.mos.ru/system/v1/" xmlns:tns="http://emias.mos.ru/emias/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://emias.mos.ru/system/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChBMVMgIpTOzt5nCr5TvuNU58L2W9UO8bLJtJUOaYRQ--"/>
  <!--references-->
  <xs:element name="medicalOrganizationId" type="sys:ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="sys:ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинского учреждения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--abstract types-->
  <xs:complexType abstract="true" name="Base">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания
компонентов сущностей,
владельцеми которых является
текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:attribute name="id" type="sys:ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор
сущности/записи
на уровне всего ЕМИАС</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="true" name="EntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания сущностей,
владельцем которых является
текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:Base">
        <xs:attribute name="archived" type="xs:boolean" use="required">
          <xs:annotation>
            <xs:documentation>Признак "Архивная сущность"</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания
компонентов сущностей,
владельцами которых являются
другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignEntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания сущностей,
владельцами которых являются
другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:EntityBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания типов,
реализующих справочники ЕМИАС.НСИ.2</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:ForeignEntityBase">
        <xs:sequence>
          <xs:element name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование элемента справочника</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiWithCodeBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания типов,
реализующих справочники ЕМИАС.НСИ.2, в которых имеется бизнес-код</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:NsiBase">
        <xs:attribute name="code" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Бизнес-код</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--async operation status-->
  <xs:element name="operationId" type="sys:ID">
    <xs:annotation>
      <xs:documentation>Идентификатор операции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OperationExecutionStatus">
    <xs:annotation>
      <xs:documentation>Статус выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="isCompleted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак окончания выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="completenessProgress" type="tns:OperationCompletenessBase">
        <xs:annotation>
          <xs:documentation>Сведения о текущем статусе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hasSucceded" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак успешности выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="messages" type="sys:ErrorMessageCollection">
        <xs:annotation>
          <xs:documentation>Коллекция сообщений, порожденных в ходе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="sys:ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор операции</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="false" name="OperationCompletenessPercentage">
    <xs:annotation>
      <xs:documentation>Описание текущего статуса выполнения операции в процентах (0%-100%)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:OperationCompletenessBase">
        <xs:sequence>
          <xs:element name="completenessStatus">
            <xs:annotation>
              <xs:documentation>Статус (0%-100%)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:unsignedByte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания текущего статуса выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--calling methods' options-->
  <xs:element name="options" type="tns:Options">
    <xs:annotation>
      <xs:documentation>Параметры вызова метода</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Options">
    <xs:annotation>
      <xs:documentation>Набор именованных значений</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="sys:KeyValuePair">
        <xs:annotation>
          <xs:documentation>Именованное значение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--pagination-->
  <xs:element name="pagingOptions" type="tns:PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="PagingResults">
    <xs:annotation>
      <xs:documentation>Список с пагинацией</xs:documentation>
    </xs:annotation>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageTotal" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество страниц</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morePagesAvailable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Флаг доступности других страниц с результатами для "постраничного листания" (true - если доступны еще страницы; false - иначе)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="totalItems" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество элементов</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" ref="tns:sortingOptions"/>
    </xs:sequence>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--sorting-->
  <xs:element name="sortingOptions" type="tns:SortingOptions">
    <xs:annotation>
      <xs:documentation>Параметры сортировки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SortingOptions">
    <xs:annotation>
      <xs:documentation>Условия сортировки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="3" name="sortOrder" type="tns:SortOrder">
        <xs:annotation>
          <xs:documentation>Условия сортировки
(используются в соответствии с
переданной последовательностью)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SortOrder">
    <xs:annotation>
      <xs:documentation>Сортировка</xs:documentation>
    </xs:annotation>
    <xs:attribute name="attributeName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Наименование поля, по которому должна быть произведена сортировка</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="false" name="desceding" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Направление сортировки</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--base types-->
  <xs:complexType name="TimeInterval">
    <xs:annotation>
      <xs:documentation>Временной период (время)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время начала интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время окончания интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ConductDatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--keys-->
  <xs:complexType name="EntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор сущности,
непосредственно принадлежащей
текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор
сущности ЕМИАС,
внешней по отношнению
к текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NsiGlobalId">
    <xs:annotation>
      <xs:documentation>Глобальный идентфикатор
ЕМИАС.НСИ</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChBMVMgIpTOzt5nCr.yn_l.eqOgc6Xu7blzhVJMWuDvaGbDLr5X4-</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/faults/" xmlns="http://emias.mos.ru/system/v1/faults/" xmlns:sys="http://emias.mos.ru/system/v1/" xmlns:tns="http://emias.mos.ru/system/v1/faults/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://emias.mos.ru/system/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChBMVMgIpTOzt5nCr5TvuNU58L2W9UO8bLJtJUOaYRQ--"/>
  <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChBMVMgIpTOzt5nCr6DvvidC2egssQt2UejzC0cbdeW8cBYzb6CL5_pY_tg--"/>
  <!--faults-->
  <xs:element name="fault" type="tns:BaseFault">
    <xs:annotation>
      <xs:documentation>Базовый тип ошибки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SecurityFault">
    <xs:annotation>
      <xs:documentation>Ошибка безопасности</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:BaseFault">
        <xs:sequence>
          <xs:element ref="uctx:userContext"/>
          <xs:choice>
            <xs:element name="unauthorizedRequestSecurityException" type="tns:UnauthorizedRequestSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="otherSecurityException" type="tns:OtherSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:sequence>
        <xs:attribute fixed="SECURITY" name="type" type="tns:FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BusinessFault">
    <xs:annotation>
      <xs:documentation>Бизнес ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="messages" type="sys:ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Коллекция Сообщений об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hasErrors" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак наличия ошибок в списке сообщений</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="BUSINESS" name="type" type="tns:FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UnexpectedFault">
    <xs:annotation>
      <xs:documentation>Непредвиденная ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:BaseFault">
        <xs:sequence>
          <xs:element name="version" type="xs:string">
            <xs:annotation>
              <xs:documentation>Версия продукта-сервиса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="stackTrace">
            <xs:annotation>
              <xs:documentation>Стек вызова (последние 10  записей)</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="10" name="stackTraceRecord">
                  <xs:annotation>
                    <xs:documentation>Запись StackTrace</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="declaringClass" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование класса, содержащего метод</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="methodName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование метода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="fileName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование файла</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="lineNumber" type="xs:int">
                        <xs:annotation>
                          <xs:documentation>Номер строки кода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="UNEXPECTED" name="type" type="tns:FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="BaseFault">
    <xs:annotation>
      <xs:documentation>Описание базового типа описания ошибки</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--security exceptions-->
  <xs:complexType name="UnauthorizedRequestSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="requiredRights">
        <xs:annotation>
          <xs:documentation>Перечень идентификаторов недостающих Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="userRightId" type="sys:ID">
              <xs:annotation>
                <xs:documentation>Идентификатор Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="UNAUTHORIZED_REQUEST_EXCEPTION" name="type" type="tns:SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="OtherSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="message" type="sys:Message">
        <xs:annotation>
          <xs:documentation>Сообщение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="OTHER_SECURITY_EXCEPTION" name="type" type="tns:SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="SecurityExceptionTypes">
    <xs:annotation>
      <xs:documentation>Типы исключений безопасности</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNAUTHORIZED_REQUEST_EXCEPTION"/>
      <xs:enumeration value="OTHER_SECURITY_EXCEPTION"/>
    </xs:restriction>
  </xs:simpleType>
  <!--components-->
  <xs:simpleType name="FaultTypes">
    <xs:annotation>
      <xs:documentation>Тип ошибки</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="SECURITY">
        <xs:annotation>
          <xs:documentation>Непредвиденная ошибка приложения</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BUSINESS">
        <xs:annotation>
          <xs:documentation>Бизнес ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UNEXPECTED">
        <xs:annotation>
          <xs:documentation>Ошибка безопасности</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChFQCZRAuWuik_izg8zzZnuGvfRwsFN.IXX2I.lwDpQ7MQ44vzA5VG.hIN.6sgp8FMI8Huw--</con:url><con:content><![CDATA[<!--edited with XMLSpy v2011 rel. 2 (http://www.altova.com) by ceperaaa (-)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/emiasid/assignmentService/v2_2/types/" version="2.2" xmlns="http://emias.mos.ru/emiasid/assignmentService/v2_2/types/" xmlns:core="http://emias.mos.ru/emiasid/core/v2/" xmlns:core1="http://emias.mos.ru/emias/core/v1/" xmlns:ns1="http://emias.mos.ru/emiasid/assignmentService/v2/types/" xmlns:tns="http://emias.mos.ru/emiasid/assignmentService/v2_2/types/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://emias.mos.ru/emiasid/assignmentService/v2/types/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChFQCZRAuWuik_izg8zzZnuGvfRwsFN.ILDvf_kAA7gWRXxKwzkXiysTeiU7UQc6a0k0-"/>
  <xs:import namespace="http://emias.mos.ru/emias/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChBMFJAM4B_fyvjn2.ZO9rDG.Bd.7cjlx0udsysA-"/>
  <xs:import namespace="http://emias.mos.ru/emiasid/core/v2/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChFQCZRIyW.Tt5nOr5TvutHJd6OPyNMVQ65VUOgNJmg--"/>
  <!--filter elements-->
  <xs:element name="assignmentFilter" type="ns1:AssignmentFilter">
    <xs:annotation>
      <xs:documentation>Условия фильтрации по сведениям, идентифицирующим Назначения (на инструментальную диагностику)</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="diagnosticFilter" type="ns1:DiagnosticFilter">
    <xs:annotation>
      <xs:documentation>Условия фильтрации по Инструментальным исследованиям</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="dateFilter" type="core1:DatePeriod">
    <xs:annotation>
      <xs:documentation>Условия фильтрации
				по датам

				Для примнения фильтра
				обязательно должен быть передан как минимум один из элементов:
				- start
				- end</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="conductDateFilter" type="core1:ConductDatePeriod">
    <xs:annotation>
      <xs:documentation>Условия фильтрации
				по дате проведения приёма
				Для примнения фильтра
				обязательно должен быть передан как минимум один из элементов:
				- start
				- end</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="status" type="AssignmentDescribeStatus">
    <xs:annotation>
      <xs:documentation>Условия фильтрации
				по статусу назначения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--types-->
  <xs:complexType name="AssignmentDescribeListResultPage">
    <xs:annotation>
      <xs:documentation>Результаты отбора Назначений (с расширенными сведениями)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core1:PagingResults">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" ref="core:assignmentDescribe"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AssignmentDescribeStatusFilter">
    <xs:annotation>
      <xs:documentation>Тип, реализующий условия фильтрации
				по статусам Назначений на ИИ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="tns:status"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentDescribeStatus">
    <xs:annotation>
      <xs:documentation>Тип, реализующий условия фильтрации
				по статусам Назначений на ИИ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="1" name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код статуса Назначения на ИИ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" ref="core:availableResourceIds"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentValidityPeriod">
    <xs:annotation>
      <xs:documentation>Срок действия назначения для скрининга</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="dateFrom" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода действия назначения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dateTo" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода действия назначения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--requests & responses-->
  <xs:element name="getAssignmentsByPatientRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода getAssignmentsByPatient</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="core:patientId"/>
        <xs:element minOccurs="0" ref="core:diagnosticIds"/>
        <xs:element minOccurs="0" ref="core:completeDateFilter"/>
        <xs:element minOccurs="0" ref="core1:pagingOptions"/>
        <xs:element minOccurs="0" ref="core1:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getAssignmentsByPatientResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода getAssignmentsByPatient</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="ns1:AssignmentExtensionListResultPage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getActiveAssignmentsByPatientRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода getAssignmentsByPatient</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="core:patientId"/>
        <xs:element minOccurs="0" ref="diagnosticFilter"/>
        <xs:element minOccurs="0" ref="core:cito">
          <xs:annotation>
            <xs:documentation>false - только плановые  true - только экстренные  (при отсутствии значения возвращаются все,  т.е. включая cito)</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="core:referralMedicalOrganizationId"/>
        <xs:element minOccurs="0" ref="core1:pagingOptions"/>
        <xs:element minOccurs="0" ref="core1:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getActiveAssignmentsByPatientResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода getAssignmentsByPatient</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="ns1:AssignmentExtensionListResultPage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getAssignmentsByIdsRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода getAssignmentsByIds</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="assignmentFilter"/>
        <xs:element minOccurs="0" ref="core1:pagingOptions"/>
        <xs:element minOccurs="0" ref="core1:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getAssignmentsByIdsResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода getAssignmentsByIds</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result">
          <xs:complexType>
            <xs:complexContent>
              <xs:restriction base="ns1:AssignmentExtensionListResultPage">
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" ref="core:assignmentExtension"/>
                </xs:sequence>
              </xs:restriction>
            </xs:complexContent>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getAssignmentsByEmployeeRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода getAssignmentsByEmployee</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="core:jobExecutionId"/>
        <xs:element minOccurs="0" ref="core1:pagingOptions"/>
        <xs:element minOccurs="0" ref="core1:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getAssignmentsByEmployeeResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода getAssignmentsByEmployee</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="ns1:AssignmentExtensionListResultPage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="searchAssignmentsExtensionRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода searchAssignmentsExtension 2</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="diagnosticFilter"/>
        <xs:element name="assignmentStatusFilter" type="ns1:AssignmentStatusFilter">
          <xs:annotation>
            <xs:documentation>Условия фильтрации по статусам Назначений на ИИ</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="core:cito">
          <xs:annotation>
            <xs:documentation>false - только плановые  true - только экстренные  (при отсутствии значения возвращаются все,  т.е. включая cito)</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="core:diagnosisIds"/>
        <xs:element minOccurs="0" ref="core:specialAvailableResourceIds"/>
        <xs:element minOccurs="0" ref="core:patientIds"/>
        <xs:element minOccurs="0" ref="core:jobExecutionId">
          <xs:annotation>
            <xs:documentation>Идентификатор (ЕМИАС.СВМР.2) Исполнения должности Врача, сделавшего Назначение</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="dateFilter">
          <xs:annotation>
            <xs:documentation>Условия фильтрации по Сроку действия Назначения
							Для примнения фильтра  обязательно должен быть передан как минимум один из элементов:
- start
- end</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="core:lateralityIds"/>
        <xs:element minOccurs="0" ref="core:referralMedicalOrganizationId"/>
        <xs:element minOccurs="0" ref="core:medicalFacilityIds"/>
        <xs:element minOccurs="0" ref="core1:pagingOptions"/>
        <xs:element minOccurs="0" ref="core1:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="searchAssignmentsExtensionResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода searchAssignmentsExtension</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="ns1:AssignmentExtensionListResultPage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="searchAssignmentsDescribeRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода searchAssignmentsDescribe 2</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="1" minOccurs="1" name="diagnosticKindCode" type="xs:string"/>
        <xs:element ref="core:medicalOrganizationId"/>
        <xs:element name="assignmentStatusFilter" type="tns:AssignmentDescribeStatusFilter">
          <xs:annotation>
            <xs:documentation>Условия фильтрации по статусам Назначений на ИИ</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="core:cito">
          <xs:annotation>
            <xs:documentation>false - только плановые  true - только экстренные  (при отсутствии значения возвращаются все,  т.е. включая cito)</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="core:medicalFacilityIds"/>
        <xs:element minOccurs="0" ref="conductDateFilter">
          <xs:annotation>
            <xs:documentation>Условия фильтрации по дате проведения приёма
							Для примнения фильтра  обязательно должен быть передан как минимум один из элементов:
							- start
							- end</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="core1:pagingOptions"/>
        <xs:element minOccurs="0" ref="core1:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="searchAssignmentsDescribeResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода searchAssignmentsDescribe</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="tns:AssignmentDescribeListResultPage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="searchAssignmentsShortRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода searchAssignmentsShort</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="diagnosticFilter"/>
        <xs:element name="assignmentStatusFilter" type="ns1:AssignmentStatusFilter">
          <xs:annotation>
            <xs:documentation>Условия фильтрации
							по статусам
							Назначений на ИИ</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="core:cito">
          <xs:annotation>
            <xs:documentation>false - только плановые
true - только экстренные
(при отсутствии значения возвращаются все,
т.е. включая cito)</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="core:diagnosisIds"/>
        <xs:element minOccurs="0" ref="core:specialAvailableResourceIds"/>
        <xs:element minOccurs="0" ref="core:patientIds"/>
        <xs:element minOccurs="0" ref="core:jobExecutionId">
          <xs:annotation>
            <xs:documentation>Идентификатор (ЕМИАС.СВМР.2) Исполнения должности Врача, сделавшего Назначение</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="dateFilter">
          <xs:annotation>
            <xs:documentation>Условия фильтрации по Сроку действия Назначения

Для примнения фильтра  обязательно должен быть передан как минимум один из элементов:
- start
- end</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="core:lateralityIds"/>
        <xs:element minOccurs="0" ref="core:referralMedicalOrganizationId"/>
        <xs:element minOccurs="0" ref="core1:pagingOptions"/>
        <xs:element minOccurs="0" ref="core1:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="searchAssignmentsShortResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода searchAssignmentsShort</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="ns1:AssignmentShortListResultPage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getAssignmentHistoryRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода getAssignmentHistory</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="core:assignmentId"/>
        <xs:element minOccurs="0" ref="core1:pagingOptions"/>
        <xs:element minOccurs="0" ref="core1:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getAssignmentHistoryResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода getAssignmentHistory</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result">
          <xs:complexType>
            <xs:complexContent>
              <xs:restriction base="ns1:AssignmentActionListResultPage">
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" ref="core:assignmentAction"/>
                </xs:sequence>
              </xs:restriction>
            </xs:complexContent>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="mappingLegacyIdsRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода mappingLegacyIds</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="core:assignmentId"/>
          <xs:element ref="core:suppReferralId"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="core1:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="mappingLegacyIdsResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода mappingLegacyIds</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="mappingLegacyIds" type="core:MappingLegacyIds"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="mappingLegacyShortRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода mappingLegacyId</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="core:assignmentId"/>
          <xs:element ref="core:suppReferralId"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="core1:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="mappingLegacyShortResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода mappingLegacyId</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="mappingLegacyId" type="core:MappingLegacyId"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="screeningInfoRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода ScreeningInfo</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="1" name="trimester" type="core:Trimester"/>
        <xs:choice minOccurs="1">
          <xs:element name="date" type="xs:date">
            <xs:annotation>
              <xs:documentation>Дата последней менструации</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element ref="core:weekAndDays"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="method" type="core:Method" use="required">
        <xs:annotation>
          <xs:documentation>Методика расчета сроков назначения на скрининг</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="screeningInfoResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода ScreeningInfo</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="trimester" type="xs:int">
          <xs:annotation>
            <xs:documentation>Триместр</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="lastPeriodDate" type="xs:date">
          <xs:annotation>
            <xs:documentation>Дата последней менструации</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="core:weekAndDays">
          <xs:annotation>
            <xs:documentation>Недели и дни беременности по УЗИ</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="result" type="tns:AssignmentValidityPeriod"/>
      </xs:sequence>
      <xs:attribute name="method" type="core:Method" use="required">
        <xs:annotation>
          <xs:documentation>Методика расчета сроков назначения на скрининг</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChFQCZRAuWuik_izg8zzZnuGvfRwsFN.ILDvf_kAA7gWRXxKwzkXiysTeiU7UQc6a0k0-</con:url><con:content><![CDATA[<!--edited with XMLSpy v2011 rel. 2 (http://www.altova.com) by ceperaaa (-)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/emiasid/assignmentService/v2/types/" xmlns="http://emias.mos.ru/emiasid/assignmentService/v2/types/" xmlns:core="http://emias.mos.ru/emiasid/core/v2/" xmlns:core1="http://emias.mos.ru/emias/core/v1/" xmlns:tns="http://emias.mos.ru/emiasid/assignmentService/v2/types/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://emias.mos.ru/emias/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChBMFJAM4B_fyvjn2.ZO9rDG.Bd.7cjlx0udsysA-"/>
  <xs:import namespace="http://emias.mos.ru/emiasid/core/v2/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChFQCZRIyW.Tt5nOr5TvutHJd6OPyNMVQ65VUOgNJmg--"/>
  <!--base abstract types-->
  <!--simple types-->
  <!--types-->
  <xs:complexType name="AssignmentFilter">
    <xs:annotation>
      <xs:documentation>Тип, реализующий
условия фильтрации
по сведениям,
идентифицирующим Назначения
(на инструментальную диагностику)</xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element maxOccurs="unbounded" ref="core:assignmentId"/>
      <xs:element maxOccurs="unbounded" ref="core:simiDocumentId">
        <xs:annotation>
          <xs:documentation>Идентификатор документа СИМИ назначения/направления во внешнюю МО</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" ref="core:compositionId">
        <xs:annotation>
          <xs:documentation>Идентификатор композиции документа /направления во внешнюю МО в Think!EHR</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" ref="core:appointmentId"/>
      <xs:element maxOccurs="unbounded" ref="core:careEventId">
        <xs:annotation>
          <xs:documentation>Идентификатор
Клинического события
(ЕМИАС.События.2)
связанного с Назначением</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" ref="core:medicalFacilityId"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="AssignmentStatusFilter">
    <xs:annotation>
      <xs:documentation>Тип, реализующий
				условия фильтрации
				по статусам
				Назначений на ИИ</xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element maxOccurs="unbounded" ref="core:assignmentStatusId"/>
      <xs:element maxOccurs="unbounded" name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код статуса Назначения на ИИ</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="DiagnosticFilter">
    <xs:annotation>
      <xs:documentation>Тип, реализующий
условия фильтрации
по Инструментальным исследованиям</xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element maxOccurs="unbounded" ref="core:diagnosticKindId"/>
      <xs:element maxOccurs="unbounded" name="diagnosticKindCode" type="xs:string"/>
      <xs:element maxOccurs="unbounded" ref="core:diagnosticTypeId"/>
      <xs:element maxOccurs="unbounded" ref="core:diagnosticSubTypeId"/>
      <xs:element maxOccurs="unbounded" ref="core:diagnosticId">
        <xs:annotation>
          <xs:documentation>Идентификатор
из справочника
Инструментальных исследований
ЕМИАС.НСИ.2
(поиск произвоится
в т.ч. и по доп. исследованиям
Назначения)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" ref="core:treatmentId"/>
    </xs:choice>
  </xs:complexType>
  <!--lists of entities-->
  <xs:complexType name="AssignmentActionListResultPage">
    <xs:annotation>
      <xs:documentation>Результаты отбора Действий с Назначениями</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core1:PagingResults">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" ref="core:assignmentAction"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AssignmentExtensionListResultPage">
    <xs:annotation>
      <xs:documentation>Результаты отбора Назначений (с расширенными сведениями)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core1:PagingResults">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" ref="core:assignmentExtension"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AssignmentShortListResultPage">
    <xs:annotation>
      <xs:documentation>Результаты отбора Назначений (с краткими сведениями)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core1:PagingResults">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" ref="core:assignmentShort"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--elements-->
  <!--filter elements-->
  <xs:element name="assignmentFilter" type="AssignmentFilter">
    <xs:annotation>
      <xs:documentation>Условия фильтрации
по сведениям,
идентифицирующим Назначения
(на инструментальную диагностику)</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="diagnosticFilter" type="DiagnosticFilter">
    <xs:annotation>
      <xs:documentation>Условия фильтрации
по Инструментальным исследованиям</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="dateFilter" type="core1:DatePeriod">
    <xs:annotation>
      <xs:documentation>Условия фильтрации
по датам

Для примнения фильтра
обязательно должен быть передан как минимум один из элементов:
- start
- end</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--requests & responses-->
  <xs:element name="getAssignmentsByPatientRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода getAssignmentsByPatient</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="core:patientId"/>
        <xs:element minOccurs="0" ref="core:diagnosticIds"/>
        <xs:element minOccurs="0" ref="core:completeDateFilter"/>
        <xs:element minOccurs="0" ref="core1:pagingOptions"/>
        <xs:element minOccurs="0" ref="core1:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getAssignmentsByPatientResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода getAssignmentsByPatient</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="AssignmentExtensionListResultPage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getAssignmentsByIdsRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода getAssignmentsByIds</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="assignmentFilter"/>
        <xs:element minOccurs="0" ref="core1:pagingOptions"/>
        <xs:element minOccurs="0" ref="core1:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getAssignmentsByIdsResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода getAssignmentsByIds</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result">
          <xs:complexType>
            <xs:complexContent>
              <xs:restriction base="AssignmentExtensionListResultPage">
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" ref="core:assignmentExtension"/>
                </xs:sequence>
              </xs:restriction>
            </xs:complexContent>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getAssignmentsByEmployeeRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода getAssignmentsByEmployee</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="core:jobExecutionId"/>
        <xs:element minOccurs="0" ref="core1:pagingOptions"/>
        <xs:element minOccurs="0" ref="core1:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getAssignmentsByEmployeeResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода getAssignmentsByEmployee</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="AssignmentExtensionListResultPage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="searchAssignmentsExtensionRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода searchAssignmentsExtension</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="diagnosticFilter"/>
        <xs:element name="assignmentStatusFilter" type="AssignmentStatusFilter">
          <xs:annotation>
            <xs:documentation>Условия фильтрации
							по статусам
							Назначений на ИИ</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="core:cito">
          <xs:annotation>
            <xs:documentation>false - только плановые
true - только экстренные
(при отсутствии значения возвращаются все,
т.е. включая cito)</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="core:diagnosisIds"/>
        <xs:element minOccurs="0" ref="core:specialAvailableResourceId"/>
        <xs:element minOccurs="0" ref="core:patientIds"/>
        <xs:element minOccurs="0" ref="core:jobExecutionId">
          <xs:annotation>
            <xs:documentation>Идентификатор (ЕМИАС.СВМР.2) Исполнения должности Врача, сделавшего Назначение</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="dateFilter">
          <xs:annotation>
            <xs:documentation>Условия фильтрации по Сроку действия Назначения

Для примнения фильтра
обязательно должен быть передан как минимум один из элементов:
- start
- end</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="core:lateralityIds"/>
        <xs:element minOccurs="0" ref="core:referralMedicalOrganizationId"/>
        <xs:element minOccurs="0" ref="core:medicalFacilityIds"/>
        <xs:element minOccurs="0" ref="core1:pagingOptions"/>
        <xs:element minOccurs="0" ref="core1:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="searchAssignmentsExtensionResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода searchAssignmentsExtension</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="AssignmentExtensionListResultPage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="searchAssignmentsShortRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода searchAssignmentsShort</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="diagnosticFilter"/>
        <xs:element name="assignmentStatusFilter" type="AssignmentStatusFilter">
          <xs:annotation>
            <xs:documentation>Условия фильтрации
							по статусам
							Назначений на ИИ</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="core:cito">
          <xs:annotation>
            <xs:documentation>false - только плановые
true - только экстренные
(при отсутствии значения возвращаются все,
т.е. включая cito)</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="core:diagnosisIds"/>
        <xs:element minOccurs="0" ref="core:specialAvailableResourceId"/>
        <xs:element minOccurs="0" ref="core:patientId"/>
        <xs:element minOccurs="0" ref="core:jobExecutionId">
          <xs:annotation>
            <xs:documentation>Идентификатор (ЕМИАС.СВМР.2) Исполнения должности Врача, сделавшего Назначение</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="dateFilter">
          <xs:annotation>
            <xs:documentation>Условия фильтрации по Сроку действия Назначения

Для примнения фильтра
обязательно должен быть передан как минимум один из элементов:
- start
- end</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="core:lateralityIds"/>
        <xs:element minOccurs="0" ref="core:referralMedicalOrganizationId"/>
        <xs:element minOccurs="0" ref="core1:pagingOptions"/>
        <xs:element minOccurs="0" ref="core1:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="searchAssignmentsShortResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода searchAssignmentsShort</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="AssignmentShortListResultPage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getAssignmentHistoryRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода getAssignmentHistory</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="core:assignmentId"/>
        <xs:element minOccurs="0" ref="core1:pagingOptions"/>
        <xs:element minOccurs="0" ref="core1:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getAssignmentHistoryResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода getAssignmentHistory</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result">
          <xs:complexType>
            <xs:complexContent>
              <xs:restriction base="AssignmentActionListResultPage">
                <xs:sequence>
                  <xs:element maxOccurs="unbounded" ref="core:assignmentAction"/>
                </xs:sequence>
              </xs:restriction>
            </xs:complexContent>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="mappingLegacyIdsRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода mappingLegacyIds</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="core:assignmentId"/>
          <xs:element ref="core:suppReferralId"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="core1:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="mappingLegacyIdsResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода mappingLegacyIds</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="mappingLegacyIds" type="core:MappingLegacyIds"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChFQCZRIyW.Tt5nOr5TvutHJd6OPyNMVQ65VUOgNJmg--</con:url><con:content><![CDATA[<!--edited with XMLSpy v2011 rel. 2 (http://www.altova.com) by ceperaaa (-)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/emiasid/core/v2/" xmlns="http://emias.mos.ru/emiasid/core/v2/" xmlns:core="http://emias.mos.ru/emias/core/v1/" xmlns:sys="http://emias.mos.ru/system/v1/" xmlns:tns="http://emias.mos.ru/emiasid/core/v2/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://emias.mos.ru/system/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChBMVMgIpTOzt5nCr5TvuNU58L2W9UO8bLJtJUOaYRQ--"/>
  <xs:import namespace="http://emias.mos.ru/emias/core/v1/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELraVudE9Q88Ug79nkJNa6nMjS1nxE63JKJBkOcGMlcKrWUChvMDBzpXFzUVBLsWK1L2VKtA.oW1mqYu6mtvQsRSkABKM7drrlG.1I8mwDBLWiu8ltZrwvS6uJelXTtqdEnQQhBAhzZp3fg0ChBMFJAM4B_fyvjn2.ZO9rDG.Bd.7cjlx0udsysA-"/>
  <!--entities-->
  <xs:complexType name="ActionPerformer">
    <xs:annotation>
      <xs:documentation>Инициатор Действия</xs:documentation>
    </xs:annotation>
    <xs:attribute name="systemName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Шифр системы-потребителя</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="userName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Имя пользователя (логин)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="jobExecutionId" type="sys:ID">
      <xs:annotation>
        <xs:documentation>Идентификатор*
Исполнения должности
(ЕМИАС.СВМР.2)

* для систмных действий равен 0</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="AssignmentAction">
    <xs:annotation>
      <xs:documentation>Действие с Назначением</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:Base">
        <xs:sequence>
          <xs:element ref="assignmentId"/>
          <xs:element ref="assignmentStatusExtension">
            <xs:annotation>
              <xs:documentation>Расширенные сведения
о Статусе, в которое перешло Назначение
в результате произошедшего Действия</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element ref="actionPerformer">
            <xs:annotation>
              <xs:documentation>Инициатор Действия</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute ref="createdOn" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AssignmentDescribe">
    <xs:annotation>
      <xs:documentation>Расширенные сведения о Назначении</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:AssignmentBase">
        <xs:sequence>
          <xs:element ref="assignmentDescribeStatusExtension"/>
          <xs:element minOccurs="0" ref="resourceUtilization"/>
          <xs:element name="validity">
            <xs:annotation>
              <xs:documentation>Срок действия</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:complexContent>
                <xs:restriction base="core:DatePeriod">
                  <xs:sequence>
                    <xs:element name="start" type="xs:date">
                      <xs:annotation>
                        <xs:documentation>Дата начала периода</xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="end" type="xs:date">
                      <xs:annotation>
                        <xs:documentation>Дата окончания периода</xs:documentation>
                      </xs:annotation>
                    </xs:element>
                  </xs:sequence>
                </xs:restriction>
              </xs:complexContent>
            </xs:complexType>
          </xs:element>
          <xs:element name="purpose" type="xs:string">
            <xs:annotation>
              <xs:documentation>Обоснование исследования</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="goal" type="xs:string">
            <xs:annotation>
              <xs:documentation>Цель исследования</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element ref="issuedInfo">
            <xs:annotation>
              <xs:documentation>Сведения о выдаче</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element ref="referralInfo">
            <xs:annotation>
              <xs:documentation>Сведения о Направлении</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element ref="medicalFacility">
            <xs:annotation>
              <xs:documentation>МУ, в котором провели приём по назначению</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="comment" type="xs:string">
            <xs:annotation>
              <xs:documentation>Комментарий</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" ref="core:options"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AssignmentExtension">
    <xs:annotation>
      <xs:documentation>Расширенные сведения о Назначении</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:AssignmentShort">
        <xs:sequence>
          <xs:element name="validity">
            <xs:annotation>
              <xs:documentation>Срок действия</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:complexContent>
                <xs:restriction base="core:DatePeriod">
                  <xs:sequence>
                    <xs:element name="start" type="xs:date">
                      <xs:annotation>
                        <xs:documentation>Дата начала периода</xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="end" type="xs:date">
                      <xs:annotation>
                        <xs:documentation>Дата окончания периода</xs:documentation>
                      </xs:annotation>
                    </xs:element>
                  </xs:sequence>
                </xs:restriction>
              </xs:complexContent>
            </xs:complexType>
          </xs:element>
          <xs:element name="purpose" type="xs:string">
            <xs:annotation>
              <xs:documentation>Обоснование исследования</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="goalCode" type="xs:string">
            <xs:annotation>
              <xs:documentation>Код цели исследования</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="goal" type="xs:string">
            <xs:annotation>
              <xs:documentation>Цель исследования</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element ref="diagnosis">
            <xs:annotation>
              <xs:documentation>Диагноз
по справочнику МКБ10</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element ref="issuedInfo">
            <xs:annotation>
              <xs:documentation>Сведения о выдаче</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element ref="referralInfo">
            <xs:annotation>
              <xs:documentation>Сведения о Направлении</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" ref="medicalFacility">
            <xs:annotation>
              <xs:documentation>МУ, в котором провели приём по назначению</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="comment" type="xs:string">
            <xs:annotation>
              <xs:documentation>Комментарий</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" ref="core:options"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AssignmentShort">
    <xs:annotation>
      <xs:documentation>Краткие сведения о Назначении</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:AssignmentBase">
        <xs:sequence>
          <xs:element ref="assignmentStatusExtension"/>
          <xs:element minOccurs="0" ref="resourceUtilization"/>
          <xs:element minOccurs="0" ref="suppReferralId"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--dictionary types-->
  <xs:complexType name="AssignmentStatus">
    <xs:annotation>
      <xs:documentation>Тип, реализующий справочник
Статус Назначения на ИД
(реальное создание справочника в ЕМИАС.НСИ.2 будет осуществлено позднее)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:NsiWithCodeBase">
        <xs:attribute name="openEHRInstructionState" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Соответствующее состояние в OpenEHR</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Diagnostic">
    <xs:annotation>
      <xs:documentation>Тип, реализующий справочник
Инструментальное исследование</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:NsiWithCodeBase">
        <xs:sequence>
          <xs:element name="shortTitle" type="xs:string"/>
          <xs:element minOccurs="0" name="visitsNumber" type="xs:int"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DiagnosticKind">
    <xs:annotation>
      <xs:documentation>Тип, реализующий справочник
Вид инструментальных исследований</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:NsiWithCodeBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DiagnosticType">
    <xs:annotation>
      <xs:documentation>Тип, реализующий справочникТип 
инструментальных исследований</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:NsiWithCodeBase">
        <xs:sequence>
          <xs:element ref="diagnosticKind"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DiagnosticSubType">
    <xs:annotation>
      <xs:documentation>Тип, реализующий справочник
Подтип инструментальных исследований</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:NsiWithCodeBase">
        <xs:sequence>
          <xs:element ref="diagnosticType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MKB10">
    <xs:annotation>
      <xs:documentation>Тип, реализующий справочник
МКБ-10</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:NsiWithCodeBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Laterality">
    <xs:annotation>
      <xs:documentation>Тип, реализующий справочникЛатеральность</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:NsiWithCodeBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Treatment">
    <xs:annotation>
      <xs:documentation>Тип, реализующий справочник
Медицинские манипуляции</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:NsiWithCodeBase">
        <xs:sequence>
          <xs:element ref="treatmentCategory"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="TreatmentCategory">
    <xs:annotation>
      <xs:documentation>Тип, реализующий справочник
Категорий медицинских манипуляций</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:NsiWithCodeBase"/>
    </xs:complexContent>
  </xs:complexType>
  <!--abstract types-->
  <xs:complexType abstract="true" name="AssignmentBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип
для описания Назначение</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:Base">
        <xs:sequence>
          <xs:element ref="patientId"/>
          <xs:element ref="cito"/>
          <xs:element ref="assignedDiagnostic"/>
          <xs:element ref="assignmentSimiDocument"/>
          <xs:element minOccurs="0" ref="referralSimiDocument"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--types-->
  <xs:complexType name="AssignedDiagnostic">
    <xs:annotation>
      <xs:documentation>Сведения о назначенных Инструментальных исследованиях</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="mainDiagnostic"/>
      <xs:element minOccurs="0" ref="laterality">
        <xs:annotation>
          <xs:documentation>Латеральность
из одноименного справочника</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" ref="additionalDiagnostics"/>
    </xs:sequence>
    <xs:attribute name="duration" use="required">
      <xs:annotation>
        <xs:documentation>Суммарная продолжительность
основного и дополнительных исследований,
в минутах (до 24 часов)</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:int">
          <xs:minExclusive value="0"/>
          <xs:maxExclusive value="1440"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="AssignmentStatusExtension">
    <xs:annotation>
      <xs:documentation>Расширенные сведения
о Статусе Назначения</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:AssignmentStatus">
        <xs:sequence>
          <xs:element name="lastSimiDocument" type="tns:LastSIMIDocument">
            <xs:annotation>
              <xs:documentation>Сведения о последнем
созданным документе СИМИ,
на этапе жизненного цикла
Назначения, соответствующего указанному статусу</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="secondReadingDocument" type="tns:LastSIMIDocument">
            <xs:annotation>
              <xs:documentation>Сведения о документе СИМИ протоколе второго чтения</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" ref="careEventId">
            <xs:annotation>
              <xs:documentation>Идентификатор Клинического события  (ЕМИАС.События.2), соответствующего текущему статусу Назначения</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" ref="jobExecutionId">
            <xs:annotation>
              <xs:documentation>Идентификатор Исполнения должности (ЕМИАС.СВМР.2) для систмных действий равен 0</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="speciality" type="xs:string">
            <xs:annotation>
              <xs:documentation>Должность</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AssignmentDescribeStatusExtension">
    <xs:annotation>
      <xs:documentation>Расширенные сведения
				о Статусе Назначения</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:AssignmentStatus">
        <xs:sequence>
          <xs:element minOccurs="0" ref="careEventId">
            <xs:annotation>
              <xs:documentation>Идентификатор Клинического события  (ЕМИАС.События.2), соответствующего текущему статусу Назначения</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" ref="jobExecutionId">
            <xs:annotation>
              <xs:documentation>Идентификатор Исполнения должности (ЕМИАС.СВМР.2) для систмных действий равен 0</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Department">
    <xs:annotation>
      <xs:documentation>Сведения о подразделении организации</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="medicalOrganization"/>
      <xs:element minOccurs="0" ref="medicalFacilityId"/>
      <xs:element minOccurs="0" name="title" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование структурного подразделения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="IssuedInfo">
    <xs:annotation>
      <xs:documentation>Сведения о направляющей стороне</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="medicalEmployee"/>
    </xs:sequence>
    <xs:attribute ref="createdOn" use="required"/>
  </xs:complexType>
  <xs:complexType name="MainDiagnostic">
    <xs:annotation>
      <xs:documentation>Основное Инструментальное исследование</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:Diagnostic">
        <xs:sequence>
          <xs:element ref="treatment"/>
          <xs:element ref="diagnosticSubType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MappingLegacyIds">
    <xs:annotation>
      <xs:documentation>Соответствие идентификаторов назначений ЕМИАС.ИД и направлений ЕМИАС.СУПП
!!!LEGACY!!!</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="assignmentId"/>
      <xs:element ref="suppReferralId"/>
      <xs:element ref="assignmentSimiDocument"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MappingLegacyId">
    <xs:annotation>
      <xs:documentation>Соответствие идентификаторов назначений ЕМИАС.ИД и направлений ЕМИАС.СУПП
				!!!LEGACY!!!</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="assignmentId"/>
      <xs:element ref="suppReferralId"/>
      <xs:element minOccurs="0" ref="assignmentSimiDocument"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MedicalEmployee">
    <xs:annotation>
      <xs:documentation>Сведения о Медицинском работнике</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="person"/>
      <xs:element name="title" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование должности</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="department"/>
      <xs:element minOccurs="0" ref="jobExecutionId">
        <xs:annotation>
          <xs:documentation>Идентификатор
Исполнения должности
ЕМИАС.СВМР.2
(не указывается для МО без ЕМИАС)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MedicalOrganization">
    <xs:annotation>
      <xs:documentation>Сведения о Медицинской организации (ЮЛ)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ogrn" type="xs:string">
        <xs:annotation>
          <xs:documentation>ОГРН</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="emiasInfo" type="tns:EmiasMedicalOrganization">
        <xs:annotation>
          <xs:documentation>Сведения об организации в ЕМИАС
(из ЕМИАС.СВМР.2)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EmiasMedicalOrganization">
    <xs:annotation>
      <xs:documentation>Сведения о Медицинской организации в ЕМИАС
ЕМИАС.СВМР.2</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:ForeignEntityBase">
        <xs:sequence>
          <xs:element name="shortName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Краткое наименование</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Person">
    <xs:annotation>
      <xs:documentation>Сведения о Человеке</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="fio" type="xs:string">
        <xs:annotation>
          <xs:documentation>ФИО</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="snils" type="xs:string">
      <xs:annotation>
        <xs:documentation>СНИЛС
(не указывается для МО без ЕМИАС)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ReferralInfo">
    <xs:annotation>
      <xs:documentation>Сведения о принимающей стороне</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="medicalOrganization"/>
      <xs:element minOccurs="0" name="medicalFacilityAddress" type="xs:string">
        <xs:annotation>
          <xs:documentation>Адрес Медицинского учреждения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResourceUtilization">
    <xs:annotation>
      <xs:documentation>Сведения
о задействованном
для проведения исследования
Ресурсе</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" ref="specialAvailableResourceId">
        <xs:annotation>
          <xs:documentation>Идентификатор
Специализированного
доступного ресурса,
проводящего исследование
по Назначению</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" ref="appointmentId">
        <xs:annotation>
          <xs:documentation>Идентификатор Записи
на проведение исследования
по Назначению</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" ref="careEventId">
        <xs:annotation>
          <xs:documentation>Идентификатор
Клинического события,
связанного с проведением исследования</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="conductedOn" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата проведения исследования по назначению</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType abstract="true" name="SIMIDocument">
    <xs:annotation>
      <xs:documentation>Сведения о документе СИМИ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="simiDocumentId"/>
      <xs:element minOccurs="0" ref="compositionId"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentSIMIDocument">
    <xs:annotation>
      <xs:documentation>Сведения о документе СИМИ,
являющемся Назначением/Направлением</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:SIMIDocument"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="LastSIMIDocument">
    <xs:annotation>
      <xs:documentation>Сведения о последнем
созданным документе СИМИ,
в ходе всего жизненного цикла
Назначения/Направления</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:SIMIDocument">
        <xs:sequence>
          <xs:element minOccurs="0" name="openEhrTemplate" type="Template">
            <xs:annotation>
              <xs:documentation>Информация о шаблоне документа</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute ref="createdOn" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MedicalFacility">
    <xs:annotation>
      <xs:documentation>Сведения о МУ, в котором провели приём по назначению</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="medicalFacilityId"/>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Краткое наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ReferralSIMIDocument">
    <xs:annotation>
      <xs:documentation>Сведения о документе СИМИ,
				являющемся Назначением/Направлением</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:SIMIDocument"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Template">
    <xs:annotation>
      <xs:documentation>Сведения о МУ, в котором провели приём по назначению</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="archetypeId" type="xs:string"/>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Краткое наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--enums-->
  <!--elements-->
  <xs:element name="actionPerformer" type="tns:ActionPerformer">
    <xs:annotation>
      <xs:documentation>Инициатор действия</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="appointmentId" type="core:ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентификатор
Записи
ЕМИАС.Запись.3</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="core:ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентификатор МУ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="additionalDiagnostics">
    <xs:annotation>
      <xs:documentation>Дополнительные
Инструментальные исследования</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="diagnostic">
          <xs:annotation>
            <xs:documentation>Элемент справочника
Инструментальные исследования</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="mainDiagnostic" type="tns:MainDiagnostic">
    <xs:annotation>
      <xs:documentation>Основное
Инструментальное исследование</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="assignedDiagnostic" type="tns:AssignedDiagnostic">
    <xs:annotation>
      <xs:documentation>Сведения о назначенных Инструментальных исследованиях</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="assignmentAction" type="tns:AssignmentAction">
    <xs:annotation>
      <xs:documentation>Действие с Назначением</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="assignmentId" type="core:EntityId">
    <xs:annotation>
      <xs:documentation>Идентификатор Назначения
(на инструментальную диагностику)</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="assignmentExtension" type="tns:AssignmentExtension">
    <xs:annotation>
      <xs:documentation>Расширенные сведения о Назначении на расшифровку</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="assignmentDescribe" type="tns:AssignmentDescribe">
    <xs:annotation>
      <xs:documentation>Расширенные сведения о Назначении</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="assignmentShort" type="tns:AssignmentShort">
    <xs:annotation>
      <xs:documentation>Краткие сведения о Назначении</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="assignmentSimiDocument" type="tns:AssignmentSIMIDocument">
    <xs:annotation>
      <xs:documentation>Сведения о документе СИМИ,
являющемся Назначением/Направлением</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="assignmentStatusId" type="core:NsiGlobalId">
    <xs:annotation>
      <xs:documentation>Идентификатор
Статуса Назначения на ИД
(реальное создание справочника в ЕМИАС.НСИ.2 будет осуществлено позднее)</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="assignmentStatusIds">
    <xs:annotation>
      <xs:documentation>Идентификаторы
Статусов Назначений на ИД</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="assignmentStatusId"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="assignmentDescribeStatusExtension" type="tns:AssignmentDescribeStatusExtension">
    <xs:annotation>
      <xs:documentation>Расширенные сведения
				о Статусе назначения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="assignmentStatusExtension" type="tns:AssignmentStatusExtension">
    <xs:annotation>
      <xs:documentation>Расширенные сведения
о Статусе назначения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="availableResourceIds">
    <xs:annotation>
      <xs:documentation>Идентификаторы ДР</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="tns:availableResourceId"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="availableResourceId" type="core:ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентификатор доступного ресурса ЕМИАС.РиР.2</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="careEventId" type="core:ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентификатор
Клинического события
ЕМИАС.События.2</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="cito" type="xs:boolean">
    <xs:annotation>
      <xs:documentation>Экстренно</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="compositionId" type="sys:GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор
Композиции Think!EHR
ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalOrganizationId" type="core:ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентификатор (ЕМИАС) принимающей (где был проведён приём) медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="department" type="tns:Department">
    <xs:annotation>
      <xs:documentation>Подразделение организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="diagnosis" type="MKB10">
    <xs:annotation>
      <xs:documentation>Элемент справочника
МКБ-10</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="diagnosisId" type="core:NsiGlobalId">
    <xs:annotation>
      <xs:documentation>Идентификатор
из справочника
МКБ-10
ЕМИАС.НСИ.2</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="diagnosisIds">
    <xs:annotation>
      <xs:documentation>Идентификаторы
диагнозов</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="diagnosisId"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="diagnosticIds">
    <xs:annotation>
      <xs:documentation>Идентификаторы
				исследований</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="diagnosticId"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="diagnostic" type="tns:Diagnostic">
    <xs:annotation>
      <xs:documentation>Элемент справочникаИнструментальные исследования</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="diagnosticId" type="core:NsiGlobalId">
    <xs:annotation>
      <xs:documentation>Идентификатор
из справочника Инструментальных исследований
ЕМИАС.НСИ.2</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="diagnosticKind" type="tns:DiagnosticKind">
    <xs:annotation>
      <xs:documentation>Элемент справочника
Вид инструментальных исследований</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="diagnosticKindId" type="core:NsiGlobalId">
    <xs:annotation>
      <xs:documentation>Идентификатор
из справочника
Вид инструментальных исследований
ЕМИАС.НСИ.2</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="diagnosticType" type="tns:DiagnosticType">
    <xs:annotation>
      <xs:documentation>Элемент справочникаТип инструментальных исследований</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="diagnosticTypeId" type="core:NsiGlobalId">
    <xs:annotation>
      <xs:documentation>Идентификатор
из справочника
Тип инструментальных исследований
ЕМИАС.НСИ.2</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="diagnosticSubType" type="tns:DiagnosticSubType">
    <xs:annotation>
      <xs:documentation>Элемент справочникаПодтип инструментальных исследований</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="diagnosticSubTypeId" type="core:NsiGlobalId">
    <xs:annotation>
      <xs:documentation>Идентификатор
из справочника
Подтип инструментальных исследований
ЕМИАС.НСИ.2</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="issuedInfo" type="tns:IssuedInfo">
    <xs:annotation>
      <xs:documentation>Сведения о направившей стороне</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="jobExecutionId" type="core:ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентификатор Исполнения должности
ЕМИАС.СВМР.2</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="laterality" type="tns:Laterality">
    <xs:annotation>
      <xs:documentation>Элемент справочника
Латеральность</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="lateralityId" type="sys:ID">
    <xs:annotation>
      <xs:documentation>Идентификатор
из справочника
Латеральность
ЕМИАС.НСИ.2</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="lateralityIds">
    <xs:annotation>
      <xs:documentation>Идентификаторы
Латеральностей</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="lateralityId"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="patientIds">
    <xs:annotation>
      <xs:documentation>Идентификаторы
				пациентов</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="patientId"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="referralSimiDocument" type="tns:ReferralSIMIDocument">
    <xs:annotation>
      <xs:documentation>Сведения о документе СИМИ,
				являющемся Назначением/Направлением</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityIds">
    <xs:annotation>
      <xs:documentation>Идентификаторы МУ</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="medicalFacilityId"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="specialAvailableResourceIds">
    <xs:annotation>
      <xs:documentation>Идентификаторы СДР</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="tns:specialAvailableResourceId"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="medicalEmployee" type="tns:MedicalEmployee">
    <xs:annotation>
      <xs:documentation>Медицинский работник</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalOrganization" type="tns:MedicalOrganization">
    <xs:annotation>
      <xs:documentation>Медицинская организация (ЮЛ)</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="referralMedicalOrganizationId" type="core:ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентификатор (ЕМИАС) принимающей (куда направлен пациент) медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="patientId" type="core:ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентификатор
Пациента
ЕМИАС.ЕРП</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="completeDateFilter" type="core:DatePeriod">
    <xs:annotation>
      <xs:documentation>Даты выполнения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="person" type="tns:Person">
    <xs:annotation>
      <xs:documentation>Человек</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="referralInfo" type="tns:ReferralInfo">
    <xs:annotation>
      <xs:documentation>Сведения о принимающей стороне</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="resourceUtilization" type="tns:ResourceUtilization">
    <xs:annotation>
      <xs:documentation>Сведения
о задействованном
для проведения исследования
Ресурсе</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="simiDocumentId" type="sys:GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор
Документа СИМИ
ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="specialAvailableResourceId" type="core:ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентификатор Специализированного доступного ресурса ЕМИАС.РиР.2</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="suppReferralId" type="core:ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Индентификатор Направления ЕМИАС.СУПП !!!LEGACY!!!</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="treatment" type="tns:Treatment">
    <xs:annotation>
      <xs:documentation>Элемент справочника
Медицинские манипуляции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="treatmentId" type="core:NsiGlobalId">
    <xs:annotation>
      <xs:documentation>Идентификатор
из справочника
Медицинские манипуляции
ЕМИАС.НСИ.2</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="treatmentCategory" type="tns:TreatmentCategory">
    <xs:annotation>
      <xs:documentation>Элемент справочника
Категорий медицинских манипуляций</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacility" type="tns:MedicalFacility">
    <xs:annotation>
      <xs:documentation>МУ, в котором провели приём по назначению</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:simpleType name="Method">
    <xs:annotation>
      <xs:documentation>Методика расчета сроков назначения на скрининг</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="recommendation">
        <xs:annotation>
          <xs:documentation>По рекомендации</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="normative">
        <xs:annotation>
          <xs:documentation>По нормативу</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Trimester">
    <xs:annotation>
      <xs:documentation>Тип скрининга для триместра</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:enumeration value="1">
        <xs:annotation>
          <xs:documentation>Первый триместр</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="2">
        <xs:annotation>
          <xs:documentation>Второй триместр</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="3">
        <xs:annotation>
          <xs:documentation>Третий триместр</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="weekAndDays" type="tns:WeekAndDays">
    <xs:annotation>
      <xs:documentation>Недели и дни беременности по УЗИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="WeekAndDays">
    <xs:annotation>
      <xs:documentation>Недели и дни беременности</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="weeks" type="xs:int">
        <xs:annotation>
          <xs:documentation>Недели беременности</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="days" type="xs:int">
        <xs:annotation>
          <xs:documentation>Дни беременности</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--attributes-->
  <xs:attribute name="createdOn" type="xs:dateTime">
    <xs:annotation>
      <xs:documentation>Дата формирования</xs:documentation>
    </xs:annotation>
  </xs:attribute>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService</con:endpoint></con:endpoints><con:operation id="1ced1a35-e4c8-4d5f-95a0-e4318710efb1" isOneWay="false" action="getActiveAssignmentsByPatient" name="getActiveAssignmentsByPatient" bindingOperationName="getActiveAssignmentsByPatient" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8c67e5a9-a4b2-448f-bffc-a15aec6874b8" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:v1="http://emias.mos.ru/emias/core/v1/" xmlns:typ="http://emias.mos.ru/emiasid/assignmentService/v2_2/types/" xmlns:v2="http://emias.mos.ru/emiasid/core/v2/" xmlns:typ1="http://emias.mos.ru/emiasid/assignmentService/v2/types/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getActiveAssignmentsByPatientRequest>\r
         <v2:patientId id="?"/>\r
         <!--Optional:-->\r
         <typ:diagnosticFilter>\r
            <!--You have a CHOICE of the next 6 items at this level-->\r
            <!--1 or more repetitions:-->\r
            <v2:diagnosticKindId id="?"/>\r
            <!--1 or more repetitions:-->\r
            <typ1:diagnosticKindCode>?</typ1:diagnosticKindCode>\r
            <!--1 or more repetitions:-->\r
            <v2:diagnosticTypeId id="?"/>\r
            <!--1 or more repetitions:-->\r
            <v2:diagnosticSubTypeId id="?"/>\r
            <!--1 or more repetitions:-->\r
            <v2:diagnosticId id="?"/>\r
            <!--1 or more repetitions:-->\r
            <v2:treatmentId id="?"/>\r
         </typ:diagnosticFilter>\r
         <!--Optional:-->\r
         <v2:cito>?</v2:cito>\r
         <!--Optional:-->\r
         <v2:referralMedicalOrganizationId id="?"/>\r
         <!--Optional:-->\r
         <v1:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v1:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v1:sortOrder attributeName="?" desceding="false"/>\r
            </v1:sortingOptions>\r
         </v1:pagingOptions>\r
         <!--Optional:-->\r
         <v1:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </v1:options>\r
      </typ:getActiveAssignmentsByPatientRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/emiasid/assignmentService/v2_2/assignmentServicePortType/getActiveAssignmentsByPatientRequest"/></con:call></con:operation><con:operation id="636f3871-c04c-4d22-94be-9a9348201286" isOneWay="false" action="getAssignmentHistory" name="getAssignmentHistory" bindingOperationName="getAssignmentHistory" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ed44e7c4-c0a7-45c5-af00-5b5708c2ee94" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:v1="http://emias.mos.ru/emias/core/v1/" xmlns:typ="http://emias.mos.ru/emiasid/assignmentService/v2/types/" xmlns:v2="http://emias.mos.ru/emiasid/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getAssignmentHistoryRequest>\r
         <v2:assignmentId id="?"/>\r
         <!--Optional:-->\r
         <v1:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v1:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v1:sortOrder attributeName="?" desceding="false"/>\r
            </v1:sortingOptions>\r
         </v1:pagingOptions>\r
         <!--Optional:-->\r
         <v1:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </v1:options>\r
      </typ:getAssignmentHistoryRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/emiasid/assignmentService/v2_2/assignmentServicePortType/getAssignmentHistoryRequest"/></con:call></con:operation><con:operation id="d69691d3-fabc-4c80-9c02-0f0cb90963e5" isOneWay="false" action="getAssignmentsByEmployee" name="getAssignmentsByEmployee" bindingOperationName="getAssignmentsByEmployee" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b310359b-4c47-4804-9d50-600a2ea20ff6" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:v1="http://emias.mos.ru/emias/core/v1/" xmlns:typ="http://emias.mos.ru/emiasid/assignmentService/v2/types/" xmlns:v2="http://emias.mos.ru/emiasid/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getAssignmentsByEmployeeRequest>\r
         <v2:jobExecutionId id="?"/>\r
         <!--Optional:-->\r
         <v1:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v1:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v1:sortOrder attributeName="?" desceding="false"/>\r
            </v1:sortingOptions>\r
         </v1:pagingOptions>\r
         <!--Optional:-->\r
         <v1:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </v1:options>\r
      </typ:getAssignmentsByEmployeeRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/emiasid/assignmentService/v2_2/assignmentServicePortType/getAssignmentsByEmployeeRequest"/></con:call></con:operation><con:operation id="56a44787-47d2-47b0-9dc4-10af41402702" isOneWay="false" action="getAssignmentsByIds" name="getAssignmentsByIds" bindingOperationName="getAssignmentsByIds" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="03296131-69f6-4a80-a635-3b583af8d64e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:v1="http://emias.mos.ru/emias/core/v1/" xmlns:typ="http://emias.mos.ru/emiasid/assignmentService/v2/types/" xmlns:v2="http://emias.mos.ru/emiasid/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getAssignmentsByIdsRequest>\r
         <typ:assignmentFilter>\r
            <!--You have a CHOICE of the next 6 items at this level-->\r
            <!--1 or more repetitions:-->\r
            <v2:assignmentId id="?"/>\r
            <!--1 or more repetitions:-->\r
            <v2:simiDocumentId>?</v2:simiDocumentId>\r
            <!--1 or more repetitions:-->\r
            <v2:compositionId>?</v2:compositionId>\r
            <!--1 or more repetitions:-->\r
            <v2:appointmentId id="?"/>\r
            <!--1 or more repetitions:-->\r
            <v2:careEventId id="?"/>\r
            <!--1 or more repetitions:-->\r
            <v2:medicalFacilityId id="?"/>\r
         </typ:assignmentFilter>\r
         <!--Optional:-->\r
         <v1:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v1:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v1:sortOrder attributeName="?" desceding="false"/>\r
            </v1:sortingOptions>\r
         </v1:pagingOptions>\r
         <!--Optional:-->\r
         <v1:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </v1:options>\r
      </typ:getAssignmentsByIdsRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/emiasid/assignmentService/v2_2/assignmentServicePortType/getAssignmentsByIdsRequest"/></con:call><con:call id="137acf6f-6664-401d-8701-4921b6ad11c1" name="getAssignmentsByIds"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:v1="http://emias.mos.ru/emias/core/v1/" xmlns:typ="http://emias.mos.ru/emiasid/assignmentService/v2/types/" xmlns:v2="http://emias.mos.ru/emiasid/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getAssignmentsByIdsRequest>\r
         <typ:assignmentFilter>\r
            <!--You have a CHOICE of the next 6 items at this level-->\r
            <!--1 or more repetitions:-->\r
            <v2:assignmentId id="?"/>\r
            <!--1 or more repetitions:-->\r
            <v2:simiDocumentId>?</v2:simiDocumentId>\r
            <!--1 or more repetitions:-->\r
            <v2:compositionId>?</v2:compositionId>\r
            <!--1 or more repetitions:-->\r
            <v2:appointmentId id="?"/>\r
            <!--1 or more repetitions:-->\r
            <v2:careEventId id="?"/>\r
            <!--1 or more repetitions:-->\r
            <v2:medicalFacilityId id="?"/>\r
         </typ:assignmentFilter>\r
         <!--Optional:-->\r
         <v1:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v1:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v1:sortOrder attributeName="?" desceding="false"/>\r
            </v1:sortingOptions>\r
         </v1:pagingOptions>\r
         <!--Optional:-->\r
         <v1:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </v1:options>\r
      </typ:getAssignmentsByIdsRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/emiasid/assignmentService/v2_2/assignmentServicePortType/getAssignmentsByIdsRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="b2fbedcb-1ecf-47f5-90a1-2f7e3e7fec74" isOneWay="false" action="getAssignmentsByPatient" name="getAssignmentsByPatient" bindingOperationName="getAssignmentsByPatient" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7f923bf5-886d-4171-b6c3-ac1cfb72fc26" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:v1="http://emias.mos.ru/emias/core/v1/" xmlns:typ="http://emias.mos.ru/emiasid/assignmentService/v2/types/" xmlns:v2="http://emias.mos.ru/emiasid/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getAssignmentsByPatientRequest>\r
         <v2:patientId id="?"/>\r
         <!--Optional:-->\r
         <v2:diagnosticIds>\r
            <!--1 or more repetitions:-->\r
            <v2:diagnosticId id="?"/>\r
         </v2:diagnosticIds>\r
         <!--Optional:-->\r
         <v2:completeDateFilter>\r
            <!--Optional:-->\r
            <v1:start>?</v1:start>\r
            <!--Optional:-->\r
            <v1:end>?</v1:end>\r
         </v2:completeDateFilter>\r
         <!--Optional:-->\r
         <v1:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v1:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v1:sortOrder attributeName="?" desceding="false"/>\r
            </v1:sortingOptions>\r
         </v1:pagingOptions>\r
         <!--Optional:-->\r
         <v1:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </v1:options>\r
      </typ:getAssignmentsByPatientRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/emiasid/assignmentService/v2_2/assignmentServicePortType/getAssignmentsByPatientRequest"/></con:call><con:call id="677d6749-d0ee-4347-8bb4-86fd2659862e" name="getAssignmentsByPatient"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:v1="http://emias.mos.ru/emias/core/v1/" xmlns:typ="http://emias.mos.ru/emiasid/assignmentService/v2/types/" xmlns:v2="http://emias.mos.ru/emiasid/core/v2/">\r
   <soap:Header>
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-775ca9c2-beb0-4ff4-be53-ea6d8b2236bf" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <ns3:userContext xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/">
         <ns3:systemName>EIM</ns3:systemName>
         <ns3:userName>10d59080-73a2-4587-9931-c18fb90831b2</ns3:userName>
         <ns3:userRoleId>7187</ns3:userRoleId>
         <ns3:isUserRoleSystemWide>true</ns3:isUserRoleSystemWide>
         <ns3:userRights>
            <ns3:userRightId>5150001</ns3:userRightId>
            <ns3:userRightId>333001</ns3:userRightId>
         </ns3:userRights>
         <ns3:jobExecutionId>1</ns3:jobExecutionId>
      </ns3:userContext>
   </soap:Header>
   <soap:Body>\r
      <typ:getAssignmentsByPatientRequest>\r
         <v2:patientId id="10166510"/>\r
         <v1:pagingOptions pageNumber="0" pageSize="50">\r
            <v1:sortingOptions>\r
               <v1:sortOrder attributeName="startPeriod" desceding="true"/>\r
            </v1:sortingOptions>\r
         </v1:pagingOptions>\r
         <v1:options>\r
            <v1:entry key="skipIssuedMOEmiasInfo">false</v1:entry>\r
            <v1:entry key="skipReferralMOEmiasInfo">false</v1:entry>
         </v1:options>\r
      </typ:getAssignmentsByPatientRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/emiasid/assignmentService/v2_2/assignmentServicePortType/getAssignmentsByPatientRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="4d629826-56ea-43ad-b317-b0b136e48553" isOneWay="false" action="mappingLegacyIds" name="mappingLegacyIds" bindingOperationName="mappingLegacyIds" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="cf72afd0-58bf-4b3d-85ac-0339a4707659" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:v1="http://emias.mos.ru/emias/core/v1/" xmlns:typ="http://emias.mos.ru/emiasid/assignmentService/v2/types/" xmlns:v2="http://emias.mos.ru/emiasid/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:mappingLegacyIdsRequest>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <v2:assignmentId id="?"/>\r
         <v2:suppReferralId id="?"/>\r
         <!--Optional:-->\r
         <v1:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </v1:options>\r
      </typ:mappingLegacyIdsRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/emiasid/assignmentService/v2_2/assignmentServicePortType/mappingLegacyIdsRequest"/></con:call></con:operation><con:operation id="265d7590-8383-47e2-b0ae-8f428535dc0b" isOneWay="false" action="mappingLegacyShort" name="mappingLegacyShort" bindingOperationName="mappingLegacyShort" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c035b7ed-ee28-429e-93ac-c0a526572d8b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:v1="http://emias.mos.ru/emias/core/v1/" xmlns:typ="http://emias.mos.ru/emiasid/assignmentService/v2_2/types/" xmlns:v2="http://emias.mos.ru/emiasid/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:mappingLegacyShortRequest>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <v2:assignmentId id="?"/>\r
         <v2:suppReferralId id="?"/>\r
         <!--Optional:-->\r
         <v1:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </v1:options>\r
      </typ:mappingLegacyShortRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/emiasid/assignmentService/v2_2/assignmentServicePortType/mappingLegacyShortRequest"/></con:call></con:operation><con:operation id="20670ec7-7d0f-4b8e-a6b9-a8c69c0b0314" isOneWay="false" action="screeningInfo" name="screeningInfo" bindingOperationName="screeningInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="845b2a0e-3857-44be-8e0e-8016d99aa41d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:v1="http://emias.mos.ru/emias/core/v1/" xmlns:typ="http://emias.mos.ru/emiasid/assignmentService/v2_2/types/" xmlns:v2="http://emias.mos.ru/emiasid/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:screeningInfoRequest method="?">\r
         <typ:trimester>?</typ:trimester>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <typ:date>?</typ:date>\r
         <v2:weekAndDays>\r
            <v2:weeks>?</v2:weeks>\r
            <v2:days>?</v2:days>\r
         </v2:weekAndDays>\r
      </typ:screeningInfoRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/emiasid/assignmentService/v2_2/assignmentServicePortType/screeningInfoRequest"/></con:call></con:operation><con:operation id="36a7bb1c-a3af-4483-b048-ed64fb91de4b" isOneWay="false" action="searchAssignmentsDescribe" name="searchAssignmentsDescribe" bindingOperationName="searchAssignmentsDescribe" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="15add078-ad0e-4af7-9e07-8e6eb49a2b87" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:v1="http://emias.mos.ru/emias/core/v1/" xmlns:typ="http://emias.mos.ru/emiasid/assignmentService/v2_2/types/" xmlns:v2="http://emias.mos.ru/emiasid/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:searchAssignmentsDescribeRequest>\r
         <typ:diagnosticKindCode>?</typ:diagnosticKindCode>\r
         <v2:medicalOrganizationId id="?"/>\r
         <typ:assignmentStatusFilter>\r
            <!--1 or more repetitions:-->\r
            <typ:status>\r
               <typ:code>?</typ:code>\r
               <!--Optional:-->\r
               <v2:availableResourceIds>\r
                  <!--1 or more repetitions:-->\r
                  <v2:availableResourceId id="?"/>\r
               </v2:availableResourceIds>\r
            </typ:status>\r
         </typ:assignmentStatusFilter>\r
         <!--Optional:-->\r
         <v2:cito>?</v2:cito>\r
         <!--Optional:-->\r
         <v2:medicalFacilityIds>\r
            <!--1 or more repetitions:-->\r
            <v2:medicalFacilityId id="?"/>\r
         </v2:medicalFacilityIds>\r
         <!--Optional:-->\r
         <typ:conductDateFilter>\r
            <v1:start>?</v1:start>\r
            <v1:end>?</v1:end>\r
         </typ:conductDateFilter>\r
         <!--Optional:-->\r
         <v1:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v1:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v1:sortOrder attributeName="?" desceding="false"/>\r
            </v1:sortingOptions>\r
         </v1:pagingOptions>\r
         <!--Optional:-->\r
         <v1:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </v1:options>\r
      </typ:searchAssignmentsDescribeRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/emiasid/assignmentService/v2_2/assignmentServicePortType/searchAssignmentsDescribeRequest"/></con:call></con:operation><con:operation id="bdb53b0e-c08b-45f1-a823-ae589ea25148" isOneWay="false" action="searchAssignmentsExtension" name="searchAssignmentsExtension" bindingOperationName="searchAssignmentsExtension" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d351272f-0616-4687-b3e0-ee52b2504f2d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:v1="http://emias.mos.ru/emias/core/v1/" xmlns:typ="http://emias.mos.ru/emiasid/assignmentService/v2_2/types/" xmlns:v2="http://emias.mos.ru/emiasid/core/v2/" xmlns:typ1="http://emias.mos.ru/emiasid/assignmentService/v2/types/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:searchAssignmentsExtensionRequest>\r
         <typ:diagnosticFilter>\r
            <!--You have a CHOICE of the next 6 items at this level-->\r
            <!--1 or more repetitions:-->\r
            <v2:diagnosticKindId id="?"/>\r
            <!--1 or more repetitions:-->\r
            <typ1:diagnosticKindCode>?</typ1:diagnosticKindCode>\r
            <!--1 or more repetitions:-->\r
            <v2:diagnosticTypeId id="?"/>\r
            <!--1 or more repetitions:-->\r
            <v2:diagnosticSubTypeId id="?"/>\r
            <!--1 or more repetitions:-->\r
            <v2:diagnosticId id="?"/>\r
            <!--1 or more repetitions:-->\r
            <v2:treatmentId id="?"/>\r
         </typ:diagnosticFilter>\r
         <typ:assignmentStatusFilter>\r
            <!--You have a CHOICE of the next 2 items at this level-->\r
            <!--1 or more repetitions:-->\r
            <v2:assignmentStatusId id="?"/>\r
            <!--1 or more repetitions:-->\r
            <typ1:code>?</typ1:code>\r
         </typ:assignmentStatusFilter>\r
         <!--Optional:-->\r
         <v2:cito>?</v2:cito>\r
         <!--Optional:-->\r
         <v2:diagnosisIds>\r
            <!--1 or more repetitions:-->\r
            <v2:diagnosisId id="?"/>\r
         </v2:diagnosisIds>\r
         <!--Optional:-->\r
         <v2:specialAvailableResourceIds>\r
            <!--1 or more repetitions:-->\r
            <v2:specialAvailableResourceId id="?"/>\r
         </v2:specialAvailableResourceIds>\r
         <!--Optional:-->\r
         <v2:patientIds>\r
            <!--1 or more repetitions:-->\r
            <v2:patientId id="?"/>\r
         </v2:patientIds>\r
         <!--Optional:-->\r
         <v2:jobExecutionId id="?"/>\r
         <!--Optional:-->\r
         <typ:dateFilter>\r
            <!--Optional:-->\r
            <v1:start>?</v1:start>\r
            <!--Optional:-->\r
            <v1:end>?</v1:end>\r
         </typ:dateFilter>\r
         <!--Optional:-->\r
         <v2:lateralityIds>\r
            <!--1 or more repetitions:-->\r
            <v2:lateralityId>?</v2:lateralityId>\r
         </v2:lateralityIds>\r
         <!--Optional:-->\r
         <v2:referralMedicalOrganizationId id="?"/>\r
         <!--Optional:-->\r
         <v2:medicalFacilityIds>\r
            <!--1 or more repetitions:-->\r
            <v2:medicalFacilityId id="?"/>\r
         </v2:medicalFacilityIds>\r
         <!--Optional:-->\r
         <v1:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v1:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v1:sortOrder attributeName="?" desceding="false"/>\r
            </v1:sortingOptions>\r
         </v1:pagingOptions>\r
         <!--Optional:-->\r
         <v1:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </v1:options>\r
      </typ:searchAssignmentsExtensionRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/emiasid/assignmentService/v2_2/assignmentServicePortType/searchAssignmentsExtensionRequest"/></con:call></con:operation><con:operation id="5aae674a-377c-41ba-9220-87c6f23754ad" isOneWay="false" action="searchAssignmentsShort" name="searchAssignmentsShort" bindingOperationName="searchAssignmentsShort" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ddc5e7d4-0c12-4db6-8360-2edd2314d5db" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:v1="http://emias.mos.ru/emias/core/v1/" xmlns:typ="http://emias.mos.ru/emiasid/assignmentService/v2_2/types/" xmlns:v2="http://emias.mos.ru/emiasid/core/v2/" xmlns:typ1="http://emias.mos.ru/emiasid/assignmentService/v2/types/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:searchAssignmentsShortRequest>\r
         <typ:diagnosticFilter>\r
            <!--You have a CHOICE of the next 6 items at this level-->\r
            <!--1 or more repetitions:-->\r
            <v2:diagnosticKindId id="?"/>\r
            <!--1 or more repetitions:-->\r
            <typ1:diagnosticKindCode>?</typ1:diagnosticKindCode>\r
            <!--1 or more repetitions:-->\r
            <v2:diagnosticTypeId id="?"/>\r
            <!--1 or more repetitions:-->\r
            <v2:diagnosticSubTypeId id="?"/>\r
            <!--1 or more repetitions:-->\r
            <v2:diagnosticId id="?"/>\r
            <!--1 or more repetitions:-->\r
            <v2:treatmentId id="?"/>\r
         </typ:diagnosticFilter>\r
         <typ:assignmentStatusFilter>\r
            <!--You have a CHOICE of the next 2 items at this level-->\r
            <!--1 or more repetitions:-->\r
            <v2:assignmentStatusId id="?"/>\r
            <!--1 or more repetitions:-->\r
            <typ1:code>?</typ1:code>\r
         </typ:assignmentStatusFilter>\r
         <!--Optional:-->\r
         <v2:cito>?</v2:cito>\r
         <!--Optional:-->\r
         <v2:diagnosisIds>\r
            <!--1 or more repetitions:-->\r
            <v2:diagnosisId id="?"/>\r
         </v2:diagnosisIds>\r
         <!--Optional:-->\r
         <v2:specialAvailableResourceIds>\r
            <!--1 or more repetitions:-->\r
            <v2:specialAvailableResourceId id="?"/>\r
         </v2:specialAvailableResourceIds>\r
         <!--Optional:-->\r
         <v2:patientIds>\r
            <!--1 or more repetitions:-->\r
            <v2:patientId id="?"/>\r
         </v2:patientIds>\r
         <!--Optional:-->\r
         <v2:jobExecutionId id="?"/>\r
         <!--Optional:-->\r
         <typ:dateFilter>\r
            <!--Optional:-->\r
            <v1:start>?</v1:start>\r
            <!--Optional:-->\r
            <v1:end>?</v1:end>\r
         </typ:dateFilter>\r
         <!--Optional:-->\r
         <v2:lateralityIds>\r
            <!--1 or more repetitions:-->\r
            <v2:lateralityId>?</v2:lateralityId>\r
         </v2:lateralityIds>\r
         <!--Optional:-->\r
         <v2:referralMedicalOrganizationId id="?"/>\r
         <!--Optional:-->\r
         <v1:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v1:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v1:sortOrder attributeName="?" desceding="false"/>\r
            </v1:sortingOptions>\r
         </v1:pagingOptions>\r
         <!--Optional:-->\r
         <v1:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="?">?</v1:entry>\r
         </v1:options>\r
      </typ:searchAssignmentsShortRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/emiasid/assignmentService/v2_2/assignmentServicePortType/searchAssignmentsShortRequest"/></con:call></con:operation></con:interface><con:testSuite id="8e4e3cf0-d417-40d4-8198-983248086ba3" name="authentication/logout"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="4afb6346-0ccf-461d-9147-a43a9ff182b8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС0_ID279037" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="logout. Ошибка SERVER_ERROR" id="a5634437-fb7f-4986-8422-1e606b194863"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/user/authentication/logout" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="logout. Ошибка SERVER_ERROR" id="0d9178c4-e1da-4f0e-bf61-a348e7ffdd59" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "deviceGuid": "e1428369-71c0-40ee-a71e-7b7b8b4dc29",
  "patientId": [
    17612323
  ]
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/user/authentication/logout</con:originalUri><con:assertion type="JsonPath Match" id="803cbed9-f0f0-4413-a4ef-4dd7a0b3b1df" name="Code=SERVER_ERROR"><con:configuration><path>$.error.code</path><content>SERVER_ERROR</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="eed81751-4c93-4693-b992-be12267ab839" name="Код ответа 500"><con:configuration><codes>500</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5bdbd503-b817-4c62-aaed-8b3675b446cd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС_ID278992" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Проставить отметку авторизации = false" id="cb31a0db-d0b0-47cc-a8c2-c5fbbb522f5e"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/user/authentication/check" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проставить отметку авторизации = false" id="0f09a5f6-dfd7-426c-b502-7886ed7414ca" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
"userInformation": [
    {
     "patientId": ${#TestCase#patientId},
      "omsNumber": "${#TestCase#oms}",
      "birthDate": "${#TestCase#bD}",
      "authentication": false
    }
  ],
  "deviceGuid": "${#TestCase#deviceGuid}",
  "deviceCloudId": "${#TestCase#deviceCloudId}",
  "platform": "${#TestCase#platform}",
  "appVersion": "${#TestCase#version}"
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/user/authentication/check</con:originalUri><con:assertion type="JsonPath Match" id="5b8cde21-b714-4796-951b-765ad71ec4c1" name="patientId=переданному на вход"><con:configuration><path>$.payload.userInformationResponse[0].patientId</path><content>${#TestCase#patientId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="085d4b7b-bb1e-4b24-8a4e-2aa057b808ba" name="Код ответа 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Проверить authentication" id="a32b7176-82bf-4f5d-a671-73a83c0e9f0b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fud.device_guid,
fud.authentication from f_user fu
inner join f_user_device fud on
fu.id = fud.user_id
inner join f_device fd on
fud.device_guid = fd.device_guid
inner join f_device_settings fds on
fds.device_guid = fd.device_guid
where fu.patient_id = ${#TestCase#patientId}
and fd.device_guid = '${#TestCase#deviceGuid}'</con:query><con:assertion type="XPath Match" id="2256cc51-5e91-4ee9-a5c3-ebd9dcca1b20" name="Найдена 1 запись"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="PatientId=переданному на вход"><con:configuration><path>//*:F_USER.PATIENT_ID</path><content>${#TestCase#patientId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="guid=переданный на вход"><con:configuration><path>//*:F_USER_DEVICE.DEVICE_GUID</path><content>${#TestCase#deviceGuid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="authentication=false"><con:configuration><path>//*:F_USER_DEVICE.AUTHENTICATION</path><content>f</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="Выход пользователя с устройства" id="3cc778ee-aa12-436b-85bc-a0d89c3d7947"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/user/authentication/logout" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Выход пользователя с устройства" id="0d9178c4-e1da-4f0e-bf61-a348e7ffdd59" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "deviceGuid": "${#TestCase#deviceGuid}",
  "patientId": [
    ${#TestCase#patientId}
  ]
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/user/authentication/logout</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="de3c7c5e-71be-4b5d-b9b4-df22f9d97a06" name="Код ответа 204"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Проверить изменение authentication" id="b69b07fb-00df-4661-ab91-c6233778fbcd"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fud.device_guid,
fud.authentication from f_user fu
inner join f_user_device fud on
fu.id = fud.user_id
inner join f_device fd on
fud.device_guid = fd.device_guid
inner join f_device_settings fds on
fds.device_guid = fd.device_guid
where fu.patient_id = ${#TestCase#patientId}
and fd.device_guid = '${#TestCase#deviceGuid}'</con:query><con:assertion type="XPath Match" id="2256cc51-5e91-4ee9-a5c3-ebd9dcca1b20" name="Найдена 1 запись"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="PatientId=переданному на вход"><con:configuration><path>//*:F_USER.PATIENT_ID</path><content>${#TestCase#patientId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="guid=переданный на вход"><con:configuration><path>//*:F_USER_DEVICE.DEVICE_GUID</path><content>${#TestCase#deviceGuid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="authentication=false"><con:configuration><path>//*:F_USER_DEVICE.AUTHENTICATION</path><content>f</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>30440577</con:value></con:property><con:property><con:name>deviceGuid</con:name><con:value>e1428369-71c0-40ee-a71e-7b7b8b4dc290</con:value></con:property><con:property><con:name>deviceCloudId</con:name><con:value>fDdsI4OpSfiurE__O06I1b:APA91bGZSVU_lqsEphrjHsrUSYOzCxzdh_SCGwxzYH5AU1uCa4fdwhroy1TaQXn1Bx3dgooz1Jn-dvMUFN3NhAnQsYBo-4DZwUdSKIPRoJd0DGEdmbHTrS0hyfdDL6z3PlUTc9f45OOqQ</con:value></con:property><con:property><con:name>oms</con:name><con:value>7752910879000540</con:value></con:property><con:property><con:name>bD</con:name><con:value>1980-07-20</con:value></con:property><con:property><con:name>platform</con:name><con:value>APPLE</con:value></con:property><con:property><con:name>version</con:name><con:value>7.0.10</con:value></con:property></con:properties></con:testCase><con:testCase id="79f47cef-53dd-4248-abea-d5987754951d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС_ID279060" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Проставить отметку авторизации = true" id="6e100fdf-baa6-4f8b-8e2c-968029eb9874"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/user/authentication/check" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проставить отметку авторизации = true" id="0f09a5f6-dfd7-426c-b502-7886ed7414ca" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
"userInformation": [
    {
     "patientId": ${#TestCase#patientId},
      "omsNumber": "${#TestCase#oms}",
      "birthDate": "${#TestCase#bD}",
      "authentication": true
    }
  ],
  "deviceGuid": "${#TestCase#deviceGuid}",
  "deviceCloudId": "${#TestCase#deviceCloudId}",
  "platform": "${#TestCase#platform}",
  "appVersion": "${#TestCase#version}"
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/user/authentication/check</con:originalUri><con:assertion type="JsonPath Match" id="5b8cde21-b714-4796-951b-765ad71ec4c1" name="patientId=переданному на вход"><con:configuration><path>$.payload.userInformationResponse[0].patientId</path><content>${#TestCase#patientId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="085d4b7b-bb1e-4b24-8a4e-2aa057b808ba" name="Код ответа 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Проверить authentication" id="fa10c317-ef4d-4646-a3eb-f6dff4756836"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fud.device_guid,
fud.authentication from f_user fu
inner join f_user_device fud on
fu.id = fud.user_id
inner join f_device fd on
fud.device_guid = fd.device_guid
inner join f_device_settings fds on
fds.device_guid = fd.device_guid
where fu.patient_id = ${#TestCase#patientId}
and fd.device_guid = '${#TestCase#deviceGuid}'</con:query><con:assertion type="XPath Match" id="2256cc51-5e91-4ee9-a5c3-ebd9dcca1b20" name="Найдена 1 запись"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="PatientId=переданному на вход"><con:configuration><path>//*:F_USER.PATIENT_ID</path><content>${#TestCase#patientId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="guid=переданный на вход"><con:configuration><path>//*:F_USER_DEVICE.DEVICE_GUID</path><content>${#TestCase#deviceGuid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="authentication=false"><con:configuration><path>//*:F_USER_DEVICE.AUTHENTICATION</path><content>t</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="Выход пользователя с устройства" id="81ffdb86-bf34-42e6-84f1-37e50baff20a"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/user/authentication/logout" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Выход пользователя с устройства" id="0d9178c4-e1da-4f0e-bf61-a348e7ffdd59" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "deviceGuid": "${#TestCase#deviceGuid}",
  "patientId": [
    ${#TestCase#patientId}
  ]
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/user/authentication/logout</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="de3c7c5e-71be-4b5d-b9b4-df22f9d97a06" name="Код ответа 204"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Проверить изменение authentication" id="1af5a3bd-8575-4a5f-968a-ac5d8558f457"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fud.device_guid,
fud.authentication from f_user fu
inner join f_user_device fud on
fu.id = fud.user_id
inner join f_device fd on
fud.device_guid = fd.device_guid
inner join f_device_settings fds on
fds.device_guid = fd.device_guid
where fu.patient_id = ${#TestCase#patientId}
and fd.device_guid = '${#TestCase#deviceGuid}'</con:query><con:assertion type="XPath Match" id="2256cc51-5e91-4ee9-a5c3-ebd9dcca1b20" name="Найдена 1 запись"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="PatientId=переданному на вход"><con:configuration><path>//*:F_USER.PATIENT_ID</path><content>${#TestCase#patientId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="guid=переданный на вход"><con:configuration><path>//*:F_USER_DEVICE.DEVICE_GUID</path><content>${#TestCase#deviceGuid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="authentication=false"><con:configuration><path>//*:F_USER_DEVICE.AUTHENTICATION</path><content>f</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>30440577</con:value></con:property><con:property><con:name>deviceGuid</con:name><con:value>e1428369-71c0-40ee-a71e-7b7b8b4dc290</con:value></con:property><con:property><con:name>deviceCloudId</con:name><con:value>fDdsI4OpSfiurE__O06I1b:APA91bGZSVU_lqsEphrjHsrUSYOzCxzdh_SCGwxzYH5AU1uCa4fdwhroy1TaQXn1Bx3dgooz1Jn-dvMUFN3NhAnQsYBo-4DZwUdSKIPRoJd0DGEdmbHTrS0hyfdDL6z3PlUTc9f45OOqQ</con:value></con:property><con:property><con:name>oms</con:name><con:value>7752910879000540</con:value></con:property><con:property><con:name>bD</con:name><con:value>1980-07-20</con:value></con:property><con:property><con:name>platform</con:name><con:value>APPLE</con:value></con:property><con:property><con:name>version</con:name><con:value>7.0.10</con:value></con:property></con:properties></con:testCase><con:testCase id="61e6dfd7-59e7-4091-b593-622242a275f3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС_ID279061" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Найти пользователя" id="f0c1f7ed-b7c0-42da-a7bc-8153f4b655f9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>select fu.id, fud.id, fu.patient_id, fu.oms_number, fu.birth_date, fud.device_guid, 
fd.app_version, fd.platform, fd.device_cloud_id, fds.device_guid,
fud.authentication, fud.deleted, fud.deleted_date, fds.appointment,
fds.appointment_reminder, fds.referral, fds.pr_news from f_user fu
inner join f_user_device fud on
fu.id = fud.user_id
inner join f_device fd on
fud.device_guid = fd.device_guid
inner join f_device_settings fds on
fds.device_guid = fd.device_guid
where fud.authentication = true
fetch first 1 rows only</con:query><con:assertion type="XPath Match" id="2256cc51-5e91-4ee9-a5c3-ebd9dcca1b20" name="Найдена 1 запись"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="authentication=true"><con:configuration><path>//*:F_USER_DEVICE.AUTHENTICATION</path><content>t</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать данные пользователя" id="f177610c-f874-4188-b640-097fc4828c35"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>coudId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя</con:sourceStep><con:sourcePath>//*:F_DEVICE.DEVICE_CLOUD_ID</con:sourcePath><con:targetType>deviceCloudId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>patientId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя</con:sourceStep><con:sourcePath>//Row[1]/F_USER.PATIENT_ID</con:sourcePath><con:targetType>patientId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>oms</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя</con:sourceStep><con:sourcePath>//Row[1]/F_USER.OMS_NUMBER</con:sourcePath><con:targetType>oms</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>birthDate</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя</con:sourceStep><con:sourcePath>//Row[1]/F_USER.BIRTH_DATE</con:sourcePath><con:targetType>bD</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>guid</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя</con:sourceStep><con:sourcePath>//Row[1]/F_USER_DEVICE.DEVICE_GUID</con:sourcePath><con:targetType>deviceGuid</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>version</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя</con:sourceStep><con:sourcePath>//Row[1]/F_DEVICE.APP_VERSION</con:sourcePath><con:targetType>version</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>platform</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя</con:sourceStep><con:sourcePath>//Row[1]/F_DEVICE.PLATFORM</con:sourcePath><con:targetType>platform</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Выход пользователя с устройства" id="ea55aad2-eb15-4e39-965a-6347f38bf7e5"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/user/authentication/logout" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Выход пользователя с устройства" id="0d9178c4-e1da-4f0e-bf61-a348e7ffdd59" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "deviceGuid": "${#TestCase#deviceGuid}",
  "patientId": [
    ${#TestCase#patientFake}
  ]
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/user/authentication/logout</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="de3c7c5e-71be-4b5d-b9b4-df22f9d97a06" name="Код ответа 204"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Проверить старого пользователя" id="56d70c86-4ee4-418e-a65f-9264c5c74fd0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fud.device_guid,
fud.authentication from f_user fu
inner join f_user_device fud on
fu.id = fud.user_id
inner join f_device fd on
fud.device_guid = fd.device_guid
inner join f_device_settings fds on
fds.device_guid = fd.device_guid
where fu.patient_id = ${#TestCase#patientId}
and fd.device_guid = '${#TestCase#deviceGuid}'</con:query><con:assertion type="XPath Match" id="2256cc51-5e91-4ee9-a5c3-ebd9dcca1b20" name="Найдена 1 запись"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="PatientId=переданному на вход"><con:configuration><path>//*:F_USER.PATIENT_ID</path><content>${#TestCase#patientId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="guid=переданный на вход"><con:configuration><path>//*:F_USER_DEVICE.DEVICE_GUID</path><content>${#TestCase#deviceGuid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="authentication=false"><con:configuration><path>//*:F_USER_DEVICE.AUTHENTICATION</path><content>t</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Проверить отсутствие фэйк пользователя" id="e4ac4156-3ffe-4adb-9874-d8b3aff640e1"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fud.device_guid,
fud.authentication from f_user fu
inner join f_user_device fud on
fu.id = fud.user_id
inner join f_device fd on
fud.device_guid = fd.device_guid
inner join f_device_settings fds on
fds.device_guid = fd.device_guid
where fu.patient_id = ${#TestCase#patientFake}
and fd.device_guid = '${#TestCase#deviceGuid}'</con:query><con:assertion type="XPath Match" id="705ec05c-f31b-4ec2-8897-8e0df3589d3e" name="Запись не найдена"><con:configuration><path>//ResultSet/@fetchSize</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>17612323</con:value></con:property><con:property><con:name>deviceGuid</con:name><con:value>0d913782-890f-4486-b5ee-2e849dfa042e</con:value></con:property><con:property><con:name>deviceCloudId</con:name><con:value>fadef5b9-7d38-4b01-8592-a99b1d7cc8aa</con:value></con:property><con:property><con:name>oms</con:name><con:value>77000031760649</con:value></con:property><con:property><con:name>bD</con:name><con:value>1957-09-29</con:value></con:property><con:property><con:name>platform</con:name><con:value>APPLE</con:value></con:property><con:property><con:name>version</con:name><con:value>7.0.13</con:value></con:property><con:property><con:name>patientFake</con:name><con:value>32111</con:value></con:property></con:properties></con:testCase><con:testCase id="ea3e99d6-2b58-49e5-a60a-a472ddf4d6ef" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС_ID279003" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Проставить отметку авторизации о пользователям" id="0f5d1868-6c2d-40ee-a652-cab91a651030"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/user/authentication/check" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проставить отметку авторизации о пользователям" id="0f09a5f6-dfd7-426c-b502-7886ed7414ca" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
"userInformation": [
    {
     "patientId": ${#TestCase#patientId1},
      "omsNumber": "${#TestCase#oms1}",
      "birthDate": "${#TestCase#bD1}",
      "authentication": true
    },
    {
     "patientId": ${#TestCase#patientId2},
      "omsNumber": "${#TestCase#oms2}",
      "birthDate": "${#TestCase#bD2}",
      "authentication": true
    },
    {
     "patientId": ${#TestCase#patientId3},
      "omsNumber": "${#TestCase#oms3}",
      "birthDate": "${#TestCase#bD3}",
      "authentication": false
    }
  ],
  "deviceGuid": "${#TestCase#deviceGuid}",
  "deviceCloudId": "${#TestCase#deviceCloudId}",
  "platform": "${#TestCase#platform}",
  "appVersion": "${#TestCase#version}"
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/user/authentication/check</con:originalUri><con:assertion type="JsonPath Match" id="5b8cde21-b714-4796-951b-765ad71ec4c1" name="patientId1=переданному на вход"><con:configuration><path>$.payload.userInformationResponse[0].patientId</path><content>${#TestCase#patientId1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="085d4b7b-bb1e-4b24-8a4e-2aa057b808ba" name="Код ответа 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5b8cde21-b714-4796-951b-765ad71ec4c1" name="patientId2=переданному на вход"><con:configuration><path>$.payload.userInformationResponse[1].patientId</path><content>${#TestCase#patientId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5b8cde21-b714-4796-951b-765ad71ec4c1" name="patientId3=переданному на вход"><con:configuration><path>$.payload.userInformationResponse[2].patientId</path><content>${#TestCase#patientId3}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Выход пользователя с устройства" id="d5fce6e2-7df2-482c-804f-ac80c880fe8c"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/user/authentication/logout" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Выход пользователя с устройства" id="0d9178c4-e1da-4f0e-bf61-a348e7ffdd59" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "deviceGuid": "${#TestCase#deviceGuid}",
  "patientId": [
    ${#TestCase#patientId1}, ${#TestCase#patientId2},${#TestCase#patientId3},${#TestCase#patientFake}
  ]
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/user/authentication/logout</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="de3c7c5e-71be-4b5d-b9b4-df22f9d97a06" name="Код ответа 204"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Проверить authentication первого пациента" id="8c4bc68c-e307-4738-98c3-70b66b72524b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fud.device_guid,
fud.authentication from f_user fu
inner join f_user_device fud on
fu.id = fud.user_id
inner join f_device fd on
fud.device_guid = fd.device_guid
inner join f_device_settings fds on
fds.device_guid = fd.device_guid
where fu.patient_id = ${#TestCase#patientId1}
and fd.device_guid = '${#TestCase#deviceGuid}'</con:query><con:assertion type="XPath Match" id="2256cc51-5e91-4ee9-a5c3-ebd9dcca1b20" name="Найдена 1 запись"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="PatientId=переданному на вход"><con:configuration><path>//*:F_USER.PATIENT_ID</path><content>${#TestCase#patientId1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="guid=переданный на вход"><con:configuration><path>//*:F_USER_DEVICE.DEVICE_GUID</path><content>${#TestCase#deviceGuid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="authentication=false"><con:configuration><path>//*:F_USER_DEVICE.AUTHENTICATION</path><content>f</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Проверить authentication второго пациента" id="45a22b56-40f7-45ea-b682-09213e1def46"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fud.device_guid,
fud.authentication from f_user fu
inner join f_user_device fud on
fu.id = fud.user_id
inner join f_device fd on
fud.device_guid = fd.device_guid
inner join f_device_settings fds on
fds.device_guid = fd.device_guid
where fu.patient_id = ${#TestCase#patientId2}
and fd.device_guid = '${#TestCase#deviceGuid}'</con:query><con:assertion type="XPath Match" id="2256cc51-5e91-4ee9-a5c3-ebd9dcca1b20" name="Найдена 1 запись"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="PatientId=переданному на вход"><con:configuration><path>//*:F_USER.PATIENT_ID</path><content>${#TestCase#patientId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="guid=переданный на вход"><con:configuration><path>//*:F_USER_DEVICE.DEVICE_GUID</path><content>${#TestCase#deviceGuid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="authentication=false"><con:configuration><path>//*:F_USER_DEVICE.AUTHENTICATION</path><content>f</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Проверить authentication третьего пациента" id="214c3e44-01a5-4fcf-a8f3-4d13e62582c5"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fud.device_guid,
fud.authentication from f_user fu
inner join f_user_device fud on
fu.id = fud.user_id
inner join f_device fd on
fud.device_guid = fd.device_guid
inner join f_device_settings fds on
fds.device_guid = fd.device_guid
where fu.patient_id = ${#TestCase#patientId3}
and fd.device_guid = '${#TestCase#deviceGuid}'</con:query><con:assertion type="XPath Match" id="2256cc51-5e91-4ee9-a5c3-ebd9dcca1b20" name="Найдена 1 запись"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="PatientId=переданному на вход"><con:configuration><path>//*:F_USER.PATIENT_ID</path><content>${#TestCase#patientId3}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="guid=переданный на вход"><con:configuration><path>//*:F_USER_DEVICE.DEVICE_GUID</path><content>${#TestCase#deviceGuid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="7a3ebe35-62bc-45b9-8d8b-42baff6dbcef" name="authentication=false"><con:configuration><path>//*:F_USER_DEVICE.AUTHENTICATION</path><content>f</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Проверить отсутствие фэйк пациента" id="ea378d72-86b8-4981-96ee-202ec80bb444"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fud.device_guid,
fud.authentication from f_user fu
inner join f_user_device fud on
fu.id = fud.user_id
inner join f_device fd on
fud.device_guid = fd.device_guid
inner join f_device_settings fds on
fds.device_guid = fd.device_guid
where fu.patient_id = ${#TestCase#patientFake}
and fd.device_guid = '${#TestCase#deviceGuid}'</con:query><con:assertion type="XPath Match" id="2256cc51-5e91-4ee9-a5c3-ebd9dcca1b20" name="Записей не найдено"><con:configuration><path>//ResultSet/@fetchSize</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>patientId1</con:name><con:value>17612323</con:value></con:property><con:property><con:name>deviceGuid</con:name><con:value>e1428369-71c0-40ee-a71e-7b7b8b4dc290</con:value></con:property><con:property><con:name>deviceCloudId</con:name><con:value>fDdsI4OpSfiurE__O06I1b:APA91bGZSVU_lqsEphrjHsrUSYOzCxzdh_SCGwxzYH5AU1uCa4fdwhroy1TaQXn1Bx3dgooz1Jn-dvMUFN3NhAnQsYBo-4DZwUdSKIPRoJd0DGEdmbHTrS0hyfdDL6z3PlUTc9f45OOqQ</con:value></con:property><con:property><con:name>oms1</con:name><con:value>77000031760649</con:value></con:property><con:property><con:name>bD1</con:name><con:value>1957-09-29</con:value></con:property><con:property><con:name>platform</con:name><con:value>APPLE</con:value></con:property><con:property><con:name>version</con:name><con:value>7.0.10</con:value></con:property><con:property><con:name>patientId2</con:name><con:value>30440577</con:value></con:property><con:property><con:name>oms2</con:name><con:value>7752910879000540</con:value></con:property><con:property><con:name>bD2</con:name><con:value>1980-07-20</con:value></con:property><con:property><con:name>patientId3</con:name><con:value>24073068</con:value></con:property><con:property><con:name>oms3</con:name><con:value>7770560881000661</con:value></con:property><con:property><con:name>bD3</con:name><con:value>1934-09-11</con:value></con:property><con:property><con:name>patientFake</con:name><con:value>32111</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="88048770-9331-48db-a56b-2ccb44701f18" name="getDoctorInfo"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="f26b0ee8-f147-479e-98f6-269b40b556f3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Маппинг" searchProperties="true"><con:settings/><con:testStep type="request" name="getDoctorInfo saOrchestrator" id="60892e18-b8e1-43ae-aa52-4877c2f479cd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Самозапись</con:interface><con:operation>getDoctorsInfo</con:operation><con:request name="getDoctorInfo saOrchestrator" id="1dd1d65a-4d54-4e7f-9568-b4f1cd9fa9d0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <v5:getDoctorsInfo>
         <omsNumber>${#TestCase#oms}</omsNumber>
         <birthDate>${#TestCase#bd}</birthDate>
         <!--You have a CHOICE of the next 3 items at this level-->
         <specialityId>${#TestCase#specId}</specialityId>

         <externalSystemId>EIM</externalSystemId>
      </v5:getDoctorsInfo>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2e5b6576-5574-4609-b836-5422034714a4"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="getDoctorInfo INFO" id="60cc3bf8-7993-4b14-9cbf-2ed68fcd9e1d"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v3/saOrchestrator/getDoctorsInfo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDoctorInfo INFO" id="c3da989d-fb9a-463f-827c-d18636cc4b93" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "omsNumber": "${#TestCase#oms}",
  "birthDate": "${#TestCase#bd}",
  "specialityId": [${#TestCase#specId}]
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/getDoctorsInfo</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5bef2faf-b6cc-45f3-aa59-d42d3f08a646" name="статус ответа =200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="46b57eb4-30b4-4c53-8381-32e56634dfd5" name="в ответе есть lpuId"><con:configuration><token>lpuId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить соответствие lpuId, lpuShortName и defaultAddress" id="4c2bbb93-9daf-4dbb-8354-10eea52aa880"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDoctorInfoResponse = context.expand('${getDoctorInfo INFO#Response}')
def slurperJson = new JsonSlurper()
def goctorInfoINFO = slurperJson.parseText(getDoctorInfoResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def getDoctorInfoSACResponse = context.expand('${getDoctorInfo saOrchestrator#Response}')
getDoctorInfoSAC = new XmlSlurper().parseText(getDoctorInfoSACResponse)

SACArs=getDoctorInfoSAC.Body.getDoctorsInfoResponse.availableResource
numberSACArs=SACArs.size()
log.info numberSACArs

 mySet = new HashSet&lt;>();

//проверить все ли ресурсы в отсете sac уникальные
if (numberSACArs>0){
	for(int i=0; i&lt;numberSACArs; i++){
		for ( x : SACArs[i].id) {
   			 mySet.add(x);
		}
	}
}
log.info numberSACArs
assert numberSACArs== mySet.size()
assert goctorInfoINFO.payload.doctorsInfo[0].lpuId ==SACArs[0].complexResource.room.lpuId.toLong()
assert goctorInfoINFO.payload.doctorsInfo[0].lpuShortName ==SACArs[0].complexResource.room.lpuShortName.toString()
assert goctorInfoINFO.payload.doctorsInfo[0].defaultAddress ==SACArs[0].complexResource.room.defaultAddress.toString()

log.info "end"</script></con:config></con:testStep><con:testStep type="groovy" name="Сравнить количество ресурсов в doctorsInfo" id="cdb92d41-6863-4c81-886d-dfe7cb49b26c"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDoctorInfoResponse = context.expand('${getDoctorInfo INFO#Response}')
def slurperJson = new JsonSlurper()
def goctorInfoINFO = slurperJson.parseText(getDoctorInfoResponse)

def getDoctorInfoSACResponse = context.expand('${getDoctorInfo saOrchestrator#Response}')
getDoctorInfoSAC = new XmlSlurper().parseText(getDoctorInfoSACResponse)

SACArs=getDoctorInfoSAC.Body.getDoctorsInfoResponse.availableResource
numberSACArs=SACArs.size()

 mySet = new HashSet&lt;>();

//проверить, все ли ресурсы в ответе sac уникальные
if (numberSACArs>0){
	for(int i=0; i&lt;numberSACArs; i++){
		for ( x : SACArs[i].id) {
   			 mySet.add(x);
		}
	}
}

SACArsWithRoom=[]
for(int i=0; i&lt;numberSACArs; i++){
	if(SACArs[i].complexResource.room.text() !=""){
		SACArsWithRoom &lt;&lt; SACArs[i]
	}
	else{
		log.info"у ресурса "+SACArs[i].id +" нет room"
	}
}
log.info SACArsWithRoom
INFOArs=goctorInfoINFO.payload.doctorsInfo.availableResources[0].id.unique().size()
log.info INFOArs
log.info SACArsWithRoom.size()
assert  SACArsWithRoom.size()==INFOArs
</script></con:config></con:testStep><con:testStep type="groovy" name="Сравнить количество ресурсов в notAvailableDoctors" id="d624077c-dd26-46b6-9866-e28bb8814874"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDoctorInfoResponse = context.expand('${getDoctorInfo INFO#Response}')
def slurperJson = new JsonSlurper()
def goctorInfoINFO = slurperJson.parseText(getDoctorInfoResponse)

def getDoctorInfoSACResponse = context.expand('${getDoctorInfo saOrchestrator#Response}')
getDoctorInfoSAC = new XmlSlurper().parseText(getDoctorInfoSACResponse)

SACArs=getDoctorInfoSAC.Body.getDoctorsInfoResponse.availableResource
numberSACArs=SACArs.size()

 mySet = new HashSet&lt;>();

//проверить, все ли ресурсы в ответе sac уникальные
if (numberSACArs>0){
	for(int i=0; i&lt;numberSACArs; i++){
		for ( x : SACArs[i].id) {
   			 mySet.add(x);
		}
	}
}

SACArsWithoutRoom=[]
for(int i=0; i&lt;numberSACArs; i++){
	if(SACArs[i].complexResource.room.text() ==""){
		SACArsWithoutRoom &lt;&lt; SACArs[i]
	}
	else{
		log.info"у ресурса "+SACArs[i].id +" есть room"
	}
}
log.info SACArsWithoutRoom
INFOArs=goctorInfoINFO.payload.notAvailableDoctors.id.unique().size()
log.info INFOArs
log.info SACArsWithoutRoom.size()
assert  SACArsWithoutRoom.size()==INFOArs
</script></con:config></con:testStep><con:testStep type="groovy" name="Сравнить количество комплексных ресурсов" id="47bef951-813f-481a-bc1f-fcf9f4edce4f"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper

def getDoctorInfoResponse = context.expand('${getDoctorInfo INFO#Response}')
def slurperJson = new JsonSlurper()
def getDoctorInfoINFO = slurperJson.parseText(getDoctorInfoResponse)

def getDoctorInfoSACResponse = context.expand('${getDoctorInfo saOrchestrator#Response}')
getDoctorInfoSAC = new XmlSlurper().parseText(getDoctorInfoSACResponse)

SACArs=getDoctorInfoSAC.Body.getDoctorsInfoResponse.availableResource.complexResource
numberSACArs=SACArs.size()

SACArsWithoutRoom=[]
SACArsWithRoom=[]
for(int i=0; i<numberSACArs; i++){
	if(SACArs[i].room.text() !=""){
		SACArsWithRoom << SACArs[i].id
	}
	else{
		SACArsWithoutRoom << SACArs[i].id
	}
}

// Посчитать количество комплексных ресурсов в ответе от Инфо
INFOArCr = getDoctorInfoINFO.payload.doctorsInfo[0].availableResources.complexResource.id.size()
INFONCr = getDoctorInfoINFO.payload.notAvailableDoctors.complexResource.id.size()
INFONArCr=[]
for(int i=0; i<INFONCr; i++){
	INFONCrId = getDoctorInfoINFO.payload.notAvailableDoctors.complexResource.id[i].size()
		for (int k=0; k<INFONCrId; k++){
				INFONArCr<<getDoctorInfoINFO.payload.notAvailableDoctors.complexResource.id[k]
	}
}
log.info INFOArCr + INFONArCr.size()
log.info SACArs.size()

// Сравнить количество комплексных ресурсов от Орк и Инфо
assert  SACArs.size()==INFOArCr + INFONArCr.size()
]]></script></con:config></con:testStep><con:testStep type="groovy" name="Проверить основные параметры ресурсов" id="324b6660-fa3e-4cea-b5d1-7d6cba4724be"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDoctorInfoResponse = context.expand('${getDoctorInfo INFO#Response}')
def slurperJson = new JsonSlurper()
def goctorInfoINFO = slurperJson.parseText(getDoctorInfoResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def getDoctorInfoSACResponse = context.expand('${getDoctorInfo saOrchestrator#Response}')
getDoctorInfoSAC = new XmlSlurper().parseText(getDoctorInfoSACResponse)

SACArs=getDoctorInfoSAC.Body.getDoctorsInfoResponse.availableResource
numberSACArs=SACArs.size()
INFOArs=goctorInfoINFO.payload.doctorsInfo[0].availableResources
numberArs=INFOArs.size()
//log.info numberArs

SACArsWithRoom=[]
for(int i=0; i<numberSACArs; i++){
	for(int g=0; g<SACArs.complexResource.size(); g++){
		if(SACArs[i].complexResource[g].room.text() !=""){
			newAr=[id:SACArs[i].id, lpuId:SACArs[i].lpuId, name:SACArs[i].name, arType:SACArs[i].arType, 
						specialityChangeAbility:SACArs[i].specialityChangeAbility, arSpecialityId:SACArs[i].arSpecialityId, 
						arSpecialityName:SACArs[i].arSpecialityName,
			complexResource:[id:SACArs[i].complexResource[g].id, name:SACArs[i].complexResource[g].name,
			room:[id:SACArs[i].complexResource[g].room.id, number:SACArs[i].complexResource[g].room.number,
					lpuId:SACArs[i].complexResource[g].room.lpuId, lpuShortName:SACArs[i].complexResource[g].room.lpuShortName,
					addressPointId:SACArs[i].complexResource[g].room.addressPointId,defaultAddress:SACArs[i].complexResource[g].room.defaultAddress,
					availabilityDate:SACArs[i].complexResource[g].room.availabilityDate]], district:SACArs[i].district, replacement:SACArs[i].replacement, nondistrict:SACArs[i].nondistrict, availableByReferral:SACArs[i].availableByReferral]
			SACArsWithRoom << newAr
		}
	}
}

log.info SACArsWithRoom

for(int i=0; i<numberArs; i++){
	for (int k=0; k<SACArsWithRoom.size(); k++){
		arsS=SACArsWithRoom[k].complexResource.id.toLong()
		arsR=INFOArs[i].complexResource.id.join().toLong()
		if (arsS == arsR){
			assert	INFOArs[i].id == SACArsWithRoom[k].id.toLong()
			assert	INFOArs[i].lpuId == SACArsWithRoom[k].lpuId.toLong() 
			assert	INFOArs[i].name == SACArsWithRoom[k].name.toString()
			assert	INFOArs[i].arType == SACArsWithRoom[k].arType.toInteger() 
			assert	INFOArs[i].specialityChangeAbility == SACArsWithRoom[k].specialityChangeAbility.toBoolean()
			assert	INFOArs[i].arSpecialityId == SACArsWithRoom[k].arSpecialityId.toLong()
			assert	INFOArs[i].arSpecialityName == SACArsWithRoom[k].arSpecialityName.toString() 
			assert	INFOArs[i].district == SACArsWithRoom[k].district.toBoolean() 
			assert	INFOArs[i].replacement == SACArsWithRoom[k].replacement.toBoolean() 
			assert	INFOArs[i].availableByReferral == SACArsWithRoom[k].availableByReferral.toBoolean() 
		}
	}
}
log.info "end"

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Проверить основные параметры ресурсов (не доступных для записи)" id="57c76d5b-6f2d-41a4-b8cc-25d4d681c057"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDoctorInfoResponse = context.expand('${getDoctorInfo INFO#Response}')
def slurperJson = new JsonSlurper()
def goctorInfoINFO = slurperJson.parseText(getDoctorInfoResponse)

def getDoctorInfoSACResponse = context.expand('${getDoctorInfo saOrchestrator#Response}')
getDoctorInfoSAC = new XmlSlurper().parseText(getDoctorInfoSACResponse)

SACArs=getDoctorInfoSAC.Body.getDoctorsInfoResponse.availableResource
numberSACArs=SACArs.size()
INFOArs=goctorInfoINFO.payload.notAvailableDoctors
numberArs=INFOArs.id.unique().size()

SACArsWithoutRoom=[]
for(int i=0; i<numberSACArs; i++){
	if(SACArs[i].complexResource.room.text() ==""){
		SACArsWithoutRoom << SACArs[i]
	}
	else{
		log.info"у ресурса "+SACArs[i].id +" есть room"
	}
}

INFOArsId = [] // Массив для уникальных id
INFOArsId << INFOArs.id
log.info INFOArsId
log.info SACArsWithoutRoom.id
INFOArsLpuId = []
INFOArsLpuId << INFOArs.lpuId
log.info INFOArsLpuId
log.info SACArsWithoutRoom.lpuId

INFOArsName = [] 
INFOArsName << INFOArs.name
log.info INFOArsName
log.info SACArsWithoutRoom.name

INFOArsArType = [] 
INFOArsArType << INFOArs.arType
log.info INFOArsArType
log.info SACArsWithoutRoom.arType

INFOArsArSpecialityId = [] 
INFOArsArSpecialityId << INFOArs.arSpecialityId
log.info INFOArsArSpecialityId
log.info SACArsWithoutRoom.arSpecialityId

INFOArsArSpecialityName = [] 
INFOArsArSpecialityName << INFOArs.arSpecialityName
log.info INFOArsArSpecialityName
log.info SACArsWithoutRoom.arSpecialityName

INFOArsDistrict = [] 
INFOArsDistrict << INFOArs.district
log.info INFOArsDistrict
log.info SACArsWithoutRoom.district

INFOArsReplacement = [] 
INFOArsReplacement << INFOArs.replacement
log.info INFOArsReplacement
log.info SACArsWithoutRoom.replacement

INFOArsAvailable = [] 
INFOArsAvailable << INFOArs.availableByReferral
log.info INFOArsAvailable
log.info SACArsWithoutRoom.availableByReferral

for (int i=0; i<SACArsWithoutRoom.id.size; i++){
	for(int k=0; k<numberArs; k++){
		if(SACArsWithoutRoom[i].id ==INFOArsId.get(0).get(k)){
			assert	INFOArsId.get(0).get(k) == SACArsWithoutRoom[i].id.toLong()
			assert	INFOArsLpuId.get(0).get(k) == SACArsWithoutRoom[i].lpuId.toLong()
			assert	INFOArsName.get(0).get(k) == SACArsWithoutRoom[i].name.toString()
			assert	INFOArsArType.get(0).get(k) == SACArsWithoutRoom[i].arType.toLong()
			assert	INFOArsArSpecialityId.get(0).get(k) == SACArsWithoutRoom[i].arSpecialityId.toLong()
			assert	INFOArsArSpecialityName.get(0).get(k) == SACArsWithoutRoom[i].arSpecialityName.toString()
			assert	INFOArsDistrict.get(0).get(k) == SACArsWithoutRoom[i].district.toBoolean()
			assert	INFOArsReplacement.get(0).get(k) == SACArsWithoutRoom[i].replacement.toBoolean()
			assert	INFOArsAvailable.get(0).get(k) == SACArsWithoutRoom[i].availableByReferral.toBoolean()
		}
	}
}

log.info "end"
]]></script></con:config></con:testStep><con:testStep type="groovy" name="Проверить mainDoctor ресурсов" id="24661166-8623-4c98-a3ba-3cc846a08f43"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDoctorInfoResponse = context.expand('${getDoctorInfo INFO#Response}')
def slurperJson = new JsonSlurper()
def goctorInfoINFO = slurperJson.parseText(getDoctorInfoResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def getDoctorInfoSACResponse = context.expand('${getDoctorInfo saOrchestrator#Response}')
getDoctorInfoSAC = new XmlSlurper().parseText(getDoctorInfoSACResponse)

SACArs=getDoctorInfoSAC.Body.getDoctorsInfoResponse.availableResource
numberSACArs=SACArs.size()
INFOArs=goctorInfoINFO.payload.doctorsInfo[0].availableResources
numberArs=INFOArs.size()
//log.info numberArs

SACArsWithRoom=[]
for(int i=0; i<numberSACArs; i++){
	for(int g=0; g<SACArs.complexResource.size(); g++){
		if(SACArs[i].complexResource[g].room.text() !=""){
			newAr=[id:SACArs[i].id, 	complexResource:[id:SACArs[i].complexResource[g].id], 
			mainDoctor:[specialityName:SACArs[i].mainDoctor.specialityName, specialityId:SACArs[i].mainDoctor.specialityId, 
			firstName:SACArs[i].mainDoctor.firstName, lastName:SACArs[i].mainDoctor.lastName, 
			secondName:SACArs[i].mainDoctor.secondName, mejiId:SACArs[i].mainDoctor.mejiId, employeeId:SACArs[i].mainDoctor.employeeId]]
			SACArsWithRoom << newAr
		}
	}
}

log.info SACArsWithRoom

for(int i=0; i<numberArs; i++){
	for (int k=0; k<SACArsWithRoom.size(); k++){
		arsS=SACArsWithRoom[k].complexResource.id.toLong()
		arsR=INFOArs[i].complexResource.id.join().toLong()
		if (arsS == arsR){
			infoDoc=INFOArs[i].mainDoctor
			assert	infoDoc.specialityName == SACArsWithRoom[k].mainDoctor.specialityName.toString()
			assert	infoDoc.specialityId == SACArsWithRoom[k].mainDoctor.specialityId.toLong()
			assert	infoDoc.firstName == SACArsWithRoom[k].mainDoctor.firstName.toString()
			assert	infoDoc.secondName == SACArsWithRoom[k].mainDoctor.secondName.toString() 
			assert	infoDoc.lastName == SACArsWithRoom[k].mainDoctor.lastName.toString() 
			assert	infoDoc.mejiId == SACArsWithRoom[k].mainDoctor.mejiId.toLong()
			assert	infoDoc.employeeId == SACArsWithRoom[k].mainDoctor.employeeId.toLong() 
		}
	}
}
log.info "end"


]]></script></con:config></con:testStep><con:testStep type="groovy" name="Проверить mainDoctor ресурсов (не доступных для записи)" id="3c9f80a1-295e-4bf5-a7e2-0810ca943e26"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDoctorInfoResponse = context.expand('${getDoctorInfo INFO#Response}')
def slurperJson = new JsonSlurper()
def goctorInfoINFO = slurperJson.parseText(getDoctorInfoResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def getDoctorInfoSACResponse = context.expand('${getDoctorInfo saOrchestrator#Response}')
getDoctorInfoSAC = new XmlSlurper().parseText(getDoctorInfoSACResponse)

SACArs=getDoctorInfoSAC.Body.getDoctorsInfoResponse.availableResource
INFOArs=goctorInfoINFO.payload.notAvailableDoctors.unique()

numberArs=INFOArs.size()
numberSACArs=SACArs.size()

SACArsWithoutRoom=[]
for(int i=0; i<numberSACArs; i++){
	if(SACArs[i].complexResource.room.text() ==""){
		SACArsWithoutRoom << SACArs[i]
	}
	else{
		log.info"у ресурса "+SACArs[i].id +" есть room"
	}
}

INFOArsId = [] // Массив для уникальных id
INFOArsId << INFOArs.id
SACArsMain = SACArsWithoutRoom.mainDoctor

INFOArsSpecialityName = [] // Массив для уникальных id
INFOArsSpecialityName << INFOArs.mainDoctor.specialityName
log.info INFOArsSpecialityName
log.info SACArsMain.specialityName

INFOArsSpecialityId = [] // Массив для уникальных id
INFOArsSpecialityId << INFOArs.mainDoctor.specialityId
log.info INFOArsSpecialityId
log.info SACArsMain.specialityId

INFOArsFirstName = [] // Массив для уникальных id
INFOArsFirstName << INFOArs.mainDoctor.firstName
log.info INFOArsFirstName
log.info SACArsMain.firstName

INFOArsSecondName = [] // Массив для уникальных id
INFOArsSecondName << INFOArs.mainDoctor.secondName
log.info INFOArsSecondName
log.info SACArsMain.secondName

INFOArsLastName = [] // Массив для уникальных id
INFOArsLastName << INFOArs.mainDoctor.lastName
log.info INFOArsLastName
log.info SACArsMain.lastName

INFOArsMejiId = [] // Массив для уникальных id
INFOArsMejiId << INFOArs.mainDoctor.mejiId
log.info INFOArsMejiId
log.info SACArsMain.mejiId

INFOArsEmployeeId = [] // Массив для уникальных id
INFOArsEmployeeId << INFOArs.mainDoctor.employeeId
log.info INFOArsEmployeeId
log.info SACArsMain.employeeId

for (int i=0; i<SACArsWithoutRoom.id.size; i++){
	if(SACArsWithoutRoom[i].mainDoctor==null){
		assert  SACArsWithoutRoom[i].mainDoctor==null 
	}
	else{
		for(int k=0; k<numberArs; k++){
			if(SACArsWithoutRoom[i].id ==INFOArsId.get(0).get(k)){
				assert	INFOArsSpecialityName.get(0).get(k) == SACArsMain[i].specialityName.toString()
				assert	INFOArsSpecialityId.get(0).get(k) == SACArsMain[i].specialityId.toLong()
				assert	INFOArsFirstName.get(0).get(k) == SACArsMain[i].firstName.toString()
				assert	INFOArsSecondName.get(0).get(k) == SACArsMain[i].secondName.toString()
				assert	INFOArsLastName.get(0).get(k) == SACArsMain[i].lastName.toString()
				assert	INFOArsMejiId.get(0).get(k) == SACArsMain[i].mejiId.toLong()
				assert	INFOArsEmployeeId.get(0).get(k) == SACArsMain[i].employeeId.toLong()
			}
		}
	}
}
log.info "end"

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Проверить receptionType ресурсов" id="e6220cb2-9c98-473a-82b0-a26e1f24519a"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDoctorInfoResponse = context.expand('${getDoctorInfo INFO#Response}')
def slurperJson = new JsonSlurper()
def goctorInfoINFO = slurperJson.parseText(getDoctorInfoResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def getDoctorInfoSACResponse = context.expand('${getDoctorInfo saOrchestrator#Response}')
getDoctorInfoSAC = new XmlSlurper().parseText(getDoctorInfoSACResponse)

SACArs=getDoctorInfoSAC.Body.getDoctorsInfoResponse.availableResource
numberSACArs=SACArs.size()
INFOArs=goctorInfoINFO.payload.doctorsInfo[0].availableResources
numberArs=INFOArs.size()
//log.info numberArs

SACArsWithRoom=[]
for(int i=0; i<numberSACArs; i++){
	for(int g=0; g<SACArs.complexResource.size(); g++){
		if(SACArs[i].complexResource[g].room.text() !=""){
			newAr=[id:SACArs[i].id, 	complexResource:[id:SACArs[i].complexResource[g].id], 
			receptionType:[code:SACArs[i].receptionType.code, name:SACArs[i].receptionType.name, 
			primary:SACArs[i].receptionType.primary, home:SACArs[i].receptionType.home]]
			SACArsWithRoom << newAr
		}
	}
}

log.info SACArsWithRoom

for(int i=0; i<numberArs; i++){
	for (int k=0; k<SACArsWithRoom.size(); k++){
		arsS=SACArsWithRoom[k].complexResource.id.toLong()
		arsR=INFOArs[i].complexResource.id.join().toLong()
		if (arsS == arsR){
			assert INFOArs[i].receptionType.code.get(0) == SACArsWithRoom[k].receptionType.code.toInteger()
			assert INFOArs[i].receptionType.name.get(0) == SACArsWithRoom[k].receptionType.name.toString()
			assert INFOArs[i].receptionType.primary.get(0) == SACArsWithRoom[k].receptionType.primary.toString()
			assert INFOArs[i].receptionType.home.get(0) == SACArsWithRoom[k].receptionType.home.toString()
		}
	}
}

log.info "end"

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Проверить receptionType ресурсов (не доступных для записи)" id="0d4e3974-c9ea-491c-8c94-2b1eb920bd00"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDoctorInfoResponse = context.expand('${getDoctorInfo INFO#Response}')
def slurperJson = new JsonSlurper()
def goctorInfoINFO = slurperJson.parseText(getDoctorInfoResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def getDoctorInfoSACResponse = context.expand('${getDoctorInfo saOrchestrator#Response}')
getDoctorInfoSAC = new XmlSlurper().parseText(getDoctorInfoSACResponse)

SACArs=getDoctorInfoSAC.Body.getDoctorsInfoResponse.availableResource
INFOArs=goctorInfoINFO.payload.notAvailableDoctors.receptionType.get(0)
numberArs=INFOArs.size()
numberSACArs=SACArs.size()

log.info INFOArs.get(0)
SACArsWithComplexRes=[]
for(int i=0; i&lt;numberSACArs; i++){
	if(SACArs[i].complexResource.room.text() ==""){
		SACArsWithComplexRes &lt;&lt; SACArs[i]
	}
	else{
		log.info"у ресурса "+SACArs[i].id +" есть комплексный ресурс"
	}
}

for(int i=0; i&lt;numberArs; i++){
		log.info INFOArs[i].receptionType
		sacRt= SACArsWithComplexRes[i].receptionType
		assert INFOArs.size() == sacRt.size()
		for(int j=0; j&lt; INFOArs.size();j++){
			assert INFOArs[j].code.toString() == sacRt[j].code.toString()
			assert INFOArs[j].name == sacRt[j].name.toString()
			assert INFOArs[j].primary == sacRt[j].primary.toString()
			assert INFOArs[j].home == sacRt[j].home.toString()								
	}
}
log.info "end"

</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить complexResource и сортировку ресурсов" id="14c7a646-c659-4e24-9bc1-48af7fc30a45"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import java.text.SimpleDateFormat

String dTF = "yyyy-MM-dd'T'hh:mm:ss"
String dateTimeFormat="yyyy-MM-dd'T'hh:mm:ss.SSS+03:00"

def getDoctorInfoResponse = context.expand('${getDoctorInfo INFO#Response}')
def slurperJson = new JsonSlurper()
def getDoctorInfoINFO = slurperJson.parseText(getDoctorInfoResponse)

def getDoctorSAOResponse = context.expand('${getDoctorInfo saOrchestrator#Response}')
getDoctorInfoSAO = new XmlSlurper().parseText(getDoctorSAOResponse)

roomsRest = getDoctorInfoINFO.payload.doctorsInfo[0].availableResources.complexResource.room
roomCountRest = roomsRest.size()
log.info roomCountRest

// =====Проверить КР с доступными слотами=====
roomsSoap = getDoctorInfoSAO.Body.getDoctorsInfoResponse.availableResource.complexResource.room
roomCountSoap = roomsSoap.size()
log.info roomCountSoap

dateRest = getDoctorInfoINFO.payload.doctorsInfo[0].availableResources.complexResource.room.availabilityDate
log.info dateRest.get(0).get(0).toString()
dateSoap = getDoctorInfoSAO.Body.getDoctorsInfoResponse.availableResource.complexResource.room.availabilityDate

dateSoapAr = [] // Создаем массив под параметр availabilityDate из ответа soap
for(i=0; i<roomCountSoap; i++){
	dateParse = Date.parse(dTF, dateSoap[i].text())
	dateSoapAr << dateParse
}

dateRestAr = [] // Создаем массив под параметр availabilityDate из ответа rest
for(i=0; i<roomCountRest; i++){
	dateParse = Date.parse(dTF, dateRest[i].get(0))
	dateRestAr << dateParse
}
log.info dateRestAr.sort()
log.info dateSoapAr.sort()
assert dateRestAr.sort() == dateSoapAr.sort()
// Проверяем соответствием ответов rest и soap
for(i=0; i<roomCountSoap; i++){
	for(k=0; k<roomCountRest; k++){
		if(roomsSoap[i].id == roomsRest.id.get(k).get(0).toLong()){
			assert roomsSoap[i].id.toLong() == roomsRest.id.get(k).get(0).toLong()
			assert roomsSoap[i].number.toLong() == roomsRest.number.get(k).get(0).toLong()
			assert roomsSoap[i].lpuId.toLong() == roomsRest.lpuId.get(k).get(0).toLong()
			assert roomsSoap[i].lpuShortName.toString() == roomsRest.lpuShortName.get(k).get(0).toString()
			assert roomsSoap[i].addressPointId.toLong() == roomsRest.addressPointId.get(k).get(0).toLong()
			assert roomsSoap[i].defaultAddress.toString() == roomsRest.defaultAddress.get(k).get(0).toString()
		}
	}
}
]]></script></con:config></con:testStep><con:testStep type="groovy" name="Проверить complexResource ресурсов (не доступных для записи)" id="b7141cd0-3c69-483c-b8f3-f593172abfba"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDoctorInfoResponse = context.expand('${getDoctorInfo INFO#Response}')
def slurperJson = new JsonSlurper()
def getDoctorInfoINFO = slurperJson.parseText(getDoctorInfoResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId

def getDoctorInfoSAOResponse = context.expand('${getDoctorInfo saOrchestrator#Response}')
getDoctorInfoSAO = new XmlSlurper().parseText(getDoctorInfoSAOResponse)

complexNotAvailINFO = getDoctorInfoINFO.payload.notAvailableDoctors.complexResource // список КР не доступных для записи (ответ Инфо)
complexNotAvailSAO = [] // массив для списка КР не доступных для записи (ответ Оркестратора)
complexCountSAO = getDoctorInfoSAO.Body.getDoctorsInfoResponse.availableResource.complexResource.size() // кол-во КР в ответе Оркестратора
log.info complexCountSAO
complexAllSAO = getDoctorInfoSAO.Body.getDoctorsInfoResponse.availableResource.complexResource // список всех КР в ответе Окрестратора

for(int i=0; i&lt;complexCountSAO; i++){
	if(complexAllSAO[i].room.text() ==""){
		complexNotAvailSAO &lt;&lt; complexAllSAO[i]
		assert complexNotAvailSAO.id[i] == complexNotAvailINFO.get(0).id[i] // проверяем id КР
		assert complexNotAvailSAO.name[i] == complexNotAvailINFO.get(0).name[i] // проверяем name КР
	}
	else{
		log.info"у ресурса "+complexAllSAO[i].id +" нет room"
	}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7700007104620689</con:value></con:property><con:property><con:name>bd</con:name><con:value>1989-06-12</con:value></con:property><con:property><con:name>specId</con:name><con:value>2</con:value></con:property></con:properties></con:testCase><con:testCase id="d156dca3-836d-4fec-87b5-287237820e3f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС2 SA_PATIENT_NOT_FOUND" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getDoctorInfo INFO" id="0477f010-0f6e-49b1-95e7-0389cfbaa690"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v3/saOrchestrator/getDoctorsInfo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDoctorInfo INFO" id="c3da989d-fb9a-463f-827c-d18636cc4b93" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "omsNumber": "${#TestCase#oms}",
  "birthDate": "${#TestCase#bd}",
  "specialityId": [
   ${#TestCase#specId}
   ]
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/getDoctorsInfo</con:originalUri><con:assertion type="JsonPath Match" id="6104815e-b7ef-4df8-8aba-e9b6f755e9d8" name="Код ошибки =SA_PATIENT_NOT_FOUND"><con:configuration><path>$.error.code</path><content>SA_PATIENT_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6104815e-b7ef-4df8-8aba-e9b6f755e9d8" name="Описание ошибки = Пациент с указанным ОМС не найден"><con:configuration><path>$.error.description</path><content>Пациент с указанным ОМС не найден</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6104815e-b7ef-4df8-8aba-e9b6f755e9d8" name="Тип ошибки = BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>1</con:value></con:property><con:property><con:name>bd</con:name><con:value>1988-07-14</con:value></con:property><con:property><con:name>specId</con:name><con:value>2011</con:value></con:property><con:property><con:name>lpuId</con:name><con:value>204</con:value></con:property></con:properties></con:testCase><con:testCase id="1a686571-b2aa-4295-993a-98a6f8fef174" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС3 SA_PATIENT_HAS_NO_VALID_OMS" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getDoctorInfo INFO" id="4bd71ba1-2d82-4491-a9da-b5dcbdc90a9b"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v3/saOrchestrator/getDoctorsInfo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDoctorInfo INFO" id="c3da989d-fb9a-463f-827c-d18636cc4b93" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "omsNumber": "7751100890001278",
  "birthDate": "1998-08-02",
  "specialityId": [
   ${#TestCase#specId}
   ]
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/getDoctorsInfo</con:originalUri><con:assertion type="JsonPath Match" id="6104815e-b7ef-4df8-8aba-e9b6f755e9d8" name="Код ошибки =SA_PATIENT_NOT_FOUND"><con:configuration><path>$.error.code</path><content>SA_PATIENT_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6104815e-b7ef-4df8-8aba-e9b6f755e9d8" name="Описание ошибки = Пациент с указанным ОМС не найден"><con:configuration><path>$.error.description</path><content>Пациент с указанным ОМС не найден</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6104815e-b7ef-4df8-8aba-e9b6f755e9d8" name="Тип ошибки = BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7700502255961476</con:value></con:property><con:property><con:name>bd</con:name><con:value>1988-07-14</con:value></con:property><con:property><con:name>specId</con:name><con:value>2011</con:value></con:property><con:property><con:name>lpuId</con:name><con:value>204</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="520a85d8-beb5-47c4-b68f-61468870d496" name="get units"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="9d296734-bb84-4b01-baf0-62f51b41eca7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Получить список единиц измерения - ОС316250" searchProperties="true"><con:settings/><con:testStep type="request" name="Получить содержимое справочника НСИ" id="511e6f15-548e-46a1-92bb-aaaf643b3f97"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>НСИ</con:interface><con:operation>getCatalogItems</con:operation><con:request name="Получить содержимое справочника НСИ" id="99029d50-ba34-4de6-bd58-df8f83f622bc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#nsiEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   <soap:Header>
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-f11a5e5a-091a-4d8d-8305-42d0e2e23f31" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <ns2:userContext xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns3="http://emias.mos.ru/nsiProductPublication/core/v1/" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns="http://emias.mos.ru/nsiProductPublication/publicationService/v1/types/">
         <ns2:userName>EIM</ns2:userName>
         <ns2:userRoleId>0</ns2:userRoleId>
         <ns2:jobExecutionId>0</ns2:jobExecutionId>
      </ns2:userContext>
   </soap:Header>
   <soap:Body>
      <getCatalogItemsRequest xmlns="http://emias.mos.ru/nsiProductPublication/publicationService/v1/types/" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/nsiProductPublication/core/v1/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/">
         <id>4514</id>
      </getCatalogItemsRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="c5ab96ab-39de-4e79-aaf3-3bff4f939e08" name="Код ответа 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="9a82e656-3367-43a6-a7fe-789437eb4106" name="XPath Match"><con:configuration><path/><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="Получить список единиц измерения" id="9a53f379-ceec-4619-a564-56ff158e29da"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/medication/units" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Получить список единиц измерения" id="8b90abf6-b452-4dfd-9d96-485b6429b5e9" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/medication/units</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="6c23f4af-f0f4-4333-8d44-0784aeee25de" name="Код ответа 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Сравнить ответ" id="2a59ad94-981d-43b8-b2ff-be819339dfab"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper

def getUnitsResponse = context.expand('${Получить список единиц измерения#Response}')
def slurperJson = new JsonSlurper()
def getUnits = slurperJson.parseText(getUnitsResponse) //парсим json

def getCatalogItemsResponse = context.expand('${Получить содержимое справочника НСИ#Response}')
getCatalogItems = new XmlSlurper().parseText(getCatalogItemsResponse) //парсим xml

responseSoap = getCatalogItems.Body.getCatalogItemsResponse.ehdCatalogItems.items //путь до нужного элемента xml
responseRest = getUnits.payload.catalogItems //путь до нужного элемента json

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) // используем класс groovyUtils
def soapNSI = groovyUtils.getXmlHolder('Получить содержимое справочника НСИ#Response') //получаем ответ с помощью groovyUtils, для того, чтобы использовать xPath

for (int i=1; i&lt;responseSoap.size()+1; i++){
	if(soapNSI.getNodeValue('//ns3:items['+i+']/ns3:itemAttribute[@name = "ARCHIVED"]') == 'false'){ //через Path получаем значение нужного параметра 
		for (int k=0; k&lt;responseRest.size(); k++){
			if(soapNSI.getNodeValue('//ns3:items['+i+']/ns3:itemAttribute[@name = "global_id"]') == responseRest[k].globalId.toString()){
				assert soapNSI.getNodeValue('//ns3:items['+i+']/ns3:itemAttribute[@name = "CODE"]') == responseRest[k].code.toString() //через xPath получаем значение нужного параметра и сравниваем с json
				if (soapNSI.getNodeValue('//ns3:items['+i+']/ns3:itemAttribute[@name = "SHORT_TITLE"]')){
					assert soapNSI.getNodeValue('//ns3:items['+i+']/ns3:itemAttribute[@name = "SHORT_TITLE"]') == responseRest[k].title.toString() //через xPath получаем значение нужного параметра и сравниваем с json
				}
				else {
					assert soapNSI.getNodeValue('//ns3:items['+i+']/ns3:itemAttribute[@name = "FULL_TITLE"]') == responseRest[k].title.toString() //через xPath получаем значение нужного параметра и сравниваем с json
				}
			}
		}
	}
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="0b2b3795-494a-40b2-8227-75f5c0f815ff" name="get medication"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="fc07f0b0-cd37-47e6-bc04-e5135cf43046" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Сохранить токен в проект" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Сохранить токен" id="a77e506d-308f-4f5b-bcf9-f5e771e5cd1f"><con:settings/><con:config><script>def guid =com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "guid" )
def base64 =com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "base64" )
def sudirToken =com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "sudirToken" )
def accessToken =com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "X-Access-JWT" )
def refreshToken =com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "refreshToken" )
def refreshXAccessJWT =com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "refresh-X-Access-JWT" )
log.info sudirToken
testRunner.testCase.testSuite.project.setPropertyValue("EI-token", sudirToken)
log.info "w"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="3aad1590-c1a7-4125-bf32-cb60415e585b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Информация о ЛН с pillboxStatus=waiting. ОС 328012" searchProperties="true"><con:settings/><con:testStep type="request" name="Создать назначение" id="7f197ffc-fb71-4451-9309-5cfc94b993eb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>updateMedication</con:operation><con:request name="Создать назначение" id="95bef74a-6619-4854-b41c-e97a48366f65"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:UpdateMedicationRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:patientId>${#TestCase#patientId}</typ:patientId>\r
         <typ:endDate>${=import java.text.SimpleDateFormat; Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE,+7); new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime());}</typ:endDate>
         <typ:drug>\r
            <typ:drugName>Название препарата тест</typ:drugName>\r
         </typ:drug>\r
         <typ:intake>\r
            <typ:course>\r
               <typ:courseMode>1204087533</typ:courseMode>\r
            </typ:course>\r
         </typ:intake>\r
      </typ:UpdateMedicationRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d0e19cc0-6b7b-448b-ae98-05413d18abd8"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Найти назначение" id="eea03e5c-1ad8-4bad-a5dd-b8498ed16af3" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>getPatientPillboxList</con:operation><con:request name="Найти назначение" id="55ef69e6-a0cc-43ae-a010-71fca1ff9d8c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:GetPatientPillboxListRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:patientId>${#TestCase#patientId}</typ:patientId>\r
         <typ:statusFilter>${#TestCase#status}</typ:statusFilter>\r
      </typ:GetPatientPillboxListRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="b4facb25-c957-4d2f-800a-c8caa5e75528"/><con:assertion type="Simple Contains" id="0281ac5c-3011-4d5c-acbc-a68b1ed90efd" name="Contains"><con:configuration><token>pillboxStatus</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Записать medicationId" id="d06d00a7-4b21-4fa2-9b30-79a015d3286e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>medicationId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Создать назначение</con:sourceStep><con:sourcePath>//*:medicationId</con:sourcePath><con:targetType>medicationId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="getMedication" id="735e7510-c7e1-4687-ac5e-54004ecb93d2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>getMedication</con:operation><con:request name="getMedication" id="368d5147-45a1-45ba-b929-559c09f7d2ce"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:GetMedicationRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:medicationId>${#TestCase#medicationId}</typ:medicationId>\r
         <typ:patientId>${#TestCase#patientId}</typ:patientId>\r
      </typ:GetMedicationRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e10c36eb-6fbd-47cb-bac6-5b529cf5fcaf"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="get medication/medicationId" id="b6eb7cdd-9dba-445b-9c3d-eaf3106e44ce"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/medication/{medicationId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="get medication/medicationId" id="abd332b3-b1f0-46f9-89ab-5f17beb0ab81" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://application-emiasinfo4.emias.solit-clouds.ru/api/v2/medication/1429026</con:originalUri><con:assertion type="Simple Contains" id="a7d3e7bf-f588-4816-b891-0dcc6ebb3e01" name="В ответе есть medicationId"><con:configuration><token>medicationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="488c825e-7789-4d03-b513-872dc8271c69" name="status = waiting"><con:configuration><path>$.payload.pillboxStatus.code</path><content>waiting</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="medicationId" value="${#TestCase#medicationId}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
  <con:entry key="EI-token" value="${#Project#EI-token}"/>
</con:parameters><con:parameterOrder><con:entry>medicationId</con:entry><con:entry>patientId</con:entry><con:entry>EI-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Записать otnId или smnnId" id="3ef7701e-e277-42a7-b480-371db7d1c28d"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper

def response = context.expand('${getMedication#Response}')
getValue = new XmlSlurper().parseText(response) //парсим xml

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) // используем класс groovyUtils
def soapValue = groovyUtils.getXmlHolder('getMedication#Response') //получаем ответ с помощью groovyUtils, для того, чтобы использовать xPath

if(getValue.Body.GetMedicationResponse.medication.otn.title != ''){
	otnId = soapValue.getNodeValue('//*:otn/@id')
	testRunner.testCase.setPropertyValue("annotationId", '&lt;typ:otnId>'+otnId+'&lt;/typ:otnId>')
	log.info otnId
}

if(getValue.Body.GetMedicationResponse.medication.smnn.title != ''){
	smnnId = soapValue.getNodeValue('//*:smnn/@id')
	testRunner.testCase.setPropertyValue("annotationId", '&lt;typ:smnnId>'+smnnId+'&lt;/typ:smnnId>')
	log.info smnnId 
}

annotationId = testRunner.testCase.getPropertyValue("annotationId")
if(annotationId != null){
	testRunner.runTestStepByName( "getDrugInfo")
}

testRunner.testCase.setPropertyValue("annotationId", null)
</script></con:config></con:testStep><con:testStep type="request" name="getDrugInfo" id="cb546ae4-f365-4a4c-96cc-bc5b6c606bfd" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>getDrugInfo</con:operation><con:request name="getDrugInfo" id="0f2fb04d-79cd-4ede-9e92-4ade6f4cb37c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:GetDrugInfoRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:drugInfo>
            ${#TestCase#annotationId}
         </typ:drugInfo>
      </typ:GetDrugInfoRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="1ec13730-bfff-4b20-a104-e63c5726b7df"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Сравнить ответ" id="46d2eacf-4989-4208-8aae-f62d47007c50"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import com.eviware.soapui.support.XmlHolder

def response = context.expand('${getMedication#Response}')
def getValue = new XmlSlurper().parseText(response) //парсим xml
def getMedicationSoap = getValue.Body.GetMedicationResponse.medication
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) // используем класс groovyUtils
def soapValue = groovyUtils.getXmlHolder('getMedication#Response') //получаем ответ с помощью groovyUtils, для того, чтобы использовать xPath
def annotationValue = testRunner.testCase.getPropertyValue("annotationId")
if(annotationValue != null){
	def annotation = groovyUtils.getXmlHolder('getDrugInfo#Response')
}

def restResponse = context.expand('${get medication/medicationId#Response}') // получаем из рест запроса ответ
def jsonResponse =  new JsonSlurper().parseText(restResponse) // создаем объект json
def getMedicationRest = jsonResponse.payload

if (getMedicationRest.courseMode || getMedicationRest.quantityPerDay || getMedicationRest.courseQuantity || getMedicationRest.unitDose
|| getMedicationRest.singleDose|| getMedicationRest.reasonTermination || getMedicationRest.mealsConnection || getMedicationRest.sleepConnection 
|| getMedicationRest.annotation || getMedicationRest.instruction || getMedicationRest.doctor || getMedicationRest.medical || getMedicationRest.smnn
|| getMedicationRest.otn || getMedicationRest.pushNotifications){
	testRunner.fail("Вернулись необязательные параметры")
}

assert soapValue.getNodeValue('//*:medicationInfo/@id') == getMedicationRest.medicationId.toString()
assert soapValue.getNodeValue('//*:medicationType/@code') == getMedicationRest.medicationType.code.toString()
assert getMedicationSoap.medicationInfo.medicationType.title == getMedicationRest.medicationType.title.toString()
assert getMedicationRest.pillboxStatus.title.toString() =='Не начатое'
assert getMedicationSoap.medicationTitle == getMedicationRest.medicationTitle.toString()
assert getMedicationSoap.medicationInfo.drugName == getMedicationRest.drugName.toString()
if(getMedicationSoap.intake.course != ''){
	assert soapValue.getNodeValue('//*:courseMode/@code') == getMedicationRest.intake.course.courseMode.code.toString()
	assert getMedicationSoap.intake.course.courseMode.title == getMedicationRest.intake.course.courseMode.title.toString()
	assert soapValue.getNodeValue('//*:medicationState/@code') == getMedicationRest.medicationState.code.toString()
	assert getMedicationSoap.medicationInfo.medicationState.title == getMedicationRest.medicationState.title.toString()
	assert getMedicationSoap.medicationInfo.isSelfAssigned == getMedicationRest.isSelfAssigned.toBoolean()
	if (getMedicationSoap.medicationInfo.validityPeriod.start != ''){
		assert getMedicationSoap.medicationInfo.validityPeriod.start == getMedicationRest.validityPeriod.start.toString()
	}
	if (getMedicationSoap.medicationInfo.validityPeriod.end != ''){
		assert getMedicationSoap.medicationInfo.validityPeriod.end == getMedicationRest.validityPeriod.end.toString()
	}
}

</script></con:config></con:testStep><con:properties><con:property><con:name>status</con:name><con:value>waiting</con:value></con:property><con:property><con:name>patientId</con:name><con:value>11715757</con:value></con:property><con:property><con:name>medicationId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1435208</con:value></con:property><con:property><con:name>annotationId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties></con:testCase><con:testCase id="3c89f618-c490-44e9-abf4-35320c9d99df" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Информация о ЛН с pillboxStatus=scheduled и courseMode != special. ОС 328142" searchProperties="true"><con:settings/><con:testStep type="request" name="Создать назначение" id="cd929a9f-536c-41fd-9ddd-b94d0a76a2ca"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>updateMedication</con:operation><con:request name="Создать назначение" id="1e388702-4202-45f3-9eab-884fb8569d67"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:UpdateMedicationRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:patientId>${#TestCase#patientId}</typ:patientId>\r
         <typ:startDate>${=import java.text.SimpleDateFormat; Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE, +0); new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime());}</typ:startDate>\r
         <typ:endDate>${=import java.text.SimpleDateFormat; Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE,+7); new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime());}</typ:endDate>\r
         <typ:drug>\r
            <typ:otnId>14033</typ:otnId>\r
         </typ:drug>\r
         <typ:comment>Текст комментария</typ:comment>\r
         <typ:intake>\r
            <typ:course>\r
               <typ:courseMode>1204087531</typ:courseMode>\r
               <typ:singleDose>1</typ:singleDose>\r
               <typ:unitDose>1217034891</typ:unitDose>\r
               <typ:quantityPerDay>3</typ:quantityPerDay>\r
               <typ:courseQuantity>9</typ:courseQuantity>\r
            </typ:course>\r
         </typ:intake>\r
         <typ:mealsConnection>1204005078</typ:mealsConnection>\r
         <typ:sleepConnection>1204005081</typ:sleepConnection>\r
      </typ:UpdateMedicationRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="de05578f-668c-47f4-8ff2-12e392dc6621"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Записать medicationId" id="3aaa4093-931f-4b7d-86f6-5c4af16b79c8"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>medicationId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Создать назначение</con:sourceStep><con:sourcePath>//*:medicationId</con:sourcePath><con:targetType>medicationId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Создать график приема" id="3c49befc-9639-41e0-ae03-6dd7abc4e420"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>setSchedule</con:operation><con:request name="Создать график приема" id="de61d846-420f-4d7b-b206-decac7274f71"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:SetScheduleRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:medicationId>${#TestCase#medicationId}</typ:medicationId>\r
         <typ:patientId>${#TestCase#patientId}</typ:patientId>\r
         <typ:pushNotifications>false</typ:pushNotifications>\r
         <typ:daySchedule>\r
            <typ:scheduleDate>${=import java.text.SimpleDateFormat; Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE, +0); new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime());}</typ:scheduleDate>\r
            <typ:receptionSlot>\r
               <typ:slotCode>3</typ:slotCode>\r
               <typ:timeStart>09:00</typ:timeStart>\r
            </typ:receptionSlot>\r
            <typ:receptionSlot>\r
               <typ:slotCode>10</typ:slotCode>\r
               <typ:timeStart>12:00</typ:timeStart>\r
            </typ:receptionSlot>\r
            <typ:receptionSlot>\r
               <typ:slotCode>15</typ:slotCode>\r
               <typ:timeStart>17:00</typ:timeStart>\r
            </typ:receptionSlot>\r
         </typ:daySchedule>\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v1:entry key="auto_expand">true</v1:entry>\r
         </typ:options>\r
      </typ:SetScheduleRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a578a248-ad84-4e70-9a1d-359ddbdf6ca2"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getMedication" id="00035629-19c8-4c72-9c04-aa4bc650e80a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>getMedication</con:operation><con:request name="getMedication" id="368d5147-45a1-45ba-b929-559c09f7d2ce"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:GetMedicationRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:medicationId>${#TestCase#medicationId}</typ:medicationId>\r
         <typ:patientId>${#TestCase#patientId}</typ:patientId>\r
      </typ:GetMedicationRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e10c36eb-6fbd-47cb-bac6-5b529cf5fcaf"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Получить расписание" id="8e391482-f8dd-43d7-89b7-7aae26e61135"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>getSchedule</con:operation><con:request name="Получить расписание" id="fcbfaa0b-9faf-4297-9cf8-8f719a69fa1f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <typ:GetScheduleRequest>
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>
         <typ:medicationId>${#TestCase#medicationId}</typ:medicationId>
         <typ:patientId>${#TestCase#patientId}</typ:patientId>
         <typ:periodTerm>
            <v1:start>${=import java.text.SimpleDateFormat; Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE, +0); new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime());}</v1:start>
         </typ:periodTerm>
      </typ:GetScheduleRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="633b3e41-599c-47c2-8b5b-f7dcafe27e1f"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="get medication/medicationId" id="f41f902b-733c-4f85-a4e0-73b02965856c"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/medication/{medicationId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="get medication/medicationId" id="abd332b3-b1f0-46f9-89ab-5f17beb0ab81" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://application-emiasinfo4.emias.solit-clouds.ru/api/v2/medication/1429026</con:originalUri><con:assertion type="Simple Contains" id="a7d3e7bf-f588-4816-b891-0dcc6ebb3e01" name="В ответе есть medicationId"><con:configuration><token>medicationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="488c825e-7789-4d03-b513-872dc8271c69" name="status = scheduled"><con:configuration><path>$.payload.pillboxStatus.code</path><content>scheduled</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="medicationId" value="${#TestCase#medicationId}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
  <con:entry key="EI-token" value="${#Project#EI-token}"/>
</con:parameters><con:parameterOrder><con:entry>medicationId</con:entry><con:entry>patientId</con:entry><con:entry>EI-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Записать otnId или smnnId" id="957f31cc-9a22-4721-9f89-1eb5a441e318"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper

def response = context.expand('${getMedication#Response}')
getValue = new XmlSlurper().parseText(response) //парсим xml

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) // используем класс groovyUtils
def soapValue = groovyUtils.getXmlHolder('getMedication#Response') //получаем ответ с помощью groovyUtils, для того, чтобы использовать xPath

if(getValue.Body.GetMedicationResponse.medication.otn.title != ''){
	otnId = soapValue.getNodeValue('//*:otn/@id')
	testRunner.testCase.setPropertyValue("annotationId", '&lt;typ:otnId>'+otnId+'&lt;/typ:otnId>')
	log.info otnId
}

if(getValue.Body.GetMedicationResponse.medication.smnn.title != ''){
	smnnId = soapValue.getNodeValue('//*:smnn/@id')
	testRunner.testCase.setPropertyValue("annotationId", '&lt;typ:smnnId>'+smnnId+'&lt;/typ:smnnId>')
	log.info smnnId 
}

annotationId = testRunner.testCase.getPropertyValue("annotationId")
if(annotationId != null){
	testRunner.runTestStepByName( "getDrugInfo")
}

testRunner.testCase.setPropertyValue("annotationId", null)
</script></con:config></con:testStep><con:testStep type="request" name="getDrugInfo" id="23559c7d-0e77-423a-9cde-c9ca1d60fa47" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>getDrugInfo</con:operation><con:request name="getDrugInfo" id="0f2fb04d-79cd-4ede-9e92-4ade6f4cb37c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:GetDrugInfoRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:drugInfo>
            ${#TestCase#annotationId}
         </typ:drugInfo>
      </typ:GetDrugInfoRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="1ec13730-bfff-4b20-a104-e63c5726b7df"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Сравнить ответ" id="ad340a16-970b-44bf-98d8-b4d4eafe3771"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import com.eviware.soapui.support.XmlHolder

def response = context.expand('${getMedication#Response}')
def getValue = new XmlSlurper().parseText(response) //парсим xml
def getMedicationSoap = getValue.Body.GetMedicationResponse.medication
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) // используем класс groovyUtils
def soapValue = groovyUtils.getXmlHolder('getMedication#Response') //получаем ответ с помощью groovyUtils, для того, чтобы использовать xPath
def annotation = groovyUtils.getXmlHolder('getDrugInfo#Response')
def responseSchedule = context.expand('${Получить расписание#Response}')
def schedule = new XmlSlurper().parseText(responseSchedule) //парсим xml

def restResponse = context.expand('${get medication/medicationId#Response}') // получаем из рест запроса ответ
def jsonResponse =  new JsonSlurper().parseText(restResponse) // создаем объект json
def getMedicationRest = jsonResponse.payload

assert soapValue.getNodeValue('//*:medicationInfo/@id') == getMedicationRest.medicationId.toString()
assert soapValue.getNodeValue('//*:medicationType/@code') == getMedicationRest.medicationType.code.toString()
assert getMedicationSoap.medicationInfo.medicationType.title == getMedicationRest.medicationType.title.toString()
assert getMedicationRest.pillboxStatus.title.toString() =='Исполняемое'
assert getMedicationSoap.medicationTitle == getMedicationRest.medicationTitle.toString()
assert getMedicationSoap.medicationInfo.drugName == getMedicationRest.drugName.toString()
assert soapValue.getNodeValue('//*:courseMode/@code') == getMedicationRest.intake.course.courseMode.code.toString()
assert getMedicationSoap.intake.course.courseMode.title == getMedicationRest.intake.course.courseMode.title.toString()
assert getMedicationSoap.intake.course.quantityPerDay == getMedicationRest.intake.course.quantityPerDay.toString()
if (getMedicationSoap.intake.course.unitDose.shortTitle != ''){
	assert getMedicationSoap.intake.course.unitDose.shortTitle == getMedicationRest.intake.course.unitDose.toString()
}
else {
	assert getMedicationSoap.intake.course.unitDose.title == getMedicationRest.intake.course.unitDose.toString()
}
assert getMedicationSoap.intake.course.singleDose == getMedicationRest.intake.course.singleDose.toInteger()
assert soapValue.getNodeValue('//*:medicationState/@code') == getMedicationRest.medicationState.code.toString()
assert getMedicationSoap.medicationInfo.medicationState.title == getMedicationRest.medicationState.title.toString()
assert soapValue.getNodeValue('//*:mealsConnection/@code') == getMedicationRest.mealsConnection.code.toString()
assert getMedicationSoap.mealsConnection.title == getMedicationRest.mealsConnection.title.toString()

assert soapValue.getNodeValue('//*:sleepConnection/@code') == getMedicationRest.sleepConnection.code.toString()
assert getMedicationSoap.sleepConnection.title == getMedicationRest.sleepConnection.title.toString()
if (annotation.getNodeValue('//*:code') == 'E041'){
	assert getMedicationRest.annotation.toBoolean() == false
}
else{
	assert getMedicationRest.annotation.toBoolean() == true
}
assert getMedicationSoap.medicationInfo.isSelfAssigned == getMedicationRest.isSelfAssigned.toBoolean()
if (getMedicationSoap.medicationInfo.validityPeriod.start != ''){
	assert getMedicationSoap.medicationInfo.validityPeriod.start == getMedicationRest.validityPeriod.start.toString()
}
if (getMedicationSoap.medicationInfo.validityPeriod.end != ''){
	assert getMedicationSoap.medicationInfo.validityPeriod.end == getMedicationRest.validityPeriod.end.toString()
}
assert getMedicationSoap.schedulePeriod.start == getMedicationRest.schedulePeriod.start.toString()
assert getMedicationSoap.schedulePeriod.end == getMedicationRest.schedulePeriod.end.toString()
if (getMedicationSoap.medicationInfo.otn != ''){
	assert soapValue.getNodeValue('//*:otn/@id') == getMedicationRest.otn.id.toInteger()
	assert getMedicationSoap.medicationInfo.otn.title == getMedicationRest.otn.title.toString()
}
if (getMedicationSoap.medicationInfo.smnn != ''){
	assert soapValue.getNodeValue('//*:smnn/@id') == getMedicationRest.smnn.id.toInteger()
	assert getMedicationSoap.medicationInfo.smnn.title == getMedicationRest.smnn.title.toString()
}
assert getMedicationRest.pushNotifications.toBoolean() == false

def count1 = schedule.Body.GetScheduleResponse.daySchedule[0].receptionSlot
def count2 = schedule.Body.GetScheduleResponse.daySchedule[1].receptionSlot
if(count1.size() &lt; count2.size()){
	for(int i=0; i&lt;count2.size(); i++){
		assert count2[i].slotCode == getMedicationRest.intake.course.receptionSlot[i].slotCode.toInteger()
		assert count2[i].timeStart == getMedicationRest.intake.course.receptionSlot[i].timeStart.toString()
		assert count2[i].timeEnd == getMedicationRest.intake.course.receptionSlot[i].timeEnd.toString()
	}
}
else{
	for(int i=0; i&lt;count2.size(); i++){
		assert count1[i].slotCode == getMedicationRest.intake.course.receptionSlot[i].slotCode.toInteger()
		assert count1[i].timeStart == getMedicationRest.intake.course.receptionSlot[i].timeStart.toString()
		assert count1[i].timeEnd == getMedicationRest.intake.course.receptionSlot[i].timeEnd.toString()
	}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>status</con:name><con:value>waiting</con:value></con:property><con:property><con:name>patientId</con:name><con:value>11715757</con:value></con:property><con:property><con:name>medicationId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1435209</con:value></con:property><con:property><con:name>annotationId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties></con:testCase><con:testCase id="cab5b5f7-7ada-42fa-a3b6-cc8ffa96bb90" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Информация о ЛН с pillboxStatus=adhoc. ОС 328222" searchProperties="true"><con:settings/><con:testStep type="request" name="Создать назначение" id="96005bac-7907-4362-b2d7-b05ccb9b3c68"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>updateMedication</con:operation><con:request name="Создать назначение" id="1e388702-4202-45f3-9eab-884fb8569d67"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:UpdateMedicationRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:patientId>${#TestCase#patientId}</typ:patientId>\r
         <typ:startDate>${=import java.text.SimpleDateFormat; Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE, +0); new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime());}</typ:startDate>\r
         <typ:endDate>${=import java.text.SimpleDateFormat; Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE,+7); new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime());}</typ:endDate>\r
         <typ:drug>\r
            <typ:smnnId>71301</typ:smnnId>
         </typ:drug>\r
         <typ:comment>Текст комментария</typ:comment>\r
         <typ:intake>
            <typ:adhoc>
               <typ:singleDose>2</typ:singleDose>
               <typ:maxSingleDose>3</typ:maxSingleDose>
               <typ:unitDose>1217034890</typ:unitDose>
               <typ:maxQtyPerDay>6</typ:maxQtyPerDay>
            </typ:adhoc>
         </typ:intake>
         <typ:mealsConnection>1204005079</typ:mealsConnection>\r
         <typ:sleepConnection>1204005082</typ:sleepConnection>\r
      </typ:UpdateMedicationRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="de05578f-668c-47f4-8ff2-12e392dc6621"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Записать medicationId" id="45c79859-e7bd-41df-a919-69fde688be7c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>medicationId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Создать назначение</con:sourceStep><con:sourcePath>//*:medicationId</con:sourcePath><con:targetType>medicationId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Поставить отметку о приеме" id="d6561904-83e3-477a-bdb3-0bb0fe9f2609"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>setTakingAdhoc</con:operation><con:request name="Поставить отметку о приеме" id="f0c0ee83-e93f-47c9-a1e1-5d3f023aac3b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <typ:SetTakingAdhocRequest>
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>
         <typ:medicationId>${#TestCase#medicationId}</typ:medicationId>
         <typ:patientId>${#TestCase#patientId}</typ:patientId>
         <typ:factSingleDose>5 мг</typ:factSingleDose>
         <typ:description>Принял таблетку</typ:description>
      </typ:SetTakingAdhocRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="90b0bfaa-aa4f-43ec-9f4c-36b56e9f826b"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Получить историю приема" id="a731c710-447d-4ac7-8012-d6a8bc3382fa"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>getHistoryAdhoc</con:operation><con:request name="Получить историю приема" id="4f1093e0-75fa-4812-bfb0-66928bb5ca86"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <typ:GetHistoryAdhocRequest>
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>
         <typ:medicationId>${#TestCase#medicationId}</typ:medicationId>
         <typ:patientId>${#TestCase#patientId}</typ:patientId>
         <typ:periodTerm>
            <v1:start>${=import java.text.SimpleDateFormat; Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE, -364); new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime());}</v1:start>
            <v1:end>${=import java.text.SimpleDateFormat; Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE, +0); new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime());}</v1:end>
         </typ:periodTerm>
      </typ:GetHistoryAdhocRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5709097b-c0a8-4cb1-b8f8-17aa1f3e36ce"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getMedication" id="e9d080f8-2e2a-4c66-8be6-933fd8d8c579"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>getMedication</con:operation><con:request name="getMedication" id="368d5147-45a1-45ba-b929-559c09f7d2ce"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:GetMedicationRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:medicationId>${#TestCase#medicationId}</typ:medicationId>\r
         <typ:patientId>${#TestCase#patientId}</typ:patientId>\r
      </typ:GetMedicationRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e10c36eb-6fbd-47cb-bac6-5b529cf5fcaf"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="get medication/medicationId" id="1dfcbf37-dc7b-4022-9a67-6721c3254bb1"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/medication/{medicationId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="get medication/medicationId" id="abd332b3-b1f0-46f9-89ab-5f17beb0ab81" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://application-emiasinfo4.emias.solit-clouds.ru/api/v2/medication/1429026</con:originalUri><con:assertion type="Simple Contains" id="a7d3e7bf-f588-4816-b891-0dcc6ebb3e01" name="В ответе есть medicationId"><con:configuration><token>medicationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="488c825e-7789-4d03-b513-872dc8271c69" name="status = scheduled"><con:configuration><path>$.payload.pillboxStatus.code</path><content>adhoc</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="medicationId" value="${#TestCase#medicationId}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
  <con:entry key="EI-token" value="${#Project#EI-token}"/>
</con:parameters><con:parameterOrder><con:entry>medicationId</con:entry><con:entry>patientId</con:entry><con:entry>EI-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Записать otnId или smnnId" id="78370d96-30c6-490e-a010-7f6509b849e0"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper

def response = context.expand('${getMedication#Response}')
getValue = new XmlSlurper().parseText(response) //парсим xml

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) // используем класс groovyUtils
def soapValue = groovyUtils.getXmlHolder('getMedication#Response') //получаем ответ с помощью groovyUtils, для того, чтобы использовать xPath

if(getValue.Body.GetMedicationResponse.medication.otn.title != ''){
	otnId = soapValue.getNodeValue('//*:otn/@id')
	testRunner.testCase.setPropertyValue("annotationId", '&lt;typ:otnId>'+otnId+'&lt;/typ:otnId>')
	log.info otnId
}

if(getValue.Body.GetMedicationResponse.medication.smnn.title != ''){
	smnnId = soapValue.getNodeValue('//*:smnn/@id')
	testRunner.testCase.setPropertyValue("annotationId", '&lt;typ:smnnId>'+smnnId+'&lt;/typ:smnnId>')
	log.info smnnId 
}

annotationId = testRunner.testCase.getPropertyValue("annotationId")
if(annotationId != null){
	testRunner.runTestStepByName( "getDrugInfo")
}

testRunner.testCase.setPropertyValue("annotationId", null)
</script></con:config></con:testStep><con:testStep type="request" name="getDrugInfo" id="d8860d82-1e96-410a-b5ca-e937de2048a6" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>getDrugInfo</con:operation><con:request name="getDrugInfo" id="0f2fb04d-79cd-4ede-9e92-4ade6f4cb37c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:GetDrugInfoRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:drugInfo>
            ${#TestCase#annotationId}
         </typ:drugInfo>
      </typ:GetDrugInfoRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="1ec13730-bfff-4b20-a104-e63c5726b7df"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Сравнить ответ" id="f21051ae-0ada-4b69-8b90-f34fa943ead3"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import com.eviware.soapui.support.XmlHolder

def response = context.expand('${getMedication#Response}')
def getValue = new XmlSlurper().parseText(response) //парсим xml
def getMedicationSoap = getValue.Body.GetMedicationResponse.medication
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) // используем класс groovyUtils
def soapValue = groovyUtils.getXmlHolder('getMedication#Response') //получаем ответ с помощью groovyUtils, для того, чтобы использовать xPath
def annotation = groovyUtils.getXmlHolder('getDrugInfo#Response')
def responseHistory = context.expand('${Получить историю приема#Response}')
def history = new XmlSlurper().parseText(responseHistory) //парсим xml

def restResponse = context.expand('${get medication/medicationId#Response}') // получаем из рест запроса ответ
def jsonResponse =  new JsonSlurper().parseText(restResponse) // создаем объект json
def getMedicationRest = jsonResponse.payload

assert soapValue.getNodeValue('//*:medicationInfo/@id') == getMedicationRest.medicationId.toString()
assert soapValue.getNodeValue('//*:medicationType/@code') == getMedicationRest.medicationType.code.toString()
assert getMedicationSoap.medicationInfo.medicationType.title == getMedicationRest.medicationType.title.toString()
assert getMedicationRest.pillboxStatus.title.toString() =='По необходимости'
assert getMedicationSoap.medicationTitle == getMedicationRest.medicationTitle.toString()
assert getMedicationSoap.medicationInfo.drugName == getMedicationRest.drugName.toString()
assert getMedicationSoap.intake.adhoc.singleDose == getMedicationRest.intake.adhoc.singleDose.toInteger()
assert getMedicationSoap.intake.adhoc.maxQtyPerDay == getMedicationRest.intake.adhoc.maxQtyPerDay.toInteger()
if (getMedicationSoap.intake.adhoc.unitDose.shortTitle != ''){
	assert getMedicationSoap.intake.adhoc.unitDose.shortTitle == getMedicationRest.intake.adhoc.unitDose.toString()
}
else {
	assert getMedicationSoap.intake.adhoc.unitDose.title == getMedicationRest.intake.adhoc.unitDose.toString()
}
assert getMedicationSoap.intake.adhoc.maxSingleDose == getMedicationRest.intake.adhoc.maxSingleDose.toInteger()
assert soapValue.getNodeValue('//*:medicationState/@code') == getMedicationRest.medicationState.code.toString()
assert getMedicationSoap.medicationInfo.medicationState.title == getMedicationRest.medicationState.title.toString()
assert soapValue.getNodeValue('//*:mealsConnection/@code') == getMedicationRest.mealsConnection.code.toString()
assert getMedicationSoap.mealsConnection.title == getMedicationRest.mealsConnection.title.toString()

assert soapValue.getNodeValue('//*:sleepConnection/@code') == getMedicationRest.sleepConnection.code.toString()
assert getMedicationSoap.sleepConnection.title == getMedicationRest.sleepConnection.title.toString()
if (annotation.getNodeValue('//*:code') == 'E041'){
	assert getMedicationRest.annotation.toBoolean() == false
}
else{
	assert getMedicationRest.annotation.toBoolean() == true
}
assert getMedicationSoap.medicationInfo.isSelfAssigned == getMedicationRest.isSelfAssigned.toBoolean()
assert getMedicationSoap.instruction == getMedicationRest.instruction.toString()
if (getMedicationSoap.medicationInfo.validityPeriod.start != ''){
	assert getMedicationSoap.medicationInfo.validityPeriod.start == getMedicationRest.validityPeriod.start.toString()
}
if (getMedicationSoap.medicationInfo.validityPeriod.end != ''){
	assert getMedicationSoap.medicationInfo.validityPeriod.end == getMedicationRest.validityPeriod.end.toString()
}
if (getMedicationSoap.medicationInfo.otn != ''){
	assert soapValue.getNodeValue('//*:otn/@id') == getMedicationRest.otn.id.toInteger()
	assert getMedicationSoap.medicationInfo.otn.title == getMedicationRest.otn.title.toString()
}
if (getMedicationSoap.medicationInfo.smnn != ''){
	assert soapValue.getNodeValue('//*:smnn/@id') == getMedicationRest.smnn.id.toInteger()
	assert getMedicationSoap.medicationInfo.smnn.title == getMedicationRest.smnn.title.toString()
}
if(history.Body.GetHistoryAdhocResponse.dayHistory.receptionSlots != ''){
	assert getMedicationRest.intake.adhoc.dayHistory.toBoolean() == true
}
else{
	assert getMedicationRest.intake.adhoc.dayHistory.toBoolean() == false
}
</script></con:config></con:testStep><con:properties><con:property><con:name>status</con:name><con:value>waiting</con:value></con:property><con:property><con:name>patientId</con:name><con:value>11715757</con:value></con:property><con:property><con:name>medicationId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1435210</con:value></con:property><con:property><con:name>annotationId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties></con:testCase><con:testCase id="bbbf6d45-33f3-4e7c-beb5-6550dec3e392" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Информация о ЛН с pillboxStatus=archive и medicationType.code = adhoc. ОС 328259" searchProperties="true"><con:settings/><con:testStep type="request" name="Создать назначение" id="9c685ca4-e9f2-488f-9334-bd15092999ed"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>updateMedication</con:operation><con:request name="Создать назначение" id="1e388702-4202-45f3-9eab-884fb8569d67"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:UpdateMedicationRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:patientId>${#TestCase#patientId}</typ:patientId>\r<typ:drug>\r
            <typ:smnnId>71301</typ:smnnId>
         </typ:drug>\r
         <typ:intake>
            <typ:adhoc/>
         </typ:intake>
      </typ:UpdateMedicationRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="de05578f-668c-47f4-8ff2-12e392dc6621"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Записать medicationId" id="d13f4bba-ff6b-412d-b31d-e54f4e6bd294"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>medicationId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Создать назначение</con:sourceStep><con:sourcePath>//*:medicationId</con:sourcePath><con:targetType>medicationId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Завершить прием" id="1eb9870a-b8a8-4b8f-b1d0-752f0ffa92ff"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>endMedication</con:operation><con:request name="Завершить прием" id="3294ac9a-f4eb-4820-982f-0506e0dc1d18"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <typ:EndMedicationRequest>
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>
         <typ:medicationId>${#TestCase#medicationId}</typ:medicationId>
         <typ:patientId>${#TestCase#patientId}</typ:patientId>
         <typ:terminationReasonId>1204725448</typ:terminationReasonId>
      </typ:EndMedicationRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9714fb0b-a5c4-423b-8fa3-e801c21471da"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Получить историю приема" id="0201e0f2-3867-456a-9b76-1a678636ef96"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>getHistoryAdhoc</con:operation><con:request name="Получить историю приема" id="4f1093e0-75fa-4812-bfb0-66928bb5ca86"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <typ:GetHistoryAdhocRequest>
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>
         <typ:medicationId>${#TestCase#medicationId}</typ:medicationId>
         <typ:patientId>${#TestCase#patientId}</typ:patientId>
         <typ:periodTerm>
            <v1:start>${=import java.text.SimpleDateFormat; Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE, -364); new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime());}</v1:start>
            <v1:end>${=import java.text.SimpleDateFormat; Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE, +0); new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime());}</v1:end>
         </typ:periodTerm>
      </typ:GetHistoryAdhocRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5709097b-c0a8-4cb1-b8f8-17aa1f3e36ce"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getMedication" id="7ab888b6-2039-4089-b3c0-2f22018d37a2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>getMedication</con:operation><con:request name="getMedication" id="368d5147-45a1-45ba-b929-559c09f7d2ce"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:GetMedicationRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:medicationId>${#TestCase#medicationId}</typ:medicationId>\r
         <typ:patientId>${#TestCase#patientId}</typ:patientId>\r
      </typ:GetMedicationRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e10c36eb-6fbd-47cb-bac6-5b529cf5fcaf"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="get medication/medicationId" id="90741bea-a4b2-4c53-883a-b05b00616465"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/medication/{medicationId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="get medication/medicationId" id="abd332b3-b1f0-46f9-89ab-5f17beb0ab81" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://application-emiasinfo4.emias.solit-clouds.ru/api/v2/medication/1429026</con:originalUri><con:assertion type="Simple Contains" id="a7d3e7bf-f588-4816-b891-0dcc6ebb3e01" name="В ответе есть medicationId"><con:configuration><token>medicationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="488c825e-7789-4d03-b513-872dc8271c69" name="status = scheduled"><con:configuration><path>$.payload.pillboxStatus.code</path><content>archive</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="medicationId" value="${#TestCase#medicationId}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
  <con:entry key="EI-token" value="${#Project#EI-token}"/>
</con:parameters><con:parameterOrder><con:entry>medicationId</con:entry><con:entry>patientId</con:entry><con:entry>EI-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Записать otnId или smnnId" id="6efa72dd-4ee8-44bb-bd68-d65d9bc1a1dd"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper

def response = context.expand('${getMedication#Response}')
getValue = new XmlSlurper().parseText(response) //парсим xml

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) // используем класс groovyUtils
def soapValue = groovyUtils.getXmlHolder('getMedication#Response') //получаем ответ с помощью groovyUtils, для того, чтобы использовать xPath

if(getValue.Body.GetMedicationResponse.medication.otn.title != ''){
	otnId = soapValue.getNodeValue('//*:otn/@id')
	testRunner.testCase.setPropertyValue("annotationId", '&lt;typ:otnId>'+otnId+'&lt;/typ:otnId>')
	log.info otnId
}

if(getValue.Body.GetMedicationResponse.medication.smnn.title != ''){
	smnnId = soapValue.getNodeValue('//*:smnn/@id')
	testRunner.testCase.setPropertyValue("annotationId", '&lt;typ:smnnId>'+smnnId+'&lt;/typ:smnnId>')
	log.info smnnId 
}

annotationId = testRunner.testCase.getPropertyValue("annotationId")
if(annotationId != null){
	testRunner.runTestStepByName( "getDrugInfo")
}

testRunner.testCase.setPropertyValue("annotationId", null)
</script></con:config></con:testStep><con:testStep type="request" name="getDrugInfo" id="419e2556-8ba5-464c-8379-d30101547d27" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>getDrugInfo</con:operation><con:request name="getDrugInfo" id="0f2fb04d-79cd-4ede-9e92-4ade6f4cb37c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:GetDrugInfoRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:drugInfo>
            ${#TestCase#annotationId}
         </typ:drugInfo>
      </typ:GetDrugInfoRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="1ec13730-bfff-4b20-a104-e63c5726b7df"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Сравнить ответ" id="8324b1d4-065c-41e0-8215-93f96ed2ea88"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import com.eviware.soapui.support.XmlHolder

def response = context.expand('${getMedication#Response}')
def getValue = new XmlSlurper().parseText(response) //парсим xml
def getMedicationSoap = getValue.Body.GetMedicationResponse.medication
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) // используем класс groovyUtils
def soapValue = groovyUtils.getXmlHolder('getMedication#Response') //получаем ответ с помощью groovyUtils, для того, чтобы использовать xPath
def annotation = groovyUtils.getXmlHolder('getDrugInfo#Response')
def responseHistory = context.expand('${Получить историю приема#Response}')
def history = new XmlSlurper().parseText(responseHistory) //парсим xml

def restResponse = context.expand('${get medication/medicationId#Response}') // получаем из рест запроса ответ
def jsonResponse =  new JsonSlurper().parseText(restResponse) // создаем объект json
def getMedicationRest = jsonResponse.payload

if (getMedicationRest.intake.adhoc.singleDose || getMedicationRest.intake.adhoc.maxQtyPerDay || getMedicationRest.intake.adhoc.unitDose 
|| getMedicationRest.intake.adhoc.maxSingleDose || getMedicationRest.mealsConnection
|| getMedicationRest.sleepConnection || getMedicationRest.instruction || getMedicationRest.doctor){
	testRunner.fail("Вернулись необязательные параметры")
}

assert soapValue.getNodeValue('//*:medicationInfo/@id') == getMedicationRest.medicationId.toString()
assert soapValue.getNodeValue('//*:medicationType/@code') == getMedicationRest.medicationType.code.toString()
assert getMedicationSoap.medicationInfo.medicationType.title == getMedicationRest.medicationType.title.toString()
assert getMedicationRest.pillboxStatus.title.toString() =='Архивное'
assert getMedicationSoap.medicationTitle == getMedicationRest.medicationTitle.toString()
assert getMedicationSoap.medicationInfo.drugName == getMedicationRest.drugName.toString()
assert soapValue.getNodeValue('//*:medicationState/@code') == getMedicationRest.medicationState.code.toString()
assert getMedicationSoap.medicationInfo.medicationState.title == getMedicationRest.medicationState.title.toString()
if (annotation.getNodeValue('//*:code') == 'E041'){
	assert getMedicationRest.annotation.toBoolean() == false
}
else{
	assert getMedicationRest.annotation.toBoolean() == true
}
assert getMedicationSoap.medicationInfo.isSelfAssigned == getMedicationRest.isSelfAssigned.toBoolean()
if (getMedicationSoap.medicationInfo.validityPeriod.start != ''){
	assert getMedicationSoap.medicationInfo.validityPeriod.start == getMedicationRest.validityPeriod.start.toString()
}
if (getMedicationSoap.medicationInfo.validityPeriod.end != ''){
	assert getMedicationSoap.medicationInfo.validityPeriod.end == getMedicationRest.validityPeriod.end.toString()
}
if (getMedicationSoap.medicationInfo.otn != ''){
	assert soapValue.getNodeValue('//*:otn/@id') == getMedicationRest.otn.id.toInteger()
	assert getMedicationSoap.medicationInfo.otn.title == getMedicationRest.otn.title.toString()
}
if (getMedicationSoap.medicationInfo.smnn != ''){
	assert soapValue.getNodeValue('//*:smnn/@id') == getMedicationRest.smnn.id.toInteger()
	assert getMedicationSoap.medicationInfo.smnn.title == getMedicationRest.smnn.title.toString()
}
if(history.Body.GetHistoryAdhocResponse.dayHistory.receptionSlots != ''){
	assert getMedicationRest.intake.adhoc.dayHistory.toBoolean() == true
}
else{
	assert getMedicationRest.intake.adhoc.dayHistory.toBoolean() == false
}

</script></con:config></con:testStep><con:properties><con:property><con:name>status</con:name><con:value>waiting</con:value></con:property><con:property><con:name>patientId</con:name><con:value>11715757</con:value></con:property><con:property><con:name>medicationId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1435211</con:value></con:property><con:property><con:name>annotationId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties></con:testCase><con:testCase id="f5642b0b-3287-450f-907e-1a51e11820b7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Информация о ЛН с pillboxStatus=archive и courseMode == special. ОС 343887" searchProperties="true"><con:settings/><con:testStep type="request" name="Создать назначение" id="00d5580c-0bd9-47da-abc9-0fe7ba971eef"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>updateMedication</con:operation><con:request name="Создать назначение" id="1e388702-4202-45f3-9eab-884fb8569d67"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:UpdateMedicationRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:patientId>${#TestCase#patientId}</typ:patientId>\r
         <typ:startDate>${=import java.text.SimpleDateFormat; Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE, -1); new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime());}</typ:startDate>\r
         <typ:endDate>${=import java.text.SimpleDateFormat; Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE,+7); new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime());}</typ:endDate>\r
         <typ:drug>\r
            <typ:otnId>14033</typ:otnId>\r
         </typ:drug>\r
         <typ:intake>\r
            <typ:course>\r
               <typ:courseMode>1204087533</typ:courseMode>\r
            </typ:course>\r
         </typ:intake>\r
      </typ:UpdateMedicationRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="de05578f-668c-47f4-8ff2-12e392dc6621"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Записать medicationId" id="014262d1-b0a2-4368-a074-d807dd1f48c4"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>medicationId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Создать назначение</con:sourceStep><con:sourcePath>//*:medicationId</con:sourcePath><con:targetType>medicationId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Завершить прием" id="defe77ef-1998-4dcc-a71d-7e7c981cdc27"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>endMedication</con:operation><con:request name="Завершить прием" id="8228dcdd-ca2f-435c-b5fc-842d9e357e8a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <typ:EndMedicationRequest>
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>
         <typ:medicationId>${#TestCase#medicationId}</typ:medicationId>
         <typ:patientId>${#TestCase#patientId}</typ:patientId>
         <typ:terminationReasonId>1204725448</typ:terminationReasonId>
      </typ:EndMedicationRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="77af1b19-fb9b-48a9-97c7-04a7534f47a3"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getMedication" id="e2e1c841-3c19-4e10-9256-1444cdbe3fc6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>getMedication</con:operation><con:request name="getMedication" id="368d5147-45a1-45ba-b929-559c09f7d2ce"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:GetMedicationRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:medicationId>${#TestCase#medicationId}</typ:medicationId>\r
         <typ:patientId>${#TestCase#patientId}</typ:patientId>\r
      </typ:GetMedicationRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e10c36eb-6fbd-47cb-bac6-5b529cf5fcaf"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Получить расписание" id="82dae8ff-925b-4c7f-b7fb-c1988c4f0178"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>getSchedule</con:operation><con:request name="Получить расписание" id="fcbfaa0b-9faf-4297-9cf8-8f719a69fa1f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <typ:GetScheduleRequest>
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>
         <typ:medicationId>${#TestCase#medicationId}</typ:medicationId>
         <typ:patientId>${#TestCase#patientId}</typ:patientId>
         <typ:periodTerm>
            <v1:start>${=import java.text.SimpleDateFormat; Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE, -1); new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime());}</v1:start>
         </typ:periodTerm>
      </typ:GetScheduleRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="633b3e41-599c-47c2-8b5b-f7dcafe27e1f"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="get medication/medicationId" id="2a25f217-1423-43c9-af6f-309f1323e569"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/medication/{medicationId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="get medication/medicationId" id="abd332b3-b1f0-46f9-89ab-5f17beb0ab81" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://application-emiasinfo4.emias.solit-clouds.ru/api/v2/medication/1429026</con:originalUri><con:assertion type="Simple Contains" id="a7d3e7bf-f588-4816-b891-0dcc6ebb3e01" name="В ответе есть medicationId"><con:configuration><token>medicationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="488c825e-7789-4d03-b513-872dc8271c69" name="status = scheduled"><con:configuration><path>$.payload.pillboxStatus.code</path><content>archive</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="medicationId" value="${#TestCase#medicationId}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
  <con:entry key="EI-token" value="${#Project#EI-token}"/>
</con:parameters><con:parameterOrder><con:entry>medicationId</con:entry><con:entry>patientId</con:entry><con:entry>EI-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Записать otnId или smnnId" id="940360d8-5e8d-451c-8430-7402a28fa06d"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper

def response = context.expand('${getMedication#Response}')
getValue = new XmlSlurper().parseText(response) //парсим xml

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) // используем класс groovyUtils
def soapValue = groovyUtils.getXmlHolder('getMedication#Response') //получаем ответ с помощью groovyUtils, для того, чтобы использовать xPath

if(getValue.Body.GetMedicationResponse.medication.otn.title != ''){
	otnId = soapValue.getNodeValue('//*:otn/@id')
	testRunner.testCase.setPropertyValue("annotationId", '&lt;typ:otnId>'+otnId+'&lt;/typ:otnId>')
	log.info otnId
}

if(getValue.Body.GetMedicationResponse.medication.smnn.title != ''){
	smnnId = soapValue.getNodeValue('//*:smnn/@id')
	testRunner.testCase.setPropertyValue("annotationId", '&lt;typ:smnnId>'+smnnId+'&lt;/typ:smnnId>')
	log.info smnnId 
}

annotationId = testRunner.testCase.getPropertyValue("annotationId")
if(annotationId != null){
	testRunner.runTestStepByName( "getDrugInfo")
}

testRunner.testCase.setPropertyValue("annotationId", null)
</script></con:config></con:testStep><con:testStep type="request" name="getDrugInfo" id="e04bc8bb-66e1-404a-a239-a5c78fa71e33" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>getDrugInfo</con:operation><con:request name="getDrugInfo" id="0f2fb04d-79cd-4ede-9e92-4ade6f4cb37c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:GetDrugInfoRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:drugInfo>
            ${#TestCase#annotationId}
         </typ:drugInfo>
      </typ:GetDrugInfoRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="1ec13730-bfff-4b20-a104-e63c5726b7df"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Сравнить ответ" id="ce3d505b-fb06-46a4-91cf-9f8d88ba2230"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import com.eviware.soapui.support.XmlHolder

def response = context.expand('${getMedication#Response}')
def getValue = new XmlSlurper().parseText(response) //парсим xml
def getMedicationSoap = getValue.Body.GetMedicationResponse.medication
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) // используем класс groovyUtils
def soapValue = groovyUtils.getXmlHolder('getMedication#Response') //получаем ответ с помощью groovyUtils, для того, чтобы использовать xPath
def annotation = groovyUtils.getXmlHolder('getDrugInfo#Response')
def responseSchedule = context.expand('${Получить расписание#Response}')
def schedule = new XmlSlurper().parseText(responseSchedule) //парсим xml

def restResponse = context.expand('${get medication/medicationId#Response}') // получаем из рест запроса ответ
def jsonResponse =  new JsonSlurper().parseText(restResponse) // создаем объект json
def getMedicationRest = jsonResponse.payload

assert soapValue.getNodeValue('//*:medicationInfo/@id') == getMedicationRest.medicationId.toString()
assert soapValue.getNodeValue('//*:medicationType/@code') == getMedicationRest.medicationType.code.toString()
assert getMedicationSoap.medicationInfo.medicationType.title == getMedicationRest.medicationType.title.toString()
assert getMedicationRest.pillboxStatus.title.toString() =='Архивное'
assert getMedicationSoap.medicationTitle == getMedicationRest.medicationTitle.toString()
assert getMedicationSoap.medicationInfo.drugName == getMedicationRest.drugName.toString()
assert soapValue.getNodeValue('//*:courseMode/@code') == getMedicationRest.intake.course.courseMode.code.toString()
assert getMedicationSoap.intake.course.courseMode.title == getMedicationRest.intake.course.courseMode.title.toString()
assert soapValue.getNodeValue('//*:medicationState/@code') == getMedicationRest.medicationState.code.toString()
assert getMedicationSoap.medicationInfo.medicationState.title == getMedicationRest.medicationState.title.toString()
if (annotation.getNodeValue('//*:code') == 'E041'){
	assert getMedicationRest.annotation.toBoolean() == false
}
else{
	assert getMedicationRest.annotation.toBoolean() == true
}
assert getMedicationSoap.medicationInfo.isSelfAssigned == getMedicationRest.isSelfAssigned.toBoolean()
if (getMedicationSoap.medicationInfo.validityPeriod.start != ''){
	assert getMedicationSoap.medicationInfo.validityPeriod.start == getMedicationRest.validityPeriod.start.toString()
}
if (getMedicationSoap.medicationInfo.validityPeriod.end != ''){
	assert getMedicationSoap.medicationInfo.validityPeriod.end == getMedicationRest.validityPeriod.end.toString()
}
if (getMedicationSoap.medicationInfo.otn != ''){
	assert soapValue.getNodeValue('//*:otn/@id') == getMedicationRest.otn.id.toInteger()
	assert getMedicationSoap.medicationInfo.otn.title == getMedicationRest.otn.title.toString()
}
if (getMedicationSoap.medicationInfo.smnn != ''){
	assert soapValue.getNodeValue('//*:smnn/@id') == getMedicationRest.smnn.id.toInteger()
	assert getMedicationSoap.medicationInfo.smnn.title == getMedicationRest.smnn.title.toString()
}
assert getMedicationRest.pushNotifications.toBoolean() == false
assert getMedicationRest.daysOfTaking == null</script></con:config></con:testStep><con:properties><con:property><con:name>status</con:name><con:value>waiting</con:value></con:property><con:property><con:name>patientId</con:name><con:value>11715757</con:value></con:property><con:property><con:name>medicationId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1435212</con:value></con:property><con:property><con:name>annotationId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties></con:testCase><con:testCase id="1ba7b712-9f3a-4af0-988e-c93c6db9562c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Информация о ЛН с pillboxStatus=scheduled и courseMode == special. ОС 342980" searchProperties="true"><con:settings/><con:testStep type="request" name="Создать назначение" id="f641f3c8-e226-40dc-abd0-a8a3a4f87792"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>updateMedication</con:operation><con:request name="Создать назначение" id="1e388702-4202-45f3-9eab-884fb8569d67"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <typ:UpdateMedicationRequest>
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>
         <typ:patientId>${#TestCase#patientId}</typ:patientId>
         <typ:startDate>${=import java.text.SimpleDateFormat; Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE, -1); new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime());}</typ:startDate>
         <typ:endDate>${=import java.text.SimpleDateFormat; Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE,+7); new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime());}</typ:endDate>
         <typ:drug>
            <typ:otnId>14033</typ:otnId>
         </typ:drug>
         <typ:intake>
            <typ:course>
               <typ:courseMode>1204087533</typ:courseMode>
            </typ:course>
         </typ:intake>
      </typ:UpdateMedicationRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="de05578f-668c-47f4-8ff2-12e392dc6621"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Записать medicationId" id="7e1328f8-b619-4356-be53-6b669b804b01"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>medicationId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Создать назначение</con:sourceStep><con:sourcePath>//*:medicationId</con:sourcePath><con:targetType>medicationId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Создать график приема" id="8f2a22a8-96cd-4b2e-8e0a-c68f4af1af4d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>setSchedule</con:operation><con:request name="Создать график приема" id="de61d846-420f-4d7b-b206-decac7274f71"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <typ:SetScheduleRequest>
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>
         <typ:medicationId>${#TestCase#medicationId}</typ:medicationId>
         <typ:patientId>${#TestCase#patientId}</typ:patientId>
         <typ:daySchedule>
            <typ:scheduleDate>${=import java.text.SimpleDateFormat; Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE, +1); new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime());}</typ:scheduleDate>
            <typ:receptionSlot>
               <typ:slotCode>3</typ:slotCode>
               <typ:timeStart>09:00</typ:timeStart>
            </typ:receptionSlot>
            <typ:receptionSlot>
               <typ:slotCode>10</typ:slotCode>
               <typ:timeStart>12:00</typ:timeStart>
            </typ:receptionSlot>
            <typ:receptionSlot>
               <typ:slotCode>15</typ:slotCode>
               <typ:timeStart>17:00</typ:timeStart>
            </typ:receptionSlot>
         </typ:daySchedule>
         <typ:daySchedule>
            <typ:scheduleDate>${=import java.text.SimpleDateFormat; Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE, +2); new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime());}</typ:scheduleDate>
            <typ:receptionSlot>
               <typ:slotCode>3</typ:slotCode>
               <typ:timeStart>09:00</typ:timeStart>
            </typ:receptionSlot>
            <typ:receptionSlot>
               <typ:slotCode>10</typ:slotCode>
               <typ:timeStart>12:00</typ:timeStart>
            </typ:receptionSlot>
            <typ:receptionSlot>
               <typ:slotCode>15</typ:slotCode>
               <typ:timeStart>17:00</typ:timeStart>
            </typ:receptionSlot>
         </typ:daySchedule>
         <typ:daySchedule>
            <typ:scheduleDate>${=import java.text.SimpleDateFormat; Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE, +1); new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime());}</typ:scheduleDate>
            <typ:receptionSlot>
               <typ:slotCode>3</typ:slotCode>
               <typ:timeStart>09:00</typ:timeStart>
            </typ:receptionSlot>
            <typ:receptionSlot>
               <typ:slotCode>10</typ:slotCode>
               <typ:timeStart>12:00</typ:timeStart>
            </typ:receptionSlot>
            <typ:receptionSlot>
               <typ:slotCode>15</typ:slotCode>
               <typ:timeStart>17:00</typ:timeStart>
            </typ:receptionSlot>
         </typ:daySchedule>
      </typ:SetScheduleRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a578a248-ad84-4e70-9a1d-359ddbdf6ca2"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getMedication" id="18d80e1c-c92f-4246-b68b-2118361fd6b6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>getMedication</con:operation><con:request name="getMedication" id="368d5147-45a1-45ba-b929-559c09f7d2ce"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:GetMedicationRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:medicationId>${#TestCase#medicationId}</typ:medicationId>\r
         <typ:patientId>${#TestCase#patientId}</typ:patientId>\r
      </typ:GetMedicationRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e10c36eb-6fbd-47cb-bac6-5b529cf5fcaf"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Получить расписание" id="d76d5309-972f-4149-895a-da8c33f96dd8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>getSchedule</con:operation><con:request name="Получить расписание" id="fcbfaa0b-9faf-4297-9cf8-8f719a69fa1f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#medicationEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/" xmlns:v1="http://emias.mos.ru/ln/core/v1/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <typ:GetScheduleRequest>
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>
         <typ:medicationId>${#TestCase#medicationId}</typ:medicationId>
         <typ:patientId>${#TestCase#patientId}</typ:patientId>
         <typ:periodTerm>
            <v1:start>${=import java.text.SimpleDateFormat; Calendar cal = Calendar.getInstance(); cal.add(Calendar.DATE, +0); new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime());}</v1:start>
         </typ:periodTerm>
      </typ:GetScheduleRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="633b3e41-599c-47c2-8b5b-f7dcafe27e1f"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="get medication/medicationId" id="a6ebd4bd-04a9-401d-a76e-5897a3fba4d7"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/medication/{medicationId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="get medication/medicationId" id="abd332b3-b1f0-46f9-89ab-5f17beb0ab81" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://application-emiasinfo4.emias.solit-clouds.ru/api/v2/medication/1429026</con:originalUri><con:assertion type="Simple Contains" id="a7d3e7bf-f588-4816-b891-0dcc6ebb3e01" name="В ответе есть medicationId"><con:configuration><token>medicationId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="488c825e-7789-4d03-b513-872dc8271c69" name="status = scheduled"><con:configuration><path>$.payload.pillboxStatus.code</path><content>scheduled</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="medicationId" value="${#TestCase#medicationId}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
  <con:entry key="EI-token" value="${#Project#EI-token}"/>
</con:parameters><con:parameterOrder><con:entry>medicationId</con:entry><con:entry>patientId</con:entry><con:entry>EI-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Записать otnId или smnnId" id="52980f17-7986-4897-82cd-e8d01f2fd0dd"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper

def response = context.expand('${getMedication#Response}')
getValue = new XmlSlurper().parseText(response) //парсим xml

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) // используем класс groovyUtils
def soapValue = groovyUtils.getXmlHolder('getMedication#Response') //получаем ответ с помощью groovyUtils, для того, чтобы использовать xPath

if(getValue.Body.GetMedicationResponse.medication.otn.title != ''){
	otnId = soapValue.getNodeValue('//*:otn/@id')
	testRunner.testCase.setPropertyValue("annotationId", '&lt;typ:otnId>'+otnId+'&lt;/typ:otnId>')
	log.info otnId
}

if(getValue.Body.GetMedicationResponse.medication.smnn.title != ''){
	smnnId = soapValue.getNodeValue('//*:smnn/@id')
	testRunner.testCase.setPropertyValue("annotationId", '&lt;typ:smnnId>'+smnnId+'&lt;/typ:smnnId>')
	log.info smnnId 
}

annotationId = testRunner.testCase.getPropertyValue("annotationId")
if(annotationId != null){
	testRunner.runTestStepByName( "getDrugInfo")
}

testRunner.testCase.setPropertyValue("annotationId", null)
</script></con:config></con:testStep><con:testStep type="request" name="getDrugInfo" id="4090332c-395e-4e10-9a84-97d533cc85f7" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Таблетница</con:interface><con:operation>getDrugInfo</con:operation><con:request name="getDrugInfo" id="0f2fb04d-79cd-4ede-9e92-4ade6f4cb37c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:oas="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:typ="http://emias.mos.ru/ln/pillbox/v1/types/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <typ:GetDrugInfoRequest>\r
         <typ:requestGUID>${=java.util.UUID.randomUUID()}</typ:requestGUID>\r
         <typ:drugInfo>
            ${#TestCase#annotationId}
         </typ:drugInfo>
      </typ:GetDrugInfoRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="1ec13730-bfff-4b20-a104-e63c5726b7df"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Сравнить ответ" id="27d01e90-344f-4d94-aa91-ca6a4a7f8ebb"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import com.eviware.soapui.support.XmlHolder

Date date = new Date()
String datePart = date.format("yyyy-MM-dd")

def response = context.expand('${getMedication#Response}')
def getValue = new XmlSlurper().parseText(response) //парсим xml
def getMedicationSoap = getValue.Body.GetMedicationResponse.medication
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) // используем класс groovyUtils
def soapValue = groovyUtils.getXmlHolder('getMedication#Response') //получаем ответ с помощью groovyUtils, для того, чтобы использовать xPath
def annotation = groovyUtils.getXmlHolder('getDrugInfo#Response')
def responseSchedule = context.expand('${Получить расписание#Response}')
def schedule = new XmlSlurper().parseText(responseSchedule) //парсим xml

def restResponse = context.expand('${get medication/medicationId#Response}') // получаем из рест запроса ответ
def jsonResponse =  new JsonSlurper().parseText(restResponse) // создаем объект json
def getMedicationRest = jsonResponse.payload

assert soapValue.getNodeValue('//*:medicationInfo/@id') == getMedicationRest.medicationId.toString()
assert soapValue.getNodeValue('//*:medicationType/@code') == getMedicationRest.medicationType.code.toString()
assert getMedicationSoap.medicationInfo.medicationType.title == getMedicationRest.medicationType.title.toString()
assert getMedicationRest.pillboxStatus.title.toString() =='Исполняемое'
assert getMedicationSoap.medicationTitle == getMedicationRest.medicationTitle.toString()
assert getMedicationSoap.medicationInfo.drugName == getMedicationRest.drugName.toString()
assert soapValue.getNodeValue('//*:courseMode/@code') == getMedicationRest.intake.course.courseMode.code.toString()
assert getMedicationSoap.intake.course.courseMode.title == getMedicationRest.intake.course.courseMode.title.toString()
assert soapValue.getNodeValue('//*:medicationState/@code') == getMedicationRest.medicationState.code.toString()
assert getMedicationSoap.medicationInfo.medicationState.title == getMedicationRest.medicationState.title.toString()
if (annotation.getNodeValue('//*:code') == 'E041'){
	assert getMedicationRest.annotation.toBoolean() == false
}
else{
	assert getMedicationRest.annotation.toBoolean() == true
}
assert getMedicationSoap.medicationInfo.isSelfAssigned == getMedicationRest.isSelfAssigned.toBoolean()
if (getMedicationSoap.medicationInfo.validityPeriod.start != ''){
	assert getMedicationSoap.medicationInfo.validityPeriod.start == getMedicationRest.validityPeriod.start.toString()
}
if (getMedicationSoap.medicationInfo.validityPeriod.end != ''){
	assert getMedicationSoap.medicationInfo.validityPeriod.end == getMedicationRest.validityPeriod.end.toString()
}
assert getMedicationSoap.schedulePeriod.start == getMedicationRest.schedulePeriod.start.toString()
assert getMedicationSoap.schedulePeriod.end == getMedicationRest.schedulePeriod.end.toString()
if (getMedicationSoap.medicationInfo.otn != ''){
	assert soapValue.getNodeValue('//*:otn/@id') == getMedicationRest.otn.id.toInteger()
	assert getMedicationSoap.medicationInfo.otn.title == getMedicationRest.otn.title.toString()
}
if (getMedicationSoap.medicationInfo.smnn != ''){
	assert soapValue.getNodeValue('//*:smnn/@id') == getMedicationRest.smnn.id.toInteger()
	assert getMedicationSoap.medicationInfo.smnn.title == getMedicationRest.smnn.title.toString()
}
assert getMedicationRest.pushNotifications.toBoolean() == false

def count1 = schedule.Body.GetScheduleResponse.daySchedule[0].receptionSlot
def count2 = schedule.Body.GetScheduleResponse.daySchedule[1].receptionSlot
if(count1.size() < count2.size()){
	for(int i=0; i<count2.size(); i++){
		assert count2[i].slotCode == getMedicationRest.intake.course.receptionSlot[i].slotCode.toInteger()
		assert count2[i].timeStart == getMedicationRest.intake.course.receptionSlot[i].timeStart.toString()
		assert count2[i].timeEnd == getMedicationRest.intake.course.receptionSlot[i].timeEnd.toString()
	}
}
else{
	for(int i=0; i<count2.size(); i++){
		assert count1[i].slotCode == getMedicationRest.intake.course.receptionSlot[i].slotCode.toInteger()
		assert count1[i].timeStart == getMedicationRest.intake.course.receptionSlot[i].timeStart.toString()
		assert count1[i].timeEnd == getMedicationRest.intake.course.receptionSlot[i].timeEnd.toString()
	}
}
dateTaking =[]
for(int i=0; i<schedule.Body.GetScheduleResponse.daySchedule.size(); i++){
	if(datePart<=schedule.Body.GetScheduleResponse.daySchedule[i].scheduleDate.toString()){
		dateTaking.add(schedule.Body.GetScheduleResponse.daySchedule[i].scheduleDate)
	}
}

for(int i=0; i<dateTaking.size(); i++){
	assert dateTaking[i] == getMedicationRest.intake.course.daysOfTaking[i]
}
]]></script></con:config></con:testStep><con:properties><con:property><con:name>status</con:name><con:value>waiting</con:value></con:property><con:property><con:name>patientId</con:name><con:value>11715757</con:value></con:property><con:property><con:name>medicationId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1435213</con:value></con:property><con:property><con:name>annotationId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties></con:testCase><con:testCase id="bf05d0dd-c568-4062-86c7-aea26e90b09d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС0 - ошибка SERVER_ERROR" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="get medication/medicationId" id="d436659e-a290-4958-82b2-8447459db7e6"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/medication/{medicationId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="get medication/medicationId" id="abd332b3-b1f0-46f9-89ab-5f17beb0ab81" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://application-emiasinfo4.emias.solit-clouds.ru/api/v2/medication/1429026</con:originalUri><con:assertion type="JsonPath Match" id="488c825e-7789-4d03-b513-872dc8271c69" name="code=SERVER_ERROR"><con:configuration><path>$.error.code</path><content>SERVER_ERROR</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="23f9e3b3-bb0a-40e4-8424-13420e698107" name="description = Ошибка выполнения метода"><con:configuration><path>$.error.description</path><content>Ошибка выполнения метода</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="23f9e3b3-bb0a-40e4-8424-13420e698107" name="type=TECHNICAL"><con:configuration><path>$.error.type</path><content>TECHNICAL</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="medicationId" value="${#TestCase#medicationId}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
</con:parameters><con:parameterOrder><con:entry>medicationId</con:entry><con:entry>patientId</con:entry><con:entry>EI-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>status</con:name><con:value>waiting</con:value></con:property><con:property><con:name>patientId</con:name><con:value>11715757</con:value></con:property><con:property><con:name>medicationId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1435213</con:value></con:property><con:property><con:name>annotationId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties></con:testCase><con:testCase id="7a6fe74d-8463-4f4e-8852-7c5cb63e09a2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС1 - ошибка ACCESS_DENIED" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="get medication/medicationId" id="c5b337c0-4b81-4d46-b1b6-3b1eb174d5d1"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/medication/{medicationId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="get medication/medicationId" id="abd332b3-b1f0-46f9-89ab-5f17beb0ab81" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://application-emiasinfo4.emias.solit-clouds.ru/api/v2/medication/1429026</con:originalUri><con:assertion type="JsonPath Match" id="488c825e-7789-4d03-b513-872dc8271c69" name="code=ACCESS_DENIED"><con:configuration><path>$.error.code</path><content>ACCESS_DENIED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="23f9e3b3-bb0a-40e4-8424-13420e698107" name="description = Доступ к запрошенной медкарте отсутствует"><con:configuration><path>$.error.description</path><content>Доступ к запрошенной медкарте отсутствует</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="23f9e3b3-bb0a-40e4-8424-13420e698107" name="type=BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="medicationId" value="${#TestCase#medicationId}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
  <con:entry key="EI-token" value="${#Project#EI-token}"/>
</con:parameters><con:parameterOrder><con:entry>medicationId</con:entry><con:entry>patientId</con:entry><con:entry>EI-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>status</con:name><con:value>waiting</con:value></con:property><con:property><con:name>patientId</con:name><con:value>1171575</con:value></con:property><con:property><con:name>medicationId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1435213</con:value></con:property><con:property><con:name>annotationId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties></con:testCase><con:testCase id="909280be-5d71-45e0-b1e6-cfcb1881ee25" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС3 - ошибка LN_MED_NOT_FOUND" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="get medication/medicationId" id="c089f429-8942-45f6-bb1d-994a35461644"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/medication/{medicationId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="get medication/medicationId" id="abd332b3-b1f0-46f9-89ab-5f17beb0ab81" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://application-emiasinfo4.emias.solit-clouds.ru/api/v2/medication/1429026</con:originalUri><con:assertion type="JsonPath Match" id="488c825e-7789-4d03-b513-872dc8271c69" name="code=LN_MED_NOT_FOUND"><con:configuration><path>$.error.code</path><content>LN_MED_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="23f9e3b3-bb0a-40e4-8424-13420e698107" name="description = Назначение не найдено"><con:configuration><path>$.error.description</path><content>Назначение не найдено</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="23f9e3b3-bb0a-40e4-8424-13420e698107" name="type=BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="medicationId" value="${#TestCase#medicationId}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
  <con:entry key="EI-token" value="${#Project#EI-token}"/>
</con:parameters><con:parameterOrder><con:entry>medicationId</con:entry><con:entry>patientId</con:entry><con:entry>EI-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>status</con:name><con:value>waiting</con:value></con:property><con:property><con:name>patientId</con:name><con:value>11715757</con:value></con:property><con:property><con:name>medicationId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">143521</con:value></con:property><con:property><con:name>annotationId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties></con:testCase><con:properties><con:property><con:name>EI-Token</con:name><con:value>nMy1BkAkF5U_ugbtQhVsr03pNNF6O_stRBPUeb9XdNk</con:value></con:property></con:properties></con:testSuite><con:testSuite id="93960505-0abd-4af5-abfc-fe34e27195cf" name="А_ЕСУ_04"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="8dde5815-9eb0-417c-866d-86e3c9b71d78" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. Обработка сообщения о выписанных рецептах, auth = true, deleted = false. ID345851" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Найти пациента" id="e63c7ede-65c6-4737-99cc-e7b103a609bf"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fd.device_guid, fu.id from f_user fu
inner join f_user_device fud on fud.user_id = fu.id
inner join f_device_settings fds on fds.device_guid = fud.device_guid
inner join f_device fd on fd.device_guid = fud.device_guid
where fud.authentication = true
and fud.deleted = false
and fd.cloud_token_delete = false
and fds.pr_news = true</con:query><con:assertion type="Simple Contains" id="77355e3a-b272-403c-a291-be8aa363d386" name="Contains"><con:configuration><token>F_USER.PATIENT_ID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать GUID и patientId" id="9337deb9-19b1-4fd9-bf3d-c313c2992de1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>GUID</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пациента</con:sourceStep><con:sourcePath>//Row[@rowNumber='1']//F_DEVICE.DEVICE_GUID</con:sourcePath><con:targetType>guid</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>patientId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пациента</con:sourceStep><con:sourcePath>//Row[@rowNumber='1']//F_USER.PATIENT_ID</con:sourcePath><con:targetType>patientId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пациента</con:sourceStep><con:sourcePath>//Row[@rowNumber='1']//F_USER.ID</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик" id="3b7f0f41-115a-4965-b696-a5f4d8dc301e"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
def topicBookingRecipeInfoMessage = testRunner.testCase.testSuite.project.getPropertyValue("topicBookingRecipeInfoMessage")
number=(('0'..'9')).shuffled().take(13).join()
header = (('a'..'z')+('A'..'Z')).shuffled().take(15).join()
text = (('a'..'z')+('A'..'Z')).shuffled().take(30).join()
testRunner.testCase.setPropertyValue("number", number)
testRunner.testCase.setPropertyValue("header", header)
testRunner.testCase.setPropertyValue("text", text)
patientId = testRunner.testCase.getPropertyValue("patientId")
log.info topicBookingRecipeInfoMessage

message="""{\n"patientId":""" + patientId + """,\n"prescriptionNumber": \n[\n""" +	number + """\n],\n"messageHeader":"""" +  header + """",\n"messageText":"""" + text  + """"\n}"""
log.info message

scripts.sendMessageToKafka2("topicBookingRecipeInfoMessage",message)</script></con:config></con:testStep><con:testStep type="jdbc" name="Проверить данные в f_notification" id="3f8203ea-1d6e-4763-9d28-90090d12b5ea"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select * from f_notification fn
where fn.title = '${#TestCase#header}'</con:query><con:assertion type="XPath Match" id="ddef9937-7f37-42b5-a557-3a474915c853" name="Найдена 1 запись"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="445dd3bc-e62b-40a0-bf08-b4a24abb90b9" name="user_id"><con:configuration><path>//Row[@rowNumber='1']//F_NOTIFICATION.USER_ID</path><content>${#TestCase#id}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="6701f9aa-74cd-4234-b985-ccbd0fed143c" name="Тип уведомления = prescription"><con:configuration><path>//Row[@rowNumber='1']//F_NOTIFICATION.NOTIFICATION_TYPE_ID</path><content>6</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="3a917abe-a3fd-4202-810a-37f0a4831d99" name="Проверка значения TITLE"><con:configuration><path>//Row[@rowNumber='1']//F_NOTIFICATION.TITLE</path><content>${#TestCase#header}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="2946eb49-b1c9-4e9c-a545-41077994a00e" name="Проверка значения DESCRIPTION"><con:configuration><path>//Row[@rowNumber='1']//F_NOTIFICATION.DESCRIPTION</path><content>${#TestCase#text}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="02409e25-5bb4-4b45-99b9-6a02bb791733" name="Проверка DELETED"><con:configuration><path>//Row[@rowNumber='1']//F_NOTIFICATION.DELETED</path><content>f</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="2f635277-5f10-4cb9-850d-1ba68d0fa9bf" name="Проверка viewed"><con:configuration><path>//Row[@rowNumber='1']//F_NOTIFICATION.VIEWED</path><content>f</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать ID уведомления" id="c6f53213-3a18-4d1e-958a-02a08b5b6006"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>notificationId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Проверить данные в f_notification</con:sourceStep><con:sourcePath>//Row[@rowNumber='1']//F_NOTIFICATION.ID</con:sourcePath><con:targetType>notificationId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="jdbc" name="Проверить данные в f_notification_task" id="77d6d2be-2050-4093-810d-0a594c4b5ee8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select * from f_notification_task fnt
where fnt.notification_id = ${#TestCase#notificationId}
and fnt.device_guid = '${#TestCase#guid}'</con:query><con:assertion type="XPath Match" id="f77c6a96-15a3-4935-9ac5-b1bc8424a86f" name="Найдена 1 запись"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="b39cfa72-9828-4984-ad48-643e83861431" name="Проверка статуса"><con:configuration><path>//Row[@rowNumber='1']//F_NOTIFICATION_TASK.STATUS</path><content>SEND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>guid</con:name><con:value>17bebc4d-6fa1-4552-b7b7-315053a618ea</con:value></con:property><con:property><con:name>patientId</con:name><con:value>12001</con:value></con:property><con:property><con:name>number</con:name><con:value>5213760984</con:value></con:property><con:property><con:name>header</con:name><con:value>KJcZDbYkmvlCHUX</con:value></con:property><con:property><con:name>text</con:name><con:value>RoVHkeWEzhOptGwMAYUfaDgclKbXTu</con:value></con:property><con:property><con:name>id</con:name><con:value>32</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>3182</con:value></con:property></con:properties></con:testCase><con:testCase id="a0807c9f-a0b3-4a59-ac96-1b545ae5b401" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. Обработка сообщения о выписанных рецептах, auth = true, deleted = NULL. ID346617" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Найти пациента" id="9724a5d1-747c-412b-bf6d-82cb0cfd5460"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fd.device_guid, fu.id from f_user fu
inner join f_user_device fud on fud.user_id = fu.id
inner join f_device_settings fds on fds.device_guid = fud.device_guid
inner join f_device fd on fd.device_guid = fud.device_guid
where fud.authentication = true
and fud.deleted = false
and fd.cloud_token_delete is null
and fds.pr_news = true</con:query><con:assertion type="Simple Contains" id="77355e3a-b272-403c-a291-be8aa363d386" name="Contains"><con:configuration><token>F_USER.PATIENT_ID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать GUID и patientId" id="6ca2b847-5188-44f7-be45-085938ad75ee"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>GUID</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пациента</con:sourceStep><con:sourcePath>//Row[@rowNumber='1']//F_DEVICE.DEVICE_GUID</con:sourcePath><con:targetType>guid</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>patientId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пациента</con:sourceStep><con:sourcePath>//Row[@rowNumber='1']//F_USER.PATIENT_ID</con:sourcePath><con:targetType>patientId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пациента</con:sourceStep><con:sourcePath>//Row[@rowNumber='1']//F_USER.ID</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик" id="a18de0dc-be21-44c2-ba1f-7795543aa3e0"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
def topicBookingRecipeInfoMessage = testRunner.testCase.testSuite.project.getPropertyValue("topicBookingRecipeInfoMessage")
number=(('0'..'9')).shuffled().take(13).join()
header = (('a'..'z')+('A'..'Z')).shuffled().take(15).join()
text = (('a'..'z')+('A'..'Z')).shuffled().take(30).join()
testRunner.testCase.setPropertyValue("number", number)
testRunner.testCase.setPropertyValue("header", header)
testRunner.testCase.setPropertyValue("text", text)
patientId = testRunner.testCase.getPropertyValue("patientId")
log.info topicBookingRecipeInfoMessage

message="""{\n"patientId":""" + patientId + """,\n"prescriptionNumber": \n[\n""" +	number + """\n],\n"messageHeader":"""" +  header + """",\n"messageText":"""" + text  + """"\n}"""
log.info message

scripts.sendMessageToKafka2("topicBookingRecipeInfoMessage",message)</script></con:config></con:testStep><con:testStep type="jdbc" name="Проверить данные в f_notification" id="5ccb553e-c180-45d1-afb5-f8111b3b71f1"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select * from f_notification fn
where fn.title = '${#TestCase#header}'</con:query><con:assertion type="XPath Match" id="ddef9937-7f37-42b5-a557-3a474915c853" name="Найдена 1 запись"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="445dd3bc-e62b-40a0-bf08-b4a24abb90b9" name="user_id"><con:configuration><path>//Row[@rowNumber='1']//F_NOTIFICATION.USER_ID</path><content>${#TestCase#id}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="6701f9aa-74cd-4234-b985-ccbd0fed143c" name="Тип уведомления = prescription"><con:configuration><path>//Row[@rowNumber='1']//F_NOTIFICATION.NOTIFICATION_TYPE_ID</path><content>6</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="3a917abe-a3fd-4202-810a-37f0a4831d99" name="Проверка значения TITLE"><con:configuration><path>//Row[@rowNumber='1']//F_NOTIFICATION.TITLE</path><content>${#TestCase#header}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="2946eb49-b1c9-4e9c-a545-41077994a00e" name="Проверка значения DESCRIPTION"><con:configuration><path>//Row[@rowNumber='1']//F_NOTIFICATION.DESCRIPTION</path><content>${#TestCase#text}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="02409e25-5bb4-4b45-99b9-6a02bb791733" name="Проверка DELETED"><con:configuration><path>//Row[@rowNumber='1']//F_NOTIFICATION.DELETED</path><content>f</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="2f635277-5f10-4cb9-850d-1ba68d0fa9bf" name="Проверка viewed"><con:configuration><path>//Row[@rowNumber='1']//F_NOTIFICATION.VIEWED</path><content>f</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать ID уведомления" id="d171396a-cc8a-43f9-b188-0f2d27bb555d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>notificationId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Проверить данные в f_notification</con:sourceStep><con:sourcePath>//Row[@rowNumber='1']//F_NOTIFICATION.ID</con:sourcePath><con:targetType>notificationId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="jdbc" name="Проверить данные в f_notification_task" id="9bcab0e7-e51a-4285-8231-09d4844d9d67"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select * from f_notification_task fnt
where fnt.notification_id = ${#TestCase#notificationId}
and fnt.device_guid = '${#TestCase#guid}'</con:query><con:assertion type="XPath Match" id="f77c6a96-15a3-4935-9ac5-b1bc8424a86f" name="Найдена 1 запись"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="b39cfa72-9828-4984-ad48-643e83861431" name="Проверка статуса"><con:configuration><path>//Row[@rowNumber='1']//F_NOTIFICATION_TASK.STATUS</path><content>SEND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>guid</con:name><con:value>97b6a6c6-e066-41e0-bd88-cb0e70643abb</con:value></con:property><con:property><con:name>patientId</con:name><con:value>25503647</con:value></con:property><con:property><con:name>number</con:name><con:value>5742186093</con:value></con:property><con:property><con:name>header</con:name><con:value>zPZEkvsXmWlRSJe</con:value></con:property><con:property><con:name>text</con:name><con:value>akGwLXKztRDulIhZbSeCoqMvynUEJT</con:value></con:property><con:property><con:name>id</con:name><con:value>25</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>3182</con:value></con:property></con:properties></con:testCase><con:testCase id="49df21d9-73b5-443c-83d9-48bf93cafb30" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. Обработка сообщения о выписанных рецептах, auth = true, deleted = true. ID346618" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Найти пациента" id="792f8b92-b9bc-4b71-81bf-9aa77525d988"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fd.device_guid, fu.id from f_user fu
inner join f_user_device fud on fud.user_id = fu.id
inner join f_device_settings fds on fds.device_guid = fud.device_guid
inner join f_device fd on fd.device_guid = fud.device_guid
where fud.authentication = true
and fud.deleted = true
and fd.cloud_token_delete is null
and fds.pr_news = true</con:query><con:assertion type="Simple Contains" id="77355e3a-b272-403c-a291-be8aa363d386" name="Contains"><con:configuration><token>F_USER.PATIENT_ID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать GUID и patientId" id="0dd29e9d-8d12-468f-92e7-76320edd76f8"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>GUID</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пациента</con:sourceStep><con:sourcePath>//Row[@rowNumber='1']//F_DEVICE.DEVICE_GUID</con:sourcePath><con:targetType>guid</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>patientId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пациента</con:sourceStep><con:sourcePath>//Row[@rowNumber='1']//F_USER.PATIENT_ID</con:sourcePath><con:targetType>patientId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пациента</con:sourceStep><con:sourcePath>//Row[@rowNumber='1']//F_USER.ID</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик" id="1ac5a3d9-8b35-4a17-95f9-f0a349241925"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
def topicBookingRecipeInfoMessage = testRunner.testCase.testSuite.project.getPropertyValue("topicBookingRecipeInfoMessage")
number=(('0'..'9')).shuffled().take(13).join()
header = (('a'..'z')+('A'..'Z')).shuffled().take(15).join()
text = (('a'..'z')+('A'..'Z')).shuffled().take(30).join()
testRunner.testCase.setPropertyValue("number", number)
testRunner.testCase.setPropertyValue("header", header)
testRunner.testCase.setPropertyValue("text", text)
patientId = testRunner.testCase.getPropertyValue("patientId")
log.info topicBookingRecipeInfoMessage

message="""{\n"patientId":""" + patientId + """,\n"prescriptionNumber": \n[\n""" +	number + """\n],\n"messageHeader":"""" +  header + """",\n"messageText":"""" + text  + """"\n}"""
log.info message

scripts.sendMessageToKafka2("topicBookingRecipeInfoMessage",message)</script></con:config></con:testStep><con:testStep type="jdbc" name="Проверить данные в f_notification" id="e601be1c-65a3-45db-b3e1-4507dc4635c8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select * from f_notification fn
where fn.title = '${#TestCase#header}'</con:query><con:assertion type="XPath Match" id="ddef9937-7f37-42b5-a557-3a474915c853" name="Записи не найдены"><con:configuration><path>count(//*:Row)</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>guid</con:name><con:value>97b6a6c6-e066-41e0-bd88-cb0e70643abb</con:value></con:property><con:property><con:name>patientId</con:name><con:value>25503647</con:value></con:property><con:property><con:name>number</con:name><con:value>4350769182</con:value></con:property><con:property><con:name>header</con:name><con:value>PyOboSsBgaqMkRx</con:value></con:property><con:property><con:name>text</con:name><con:value>OAFHUhoYXzDvgRKqSCJpkVscMWlnGZ</con:value></con:property><con:property><con:name>id</con:name><con:value>25</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>3182</con:value></con:property></con:properties></con:testCase><con:testCase id="8f0446fb-a737-4186-b1ad-9d5fca497fdd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. Обработка сообщения о выписанных рецептах, auth = false, deleted = false. ID346654" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Найти пациента" id="08df31c3-b2b4-4b79-a57b-89da7bf9d52c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fd.device_guid, fu.id from f_user fu
inner join f_user_device fud on fud.user_id = fu.id
inner join f_device_settings fds on fds.device_guid = fud.device_guid
inner join f_device fd on fd.device_guid = fud.device_guid
where fud.authentication = false
and fud.deleted = false
and fd.cloud_token_delete is null
and fds.pr_news = true</con:query><con:assertion type="Simple Contains" id="77355e3a-b272-403c-a291-be8aa363d386" name="Contains"><con:configuration><token>F_USER.PATIENT_ID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать GUID и patientId" id="8fdec755-b1f1-43cc-aec6-58e7394ab474"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>GUID</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пациента</con:sourceStep><con:sourcePath>//Row[@rowNumber='1']//F_DEVICE.DEVICE_GUID</con:sourcePath><con:targetType>guid</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>patientId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пациента</con:sourceStep><con:sourcePath>//Row[@rowNumber='1']//F_USER.PATIENT_ID</con:sourcePath><con:targetType>patientId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пациента</con:sourceStep><con:sourcePath>//Row[@rowNumber='1']//F_USER.ID</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик" id="f746b324-5a7d-48ad-b506-6b93432bfc80"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
def topicBookingRecipeInfoMessage = testRunner.testCase.testSuite.project.getPropertyValue("topicBookingRecipeInfoMessage")
number=(('0'..'9')).shuffled().take(13).join()
header = (('a'..'z')+('A'..'Z')).shuffled().take(15).join()
text = (('a'..'z')+('A'..'Z')).shuffled().take(30).join()
testRunner.testCase.setPropertyValue("number", number)
testRunner.testCase.setPropertyValue("header", header)
testRunner.testCase.setPropertyValue("text", text)
patientId = testRunner.testCase.getPropertyValue("patientId")
log.info topicBookingRecipeInfoMessage

message="""{\n"patientId":""" + patientId + """,\n"prescriptionNumber": \n[\n""" +	number + """\n],\n"messageHeader":"""" +  header + """",\n"messageText":"""" + text  + """"\n}"""
log.info message

scripts.sendMessageToKafka2("topicBookingRecipeInfoMessage",message)</script></con:config></con:testStep><con:testStep type="jdbc" name="Проверить данные в f_notification" id="66dd37c1-3f51-442f-9f08-1e7485a2eb97"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select * from f_notification fn
where fn.title = '${#TestCase#header}'</con:query><con:assertion type="XPath Match" id="ddef9937-7f37-42b5-a557-3a474915c853" name="Записи не найдены"><con:configuration><path>count(//*:Row)</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>guid</con:name><con:value>f06fd285-f6f9-4e62-8a1c-b6bce949dcf4</con:value></con:property><con:property><con:name>patientId</con:name><con:value>25503647</con:value></con:property><con:property><con:name>number</con:name><con:value>0263584179</con:value></con:property><con:property><con:name>header</con:name><con:value>vJGbwyFgzLaqnWE</con:value></con:property><con:property><con:name>text</con:name><con:value>oIVbdkLrCJPOUGcKXNfSqMxtaTjigw</con:value></con:property><con:property><con:name>id</con:name><con:value>25</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>3182</con:value></con:property></con:properties></con:testCase><con:testCase id="bc6c3fb9-9eb1-4a04-a039-1a5d3a2a7b27" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. Завершение алгоритма, если patientId не найден. ID346658" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Отправить сообщение в топик" id="eea80651-e87b-42a5-b17a-81f02d395fb1"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
def topicBookingRecipeInfoMessage = testRunner.testCase.testSuite.project.getPropertyValue("topicBookingRecipeInfoMessage")
number=(('0'..'9')).shuffled().take(13).join()
header = (('a'..'z')+('A'..'Z')).shuffled().take(15).join()
text = (('a'..'z')+('A'..'Z')).shuffled().take(30).join()
testRunner.testCase.setPropertyValue("number", number)
testRunner.testCase.setPropertyValue("header", header)
testRunner.testCase.setPropertyValue("text", text)
patientId = testRunner.testCase.getPropertyValue("patientId")
log.info topicBookingRecipeInfoMessage

message="""{\n"patientId":123321,\n"prescriptionNumber": \n[\n""" +	number + """\n],\n"messageHeader":"""" +  header + """",\n"messageText":"""" + text  + """"\n}"""
log.info message

scripts.sendMessageToKafka2("topicBookingRecipeInfoMessage",message)</script></con:config></con:testStep><con:testStep type="jdbc" name="Проверить данные в f_notification" id="e077b09d-5da1-4a11-ab6c-9fa2674ab975"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select * from f_notification fn
where fn.title = '${#TestCase#header}'</con:query><con:assertion type="XPath Match" id="ddef9937-7f37-42b5-a557-3a474915c853" name="Записи не найдены"><con:configuration><path>count(//*:Row)</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>guid</con:name><con:value>f06fd285-f6f9-4e62-8a1c-b6bce949dcf4</con:value></con:property><con:property><con:name>patientId</con:name><con:value>25503647</con:value></con:property><con:property><con:name>number</con:name><con:value>3512674980</con:value></con:property><con:property><con:name>header</con:name><con:value>wDzxTMlcnomBiRH</con:value></con:property><con:property><con:name>text</con:name><con:value>wXZlciFkNrWmdfJusMCEeIoUgvpRPB</con:value></con:property><con:property><con:name>id</con:name><con:value>25</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>3182</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>topicBookingRecipeInfoMessage</con:name><con:value>BookingRecipeInfoMessage</con:value></con:property></con:properties></con:testSuite><con:testSuite id="34155227-b619-4ef1-9212-9891d00dd5a2" name="А_ЕСУ_02 (отправка сообщений без проверки)"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="52f36803-6877-4a7b-872b-263c077ea2b9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправка только с обязательными параметрами. ОС 378211" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Отправить сообщение в топик medicationAssignmentsChangesPerDay" id="d0993589-363a-4cc5-879a-1a6043b69c63"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
def topicMedicationAssignmentChangesPerDay = testRunner.testCase.testSuite.project.getPropertyValue("topicMedicationAssignmentChangesPerDay")
number=(('0'..'9')).shuffled().take(8).join()
testRunner.testCase.setPropertyValue("number", number)
patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
log.info number

message="""{\n"patientId":""" + patientId + """,\n"medicationId": """ +number + """,\n"operationType":"setSchedule"\n}"""
log.info message

mainScripts.kafka().sendMessageToKafka2("topicMedicationAssignmentChangesPerDay",message)</script></con:config></con:testStep><con:properties><con:property><con:name>number</con:name><con:value>54073281</con:value></con:property></con:properties></con:testCase><con:testCase id="10fd9ce3-87a9-413a-8b17-a464f692b26a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправка со всеми необязательными параметрами. ОС 378950" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Отправить сообщение в топик medicationAssignmentsChangesPerDay" id="ca72e8fc-e11a-4afb-aa19-1960b796e482"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
def topicMedicationAssignmentChangesPerDay = testRunner.testCase.testSuite.project.getPropertyValue("topicMedicationAssignmentChangesPerDay")
number=(('1'..'9')).shuffled().take(8).join()
testRunner.testCase.setPropertyValue("number", number)
patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
log.info number
def currentDate = new Date() + 1
def currentTime = currentDate.format("yyyy-MM-dd hh:mm")

message="""{\n"nickname":"Тестовый ник",\n"patientId":""" + patientId + """,\n"timeSlots": [\n{
"status": "null",\n"slotCode": 21,\n"startTime": """" + currentTime + """"\n},\n{
"status": "done",\n"slotCode": 22,\n"startTime": """" + currentTime + """"\n},\n{
"status": "skip",\n"slotCode": 23,\n"startTime": """" + currentTime + """"\n}\n],\n"medicationId": """ +number + """,\n"operationType":"setTakingCourse",
"medicationTitle": "Название препарата тест",\n"singleDose": "2 мг",\n"doseUnit": "милиграмм",\n"mealsConnection": "Во время еды",\n"sleepConnection":"Перед сном"\n}"""
log.info message

mainScripts.kafka().sendMessageToKafka2("topicMedicationAssignmentChangesPerDay",message)</script></con:config></con:testStep><con:properties><con:property><con:name>number</con:name><con:value>83247569</con:value></con:property></con:properties></con:testCase><con:testCase id="e24accc2-4048-40b8-a2a2-7ee491c5a23d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправка для отсутствующего пользователя. ОС 378961" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Отправить сообщение в топик medicationAssignmentsChangesPerDay" id="32deb392-1f20-4a0b-88b5-816e8f95a99f"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
def topicMedicationAssignmentChangesPerDay = testRunner.testCase.testSuite.project.getPropertyValue("topicMedicationAssignmentChangesPerDay")
number=(('0'..'9')).shuffled().take(8).join()
testRunner.testCase.setPropertyValue("number", number)
patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
log.info number

message="""{\n"patientId": 123456789,\n"medicationId": """ +number + """,\n"operationType":"setSchedule"\n}"""
log.info message

mainScripts.kafka().sendMessageToKafka2("topicMedicationAssignmentChangesPerDay",message)</script></con:config></con:testStep><con:properties><con:property><con:name>number</con:name><con:value>39246051</con:value></con:property></con:properties></con:testCase><con:testCase id="c21f2886-3122-4e73-a3fa-27f98dd91244" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправка для пользователя с authentication=false. ОС 378962" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Проставить authentication=false" id="8efcaef8-53bf-4b20-926d-5014ea532263"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>update f_user_device 
set authentication = false 
where id = 68</con:query><con:assertion type="XPath Match" id="260b343b-4dbc-48c2-9cf5-c8a7f28c777b" name="Изменена 1 запись"><con:configuration><path/><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик medicationAssignmentsChangesPerDay" id="3f948642-dca0-442c-8f8d-bfcf0d6ea0e9"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
def topicMedicationAssignmentChangesPerDay = testRunner.testCase.testSuite.project.getPropertyValue("topicMedicationAssignmentChangesPerDay")
number=(('0'..'9')).shuffled().take(8).join()
testRunner.testCase.setPropertyValue("number", number)
patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
log.info number

message="""{\n"patientId":""" + patientId + """,\n"medicationId": """ +number + """,\n"operationType":"setSchedule"\n}"""
log.info message

mainScripts.kafka().sendMessageToKafka2("topicMedicationAssignmentChangesPerDay",message)</script></con:config></con:testStep><con:testStep type="jdbc" name="Вернуть authentication=true" id="c822ec6c-974a-487d-8c8a-7a70425a1758"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>update f_user_device 
set authentication = true
where id = 68</con:query><con:assertion type="XPath Match" id="260b343b-4dbc-48c2-9cf5-c8a7f28c777b" name="Изменена 1 запись"><con:configuration><path/><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>number</con:name><con:value>54073281</con:value></con:property></con:properties></con:testCase><con:testCase id="3bf0c178-11f6-411c-a839-7aaf604f319d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправка для пользователя с deleted=true. ОС 378963" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Проставить deleted=true" id="9eacd829-3fab-402b-8523-52c87ed2ecdb"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>update f_user_device 
set deleted = true 
where id = 68</con:query><con:assertion type="XPath Match" id="260b343b-4dbc-48c2-9cf5-c8a7f28c777b" name="Изменена 1 запись"><con:configuration><path/><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик medicationAssignmentsChangesPerDay" id="bab39eec-9667-4368-84db-108489815820"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
def topicMedicationAssignmentChangesPerDay = testRunner.testCase.testSuite.project.getPropertyValue("topicMedicationAssignmentChangesPerDay")
number=(('0'..'9')).shuffled().take(8).join()
testRunner.testCase.setPropertyValue("number", number)
patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
log.info number

message="""{\n"patientId":""" + patientId + """,\n"medicationId": """ +number + """,\n"operationType":"setSchedule"\n}"""
log.info message

mainScripts.kafka().sendMessageToKafka2("topicMedicationAssignmentChangesPerDay",message)</script></con:config></con:testStep><con:testStep type="jdbc" name="Вернуть deleted=false" id="d72c8b5c-7c53-410b-8caa-e10257a667cd"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>update f_user_device 
set deleted = false
where id = 68</con:query><con:assertion type="XPath Match" id="260b343b-4dbc-48c2-9cf5-c8a7f28c777b" name="Изменена 1 запись"><con:configuration><path/><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>number</con:name><con:value>54073281</con:value></con:property></con:properties></con:testCase><con:testCase id="effe7c73-8b6e-4999-a8d9-fb2de24fd60f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Проверка operationType. ОС 380730" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Отправить сообщение с operationType=deleteSchedule" id="33e3726c-df10-4091-af1b-ae939d508f80"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
def topicMedicationAssignmentChangesPerDay = testRunner.testCase.testSuite.project.getPropertyValue("topicMedicationAssignmentChangesPerDay")
number=(('0'..'9')).shuffled().take(8).join()
testRunner.testCase.setPropertyValue("number", number)
patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
log.info number

message="""{\n"patientId":""" + patientId + """,\n"medicationId": """ +number + """,\n"operationType":"deleteSchedule"\n}"""
log.info message

mainScripts.kafka().sendMessageToKafka2("topicMedicationAssignmentChangesPerDay",message)</script></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение с operationType=endMedication" id="d5c98acc-18c3-43fe-a613-d6532dd0a061"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
def topicMedicationAssignmentChangesPerDay = testRunner.testCase.testSuite.project.getPropertyValue("topicMedicationAssignmentChangesPerDay")
number=(('0'..'9')).shuffled().take(8).join()
testRunner.testCase.setPropertyValue("number", number)
patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
log.info number

message="""{\n"patientId":""" + patientId + """,\n"medicationId": """ +number + """,\n"operationType":"endMedication"\n}"""
log.info message

mainScripts.kafka().sendMessageToKafka2("topicMedicationAssignmentChangesPerDay",message)</script></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение с operationType=deleteMedication" id="3b3326de-0245-4507-abed-66c7796e0767"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
def topicMedicationAssignmentChangesPerDay = testRunner.testCase.testSuite.project.getPropertyValue("topicMedicationAssignmentChangesPerDay")
number=(('0'..'9')).shuffled().take(8).join()
testRunner.testCase.setPropertyValue("number", number)
patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
log.info number

message="""{\n"patientId":""" + patientId + """,\n"medicationId": """ +number + """,\n"operationType":"deleteMedication"\n}"""
log.info message

mainScripts.kafka().sendMessageToKafka2("topicMedicationAssignmentChangesPerDay",message)</script></con:config></con:testStep><con:properties><con:property><con:name>number</con:name><con:value>54073281</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>patientId</con:name><con:value>12003</con:value></con:property></con:properties></con:testSuite><con:testSuite id="96f144ea-c07a-4c10-8c94-aa661459ee33" name="Проверка ошибки EINFOSRV-1851 (ADD)"><con:settings/><con:runType>PARALLELL</con:runType><con:testCase id="6d4f36be-381f-42a2-825e-f6c32d6659bd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ADD ервый запрос" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="USER/ADD" id="833143e8-3093-4db9-b084-e1cc0d43c220"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/user/add" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="USER/ADD" id="2ac0aa9d-a732-4991-8bbf-11077016a84d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request>{
	"patientId": "${#TestSuite#patientId}",
	"omsNumber": "${#TestSuite#omsNumber}",
	"birthDate": "${#TestSuite#birthDate}",
	"platform": "${#TestSuite#platform}",
	"appVersion": "${#TestSuite#appVersion}",
	"deviceCloudId": "${#TestSuite#cloudId}",
	"deviceGuid": "${#TestSuite#guid}"
}</con:request><con:originalUri>http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/user/add</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="37ddb91f-0300-40b3-a5bb-0f5942ea220a" name="Код ответа - 204"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f0b82778-84ba-4db7-8ebd-1bcc2ad288c6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ADD второй запрос" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="USER/ADD" id="a2aea358-36a5-4a87-b524-19f121a67f89"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/user/add" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="USER/ADD" id="2ac0aa9d-a732-4991-8bbf-11077016a84d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request>{
	"patientId": "${#TestSuite#patientId}",
	"omsNumber": "${#TestSuite#omsNumber}",
	"birthDate": "${#TestSuite#birthDate}",
	"platform": "${#TestSuite#platform}",
	"appVersion": "${#TestSuite#appVersion}",
	"deviceCloudId": "${#TestSuite#cloudId}",
	"deviceGuid": "${#TestSuite#guid}"
}</con:request><con:originalUri>http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/user/add</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f5673e43-441e-4fd6-8099-b396d9f0ea37" name="Код ответа - 204"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties><con:property><con:name>patientId</con:name><con:value>1111111</con:value></con:property><con:property><con:name>omsNumber</con:name><con:value>5052210878000000</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>1987-07-16</con:value></con:property><con:property><con:name>platform</con:name><con:value>APPLE</con:value></con:property><con:property><con:name>appVersion</con:name><con:value>1.8.0</con:value></con:property><con:property><con:name>cloudId</con:name><con:value>4244fbab-aa93-4242-833f-7ace4d179e3e</con:value></con:property><con:property><con:name>guid</con:name><con:value>8b5b3044-7750-4d6f-b048-a80b3741ca09</con:value></con:property></con:properties></con:testSuite><con:testSuite id="313577d0-d784-49d8-b6df-5396829559ab" name="Проверка ошибки EINFOSRV-1851 (CHECK)"><con:settings/><con:runType>PARALLELL</con:runType><con:testCase id="54924ed2-4440-4366-9de3-8264f24e0a5c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CHECK первый запрос" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="AUTHENTICATION/CHECK" id="084d98ea-e416-4c57-b791-3a0cb8e5722a"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/user/authentication/check" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AUTHENTICATION/CHECK" id="0f09a5f6-dfd7-426c-b502-7886ed7414ca" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request>{
  "userInformation": [
    {
      "patientId": ${#TestSuite#patientId},
      "omsNumber": "${#TestSuite#omsNumber}",
      "birthDate": "${#TestSuite#birthDate}",
      "authentication": true
    }
  ],
  "deviceGuid": "${#TestSuite#guid}",
  "deviceCloudId": "${#TestSuite#cloudId}",
  "platform": "${#TestSuite#platform}",
  "appVersion": "${#TestSuite#appVersion}"
}</con:request><con:originalUri>http://notification-emiasinfo4.emias.solit-clouds.ru/api/v1/user/authentication/check</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c367e79f-9bd6-4884-a0f7-5511f67c8b6b" name="Код ответа - 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9f7c424f-acf4-40d9-87b0-fa3369da8f99" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CHECK второй запрос" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="AUTHENTICATION/CHECK" id="e12afbce-826f-44f1-9954-fc90f7aa43b3"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/user/authentication/check" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AUTHENTICATION/CHECK" id="0f09a5f6-dfd7-426c-b502-7886ed7414ca" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request>{
  "userInformation": [
    {
      "patientId": ${#TestSuite#patientId},
      "omsNumber": "${#TestSuite#omsNumber}",
      "birthDate": "${#TestSuite#birthDate}",
      "authentication": true
    }
  ],
  "deviceGuid": "${#TestSuite#guid}",
  "deviceCloudId": "${#TestSuite#cloudId}",
  "platform": "${#TestSuite#platform}",
  "appVersion": "${#TestSuite#appVersion}"
}</con:request><con:originalUri>http://notification-emiasinfo4.emias.solit-clouds.ru/api/v1/user/authentication/check</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="605dbea5-37d4-4cfe-ace9-5450e1edad97" name="Код ответа - 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties><con:property><con:name>patientId</con:name><con:value>1111111</con:value></con:property><con:property><con:name>omsNumber</con:name><con:value>5052210878000000</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>1987-07-16</con:value></con:property><con:property><con:name>platform</con:name><con:value>APPLE</con:value></con:property><con:property><con:name>appVersion</con:name><con:value>1.8.0</con:value></con:property><con:property><con:name>cloudId</con:name><con:value>4244fbab-aa93-4242-833f-7ace4d179e3e</con:value></con:property><con:property><con:name>guid</con:name><con:value>8b5b3044-7750-4d6f-b048-a80b3741ca09</con:value></con:property></con:properties></con:testSuite><con:testSuite id="7dd688bf-e5b2-4de5-ab7c-1abae92c3ced" name="А_ЕСУ_01. Формирование f_notification.title и f_notification.description"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="763679e1-ff9d-49ab-bf08-0a0399370d97" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. title и description при f_notification_appointment.status == &quot;CREATE&quot; и is_tmk = NULL (для ЛИ и ЛДП). 382030" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Найти пользователя с устройством" id="7483429a-b56c-4cee-8c01-a6d443163c14"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fd.device_guid, fu.oms_number, fu.birth_date from f_user fu
inner join f_user_device fud on fud.user_id = fu.id
inner join f_device_settings fds on fds.device_guid = fud.device_guid
inner join f_device fd on fd.device_guid = fud.device_guid
where fud.authentication = true
and fud.deleted = false
and fd.cloud_token_delete = false
and fds.appointment = true
LIMIT 1</con:query><con:assertion type="XPath Match" id="f8a19c1f-240c-4126-885c-d601e10ffc0d" name="XPath Match"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать Пациента в проперти" id="a4eb4796-eb69-4aea-9218-d4f76ef44d28"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>patientId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.PATIENT_ID/text()</con:sourcePath><con:targetType>patientId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>oms</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.OMS_NUMBER/text()</con:sourcePath><con:targetType>omsNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>birthDate</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.BIRTH_DATE/text()</con:sourcePath><con:targetType>birthDate</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик Appointment2LDP" id="6b7a7c74-cbc2-4dba-a4eb-5761ecb2fb2a"><con:settings/><con:config><script><![CDATA[def mainScripts = new ScriptLibrary(context, testRunner, log)
def topicAppointment2Ldp = testRunner.testCase.testSuite.project.getPropertyValue("topicAppointment2Ldp") //берет название топика из пропертей проекта

Date date = new Date() + 1
String time = new Date().format("yyyy-MM-dd'T'hh:mm:ss+03:00")
String startTime = date.format("yyyy-MM-dd'T'12:00:00+03:00")
def appointmentIdLdp=(('1'..'9')+('0'..'9')).shuffled().take(12).join()
testRunner.testCase.setPropertyValue("appointmentIdLdp", appointmentIdLdp)
def eventId=(('1'..'9')+('0'..'9')).shuffled().take(11).join()
def patientId=testRunner.testCase.getPropertyValue("patientId")
def omsNumber=testRunner.testCase.getPropertyValue("omsNumber")

message="""<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ns2:esuAppointment xmlns:ns2="http://emias.mos.ru/selfAppointment/selfAppointmentService/v1/">
  <event>
    <id>"""+eventId+"""</id>
    <type>CREATE</type>
    <time>"""+time+"""</time>
    <system>EIM</system>
  </event>
  <patient>
    <id>"""+patientId+"""</id>
    <oms>"""+omsNumber+"""</oms>
    <name12>Алексей Леонидович</name12>
    </patient>
  <appointment>
    <id>"""+appointmentIdLdp+"""</id>
    <startTime>"""+startTime+"""</startTime>
    <endTime>2023-03-21T09:30:00.000+03:00</endTime>
    <number>С20230216-123</number>
  </appointment>
  <availableResource>
    <id>10273890</id>
    <name>Эндокринолог_Земскова_Е.В.</name>
  </availableResource>
  <complexResource>
    <id>60011163</id>
    <number>511</number>
    <address>Москва, улица Декабристов, д. 24</address>
    <roomId>14484700</roomId>
  </complexResource>
  <lpu>
    <id>141</id>
    <shortName>ГБУЗ ГП 107 ДЗМ</shortName>
    <fullName>ГБУЗ г. Москвы "Городская поликлиника № 107 ДЗМ"</fullName>
    <phone>(495) 122-02-21</phone>
  </lpu>
  <ldp>
      <id>204</id>
      <name>F-волна</name>
      <examination>true</examination>
  </ldp>
</ns2:esuAppointment>"""
log.info message

mainScripts.kafka().sendMessageToKafka2("topicAppointment2Ldp",message)]]></script></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик Appointment2BM" id="d907462a-e4ce-4a69-aa77-b891bc6dc996"><con:settings/><con:config><script><![CDATA[def mainScripts = new ScriptLibrary(context, testRunner, log)
def topicAppointment2Bm = testRunner.testCase.testSuite.project.getPropertyValue("topicAppointment2Bm") //берет название топика из пропертей проекта

Date date = new Date() + 1
String time = new Date().format("yyyy-MM-dd'T'hh:mm:ss+03:00")
String startTime = date.format("yyyy-MM-dd'T'12:00:00+03:00")
testRunner.testCase.setPropertyValue("startTime", startTime)

def appointmentIdBm=(('0'..'9')+('0'..'9')).shuffled().take(12).join()
testRunner.testCase.setPropertyValue("appointmentIdBm", appointmentIdBm)
def eventId=(('0'..'9')+('0'..'9')).shuffled().take(11).join()
def patientId=testRunner.testCase.getPropertyValue("patientId")
def omsNumber=testRunner.testCase.getPropertyValue("omsNumber")

message="""<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ns2:esuAppointment xmlns:ns2="http://emias.mos.ru/selfAppointment/selfAppointmentService/v1/">
  <event>
    <id>"""+eventId+"""</id>
    <type>CREATE</type>
    <time>"""+time+"""</time>
    <system>EIM</system>
  </event>
  <patient>
    <id>"""+patientId+"""</id>
    <oms>"""+omsNumber+"""</oms>
    <name12>Алексей Леонидович</name12>
    </patient>
  <appointment>
    <id>"""+appointmentIdBm+"""</id>
    <startTime>"""+startTime+"""</startTime>
    <endTime>2023-03-21T09:30:00.000+03:00</endTime>
    <number>С20230216-123</number>
    <referralId>74390222764</referralId>
  </appointment>
  <availableResource>
    <id>10273890</id>
    <name>Эндокринолог_Земскова_Е.В.</name>
  </availableResource>
  <complexResource>
    <id>60011163</id>
    <number>511</number>
    <address>Москва, улица Декабристов, д. 24</address>
    <roomId>14484700</roomId>
  </complexResource>
  <lpu>
    <id>141</id>
    <shortName>ГБУЗ ГП 107 ДЗМ</shortName>
    <fullName>ГБУЗ г. Москвы "Городская поликлиника № 107 ДЗМ"</fullName>
    <phone>(495) 122-02-21</phone>
  </lpu>
    <samplingType>
        <id>1</id>
        <name>Взятие венозной крови</name>
    </samplingType>
</ns2:esuAppointment>"""
log.info message

mainScripts.kafka().sendMessageToKafka2("topicAppointment2Bm",message)]]></script></con:config></con:testStep><con:testStep type="delay" name="3000" id="ab01a4d4-0f6a-4591-b6ed-bb81501604f0"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="jdbc" name="Найти в бд запись ЛДП" id="37558fa4-6c1d-44e9-8b9a-b490bf49de86"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fn.title, fn.description, fna.ldp_name,
fna.lpu_short_name, fna.cabinet_number, fna.start_date from f_notification_appointment fna
inner join f_notification fn on fna.notification_id=fn.id
where fna.appointment_id = ${#TestCase#appointmentIdLdp}</con:query><con:assertion type="Simple Contains" id="2c878fa4-d889-42a1-ab20-cae027183d29" name="Contains"><con:configuration><token>F_NOTIFICATION.TITLE</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить title и description ЛДП" id="330c89ec-3445-4c47-851b-824d068410e2"><con:settings/><con:config><script>import groovy.xml.XmlSlurper
import java.text.SimpleDateFormat
def responseDB = context.expand('${Найти в бд запись ЛДП#ResponseAsXml}')
response = new XmlSlurper().parseText(responseDB)
String dateTimeFormat="yyyy-MM-dd hh:mm:ss"
def date = new SimpleDateFormat("dd.MM.yy hh:mm")
def ldp = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.LDP_NAME'.toString()
def lpu = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.LPU_SHORT_NAME'.toString()
def cabinet = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.CABINET_NUMBER'.toString()
def parseTime =Date.parse(dateTimeFormat, response.ResultSet.Row.'F_NOTIFICATION_APPOINTMENT.START_DATE'.text())
def startTime = date.format(parseTime).toString()

def title = response.ResultSet.Row[0].'F_NOTIFICATION.TITLE'.toString()
def description = response.ResultSet.Row[0].'F_NOTIFICATION.DESCRIPTION'
log.info description
assert title == 'Запись на исследование/процедуру'
assert description == 'Вы записаны ' + ldp + ', ' + lpu + ', каб. ' + cabinet + ', ' + startTime</script></con:config></con:testStep><con:testStep type="jdbc" name="Найти в бд запись БМ" id="630316a8-0b19-4959-a7a2-685b677ccad9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fn.title, fn.description, fna.sampling_type,
fna.lpu_short_name, fna.cabinet_number, fna.start_date from f_notification_appointment fna
inner join f_notification fn on fna.notification_id=fn.id
where fna.appointment_id = ${#TestCase#appointmentIdBm}</con:query><con:assertion type="Simple Contains" id="a3bf2174-a979-49e8-ad77-a992bd14fdaa" name="Contains"><con:configuration><token>F_NOTIFICATION.TITLE</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить title и description БМ" id="1d8bb2f6-e6d8-4f0f-aa08-9fad083d18f9"><con:settings/><con:config><script>import groovy.xml.XmlSlurper
import java.text.SimpleDateFormat
def responseDB = context.expand('${Найти в бд запись БМ#ResponseAsXml}')
response = new XmlSlurper().parseText(responseDB)
String dateTimeFormat="yyyy-MM-dd hh:mm:ss"
def date = new SimpleDateFormat("dd.MM.yy hh:mm")
def ST = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.SAMPLING_TYPE'.toString()
def lpu = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.LPU_SHORT_NAME'.toString()
def cabinet = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.CABINET_NUMBER'.toString()
def parseTime =Date.parse(dateTimeFormat, response.ResultSet.Row.'F_NOTIFICATION_APPOINTMENT.START_DATE'.text())
def startTime = date.format(parseTime).toString()

def title = response.ResultSet.Row[0].'F_NOTIFICATION.TITLE'.toString()
def description = response.ResultSet.Row[0].'F_NOTIFICATION.DESCRIPTION'
log.info description
assert title == 'Запись на ' + ST
assert description == 'Вы записаны ' + ST + ', ' + lpu + ', каб. ' + cabinet + ', ' + startTime</script></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>12300</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>2012-06-07</con:value></con:property><con:property><con:name>omsNumber</con:name><con:value>100000000000</con:value></con:property><con:property><con:name>appointmentIdLdp</con:name><con:value>246729543130</con:value></con:property><con:property><con:name>appointmentIdBm</con:name><con:value>471627652993</con:value></con:property><con:property><con:name>startTime</con:name><con:value>2024-01-20T12:00:00+03:00</con:value></con:property></con:properties></con:testCase><con:testCase id="bc94e7e3-d4b5-438a-b894-62d2324f5334" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. title и description при f_notification_appointment.status == &quot;CREATE&quot; и is_tmk = true. 382044" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Найти специальность врача" id="5241f84c-cac9-4f5c-9505-692eb5b6b0ad"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select code_reception_type from d_reception_type_tmk_code
where archived_reception_type = false
and is_deleted = false
LIMIT 1</con:query><con:assertion type="XPath Match" id="3a204ed8-0218-47bf-9404-0f6a71156c34" name="XPath Match"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Найти пользователя с устройством" id="2ee89451-f42d-493d-ab46-619ce244d31b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fd.device_guid, fu.oms_number, fu.birth_date from f_user fu
inner join f_user_device fud on fud.user_id = fu.id
inner join f_device_settings fds on fds.device_guid = fud.device_guid
inner join f_device fd on fd.device_guid = fud.device_guid
where fud.authentication = true
and fud.deleted = false
and fd.cloud_token_delete = false
and fds.appointment = true
LIMIT 1</con:query><con:assertion type="XPath Match" id="08be2289-d128-4510-8523-2a818558ef4f" name="XPath Match"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать Пациента и специальность в проперти" id="6a1feb59-0c87-4a70-be74-56d6f0907b10"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>patientId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.PATIENT_ID/text()</con:sourcePath><con:targetType>patientId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>oms</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.OMS_NUMBER/text()</con:sourcePath><con:targetType>omsNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>birthDate</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.BIRTH_DATE/text()</con:sourcePath><con:targetType>birthDate</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>receptionTypeId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти специальность врача</con:sourceStep><con:sourcePath>//*:D_RECEPTION_TYPE_TMK_CODE.CODE_RECEPTION_TYPE/text()</con:sourcePath><con:targetType>receptionTypeId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик Appointment2Doctor" id="0cd9fbd9-e75d-4a05-8022-21d06deba9f0"><con:settings/><con:config><script><![CDATA[def mainScripts = new ScriptLibrary(context, testRunner, log)
def topicAppointment2Doctor = testRunner.testCase.testSuite.project.getPropertyValue("topicAppointment2Doctor") //берет название топика из пропертей проекта

Date date = new Date() + 1
String time = new Date().format("yyyy-MM-dd'T'hh:mm:ss+03:00")
String startTime = date.format("yyyy-MM-dd'T'12:00:00+03:00")
def appointmentIdDoctor=(('1'..'9')+('0'..'9')).shuffled().take(12).join()
testRunner.testCase.setPropertyValue("appointmentIdDoctor", appointmentIdDoctor)
def eventId=(('1'..'9')+('0'..'9')).shuffled().take(11).join()
def patientId=testRunner.testCase.getPropertyValue("patientId")
def omsNumber=testRunner.testCase.getPropertyValue("omsNumber")
def RTI=testRunner.testCase.getPropertyValue("receptionTypeId")

message="""<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ns2:esuAppointment xmlns:ns2="http://emias.mos.ru/selfAppointment/selfAppointmentService/v1/">
  <event>
    <id>"""+eventId+"""</id>
    <type>CREATE</type>
    <time>"""+time+"""</time>
    <system>EIM</system>
  </event>
  <patient>
    <id>"""+patientId+"""</id>
    <oms>"""+omsNumber+"""</oms>
    <name12>Алексей Леонидович</name12>
    </patient>
  <appointment>
    <id>"""+appointmentIdDoctor+"""</id>
    <startTime>"""+startTime+"""</startTime>
        <endTime>2024-01-18T18:30:00+03:00</endTime>
        <number>С20240118-188</number>
        <speciality>
            <id>602</id>
            <name>Врач-терапевт участковый</name>
        </speciality>
    </appointment>
    <availableResource>
        <id>20736919037</id>
        <name>Не трогать_Сабецкий Р. Ю. &lt;217&gt;</name>
    </availableResource>
    <complexResource>
        <id>244071438</id>
        <number>ТМК 12</number>
        <address>Москва, внутригородская территория поселение Филимонковское, деревня Верхнее Валуево, 5-я Валуевская улица, д. 20</address>
        <roomId>30680723</roomId>
    </complexResource>
    <lpu>
        <id>204</id>
        <shortName>ГБУЗ ГП 175 ДЗМ</shortName>
        <fullName>ГБУЗ ГП №175 ДЗМ</fullName>
        <phone>(495) 122-02-21</phone>
        <mainLpuId>204</mainLpuId>
    </lpu>
    <doctor>
        <lastName>Сабецкий</lastName>
        <firstName>Роман</firstName>
        <middleName>Юрьевич</middleName>
        <speciality>
            <id>602</id>
            <name>Врач-терапевт участковый</name>
        </speciality>
        <receptionTypeId>"""+RTI+"""</receptionTypeId>
    </doctor>
</ns2:esuAppointment>"""
log.info message

mainScripts.kafka().sendMessageToKafka2("topicAppointment2Doctor",message)]]></script></con:config></con:testStep><con:testStep type="delay" name="3000" id="c9c13b65-a771-451a-8bbd-f9c83a3a1b14"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="jdbc" name="Найти в бд запись консультации" id="0f61840d-337a-4625-8d73-cda02d507241"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fn.title, fn.description, fna.speciality_name, fna.doctor_short_name,
fna.lpu_short_name, fna.cabinet_number, fna.start_date from f_notification_appointment fna
inner join f_notification fn on fna.notification_id=fn.id
where fna.appointment_id = ${#TestCase#appointmentIdDoctor}</con:query><con:assertion type="Simple Contains" id="a3bf2174-a979-49e8-ad77-a992bd14fdaa" name="Contains"><con:configuration><token>F_NOTIFICATION.TITLE</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить title и description консультации" id="38c3e167-a208-45d8-98b6-25d799022fca"><con:settings/><con:config><script>import groovy.xml.XmlSlurper
import java.text.SimpleDateFormat
def responseDB = context.expand('${Найти в бд запись консультации#ResponseAsXml}')
response = new XmlSlurper().parseText(responseDB)
String dateTimeFormat="yyyy-MM-dd hh:mm:ss"
def date = new SimpleDateFormat("dd.MM.yy hh:mm")
def speciality = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.SPECIALITY_NAME'.toString()
def doctorShortName = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.DOCTOR_SHORT_NAME'.toString()
def lpu = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.LPU_SHORT_NAME'.toString()
def parseTime =Date.parse(dateTimeFormat, response.ResultSet.Row.'F_NOTIFICATION_APPOINTMENT.START_DATE'.text())
def startTime = date.format(parseTime).toString()

def title = response.ResultSet.Row[0].'F_NOTIFICATION.TITLE'.toString()
def description = response.ResultSet.Row[0].'F_NOTIFICATION.DESCRIPTION'
log.info description
assert title == 'Запись на онлайн консультацию'
assert description == 'Вы записаны на онлайн-консультацию: ' + speciality + ', ' + doctorShortName + ', ' + startTime</script></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>12300</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>2012-06-07</con:value></con:property><con:property><con:name>omsNumber</con:name><con:value>100000000000</con:value></con:property><con:property><con:name>appointmentIdDoctor</con:name><con:value>818446237055</con:value></con:property><con:property><con:name>receptionTypeId</con:name><con:value>1626</con:value></con:property></con:properties></con:testCase><con:testCase id="1db0b87c-a34e-47ed-8756-44f81b1e46c5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. title и description при f_notification_appointment.status == &quot;CREATE&quot; и is_tmk = NULL (для консультации). 382048" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Найти пользователя с устройством" id="0cebf053-9630-4485-8b15-171cbf6e46dd"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fd.device_guid, fu.oms_number, fu.birth_date from f_user fu
inner join f_user_device fud on fud.user_id = fu.id
inner join f_device_settings fds on fds.device_guid = fud.device_guid
inner join f_device fd on fd.device_guid = fud.device_guid
where fud.authentication = true
and fud.deleted = false
and fd.cloud_token_delete = false
and fds.appointment = true
LIMIT 1</con:query><con:assertion type="XPath Match" id="a75b1d9a-910f-4762-8594-cf2e9e2cf1d5" name="XPath Match"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать Пациента в проперти" id="7d52f3aa-3a17-4cbd-b857-3bac1c0f29f9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>patientId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.PATIENT_ID/text()</con:sourcePath><con:targetType>patientId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>oms</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.OMS_NUMBER/text()</con:sourcePath><con:targetType>omsNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>birthDate</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.BIRTH_DATE/text()</con:sourcePath><con:targetType>birthDate</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик Appointment2Doctor" id="934c55b4-12a6-4a8e-806c-321174248bd2"><con:settings/><con:config><script><![CDATA[def mainScripts = new ScriptLibrary(context, testRunner, log)
def topicAppointment2Doctor = testRunner.testCase.testSuite.project.getPropertyValue("topicAppointment2Doctor") //берет название топика из пропертей проекта

Date date = new Date() + 1
String time = new Date().format("yyyy-MM-dd'T'hh:mm:ss+03:00")
String startTime = date.format("yyyy-MM-dd'T'12:00:00+03:00")
def appointmentIdDoctor=(('1'..'9')+('0'..'9')).shuffled().take(12).join()
testRunner.testCase.setPropertyValue("appointmentIdDoctor", appointmentIdDoctor)
def eventId=(('1'..'9')+('0'..'9')).shuffled().take(11).join()
def patientId=testRunner.testCase.getPropertyValue("patientId")
def omsNumber=testRunner.testCase.getPropertyValue("omsNumber")

message="""<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ns2:esuAppointment xmlns:ns2="http://emias.mos.ru/selfAppointment/selfAppointmentService/v1/">
  <event>
    <id>"""+eventId+"""</id>
    <type>CREATE</type>
    <time>"""+time+"""</time>
    <system>EIM</system>
  </event>
  <patient>
    <id>"""+patientId+"""</id>
    <oms>"""+omsNumber+"""</oms>
    <name12>Алексей Леонидович</name12>
    </patient>
  <appointment>
    <id>"""+appointmentIdDoctor+"""</id>
    <startTime>"""+startTime+"""</startTime>
        <endTime>2024-01-18T18:30:00+03:00</endTime>
        <number>С20240118-188</number>
        <speciality>
            <id>602</id>
            <name>Врач-терапевт участковый</name>
        </speciality>
    </appointment>
    <availableResource>
        <id>20736919037</id>
        <name>Не трогать_Сабецкий Р. Ю. &lt;217&gt;</name>
    </availableResource>
    <complexResource>
        <id>244071438</id>
        <number>ТМК 12</number>
        <address>Москва, внутригородская территория поселение Филимонковское, деревня Верхнее Валуево, 5-я Валуевская улица, д. 20</address>
        <roomId>30680723</roomId>
    </complexResource>
    <lpu>
        <id>204</id>
        <shortName>ГБУЗ ГП 175 ДЗМ</shortName>
        <fullName>ГБУЗ ГП №175 ДЗМ</fullName>
        <phone>(495) 122-02-21</phone>
        <mainLpuId>204</mainLpuId>
    </lpu>
    <doctor>
        <lastName>Сабецкий</lastName>
        <firstName>Роман</firstName>
        <middleName>Юрьевич</middleName>
        <speciality>
            <id>602</id>
            <name>Врач-терапевт участковый</name>
        </speciality>
        <receptionTypeId>12345</receptionTypeId>
    </doctor>
</ns2:esuAppointment>"""
log.info message

mainScripts.kafka().sendMessageToKafka2("topicAppointment2Doctor",message)]]></script></con:config></con:testStep><con:testStep type="delay" name="3000" id="609d850c-3e17-4c75-aad2-40498472f4bd"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="jdbc" name="Найти в бд запись консультации" id="f1ba160f-76e3-4252-8faf-154418c7992f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fn.title, fn.description, fna.speciality_name, fna.doctor_short_name,
fna.lpu_short_name, fna.cabinet_number, fna.start_date from f_notification_appointment fna
inner join f_notification fn on fna.notification_id=fn.id
where fna.appointment_id = ${#TestCase#appointmentIdDoctor}</con:query><con:assertion type="Simple Contains" id="a3bf2174-a979-49e8-ad77-a992bd14fdaa" name="Contains"><con:configuration><token>F_NOTIFICATION.TITLE</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить title и description консультации" id="eb0159e1-5339-47f0-88eb-c050ace69cbc"><con:settings/><con:config><script>import groovy.xml.XmlSlurper
import java.text.SimpleDateFormat
def responseDB = context.expand('${Найти в бд запись консультации#ResponseAsXml}')
response = new XmlSlurper().parseText(responseDB)
String dateTimeFormat="yyyy-MM-dd hh:mm:ss"
def date = new SimpleDateFormat("dd.MM.yy hh:mm")
def speciality = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.SPECIALITY_NAME'.toString()
def doctorShortName = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.DOCTOR_SHORT_NAME'.toString()
def lpu = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.LPU_SHORT_NAME'.toString()
def cabinet = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.CABINET_NUMBER'.toString()
def parseTime =Date.parse(dateTimeFormat, response.ResultSet.Row.'F_NOTIFICATION_APPOINTMENT.START_DATE'.text())
def startTime = date.format(parseTime).toString()

def title = response.ResultSet.Row[0].'F_NOTIFICATION.TITLE'.toString()
def description = response.ResultSet.Row[0].'F_NOTIFICATION.DESCRIPTION'
log.info description
assert title == 'Запись на прием к врачу'
assert description == 'Вы записаны ' + speciality + ', ' + doctorShortName + ', ' + lpu + ', каб. ' + cabinet + ', ' + startTime</script></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>12300</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>2012-06-07</con:value></con:property><con:property><con:name>omsNumber</con:name><con:value>100000000000</con:value></con:property><con:property><con:name>appointmentIdDoctor</con:name><con:value>346924805578</con:value></con:property></con:properties></con:testCase><con:testCase id="ad9df9f8-f57f-4a5c-8dc5-fa66bd88e119" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. title и description при f_notification_appointment.status == &quot;CHANGE&quot; и is_tmk = NULL (для ЛИ и ЛДП). 382073" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Найти пользователя с устройством" id="dd4950ab-d07a-4100-8cd7-822cc1c10f66"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fd.device_guid, fu.oms_number, fu.birth_date from f_user fu
inner join f_user_device fud on fud.user_id = fu.id
inner join f_device_settings fds on fds.device_guid = fud.device_guid
inner join f_device fd on fd.device_guid = fud.device_guid
where fud.authentication = true
and fud.deleted = false
and fd.cloud_token_delete = false
and fds.appointment = true
LIMIT 1</con:query><con:assertion type="XPath Match" id="e04fc061-1732-4f4e-bc8e-84acbbb26edb" name="XPath Match"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать Пациента в проперти" id="3f1fce56-e124-4457-9ec2-851d2636b921"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>patientId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.PATIENT_ID/text()</con:sourcePath><con:targetType>patientId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>oms</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.OMS_NUMBER/text()</con:sourcePath><con:targetType>omsNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>birthDate</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.BIRTH_DATE/text()</con:sourcePath><con:targetType>birthDate</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик Appointment2LDP" id="eac92f6e-ea45-4a67-83a8-cab8f41df8ad"><con:settings/><con:config><script><![CDATA[def mainScripts = new ScriptLibrary(context, testRunner, log)
def topicAppointment2Ldp = testRunner.testCase.testSuite.project.getPropertyValue("topicAppointment2Ldp") //берет название топика из пропертей проекта

Date date = new Date() + 1
String time = new Date().format("yyyy-MM-dd'T'hh:mm:ss+03:00")
String startTime = date.format("yyyy-MM-dd'T'12:00:00+03:00")
def appointmentIdLdp=(('1'..'9')+('0'..'9')).shuffled().take(12).join()
testRunner.testCase.setPropertyValue("appointmentIdLdp", appointmentIdLdp)
def eventId=(('1'..'9')+('0'..'9')).shuffled().take(11).join()
def patientId=testRunner.testCase.getPropertyValue("patientId")
def omsNumber=testRunner.testCase.getPropertyValue("omsNumber")

message="""<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ns2:esuAppointment xmlns:ns2="http://emias.mos.ru/selfAppointment/selfAppointmentService/v1/">
  <event>
    <id>"""+eventId+"""</id>
    <type>CHANGE</type>
    <time>"""+time+"""</time>
    <system>EIM</system>
  </event>
  <patient>
    <id>"""+patientId+"""</id>
    <oms>"""+omsNumber+"""</oms>
    <name12>Алексей Леонидович</name12>
    </patient>
  <appointment>
    <id>"""+appointmentIdLdp+"""</id>
    <startTime>"""+startTime+"""</startTime>
    <endTime>2023-03-21T09:30:00.000+03:00</endTime>
    <number>С20230216-123</number>
    <referralId>74390222764</referralId>
  </appointment>
  <availableResource>
    <id>10273890</id>
    <name>Эндокринолог_Земскова_Е.В.</name>
  </availableResource>
  <complexResource>
    <id>60011163</id>
    <number>511</number>
    <address>Москва, улица Декабристов, д. 24</address>
    <roomId>14484700</roomId>
  </complexResource>
  <lpu>
    <id>141</id>
    <shortName>ГБУЗ ГП 107 ДЗМ</shortName>
    <fullName>ГБУЗ г. Москвы "Городская поликлиника № 107 ДЗМ"</fullName>
    <phone>(495) 122-02-21</phone>
  </lpu>
  <ldp>
      <id>204</id>
      <name>F-волна</name>
      <examination>true</examination>
  </ldp>
</ns2:esuAppointment>"""
log.info message

mainScripts.kafka().sendMessageToKafka2("topicAppointment2Ldp",message)]]></script></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик Appointment2BM" id="5399f363-1fd6-4739-a23e-3f67ef1e636e"><con:settings/><con:config><script><![CDATA[def mainScripts = new ScriptLibrary(context, testRunner, log)
def topicAppointment2Bm = testRunner.testCase.testSuite.project.getPropertyValue("topicAppointment2Bm") //берет название топика из пропертей проекта

Date date = new Date() + 1
String time = new Date().format("yyyy-MM-dd'T'hh:mm:ss+03:00")
String startTime = date.format("yyyy-MM-dd'T'12:00:00+03:00")

def appointmentIdBm=(('1'..'9')+('0'..'9')).shuffled().take(12).join()
testRunner.testCase.setPropertyValue("appointmentIdBm", appointmentIdBm)
def eventId=(('1'..'9')+('0'..'9')).shuffled().take(11).join()
def patientId=testRunner.testCase.getPropertyValue("patientId")
def omsNumber=testRunner.testCase.getPropertyValue("omsNumber")

message="""<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ns2:esuAppointment xmlns:ns2="http://emias.mos.ru/selfAppointment/selfAppointmentService/v1/">
  <event>
    <id>"""+eventId+"""</id>
    <type>CHANGE</type>
    <time>"""+time+"""</time>
    <system>EIM</system>
  </event>
  <patient>
    <id>"""+patientId+"""</id>
    <oms>"""+omsNumber+"""</oms>
    <name12>Алексей Леонидович</name12>
    </patient>
  <appointment>
    <id>"""+appointmentIdBm+"""</id>
    <startTime>"""+startTime+"""</startTime>
    <endTime>2023-03-21T09:30:00.000+03:00</endTime>
    <number>С20230216-123</number>
    <referralId>74390222764</referralId>
  </appointment>
  <availableResource>
    <id>10273890</id>
    <name>Эндокринолог_Земскова_Е.В.</name>
  </availableResource>
  <complexResource>
    <id>60011163</id>
    <number>511</number>
    <address>Москва, улица Декабристов, д. 24</address>
    <roomId>14484700</roomId>
  </complexResource>
  <lpu>
    <id>141</id>
    <shortName>ГБУЗ ГП 107 ДЗМ</shortName>
    <fullName>ГБУЗ г. Москвы "Городская поликлиника № 107 ДЗМ"</fullName>
    <phone>(495) 122-02-21</phone>
  </lpu>
    <samplingType>
        <id>1</id>
        <name>Взятие венозной крови</name>
    </samplingType>
</ns2:esuAppointment>"""
log.info message

mainScripts.kafka().sendMessageToKafka2("topicAppointment2Bm",message)]]></script></con:config></con:testStep><con:testStep type="delay" name="3000" id="74ab85e0-4837-46f1-aee9-996d6162103d"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="jdbc" name="Найти в бд запись ЛДП" id="67606ce6-5d60-4ef3-9853-8f9162538d5d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fn.title, fn.description, fna.ldp_name,
fna.lpu_short_name, fna.cabinet_number, fna.start_date from f_notification_appointment fna
inner join f_notification fn on fna.notification_id=fn.id
where fna.appointment_id = ${#TestCase#appointmentIdLdp}</con:query><con:assertion type="Simple Contains" id="2c878fa4-d889-42a1-ab20-cae027183d29" name="Contains"><con:configuration><token>F_NOTIFICATION.TITLE</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить title и description ЛДП" id="9b9c9838-1feb-4bdf-a90c-afd751df2acc"><con:settings/><con:config><script>import groovy.xml.XmlSlurper
import java.text.SimpleDateFormat
def responseDB = context.expand('${Найти в бд запись ЛДП#ResponseAsXml}')
response = new XmlSlurper().parseText(responseDB)
String dateTimeFormat="yyyy-MM-dd hh:mm:ss"
def date = new SimpleDateFormat("dd.MM.yy hh:mm")
def ldp = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.LDP_NAME'.toString()
def lpu = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.LPU_SHORT_NAME'.toString()
def cabinet = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.CABINET_NUMBER'.toString()
def parseTime =Date.parse(dateTimeFormat, response.ResultSet.Row.'F_NOTIFICATION_APPOINTMENT.START_DATE'.text())
def startTime = date.format(parseTime).toString()

def title = response.ResultSet.Row[0].'F_NOTIFICATION.TITLE'.toString()
def description = response.ResultSet.Row[0].'F_NOTIFICATION.DESCRIPTION'
log.info description
assert title == 'Запись на исследование/процедуру'
assert description == 'Запись изменена ' + ldp + ', ' + lpu + ', каб. ' + cabinet + ', ' + startTime</script></con:config></con:testStep><con:testStep type="jdbc" name="Найти в бд запись БМ" id="d49e506e-49b3-4694-8421-4cc7f6df337d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fn.title, fn.description, fna.sampling_type,
fna.lpu_short_name, fna.cabinet_number, fna.start_date from f_notification_appointment fna
inner join f_notification fn on fna.notification_id=fn.id
where fna.appointment_id = ${#TestCase#appointmentIdBm}</con:query><con:assertion type="Simple Contains" id="a3bf2174-a979-49e8-ad77-a992bd14fdaa" name="Contains"><con:configuration><token>F_NOTIFICATION.TITLE</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить title и description БМ" id="0f30ac79-6a47-42a8-bd5e-3ae6084e2dd5"><con:settings/><con:config><script>import groovy.xml.XmlSlurper
import java.text.SimpleDateFormat
def responseDB = context.expand('${Найти в бд запись БМ#ResponseAsXml}')
response = new XmlSlurper().parseText(responseDB)
String dateTimeFormat="yyyy-MM-dd hh:mm:ss"
def date = new SimpleDateFormat("dd.MM.yy hh:mm")
def ST = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.SAMPLING_TYPE'.toString()
def lpu = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.LPU_SHORT_NAME'.toString()
def cabinet = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.CABINET_NUMBER'.toString()
def parseTime =Date.parse(dateTimeFormat, response.ResultSet.Row.'F_NOTIFICATION_APPOINTMENT.START_DATE'.text())
def startTime = date.format(parseTime).toString()

def title = response.ResultSet.Row[0].'F_NOTIFICATION.TITLE'.toString()
def description = response.ResultSet.Row[0].'F_NOTIFICATION.DESCRIPTION'
log.info description
assert title == 'Запись на ' + ST
assert description == 'Запись изменена ' + ST + ', ' + lpu + ', каб. ' + cabinet + ', ' + startTime</script></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>12300</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>2012-06-07</con:value></con:property><con:property><con:name>omsNumber</con:name><con:value>100000000000</con:value></con:property><con:property><con:name>appointmentIdLdp</con:name><con:value>043841965278</con:value></con:property><con:property><con:name>appointmentIdBm</con:name><con:value>676312405501</con:value></con:property></con:properties></con:testCase><con:testCase id="0991f9df-4144-4f25-bf02-d356d854e9a4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. title и description при f_notification_appointment.status == &quot;CHANGE&quot; и is_tmk = true. 382072" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Найти специальность врача" id="66b3e900-8668-405f-8dca-ad4cef522cdf"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select code_reception_type from d_reception_type_tmk_code
where archived_reception_type = false
and is_deleted = false
LIMIT 1</con:query><con:assertion type="XPath Match" id="3a204ed8-0218-47bf-9404-0f6a71156c34" name="XPath Match"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Найти пользователя с устройством" id="f37ce26c-a974-4600-9094-1ae3b084f0b1"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fd.device_guid, fu.oms_number, fu.birth_date from f_user fu
inner join f_user_device fud on fud.user_id = fu.id
inner join f_device_settings fds on fds.device_guid = fud.device_guid
inner join f_device fd on fd.device_guid = fud.device_guid
where fud.authentication = true
and fud.deleted = false
and fd.cloud_token_delete = false
and fds.appointment = true
LIMIT 1</con:query><con:assertion type="XPath Match" id="08be2289-d128-4510-8523-2a818558ef4f" name="XPath Match"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать Пациента и специальность в проперти" id="45c58cf4-aeff-4dce-85b2-5b4635043dae"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>patientId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.PATIENT_ID/text()</con:sourcePath><con:targetType>patientId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>oms</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.OMS_NUMBER/text()</con:sourcePath><con:targetType>omsNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>birthDate</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.BIRTH_DATE/text()</con:sourcePath><con:targetType>birthDate</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>receptionTypeId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти специальность врача</con:sourceStep><con:sourcePath>//*:D_RECEPTION_TYPE_TMK_CODE.CODE_RECEPTION_TYPE/text()</con:sourcePath><con:targetType>receptionTypeId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик Appointment2Doctor" id="94118185-6c53-4d19-bf59-c1a6e9fd3337"><con:settings/><con:config><script><![CDATA[def mainScripts = new ScriptLibrary(context, testRunner, log)
def topicAppointment2Doctor = testRunner.testCase.testSuite.project.getPropertyValue("topicAppointment2Doctor") //берет название топика из пропертей проекта

Date date = new Date() + 1
String time = new Date().format("yyyy-MM-dd'T'hh:mm:ss+03:00")
String startTime = date.format("yyyy-MM-dd'T'12:00:00+03:00")
def appointmentIdDoctor=(('1'..'9')+('0'..'9')).shuffled().take(12).join()
testRunner.testCase.setPropertyValue("appointmentIdDoctor", appointmentIdDoctor)
def eventId=(('1'..'9')+('0'..'9')).shuffled().take(11).join()
def patientId=testRunner.testCase.getPropertyValue("patientId")
def omsNumber=testRunner.testCase.getPropertyValue("omsNumber")
def RTI=testRunner.testCase.getPropertyValue("receptionTypeId")

message="""<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ns2:esuAppointment xmlns:ns2="http://emias.mos.ru/selfAppointment/selfAppointmentService/v1/">
  <event>
    <id>"""+eventId+"""</id>
    <type>CHANGE</type>
    <time>"""+time+"""</time>
    <system>EIM</system>
  </event>
  <patient>
    <id>"""+patientId+"""</id>
    <oms>"""+omsNumber+"""</oms>
    <name12>Алексей Леонидович</name12>
    </patient>
  <appointment>
    <id>"""+appointmentIdDoctor+"""</id>
    <startTime>"""+startTime+"""</startTime>
        <endTime>2024-01-18T18:30:00+03:00</endTime>
        <number>С20240118-188</number>
        <speciality>
            <id>602</id>
            <name>Врач-терапевт участковый</name>
        </speciality>
    </appointment>
    <availableResource>
        <id>20736919037</id>
        <name>Не трогать_Сабецкий Р. Ю. &lt;217&gt;</name>
    </availableResource>
    <complexResource>
        <id>244071438</id>
        <number>ТМК 12</number>
        <address>Москва, внутригородская территория поселение Филимонковское, деревня Верхнее Валуево, 5-я Валуевская улица, д. 20</address>
        <roomId>30680723</roomId>
    </complexResource>
    <lpu>
        <id>204</id>
        <shortName>ГБУЗ ГП 175 ДЗМ</shortName>
        <fullName>ГБУЗ ГП №175 ДЗМ</fullName>
        <phone>(495) 122-02-21</phone>
        <mainLpuId>204</mainLpuId>
    </lpu>
    <doctor>
        <lastName>Сабецкий</lastName>
        <firstName>Роман</firstName>
        <middleName>Юрьевич</middleName>
        <speciality>
            <id>602</id>
            <name>Врач-терапевт участковый</name>
        </speciality>
        <receptionTypeId>"""+RTI+"""</receptionTypeId>
    </doctor>
</ns2:esuAppointment>"""
log.info message

mainScripts.kafka().sendMessageToKafka2("topicAppointment2Doctor",message)]]></script></con:config></con:testStep><con:testStep type="delay" name="3000" id="5d18bd6a-ebdc-4418-a888-59600aebac2c"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="jdbc" name="Найти в бд запись консультации" id="8b7c7390-7d04-4095-a308-3592b4eaafe7"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fn.title, fn.description, fna.speciality_name, fna.doctor_short_name,
fna.lpu_short_name, fna.cabinet_number, fna.start_date from f_notification_appointment fna
inner join f_notification fn on fna.notification_id=fn.id
where fna.appointment_id = ${#TestCase#appointmentIdDoctor}</con:query><con:assertion type="Simple Contains" id="a3bf2174-a979-49e8-ad77-a992bd14fdaa" name="Contains"><con:configuration><token>F_NOTIFICATION.TITLE</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить title и description консультации" id="224cd780-d4de-43c4-a191-4c4ace65385d"><con:settings/><con:config><script>import groovy.xml.XmlSlurper
import java.text.SimpleDateFormat
def responseDB = context.expand('${Найти в бд запись консультации#ResponseAsXml}')
response = new XmlSlurper().parseText(responseDB)
String dateTimeFormat="yyyy-MM-dd hh:mm:ss"
def date = new SimpleDateFormat("dd.MM.yy hh:mm")
def speciality = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.SPECIALITY_NAME'.toString()
def doctorShortName = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.DOCTOR_SHORT_NAME'.toString()
def lpu = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.LPU_SHORT_NAME'.toString()
def parseTime =Date.parse(dateTimeFormat, response.ResultSet.Row.'F_NOTIFICATION_APPOINTMENT.START_DATE'.text())
def startTime = date.format(parseTime).toString()

def title = response.ResultSet.Row[0].'F_NOTIFICATION.TITLE'.toString()
def description = response.ResultSet.Row[0].'F_NOTIFICATION.DESCRIPTION'
log.info description
assert title == 'Изменение записи на онлайн-консультацию к врачу'
assert description == 'Запись на онлайн-консультацию изменена: ' + speciality + ', ' + doctorShortName + ', ' + startTime</script></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>12300</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>2012-06-07</con:value></con:property><con:property><con:name>omsNumber</con:name><con:value>100000000000</con:value></con:property><con:property><con:name>appointmentIdDoctor</con:name><con:value>862349757215</con:value></con:property><con:property><con:name>receptionTypeId</con:name><con:value>1626</con:value></con:property></con:properties></con:testCase><con:testCase id="0d05adbb-e26d-4fd9-ad23-6e407573f7df" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. title и description при f_notification_appointment.status == &quot;CHANGE&quot; и is_tmk = NULL (для консультации). 382074" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Найти пользователя с устройством" id="36b196c6-3ecd-414c-82f4-b2b2382f7c48"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fd.device_guid, fu.oms_number, fu.birth_date from f_user fu
inner join f_user_device fud on fud.user_id = fu.id
inner join f_device_settings fds on fds.device_guid = fud.device_guid
inner join f_device fd on fd.device_guid = fud.device_guid
where fud.authentication = true
and fud.deleted = false
and fd.cloud_token_delete = false
and fds.appointment = true
LIMIT 1</con:query><con:assertion type="XPath Match" id="c0817eb0-c69a-45f9-af1a-c32d17a74ebd" name="XPath Match"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать Пациента в проперти" id="9377bdd8-72fe-4c38-aa08-03360bf13be1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>patientId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.PATIENT_ID/text()</con:sourcePath><con:targetType>patientId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>oms</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.OMS_NUMBER/text()</con:sourcePath><con:targetType>omsNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>birthDate</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.BIRTH_DATE/text()</con:sourcePath><con:targetType>birthDate</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик Appointment2Doctor" id="f12774b4-c011-423f-9255-4d84e32e0c95"><con:settings/><con:config><script><![CDATA[def mainScripts = new ScriptLibrary(context, testRunner, log)
def topicAppointment2Doctor = testRunner.testCase.testSuite.project.getPropertyValue("topicAppointment2Doctor") //берет название топика из пропертей проекта

Date date = new Date() + 1
String time = new Date().format("yyyy-MM-dd'T'hh:mm:ss+03:00")
String startTime = date.format("yyyy-MM-dd'T'12:00:00+03:00")
def appointmentIdDoctor=(('1'..'9')+('0'..'9')).shuffled().take(12).join()
testRunner.testCase.setPropertyValue("appointmentIdDoctor", appointmentIdDoctor)
def eventId=(('1'..'9')+('0'..'9')).shuffled().take(11).join()
def patientId=testRunner.testCase.getPropertyValue("patientId")
def omsNumber=testRunner.testCase.getPropertyValue("omsNumber")

message="""<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ns2:esuAppointment xmlns:ns2="http://emias.mos.ru/selfAppointment/selfAppointmentService/v1/">
  <event>
    <id>"""+eventId+"""</id>
    <type>CHANGE</type>
    <time>"""+time+"""</time>
    <system>EIM</system>
  </event>
  <patient>
    <id>"""+patientId+"""</id>
    <oms>"""+omsNumber+"""</oms>
    <name12>Алексей Леонидович</name12>
    </patient>
  <appointment>
    <id>"""+appointmentIdDoctor+"""</id>
    <startTime>"""+startTime+"""</startTime>
        <endTime>2024-01-18T18:30:00+03:00</endTime>
        <number>С20240118-188</number>
        <speciality>
            <id>602</id>
            <name>Врач-терапевт участковый</name>
        </speciality>
    </appointment>
    <availableResource>
        <id>20736919037</id>
        <name>Не трогать_Сабецкий Р. Ю. &lt;217&gt;</name>
    </availableResource>
    <complexResource>
        <id>244071438</id>
        <number>ТМК 12</number>
        <address>Москва, внутригородская территория поселение Филимонковское, деревня Верхнее Валуево, 5-я Валуевская улица, д. 20</address>
        <roomId>30680723</roomId>
    </complexResource>
    <lpu>
        <id>204</id>
        <shortName>ГБУЗ ГП 175 ДЗМ</shortName>
        <fullName>ГБУЗ ГП №175 ДЗМ</fullName>
        <phone>(495) 122-02-21</phone>
        <mainLpuId>204</mainLpuId>
    </lpu>
    <doctor>
        <lastName>Сабецкий</lastName>
        <firstName>Роман</firstName>
        <middleName>Юрьевич</middleName>
        <speciality>
            <id>602</id>
            <name>Врач-терапевт участковый</name>
        </speciality>
        <receptionTypeId>12345</receptionTypeId>
    </doctor>
</ns2:esuAppointment>"""
log.info message

mainScripts.kafka().sendMessageToKafka2("topicAppointment2Doctor",message)]]></script></con:config></con:testStep><con:testStep type="delay" name="3000" id="88a5d4d9-7f2a-4052-a46b-97c3364ad44e"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="jdbc" name="Найти в бд запись консультации" id="ca8faa9b-aa07-4717-9ced-5ad19cabd132"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fn.title, fn.description, fna.speciality_name, fna.doctor_short_name,
fna.lpu_short_name, fna.cabinet_number, fna.start_date from f_notification_appointment fna
inner join f_notification fn on fna.notification_id=fn.id
where fna.appointment_id = ${#TestCase#appointmentIdDoctor}</con:query><con:assertion type="Simple Contains" id="a3bf2174-a979-49e8-ad77-a992bd14fdaa" name="Contains"><con:configuration><token>F_NOTIFICATION.TITLE</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить title и description консультации" id="de0ff78d-dc50-4496-81e6-0a28294c79ba"><con:settings/><con:config><script>import groovy.xml.XmlSlurper
import java.text.SimpleDateFormat
def responseDB = context.expand('${Найти в бд запись консультации#ResponseAsXml}')
response = new XmlSlurper().parseText(responseDB)
String dateTimeFormat="yyyy-MM-dd hh:mm:ss"
def date = new SimpleDateFormat("dd.MM.yy hh:mm")
def speciality = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.SPECIALITY_NAME'.toString()
def doctorShortName = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.DOCTOR_SHORT_NAME'.toString()
def lpu = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.LPU_SHORT_NAME'.toString()
def cabinet = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.CABINET_NUMBER'.toString()
def parseTime =Date.parse(dateTimeFormat, response.ResultSet.Row.'F_NOTIFICATION_APPOINTMENT.START_DATE'.text())
def startTime = date.format(parseTime).toString()

def title = response.ResultSet.Row[0].'F_NOTIFICATION.TITLE'.toString()
def description = response.ResultSet.Row[0].'F_NOTIFICATION.DESCRIPTION'
log.info description
assert title == 'Запись на прием к врачу'
assert description == 'Запись изменена ' + speciality + ', ' + doctorShortName + ', ' + lpu + ', каб. ' + cabinet + ', ' + startTime</script></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>12300</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>2012-06-07</con:value></con:property><con:property><con:name>omsNumber</con:name><con:value>100000000000</con:value></con:property><con:property><con:name>appointmentIdDoctor</con:name><con:value>723531654098</con:value></con:property></con:properties></con:testCase><con:testCase id="f7948bc2-37f4-488f-8f39-2045a5325aec" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. title и description при f_notification_appointment.status == &quot;CANCEL&quot; и is_tmk = NULL (для ЛИ и ЛДП). 382075" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Найти пользователя с устройством" id="58716288-4473-4100-bb9d-aa22a3069524"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fd.device_guid, fu.oms_number, fu.birth_date from f_user fu
inner join f_user_device fud on fud.user_id = fu.id
inner join f_device_settings fds on fds.device_guid = fud.device_guid
inner join f_device fd on fd.device_guid = fud.device_guid
where fud.authentication = true
and fud.deleted = false
and fd.cloud_token_delete = false
and fds.appointment = true
LIMIT 1</con:query><con:assertion type="XPath Match" id="bb506463-bbae-4c80-9107-25e527d546d8" name="XPath Match"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать Пациента в проперти" id="176af8c8-34b1-49e6-97fc-51cbde9be93d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>patientId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.PATIENT_ID/text()</con:sourcePath><con:targetType>patientId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>oms</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.OMS_NUMBER/text()</con:sourcePath><con:targetType>omsNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>birthDate</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.BIRTH_DATE/text()</con:sourcePath><con:targetType>birthDate</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик Appointment2LDP" id="682403be-030a-40b2-a52e-f50cfa0a1507"><con:settings/><con:config><script><![CDATA[def mainScripts = new ScriptLibrary(context, testRunner, log)
def topicAppointment2Ldp = testRunner.testCase.testSuite.project.getPropertyValue("topicAppointment2Ldp") //берет название топика из пропертей проекта

Date date = new Date() + 1
String time = new Date().format("yyyy-MM-dd'T'hh:mm:ss+03:00")
String startTime = date.format("yyyy-MM-dd'T'12:00:00+03:00")
def appointmentIdLdp=(('1'..'9')+('0'..'9')).shuffled().take(12).join()
testRunner.testCase.setPropertyValue("appointmentIdLdp", appointmentIdLdp)
def eventId=(('1'..'9')+('0'..'9')).shuffled().take(11).join()
def patientId=testRunner.testCase.getPropertyValue("patientId")
def omsNumber=testRunner.testCase.getPropertyValue("omsNumber")

message="""<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ns2:esuAppointment xmlns:ns2="http://emias.mos.ru/selfAppointment/selfAppointmentService/v1/">
  <event>
    <id>"""+eventId+"""</id>
    <type>CANCEL</type>
    <time>"""+time+"""</time>
    <system>EIM</system>
  </event>
  <patient>
    <id>"""+patientId+"""</id>
    <oms>"""+omsNumber+"""</oms>
    <name12>Алексей Леонидович</name12>
    </patient>
  <appointment>
    <id>"""+appointmentIdLdp+"""</id>
    <startTime>"""+startTime+"""</startTime>
    <endTime>2023-03-21T09:30:00.000+03:00</endTime>
    <number>С20230216-123</number>
    <referralId>74390222764</referralId>
  </appointment>
  <availableResource>
    <id>10273890</id>
    <name>Эндокринолог_Земскова_Е.В.</name>
  </availableResource>
  <complexResource>
    <id>60011163</id>
    <number>511</number>
    <address>Москва, улица Декабристов, д. 24</address>
    <roomId>14484700</roomId>
  </complexResource>
  <lpu>
    <id>141</id>
    <shortName>ГБУЗ ГП 107 ДЗМ</shortName>
    <fullName>ГБУЗ г. Москвы "Городская поликлиника № 107 ДЗМ"</fullName>
    <phone>(495) 122-02-21</phone>
  </lpu>
  <ldp>
      <id>204</id>
      <name>ЭКГ</name>
      <examination>true</examination>
  </ldp>
</ns2:esuAppointment>"""
log.info message

mainScripts.kafka().sendMessageToKafka2("topicAppointment2Ldp",message)]]></script></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик Appointment2BM" id="c7815974-cd02-4fd5-8ae8-42b71332d412"><con:settings/><con:config><script><![CDATA[def mainScripts = new ScriptLibrary(context, testRunner, log)
def topicAppointment2Bm = testRunner.testCase.testSuite.project.getPropertyValue("topicAppointment2Bm") //берет название топика из пропертей проекта

Date date = new Date() + 1
String time = new Date().format("yyyy-MM-dd'T'hh:mm:ss+03:00")
String startTime = date.format("yyyy-MM-dd'T'12:00:00+03:00")
def appointmentIdBm=(('0'..'9')+('0'..'9')).shuffled().take(12).join()
testRunner.testCase.setPropertyValue("appointmentIdBm", appointmentIdBm)
def eventId=(('0'..'9')+('0'..'9')).shuffled().take(11).join()
def patientId=testRunner.testCase.getPropertyValue("patientId")
def omsNumber=testRunner.testCase.getPropertyValue("omsNumber")

message="""<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ns2:esuAppointment xmlns:ns2="http://emias.mos.ru/selfAppointment/selfAppointmentService/v1/">
  <event>
    <id>"""+eventId+"""</id>
    <type>CANCEL</type>
    <time>"""+time+"""</time>
    <system>EIM</system>
  </event>
  <patient>
    <id>"""+patientId+"""</id>
    <oms>"""+omsNumber+"""</oms>
    <name12>Алексей Леонидович</name12>
    </patient>
  <appointment>
    <id>"""+appointmentIdBm+"""</id>
    <startTime>"""+startTime+"""</startTime>
    <endTime>2023-03-21T09:30:00.000+03:00</endTime>
    <number>С20230216-123</number>
    <referralId>74390222764</referralId>
  </appointment>
  <availableResource>
    <id>10273890</id>
    <name>Эндокринолог_Земскова_Е.В.</name>
  </availableResource>
  <complexResource>
    <id>60011163</id>
    <number>511</number>
    <address>Москва, улица Декабристов, д. 24</address>
    <roomId>14484700</roomId>
  </complexResource>
  <lpu>
    <id>141</id>
    <shortName>ГБУЗ ГП 107 ДЗМ</shortName>
    <fullName>ГБУЗ г. Москвы "Городская поликлиника № 107 ДЗМ"</fullName>
    <phone>(495) 122-02-21</phone>
  </lpu>
    <samplingType>
        <id>1</id>
        <name>Взятие венозной крови</name>
    </samplingType>
</ns2:esuAppointment>"""
log.info message

mainScripts.kafka().sendMessageToKafka2("topicAppointment2Bm",message)]]></script></con:config></con:testStep><con:testStep type="delay" name="3000" id="459cfe81-3fe5-4d9c-a5a2-ec6b5426d09d"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="jdbc" name="Найти в бд запись ЛДП" id="0a7cab6d-f074-4038-985a-a78ccd5e5c64"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fn.title, fn.description, fna.ldp_name,
fna.lpu_short_name, fna.cabinet_number, fna.start_date from f_notification_appointment fna
inner join f_notification fn on fna.notification_id=fn.id
where fna.appointment_id = ${#TestCase#appointmentIdLdp}</con:query><con:assertion type="Simple Contains" id="2c878fa4-d889-42a1-ab20-cae027183d29" name="Contains"><con:configuration><token>F_NOTIFICATION.TITLE</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить title и description ЛДП" id="fea554a3-0123-4c2e-a156-aacaf848e44c"><con:settings/><con:config><script>import groovy.xml.XmlSlurper
import java.text.SimpleDateFormat
def responseDB = context.expand('${Найти в бд запись ЛДП#ResponseAsXml}')
response = new XmlSlurper().parseText(responseDB)
String dateTimeFormat="yyyy-MM-dd hh:mm:ss"
def date = new SimpleDateFormat("dd.MM.yy hh:mm")
def ldp = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.LDP_NAME'.toString()
def lpu = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.LPU_SHORT_NAME'.toString()
def cabinet = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.CABINET_NUMBER'.toString()
def parseTime =Date.parse(dateTimeFormat, response.ResultSet.Row.'F_NOTIFICATION_APPOINTMENT.START_DATE'.text())
def startTime = date.format(parseTime).toString()

def title = response.ResultSet.Row[0].'F_NOTIFICATION.TITLE'.toString()
def description = response.ResultSet.Row[0].'F_NOTIFICATION.DESCRIPTION'
log.info description
assert title == 'Запись на исследование/процедуру'
assert description == 'Запись отменена ' + ldp + ', ' + lpu + ', каб. ' + cabinet + ', ' + startTime</script></con:config></con:testStep><con:testStep type="jdbc" name="Найти в бд запись БМ" id="0bc2d584-4b4b-4fec-9a70-7b66388e41fc"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fn.title, fn.description, fna.sampling_type,
fna.lpu_short_name, fna.cabinet_number, fna.start_date from f_notification_appointment fna
inner join f_notification fn on fna.notification_id=fn.id
where fna.appointment_id = ${#TestCase#appointmentIdBm}</con:query><con:assertion type="Simple Contains" id="a3bf2174-a979-49e8-ad77-a992bd14fdaa" name="Contains"><con:configuration><token>F_NOTIFICATION.TITLE</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить title и description БМ" id="a020b1df-6a28-48e6-aa2a-68d24c9a99e1"><con:settings/><con:config><script>import groovy.xml.XmlSlurper
import java.text.SimpleDateFormat
def responseDB = context.expand('${Найти в бд запись БМ#ResponseAsXml}')
response = new XmlSlurper().parseText(responseDB)
String dateTimeFormat="yyyy-MM-dd hh:mm:ss"
def date = new SimpleDateFormat("dd.MM.yy hh:mm")
def ST = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.SAMPLING_TYPE'.toString()
def lpu = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.LPU_SHORT_NAME'.toString()
def cabinet = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.CABINET_NUMBER'.toString()
def parseTime =Date.parse(dateTimeFormat, response.ResultSet.Row.'F_NOTIFICATION_APPOINTMENT.START_DATE'.text())
def startTime = date.format(parseTime).toString()

def title = response.ResultSet.Row[0].'F_NOTIFICATION.TITLE'.toString()
def description = response.ResultSet.Row[0].'F_NOTIFICATION.DESCRIPTION'
log.info description
assert title == 'Запись на ' + ST
assert description == 'Запись отменена ' + ST + ', ' + lpu + ', каб. ' + cabinet + ', ' + startTime</script></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>12300</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>2012-06-07</con:value></con:property><con:property><con:name>omsNumber</con:name><con:value>100000000000</con:value></con:property><con:property><con:name>appointmentIdLdp</con:name><con:value>801977654263</con:value></con:property><con:property><con:name>appointmentIdBm</con:name><con:value>236679085280</con:value></con:property></con:properties></con:testCase><con:testCase id="9cc93b8d-159e-4ef4-8e13-daa07d7d7146" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. title и description при f_notification_appointment.status == &quot;CANCEL&quot; и is_tmk = true. 382076" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Найти специальность врача" id="0d8c190d-1f3c-440b-97d8-7a73158eb01a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select code_reception_type from d_reception_type_tmk_code
where archived_reception_type = false
and is_deleted = false
LIMIT 1</con:query><con:assertion type="XPath Match" id="3a204ed8-0218-47bf-9404-0f6a71156c34" name="XPath Match"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Найти пользователя с устройством" id="459d5aed-335e-4b8a-88a3-faf907e6b4d0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fd.device_guid, fu.oms_number, fu.birth_date from f_user fu
inner join f_user_device fud on fud.user_id = fu.id
inner join f_device_settings fds on fds.device_guid = fud.device_guid
inner join f_device fd on fd.device_guid = fud.device_guid
where fud.authentication = true
and fud.deleted = false
and fd.cloud_token_delete = false
and fds.appointment = true
LIMIT 1</con:query><con:assertion type="XPath Match" id="08be2289-d128-4510-8523-2a818558ef4f" name="XPath Match"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать Пациента и специальность в проперти" id="36a0b313-2465-492e-83ef-60be34ec74b0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>patientId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.PATIENT_ID/text()</con:sourcePath><con:targetType>patientId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>oms</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.OMS_NUMBER/text()</con:sourcePath><con:targetType>omsNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>birthDate</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.BIRTH_DATE/text()</con:sourcePath><con:targetType>birthDate</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>receptionTypeId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти специальность врача</con:sourceStep><con:sourcePath>//*:D_RECEPTION_TYPE_TMK_CODE.CODE_RECEPTION_TYPE/text()</con:sourcePath><con:targetType>receptionTypeId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик Appointment2Doctor" id="eff76eb9-0afc-435e-b62f-89b84919e68a"><con:settings/><con:config><script><![CDATA[def mainScripts = new ScriptLibrary(context, testRunner, log)
def topicAppointment2Doctor = testRunner.testCase.testSuite.project.getPropertyValue("topicAppointment2Doctor") //берет название топика из пропертей проекта

Date date = new Date() + 1
String time = new Date().format("yyyy-MM-dd'T'hh:mm:ss+03:00")
String startTime = date.format("yyyy-MM-dd'T'12:00:00+03:00")
def appointmentIdDoctor=(('1'..'9')+('0'..'9')).shuffled().take(12).join()
testRunner.testCase.setPropertyValue("appointmentIdDoctor", appointmentIdDoctor)
def eventId=(('1'..'9')+('0'..'9')).shuffled().take(11).join()
def patientId=testRunner.testCase.getPropertyValue("patientId")
def omsNumber=testRunner.testCase.getPropertyValue("omsNumber")
def RTI=testRunner.testCase.getPropertyValue("receptionTypeId")

message="""<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ns2:esuAppointment xmlns:ns2="http://emias.mos.ru/selfAppointment/selfAppointmentService/v1/">
  <event>
    <id>"""+eventId+"""</id>
    <type>CANCEL</type>
    <time>"""+time+"""</time>
    <system>EIM</system>
  </event>
  <patient>
    <id>"""+patientId+"""</id>
    <oms>"""+omsNumber+"""</oms>
    <name12>Алексей Леонидович</name12>
    </patient>
  <appointment>
    <id>"""+appointmentIdDoctor+"""</id>
    <startTime>"""+startTime+"""</startTime>
        <endTime>2024-01-18T18:30:00+03:00</endTime>
        <number>С20240118-188</number>
        <speciality>
            <id>602</id>
            <name>Врач-терапевт участковый</name>
        </speciality>
    </appointment>
    <availableResource>
        <id>20736919037</id>
        <name>Не трогать_Сабецкий Р. Ю. &lt;217&gt;</name>
    </availableResource>
    <complexResource>
        <id>244071438</id>
        <number>ТМК 12</number>
        <address>Москва, внутригородская территория поселение Филимонковское, деревня Верхнее Валуево, 5-я Валуевская улица, д. 20</address>
        <roomId>30680723</roomId>
    </complexResource>
    <lpu>
        <id>204</id>
        <shortName>ГБУЗ ГП 175 ДЗМ</shortName>
        <fullName>ГБУЗ ГП №175 ДЗМ</fullName>
        <phone>(495) 122-02-21</phone>
        <mainLpuId>204</mainLpuId>
    </lpu>
    <doctor>
        <lastName>Сабецкий</lastName>
        <firstName>Роман</firstName>
        <middleName>Юрьевич</middleName>
        <speciality>
            <id>602</id>
            <name>Врач-терапевт участковый</name>
        </speciality>
        <receptionTypeId>"""+RTI+"""</receptionTypeId>
    </doctor>
</ns2:esuAppointment>"""
log.info message

mainScripts.kafka().sendMessageToKafka2("topicAppointment2Doctor",message)]]></script></con:config></con:testStep><con:testStep type="delay" name="3000" id="05fa55b3-db73-48ef-a44b-f4894675922c"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="jdbc" name="Найти в бд запись консультации" id="e4bc3910-38bb-44a1-bb99-0b002ee56789"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fn.title, fn.description, fna.speciality_name, fna.doctor_short_name,
fna.lpu_short_name, fna.cabinet_number, fna.start_date from f_notification_appointment fna
inner join f_notification fn on fna.notification_id=fn.id
where fna.appointment_id = ${#TestCase#appointmentIdDoctor}</con:query><con:assertion type="Simple Contains" id="a3bf2174-a979-49e8-ad77-a992bd14fdaa" name="Contains"><con:configuration><token>F_NOTIFICATION.TITLE</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить title и description консультации" id="15e4689f-3fac-4c1b-b4da-838a77defecc"><con:settings/><con:config><script>import groovy.xml.XmlSlurper
import java.text.SimpleDateFormat
def responseDB = context.expand('${Найти в бд запись консультации#ResponseAsXml}')
response = new XmlSlurper().parseText(responseDB)
String dateTimeFormat="yyyy-MM-dd hh:mm:ss"
def date = new SimpleDateFormat("dd.MM.yy hh:mm")
def speciality = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.SPECIALITY_NAME'.toString()
def doctorShortName = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.DOCTOR_SHORT_NAME'.toString()
def lpu = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.LPU_SHORT_NAME'.toString()
def parseTime =Date.parse(dateTimeFormat, response.ResultSet.Row.'F_NOTIFICATION_APPOINTMENT.START_DATE'.text())
def startTime = date.format(parseTime).toString()

def title = response.ResultSet.Row[0].'F_NOTIFICATION.TITLE'.toString()
def description = response.ResultSet.Row[0].'F_NOTIFICATION.DESCRIPTION'
log.info description
assert title == 'Отмена записи на онлайн-консультацию с врачом'
assert description == 'Запись на онлайн-консультацию отменена: ' + speciality + ', ' + doctorShortName + ', ' + startTime</script></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>12300</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>2012-06-07</con:value></con:property><con:property><con:name>omsNumber</con:name><con:value>100000000000</con:value></con:property><con:property><con:name>appointmentIdDoctor</con:name><con:value>862349757215</con:value></con:property><con:property><con:name>receptionTypeId</con:name><con:value>1626</con:value></con:property></con:properties></con:testCase><con:testCase id="ff52e5d0-ee14-4ac6-abd0-ec90c80eeb00" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. title и description при f_notification_appointment.status == &quot;CANCEL&quot; и is_tmk = NULL (для консультации). 382077" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Найти пользователя с устройством" id="50728bc7-6ef8-470e-98be-6ba26c58c75a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fu.patient_id, fd.device_guid, fu.oms_number, fu.birth_date from f_user fu
inner join f_user_device fud on fud.user_id = fu.id
inner join f_device_settings fds on fds.device_guid = fud.device_guid
inner join f_device fd on fd.device_guid = fud.device_guid
where fud.authentication = true
and fud.deleted = false
and fd.cloud_token_delete = false
and fds.appointment = true
LIMIT 1</con:query><con:assertion type="XPath Match" id="b3cdd0bd-ad1c-432e-8116-48dfb93fb8fa" name="XPath Match"><con:configuration><path>count(//*:Row)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать Пациента в проперти" id="ed0f8def-14d8-4a20-a056-1c4f83f3e402"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>patientId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.PATIENT_ID/text()</con:sourcePath><con:targetType>patientId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>oms</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.OMS_NUMBER/text()</con:sourcePath><con:targetType>omsNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>birthDate</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти пользователя с устройством</con:sourceStep><con:sourcePath>//*:F_USER.BIRTH_DATE/text()</con:sourcePath><con:targetType>birthDate</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик Appointment2Doctor" id="0710315f-aee3-497c-ad14-2319850d8fff"><con:settings/><con:config><script><![CDATA[def mainScripts = new ScriptLibrary(context, testRunner, log)
def topicAppointment2Doctor = testRunner.testCase.testSuite.project.getPropertyValue("topicAppointment2Doctor") //берет название топика из пропертей проекта

Date date = new Date() + 1
String time = new Date().format("yyyy-MM-dd'T'hh:mm:ss+03:00")
String startTime = date.format("yyyy-MM-dd'T'12:00:00+03:00")
def appointmentIdDoctor=(('1'..'9')+('0'..'9')).shuffled().take(12).join()
testRunner.testCase.setPropertyValue("appointmentIdDoctor", appointmentIdDoctor)
def eventId=(('1'..'9')+('0'..'9')).shuffled().take(11).join()
def patientId=testRunner.testCase.getPropertyValue("patientId")
def omsNumber=testRunner.testCase.getPropertyValue("omsNumber")

message="""<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ns2:esuAppointment xmlns:ns2="http://emias.mos.ru/selfAppointment/selfAppointmentService/v1/">
  <event>
    <id>"""+eventId+"""</id>
    <type>CANCEL</type>
    <time>"""+time+"""</time>
    <system>EIM</system>
  </event>
  <patient>
    <id>"""+patientId+"""</id>
    <oms>"""+omsNumber+"""</oms>
    <name12>Алексей Леонидович</name12>
    </patient>
  <appointment>
    <id>"""+appointmentIdDoctor+"""</id>
    <startTime>"""+startTime+"""</startTime>
        <endTime>2024-01-18T18:30:00+03:00</endTime>
        <number>С20240118-188</number>
        <speciality>
            <id>602</id>
            <name>Врач-терапевт участковый</name>
        </speciality>
    </appointment>
    <availableResource>
        <id>20736919037</id>
        <name>Не трогать_Сабецкий Р. Ю. &lt;217&gt;</name>
    </availableResource>
    <complexResource>
        <id>244071438</id>
        <number>ТМК 12</number>
        <address>Москва, внутригородская территория поселение Филимонковское, деревня Верхнее Валуево, 5-я Валуевская улица, д. 20</address>
        <roomId>30680723</roomId>
    </complexResource>
    <lpu>
        <id>204</id>
        <shortName>ГБУЗ ГП 175 ДЗМ</shortName>
        <fullName>ГБУЗ ГП №175 ДЗМ</fullName>
        <phone>(495) 122-02-21</phone>
        <mainLpuId>204</mainLpuId>
    </lpu>
    <doctor>
        <lastName>Сабецкий</lastName>
        <firstName>Роман</firstName>
        <middleName>Юрьевич</middleName>
        <speciality>
            <id>602</id>
            <name>Врач-терапевт участковый</name>
        </speciality>
        <receptionTypeId>12345</receptionTypeId>
    </doctor>
</ns2:esuAppointment>"""
log.info message

mainScripts.kafka().sendMessageToKafka2("topicAppointment2Doctor",message)]]></script></con:config></con:testStep><con:testStep type="delay" name="3000" id="52fef4e5-fa0a-43ef-87f2-3385ef0c0acf"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="jdbc" name="Найти в бд запись консультации" id="10abe66a-068f-48bb-a245-f09a0f1e9762"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fn.title, fn.description, fna.speciality_name, fna.doctor_short_name,
fna.lpu_short_name, fna.cabinet_number, fna.start_date from f_notification_appointment fna
inner join f_notification fn on fna.notification_id=fn.id
where fna.appointment_id = ${#TestCase#appointmentIdDoctor}</con:query><con:assertion type="Simple Contains" id="a3bf2174-a979-49e8-ad77-a992bd14fdaa" name="Contains"><con:configuration><token>F_NOTIFICATION.TITLE</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить title и description консультации" id="58a6deaf-9393-4748-8f01-b7c8058157c8"><con:settings/><con:config><script>import groovy.xml.XmlSlurper
import java.text.SimpleDateFormat
def responseDB = context.expand('${Найти в бд запись консультации#ResponseAsXml}')
response = new XmlSlurper().parseText(responseDB)
String dateTimeFormat="yyyy-MM-dd hh:mm:ss"
def date = new SimpleDateFormat("dd.MM.yy hh:mm")
def speciality = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.SPECIALITY_NAME'.toString()
def doctorShortName = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.DOCTOR_SHORT_NAME'.toString()
def lpu = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.LPU_SHORT_NAME'.toString()
def cabinet = response.ResultSet.Row[0].'F_NOTIFICATION_APPOINTMENT.CABINET_NUMBER'.toString()
def parseTime =Date.parse(dateTimeFormat, response.ResultSet.Row.'F_NOTIFICATION_APPOINTMENT.START_DATE'.text())
def startTime = date.format(parseTime).toString()

def title = response.ResultSet.Row[0].'F_NOTIFICATION.TITLE'.toString()
def description = response.ResultSet.Row[0].'F_NOTIFICATION.DESCRIPTION'
log.info description
assert title == 'Запись на прием к врачу'
assert description == 'Запись отменена ' + speciality + ', ' + doctorShortName + ', ' + lpu + ', каб. ' + cabinet + ', ' + startTime</script></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>12300</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>2012-06-07</con:value></con:property><con:property><con:name>omsNumber</con:name><con:value>100000000000</con:value></con:property><con:property><con:name>appointmentIdDoctor</con:name><con:value>847816723905</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="ecf3a2e3-a16f-41f6-90a5-edfaddf8d1c3" name="А_ЕСУ_05 - Получение сообщения об изменении статуса ТМК"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="b3d1891e-f662-4e71-b810-0748ee4be134" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Проверка отправки в зависимости от признаков authentication, deleted, esia_authentication, main_policy" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Проверить наличие пациента со всеми девайсами" id="d3c58780-3c13-4896-805f-3812b1b60c3d"><con:settings/><con:config><script>import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

// проверить, что пациент с идентификатором в сьюте есть в бд
patientId =testRunner.testCase.testSuite.getPropertyValue("patientId")
oms =testRunner.testCase.testSuite.getPropertyValue("oms")
user=sql.firstRow("select * from f_user where patient_id="+patientId)
log.info user
id=0
if( !user){
	query="INSERT INTO f_user VALUES(nextval('f_user_sequence'), "+patientId+", '"+oms+"', '2012-06-07') RETURNING id "
	id=sql.firstRow(query).id 
}
else{
	log.info("пациент есть")
	id=user.id
}
log.info id
userId=testRunner.testCase.testSuite.setPropertyValue("userId", id.toString())

//формируем нужные комбинации authentication, deleted, esia_authentication, main_policy
all=[
		[a:true, d:false, e:true, m:true],
		[a:false, d:false, e:true, m:true],
		[a:true, d:true, e:true, m:true],
		[a:true, d:false, e:true, m:false],
		[a:true, d:false, e:true, m:null],
		[a:true, d:false, e:false, m:true],
		[a:true, d:false, e:null, m:true]
	]
	
devicesToSendEsia = []
devicesToSendWithoutEsia = []
for(i=0; i&lt;all.size(); i++){
	auth = all[i].a
	del = all[i].d
	esia = all[i].e
	main = all[i].m
	query="SELECT device_guid FROM f_user_device WHERE user_id =$id " +
	"AND authentication = $auth " +
	"AND deleted = $del " +
	"AND esia_authentication = $esia " +
	"AND main_policy =$main "
	device = sql.firstRow(query)
	guid=""
	if (device){
		log.info "Девайс номер "+ i + " есть в бд"
		guid=device.device_guid
	}
	else{
		log.info "Девайс номер "+ i + " отсутствует в бд"
		guid= java.util.UUID.randomUUID()
		cloud= java.util.UUID.randomUUID()
		devQuery="INSERT INTO f_device (device_guid, app_version, platform, device_cloud_id, cloud_token_delete) VALUES('$guid', '1.10.0', 'ANDROID', '$cloud', NULL)"
		userDevQuery="INSERT INTO f_user_device (id, device_guid, user_id, authentication, deleted, deleted_date, esia_authentication, main_policy, voip) VALUES(nextval('f_user_device_sequence'), '$guid', $id, $auth, $del, NULL, $esia, $main, NULL)"
		sql.execute(devQuery)
		sql.execute(userDevQuery)
	}
	testRunner.testCase.setPropertyValue("deviceGuid" + i, guid.toString())
	//записать номера устройств для которых пройдет отправка при tmkNeedEsiaAuthentication = true
	if (i == 0 || i == 3 || i == 4){
		devicesToSendEsia&lt;&lt; i
	}
	if (i == 0 || i == 5 || i == 6){
		devicesToSendWithoutEsia&lt;&lt; i
	}
}

testRunner.testCase.setPropertyValue("devicesToSendEsia", devicesToSendEsia.toString().replace('[','').replace(']',''))
testRunner.testCase.setPropertyValue("devicesToSendWithoutEsia", devicesToSendWithoutEsia.toString().replace('[','').replace(']',''))
log.info devicesToSendEsia
log.info devicesToSendWithoutEsia</script></con:config></con:testStep><con:testStep type="jdbc" name="Найти appointmentId, doctor_short_name, speciality_name" id="ad86eb36-3b44-463a-90a0-2ef910c39902"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fna.appointment_id, fna.speciality_name, fna.doctor_short_name from f_notification_appointment fna
join f_notification fn on fn.id = fna.notification_id
join f_user fu on fu.id = fn.user_id
where fu.patient_id = ${#TestSuite#patientId} 
and fna.status = 'CREATE'
and fna.doctor_short_name is not NULL
LIMIT 1</con:query><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать appointmentId, doctor_short_name, speciality_name" id="25d1af82-bb5d-4a92-b942-588f88e09ca5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointmentId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.APPOINTMENT_ID</con:sourcePath><con:targetType>appointmentId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>specialityName</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.SPECIALITY_NAME</con:sourcePath><con:targetType>specName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>doctor_short_name</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.DOCTOR_SHORT_NAME</con:sourcePath><con:targetType>docShortName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик" id="a17eba72-5ef7-4b2e-b30f-6ac19c7ac108"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
import java.text.SimpleDateFormat
import java.util.Date

log.info "Отправка сообщения об изменении статуса ТМК"
def date = new Date()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS").format(date)
def eventDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(date)
def currentDateTimeForDB = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date)
testRunner.testCase.setPropertyValue("currentDateTimeForDB", currentDateTimeForDB.toString())
testRunner.testCase.setPropertyValue("currentDateTime", currentDateTime.toString())

patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
appointmentId = testRunner.testCase.getPropertyValue("appointmentId")
deviceGuid = java.util.UUID.randomUUID()

message="""{
    "patientId": """+patientId+""",
    "deviceId": \""""+deviceGuid+"""\",
    "productType": "emiasInfo",
    "appointmentId": """+appointmentId+""",
    "participantURL": "/7d47420b-5dee-4cfe-bbf1-349fd9776370?participantUuid\u003d1436b14f-479d-432a-8c7f-b3301168b260",
    "eventType": "doctorLoginToRoom",
    "eventDateTime": \""""+eventDateTime+"""\",
    "unsuccessCallCounter": 1
}"""

mainScripts.kafka().sendMessageToKafka2("topicTmkNotify",message)
sleep(10000)</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification" id="2c4ab9eb-5c1c-42de-9b8b-e142bfd7a8b9"><con:settings/><con:config><script>import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

userId = testRunner.testCase.testSuite.getPropertyValue("userId")
currentDateTimeForDB= testRunner.testCase.getPropertyValue("currentDateTimeForDB")
query="SELECT * FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
if(notifications.size() == 1){
	notification=notifications[0]
	log.info("Найдена одна запись в f_notification")
	testRunner.testCase.setPropertyValue("notificationId", notification.id.toString())
}
else testRunner.fail("Количество записей в f_notification не равно 1. фактическое ="+notifications.size())
</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_telemedicine" id="d403c65f-8ad0-4ce4-a463-b37e3a31c23b"><con:settings/><con:config><script>import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
query="SELECT * FROM  f_notification_telemedicine WHERE notification_id ="+notificationId
notificationTelemedicine=sql.rows(query)
if(notificationTelemedicine.size() == 1){
	nt=notificationTelemedicine[0]
	log.info("Найдена запись в f_notification_telemedicine с notification_id ="+notificationId)
}
else testRunner.fail("Количество записей в f_notification_telemedicine не равно 1. фактическое ="+notificationAppointments.size())</script></con:config></con:testStep><con:testStep type="restrequest" name="Получить значение tmkNeedEsiaAuthentication" id="2be14632-3fc7-48e2-bb71-4ddd86d95dc6"><con:settings/><con:config service="http://notification-emiasinfo1.emias.solit-clouds.ru" resourcePath="/actuator/env" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Получить значение tmkNeedEsiaAuthentication" id="adada609-6fe3-4216-9457-de14bb47a415" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://notification-emiasinfo1.emias.solit-clouds.ru</con:endpoint><con:request/><con:originalUri>http://notification-emiasinfo1.emias.solit-clouds.ru/actuator/env</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f3a00793-d8d1-45c1-8059-4dc293d3fcf3" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_task" id="b021532d-8abe-4f7d-bf24-b632c3db557c"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
import groovy.json.JsonSlurper
import java.util.ArrayList
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)
def envResponse = context.expand('${Получить значение tmkNeedEsiaAuthentication#Response}')
def slurperJson = new JsonSlurper()
def env = slurperJson.parseText(envResponse)
def tmkNeedEsiaAuthentication = ""
env.propertySources.each{
	if(it.name=="systemEnvironment"){
		it.properties.each{ et ->
			if(et.getKey() == "app.esiaAuthentication.tmkNeedEsiaAuthentication"){
				tmkNeedEsiaAuthentication = et.value.value.toBoolean()
			}
		}
	}
}

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

devicesCount = testRunner.testCase.getPropertyValue("devicesCount").toInteger()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
devicesToSendEsia = testRunner.testCase.getPropertyValue("devicesToSendEsia")
devicesToSendWithoutEsia = testRunner.testCase.getPropertyValue("devicesToSendWithoutEsia")
currentDateTimeForDB = testRunner.testCase.getPropertyValue("currentDateTimeForDB")

sendDate=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(currentDateTimeForDB)
log.info sendDate

devicesToSendEsiaList=devicesToSendEsia.split(',').collect{it as int}
devicesToSendWithoutEsiaList=devicesToSendWithoutEsia.split(',').collect{it as int}

for(i=0; i &lt;devicesCount; i++ ){
	deviceGuid=testRunner.testCase.getPropertyValue("deviceGuid"+i)
	tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and device_guid='"+deviceGuid+"'")
	log.info "Проверяю notification task для девайса "+deviceGuid
	log.info i
	if(tmkNeedEsiaAuthentication == true){
		if(devicesToSendEsiaList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
	else{
		if(devicesToSendWithoutEsiaList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>device1</con:name><con:value>1a0e59f3-245a-4812-8724-fdfd5a3833aa</con:value></con:property><con:property><con:name>device2</con:name><con:value>4ecb0c08-1acc-4a27-97a0-ebf80c1e43dc</con:value></con:property><con:property><con:name>device3</con:name><con:value>4ecb0c08-1acc-4a27-97a0-ebf80c1e43dc</con:value></con:property><con:property><con:name>device4</con:name><con:value>4ecb0c08-1acc-4a27-97a0-ebf80c1e43dc</con:value></con:property><con:property><con:name>device5</con:name><con:value>4ecb0c08-1acc-4a27-97a0-ebf80c1e43dc</con:value></con:property><con:property><con:name>device6</con:name><con:value>4ecb0c08-1acc-4a27-97a0-ebf80c1e43dc</con:value></con:property><con:property><con:name>device7</con:name><con:value>4ecb0c08-1acc-4a27-97a0-ebf80c1e43dc</con:value></con:property><con:property><con:name>devicesToSendEsia</con:name><con:value>0, 3, 4</con:value></con:property><con:property><con:name>devicesToSendWithoutEsia</con:name><con:value>0, 5, 6</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>391930072666</con:value></con:property><con:property><con:name>currentDateTime</con:name><con:value>2024-02-12 12:14:32.145</con:value></con:property><con:property><con:name>specName</con:name><con:value>Врач-терапевт участковый</con:value></con:property><con:property><con:name>docShortName</con:name><con:value>Беляев А.А.</con:value></con:property><con:property><con:name>currentDateTimeForDB</con:name><con:value>2024-02-12 12:14:32</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>37992</con:value></con:property><con:property><con:name>devicesCount</con:name><con:value>7</con:value></con:property><con:property><con:name>deviceGuid1</con:name><con:value>2818ec2f-ba37-42fc-a9ec-346af318a45e</con:value></con:property><con:property><con:name>deviceGuid2</con:name><con:value>e5ce6b68-6a71-4f81-805f-628ff9ea88e8</con:value></con:property><con:property><con:name>deviceGuid3</con:name><con:value>687234ff-a741-4b4b-878c-ad0faee794a6</con:value></con:property><con:property><con:name>deviceGuid4</con:name><con:value>f04db025-6463-4221-b948-b31083094165</con:value></con:property><con:property><con:name>deviceGuid5</con:name><con:value>680b4f5a-6612-40f1-9793-665bbad526ef</con:value></con:property><con:property><con:name>deviceGuid6</con:name><con:value>d9e4e7e1-012b-4cf9-9260-1ca4f7b8b684</con:value></con:property><con:property><con:name>deviceGuid7</con:name><con:value>d9e4e7e1-012b-4cf9-9260-1ca4f7b8b684</con:value></con:property><con:property><con:name>deviceGuid0</con:name><con:value>73c07c66-d9b8-4430-bf29-16db93fdcf92</con:value></con:property><con:property><con:name>deviceGuid0</con:name><con:value>73c07c66-d9b8-4430-bf29-16db93fdcf92</con:value></con:property><con:property><con:name>deviceGuid1</con:name><con:value>2818ec2f-ba37-42fc-a9ec-346af318a45e</con:value></con:property><con:property><con:name>deviceGuid2</con:name><con:value>e5ce6b68-6a71-4f81-805f-628ff9ea88e8</con:value></con:property><con:property><con:name>deviceGuid3</con:name><con:value>687234ff-a741-4b4b-878c-ad0faee794a6</con:value></con:property><con:property><con:name>deviceGuid4</con:name><con:value>f04db025-6463-4221-b948-b31083094165</con:value></con:property><con:property><con:name>deviceGuid5</con:name><con:value>680b4f5a-6612-40f1-9793-665bbad526ef</con:value></con:property><con:property><con:name>deviceGuid6</con:name><con:value>d9e4e7e1-012b-4cf9-9260-1ca4f7b8b684</con:value></con:property></con:properties></con:testCase><con:testCase id="87575f5b-f9ac-4151-b446-443b9fb2d85b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Проверить наличие пациента со всеми девайсами" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Проверить пациента с девайсами со всеми настройками" id="85d09202-66f0-48b3-a1e2-8b0b84487e93"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

// проверить, что пациент с идентификатором в сьюте есть в бд
patientId =testRunner.testCase.testSuite.getPropertyValue("patientId")
oms =testRunner.testCase.testSuite.getPropertyValue("oms")
user=sql.firstRow("select * from f_user where patient_id="+patientId)
log.info user
id=0
if( !user){
	query="INSERT INTO f_user VALUES(nextval('f_user_sequence'), "+patientId+", '"+oms+"', '2012-06-07') RETURNING id "
	id=sql.firstRow(query).id 
}
else{
	log.info("пациент есть")
	id=user.id
}
log.info id
testRunner.testCase.testSuite.setPropertyValue("userId", id.toString())
// собрать все комбинации параметров и посчитать кол-во необходимых девайсов
voip=[true, false, null]
platform=["ANDROID", "HUAWEI", "APPLE"]
devicesCount=voip.size()*platform.size()
log.info devicesCount
testRunner.testCase.testSuite.setPropertyValue("devicesCount", devicesCount.toString())
i=1
devicesToSend=[]
devicesToSendVoip=[]
voip.each{ v ->
	platform.each{ p->
		log.info "проверяю девайс номер "+i
		log.info p
		log.info v
		voipCondition= v != null ? "="+v : "is null"
		device=sql.firstRow("SELECT fud.device_guid FROM f_user_device fud JOIN f_device fd ON fd.device_guid=fud.device_guid WHERE fud.user_id="+id+" AND fud.authentication=true AND fud.deleted=false AND fud.voip "+voipCondition+ " AND fd.platform = '"+p+"'")
		guid=""
		if(device){
			guid=device.device_guid
		}
		else{
			guid= java.util.UUID.randomUUID()
			cloud= java.util.UUID.randomUUID()
			devQuery="INSERT INTO f_device (device_guid, app_version, platform, device_cloud_id, cloud_token_delete) VALUES('"+guid+"', '1.10.1', '"+p+"', '"+cloud+"', NULL)"
			//log.info devQuery
			userDevQuery="INSERT INTO f_user_device (id, device_guid, user_id, authentication, deleted, deleted_date, esia_authentication, main_policy, voip) VALUES(nextval('f_user_device_sequence'), '"+guid+"', "+id+", true, false, NULL, true, true, "+v.toString()+")"
			//log.info userDevQuery
			sql.execute(devQuery)
			sql.execute(userDevQuery)
		}
		testRunner.testCase.testSuite.setPropertyValue("deviceGuid"+i, guid.toString())
		//добавить номера девасов, которые подходят под условие на отправку, в список
		if(v != true ) devicesToSend << i
		if(v == true) devicesToSendVoip << i
		if(v != true && p != "APPLE") devicesToSendVoip << i
		i+=1
	}
}

testRunner.testCase.testSuite.setPropertyValue("devicesToSend", devicesToSend.toString().replace('[','').replace(']',''))
testRunner.testCase.testSuite.setPropertyValue("devicesToSendVoip", devicesToSendVoip.toString().replace('[','').replace(']',''))
log.info devicesToSend
log.info devicesToSendVoip]]></script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ae143375-0f52-475c-8e49-1c501fec6d6b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправить сообщение с eventType=doctorLoginToRoom" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Проверить наличие пациента со всеми девайсами" id="6e6aa977-af61-44fc-8606-37e94ff02a98"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>87575f5b-f9ac-4151-b446-443b9fb2d85b</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="jdbc" name="Найти appointmentId, doctor_short_name, speciality_name" id="223542d1-53c0-4191-a995-54fb4598b807"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fna.appointment_id, fna.speciality_name, fna.doctor_short_name from f_notification_appointment fna
join f_notification fn on fn.id = fna.notification_id
join f_user fu on fu.id = fn.user_id
where fu.patient_id = ${#TestSuite#patientId} 
and fna.status = 'CREATE'
and fna.doctor_short_name is not NULL
LIMIT 1</con:query><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать appointmentId, doctor_short_name, speciality_name" id="ae5a9b80-7ad9-452f-b0cd-daf546170c66"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointmentId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.APPOINTMENT_ID</con:sourcePath><con:targetType>appointmentId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>specialityName</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.SPECIALITY_NAME</con:sourcePath><con:targetType>specName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>doctor_short_name</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.DOCTOR_SHORT_NAME</con:sourcePath><con:targetType>docShortName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик" id="068ac875-0405-4d19-ab9c-367263bf14a8"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
import java.text.SimpleDateFormat
import java.time.LocalDateTime
import java.util.Date
import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

log.info "Отправка сообщения об изменении статуса ТМК"

def date = new Date()
log.info date
def currentDateTimeForDB = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date)
testRunner.testCase.setPropertyValue("currentDateTimeForDB", currentDateTimeForDB.toString())

Date dateMinus = LocalDateTime.now().plusSeconds(-67).toDate()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS").format(dateMinus)
def eventDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(dateMinus)
def timePatientRejectCall = new SimpleDateFormat("HH:mm").format(dateMinus)
def timePatientDidNotAnswer = new SimpleDateFormat("dd.MM.yyyy' в 'HH:mm").format(dateMinus)
testRunner.testCase.setPropertyValue("eventDateTime", eventDateTime.toString())
testRunner.testCase.setPropertyValue("currentDateTime", currentDateTime.toString())
testRunner.testCase.setPropertyValue("timePatientRejectCall", timePatientRejectCall.toString())
testRunner.testCase.setPropertyValue("timePatientDidNotAnswer", timePatientDidNotAnswer.toString())

patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
appointmentId = testRunner.testCase.getPropertyValue("appointmentId")
callCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")
userId= testRunner.testCase.testSuite.getPropertyValue("userId")
deviceGuid = java.util.UUID.randomUUID()

message="""{
    "patientId": """+patientId+""",
    "deviceId": \""""+deviceGuid+"""\",
    "productType": "emiasInfo",
    "appointmentId": """+appointmentId+""",
    "participantURL": "/7d47420b-5dee-4cfe-bbf1-349fd9776370?participantUuid\u003d1436b14f-479d-432a-8c7f-b3301168b260",
    "eventType": \""""+eventType+"""\",
    "eventDateTime": \""""+eventDateTime+"""\",
    "unsuccessCallCounter": """+callCounter+"""
}"""

mainScripts.kafka().sendMessageToKafka2("topicTmkNotify",message)

sleep(10000)


query="SELECT create_date FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
createDate=notifications[0].create_date.toString()
String createdDate = createDate.substring(0, createDate.length() - 3)
createdDateParsed = Date.parse("yyyy-MM-dd HH:mm:ss.SSS", createdDate)
log.info createdDateParsed
int longTime = (createdDateParsed.getTime() - dateMinus.getTime())/1000
int hours = (longTime / 3600)*60;
int minutes = longTime / 3600*60 + (longTime / 3600) / 60
int seconds = longTime % 60;
String timeCallInProgress = String.format("%02d:%02d", minutes, seconds)
log.info timeCallInProgress
testRunner.testCase.setPropertyValue("timeCallInProgress", timeCallInProgress.toString())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification" id="4d78a26f-191a-4dba-9a06-27da961eb8fe"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое = "+expValue.toString()+", фактическое ="+currentValue.toString())
}

def checkDescription( String description){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	doctorShortName = testRunner.testCase.getPropertyValue("docShortName")
	timePatientRejectCall = testRunner.testCase.getPropertyValue("timePatientRejectCall")
	timePatientDidNotAnswer = testRunner.testCase.getPropertyValue("timePatientDidNotAnswer")
	timeCallInProgress = testRunner.testCase.getPropertyValue("timeCallInProgress")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	countResult = callCounter ? (callCounter.endsWith("2") || callCounter.endsWith("3") || callCounter.endsWith("4")) &amp;&amp; !List.of("12", "13", "14").contains(callCounter) ? "раза" : "раз" : null
	desc=""
	switch(eventType){
		case "doctorLoginToRoom":
			desc = "Врач в сети: "+ specialityName +" "+ doctorShortName + " на связи, консультация скоро начнется. Войдите в приложение или ожидайте звонок."
			break
		case "doctorStartCall":
			desc = doctorShortName
			break
		case "patientRejectCall":
			desc = "Вы отклонили вызов от "+ specialityName + " " + doctorShortName + " сегодня в " + timePatientRejectCall
			break
		case "patientDidNotAnswer":
			desc = callCounter=="1" || !callCounter ? "Сегодня в "+ timePatientRejectCall + " звонил " + specialityName + " " + doctorShortName : "Вам звонил (" + callCounter  + ") " + countResult + " " + specialityName + " " + doctorShortName + " Последний " + timePatientDidNotAnswer
			break
		case "conferenceSuccesfullyFinished":
			desc = specialityName + doctorShortName + " провел онлайн-консультацию. Результат скоро появится в Медкарте."
			break
		case "callInProgress":
			desc = "Консультация идет " +timeCallInProgress
			break	
	}
	expectedDesc=desc
	checkParameter("notification.description",expectedDesc,description)
}

def checkTitle( String title){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	expTitle=""
	switch(eventType){
		case "doctorLoginToRoom":
			expTitle = "Онлайн-консультация скоро начнется"
			break
		case "doctorStartCall":
			expTitle = specialityName
			break
		case "patientRejectCall":
			expTitle = "Вызов от "+ specialityName + " отклонен"
			break
		case "patientDidNotAnswer":
			expTitle = callCounter=="1" || !callCounter ? "Пропущен вызов от " + specialityName: "Пропущены вызовы (" + callCounter  + ") от " + specialityName
			break
		case "conferenceSuccesfullyFinished":
			expTitle = "Онлайн-консультация состоялась"
			break
		case "callInProgress":
			expTitle = "Онлайн-консультация"
			break	
	}
	expectedTitle=expTitle
	log.info title
	checkParameter("notification.title",expectedTitle,title)
}

userId = testRunner.testCase.testSuite.getPropertyValue("userId")
currentDateTimeForDB= testRunner.testCase.getPropertyValue("currentDateTimeForDB")
query="SELECT * FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
if(notifications.size() == 1){
	notification=notifications[0]
	checkTitle(notification.title)
	checkDescription(notification.description)
	checkParameter("notification.deleted",false,notification.deleted )
	checkParameter("notification.viewed",false,notification.viewed )
	testRunner.testCase.setPropertyValue("notificationId", notification.id.toString())
}
else testRunner.fail("Количество записей в f_notification не равно 1. фактическое ="+notifications.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_telemedicine" id="5db63320-0b9a-4636-97c4-ab41e61e9733"><con:settings/><con:config><script>import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

appointmentId = testRunner.testCase.getPropertyValue("appointmentId").toLong()
eventDateTime = testRunner.testCase.getPropertyValue("currentDateTime").toString()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
unaccessCallCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")

query="SELECT * FROM f_notification_telemedicine WHERE notification_id ="+notificationId
notificationTelemedicine=sql.rows(query)

if(notificationTelemedicine.size() == 1){
	date = (eventDateTime.endsWith("00")) ? notificationTelemedicine[0].event_date_time.toString()+"00" : (eventDateTime.endsWith("0")) ? notificationTelemedicine[0].event_date_time.toString()+"0": notificationTelemedicine[0].event_date_time.toString()
	tm=notificationTelemedicine[0]
	log.info("Найдена запись в f_notification_telemedicine с notification_id ="+notificationId)
	checkParameter("eventDateTime",eventDateTime,date)
	checkParameter("unaccessCallCounter",unaccessCallCounter,tm.unsuccess_call_counter.toString())
	checkParameter("eventType",eventType,tm.event_type.toString())
}
else testRunner.fail("Количество записей в f_notification_telemedicine не равно 1. фактическое ="+notificationTelemedicine.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_task" id="a071ad83-52e5-406e-8f52-f81a86d59e16"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
import groovy.json.JsonSlurper
import java.util.ArrayList
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

devicesCount = testRunner.testCase.testSuite.getPropertyValue("devicesCount").toInteger()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
devicesToSend = testRunner.testCase.testSuite.getPropertyValue("devicesToSend")
devicesToSendVoip = testRunner.testCase.testSuite.getPropertyValue("devicesToSendVoip")
currentDateTimeForDB = testRunner.testCase.getPropertyValue("currentDateTimeForDB")
eventType=testRunner.testCase.getPropertyValue("eventType")

sendDate=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(currentDateTimeForDB)
log.info sendDate

devicesToSendList=devicesToSend.split(',').collect{it as int}
devicesToSendVoipList=devicesToSendVoip.split(',').collect{it as int}

for(i=1; i &lt;=devicesCount; i++ ){
	deviceGuid=testRunner.testCase.testSuite.getPropertyValue("deviceGuid"+(i))
	if(eventType != 'doctorStartCall'){	
	log.info "Проверяю status=SEND для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'")
		//tasks="select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'"
		log.info tasks
		if(devicesToSendList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
	if(eventType != 'doctorLoginToRoom' &amp;&amp; eventType != 'conferenceSuccesfullyFinished'){
		log.info "Проверяю status=SEND_VOIP для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND_VOIP' and device_guid='"+deviceGuid+"'")
		log.info tasks
		if(devicesToSendVoipList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND_VOIP",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки VOIP уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>eventType</con:name><con:value>doctorLoginToRoom</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>391930072666</con:value></con:property><con:property><con:name>currentDateTime</con:name><con:value>2024-02-12 12:13:37.820</con:value></con:property><con:property><con:name>specName</con:name><con:value>Врач-терапевт участковый</con:value></con:property><con:property><con:name>docShortName</con:name><con:value>Беляев А.А.</con:value></con:property><con:property><con:name>currentDateTimeForDB</con:name><con:value>2024-02-12 12:14:44</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>37993</con:value></con:property><con:property><con:name>timePatientRejectCall</con:name><con:value>12:13</con:value></con:property><con:property><con:name>timePatientDidNotAnswer</con:name><con:value>12.02.2024 в 12:13</con:value></con:property><con:property><con:name>timeCallInProgress</con:name><con:value>01:07</con:value></con:property><con:property><con:name>callCounter</con:name><con:value>1</con:value></con:property><con:property><con:name>eventDateTime</con:name><con:value>2024-02-12T12:13:37.820</con:value></con:property></con:properties></con:testCase><con:testCase id="0794b991-ae1a-4f6c-a647-b31cc4a290c0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправить сообщение с eventType=doctorStartCall" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Проверить наличие пациента со всеми девайсами" id="87aeeb38-b25b-4ae3-8981-1d730acdb702"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>87575f5b-f9ac-4151-b446-443b9fb2d85b</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="jdbc" name="Найти appointmentId, doctor_short_name, speciality_name" id="07400ff5-6577-4c91-a502-476ebd6c4c55"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fna.appointment_id, fna.speciality_name, fna.doctor_short_name from f_notification_appointment fna
join f_notification fn on fn.id = fna.notification_id
join f_user fu on fu.id = fn.user_id
where fu.patient_id = ${#TestSuite#patientId} 
and fna.status = 'CREATE'
and fna.doctor_short_name is not NULL
LIMIT 1</con:query><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать appointmentId, doctor_short_name, speciality_name" id="43d03821-0302-4da0-8105-41ed3011ad23"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointmentId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.APPOINTMENT_ID</con:sourcePath><con:targetType>appointmentId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>specialityName</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.SPECIALITY_NAME</con:sourcePath><con:targetType>specName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>doctor_short_name</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.DOCTOR_SHORT_NAME</con:sourcePath><con:targetType>docShortName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик" id="0f954e33-27ea-48f4-9b4d-42b705f9d625"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
import java.text.SimpleDateFormat
import java.time.LocalDateTime
import java.util.Date
import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

log.info "Отправка сообщения об изменении статуса ТМК"

def date = new Date()
log.info date
def currentDateTimeForDB = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date)
testRunner.testCase.setPropertyValue("currentDateTimeForDB", currentDateTimeForDB.toString())

Date dateMinus = LocalDateTime.now().plusSeconds(-67).toDate()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS").format(dateMinus)
def eventDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(dateMinus)
def timePatientRejectCall = new SimpleDateFormat("HH:mm").format(dateMinus)
def timePatientDidNotAnswer = new SimpleDateFormat("dd.MM.yyyy' в 'HH:mm").format(dateMinus)
testRunner.testCase.setPropertyValue("eventDateTime", eventDateTime.toString())
testRunner.testCase.setPropertyValue("currentDateTime", currentDateTime.toString())
testRunner.testCase.setPropertyValue("timePatientRejectCall", timePatientRejectCall.toString())
testRunner.testCase.setPropertyValue("timePatientDidNotAnswer", timePatientDidNotAnswer.toString())

patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
appointmentId = testRunner.testCase.getPropertyValue("appointmentId")
callCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")
userId= testRunner.testCase.testSuite.getPropertyValue("userId")
deviceGuid = java.util.UUID.randomUUID()

message="""{
    "patientId": """+patientId+""",
    "deviceId": \""""+deviceGuid+"""\",
    "productType": "emiasInfo",
    "appointmentId": """+appointmentId+""",
    "participantURL": "/7d47420b-5dee-4cfe-bbf1-349fd9776370?participantUuid\u003d1436b14f-479d-432a-8c7f-b3301168b260",
    "eventType": \""""+eventType+"""\",
    "eventDateTime": \""""+eventDateTime+"""\",
    "unsuccessCallCounter": """+callCounter+"""
}"""

mainScripts.kafka().sendMessageToKafka2("topicTmkNotify",message)

sleep(10000)


query="SELECT create_date FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
createDate=notifications[0].create_date.toString()
String createdDate = createDate.substring(0, createDate.length() - 3)
createdDateParsed = Date.parse("yyyy-MM-dd HH:mm:ss.SSS", createdDate)
log.info createdDateParsed
int longTime = (createdDateParsed.getTime() - dateMinus.getTime())/1000
int hours = (longTime / 3600)*60;
int minutes = longTime / 3600*60 + (longTime / 3600) / 60
int seconds = longTime % 60;
String timeCallInProgress = String.format("%02d:%02d", minutes, seconds)
log.info timeCallInProgress
testRunner.testCase.setPropertyValue("timeCallInProgress", timeCallInProgress.toString())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification" id="5d55d315-c556-4b63-88c4-eaee88c93aad"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое = "+expValue.toString()+", фактическое ="+currentValue.toString())
}

def checkDescription( String description){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	doctorShortName = testRunner.testCase.getPropertyValue("docShortName")
	timePatientRejectCall = testRunner.testCase.getPropertyValue("timePatientRejectCall")
	timePatientDidNotAnswer = testRunner.testCase.getPropertyValue("timePatientDidNotAnswer")
	timeCallInProgress = testRunner.testCase.getPropertyValue("timeCallInProgress")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	countResult = callCounter ? (callCounter.endsWith("2") || callCounter.endsWith("3") || callCounter.endsWith("4")) &amp;&amp; !List.of("12", "13", "14").contains(callCounter) ? "раза" : "раз" : null
	desc=""
	switch(eventType){
		case "doctorLoginToRoom":
			desc = "Врач в сети: "+ specialityName +" "+ doctorShortName + " на связи, консультация скоро начнется. Войдите в приложение или ожидайте звонок."
			break
		case "doctorStartCall":
			desc = doctorShortName
			break
		case "patientRejectCall":
			desc = "Вы отклонили вызов от "+ specialityName + " " + doctorShortName + " сегодня в " + timePatientRejectCall
			break
		case "patientDidNotAnswer":
			desc = callCounter=="1" || !callCounter ? "Сегодня в "+ timePatientRejectCall + " звонил " + specialityName + " " + doctorShortName : "Вам звонил (" + callCounter  + ") " + countResult + " " + specialityName + " " + doctorShortName + " Последний " + timePatientDidNotAnswer
			break
		case "conferenceSuccesfullyFinished":
			desc = specialityName + doctorShortName + " провел онлайн-консультацию. Результат скоро появится в Медкарте."
			break
		case "callInProgress":
			desc = "Консультация идет " +timeCallInProgress
			break	
	}
	expectedDesc=desc
	checkParameter("notification.description",expectedDesc,description)
}

def checkTitle( String title){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	expTitle=""
	switch(eventType){
		case "doctorLoginToRoom":
			expTitle = "Онлайн-консультация скоро начнется"
			break
		case "doctorStartCall":
			expTitle = specialityName
			break
		case "patientRejectCall":
			expTitle = "Вызов от "+ specialityName + " отклонен"
			break
		case "patientDidNotAnswer":
			expTitle = callCounter=="1" || !callCounter ? "Пропущен вызов от " + specialityName: "Пропущены вызовы (" + callCounter  + ") от " + specialityName
			break
		case "conferenceSuccesfullyFinished":
			expTitle = "Онлайн-консультация состоялась"
			break
		case "callInProgress":
			expTitle = "Онлайн-консультация"
			break	
	}
	expectedTitle=expTitle
	log.info title
	checkParameter("notification.title",expectedTitle,title)
}

userId = testRunner.testCase.testSuite.getPropertyValue("userId")
currentDateTimeForDB= testRunner.testCase.getPropertyValue("currentDateTimeForDB")
query="SELECT * FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
if(notifications.size() == 1){
	notification=notifications[0]
	checkTitle(notification.title)
	checkDescription(notification.description)
	checkParameter("notification.deleted",false,notification.deleted )
	checkParameter("notification.viewed",false,notification.viewed )
	testRunner.testCase.setPropertyValue("notificationId", notification.id.toString())
}
else testRunner.fail("Количество записей в f_notification не равно 1. фактическое ="+notifications.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_telemedicine" id="448996ea-c136-4f9c-a510-ffe6b9a92590"><con:settings/><con:config><script>import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

appointmentId = testRunner.testCase.getPropertyValue("appointmentId").toLong()
eventDateTime = testRunner.testCase.getPropertyValue("currentDateTime").toString()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
unaccessCallCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")

query="SELECT * FROM f_notification_telemedicine WHERE notification_id ="+notificationId
notificationTelemedicine=sql.rows(query)

if(notificationTelemedicine.size() == 1){
	date = (eventDateTime.endsWith("00")) ? notificationTelemedicine[0].event_date_time.toString()+"00" : (eventDateTime.endsWith("0")) ? notificationTelemedicine[0].event_date_time.toString()+"0": notificationTelemedicine[0].event_date_time.toString()
	tm=notificationTelemedicine[0]
	log.info("Найдена запись в f_notification_telemedicine с notification_id ="+notificationId)
	checkParameter("eventDateTime",eventDateTime,date)
	checkParameter("unaccessCallCounter",unaccessCallCounter,tm.unsuccess_call_counter.toString())
	checkParameter("eventType",eventType,tm.event_type.toString())
}
else testRunner.fail("Количество записей в f_notification_telemedicine не равно 1. фактическое ="+notificationTelemedicine.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_task" id="b592fd06-dd3a-4e36-8e53-4ccd70ecaa68"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
import groovy.json.JsonSlurper
import java.util.ArrayList
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

devicesCount = testRunner.testCase.testSuite.getPropertyValue("devicesCount").toInteger()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
devicesToSend = testRunner.testCase.testSuite.getPropertyValue("devicesToSend")
devicesToSendVoip = testRunner.testCase.testSuite.getPropertyValue("devicesToSendVoip")
currentDateTimeForDB = testRunner.testCase.getPropertyValue("currentDateTimeForDB")
eventType=testRunner.testCase.getPropertyValue("eventType")

sendDate=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(currentDateTimeForDB)
log.info sendDate

devicesToSendList=devicesToSend.split(',').collect{it as int}
devicesToSendVoipList=devicesToSendVoip.split(',').collect{it as int}

for(i=1; i &lt;=devicesCount; i++ ){
	deviceGuid=testRunner.testCase.testSuite.getPropertyValue("deviceGuid"+(i))
	if(eventType != 'doctorStartCall'){	
	log.info "Проверяю status=SEND для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'")
		//tasks="select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'"
		log.info tasks
		if(devicesToSendList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
	if(eventType != 'doctorLoginToRoom' &amp;&amp; eventType != 'conferenceSuccesfullyFinished'){
		log.info "Проверяю status=SEND_VOIP для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND_VOIP' and device_guid='"+deviceGuid+"'")
		log.info tasks
		if(devicesToSendVoipList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND_VOIP",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки VOIP уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>eventType</con:name><con:value>doctorStartCall</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>391930072666</con:value></con:property><con:property><con:name>currentDateTime</con:name><con:value>2024-02-12 12:13:51.937</con:value></con:property><con:property><con:name>specName</con:name><con:value>Врач-терапевт участковый</con:value></con:property><con:property><con:name>docShortName</con:name><con:value>Беляев А.А.</con:value></con:property><con:property><con:name>currentDateTimeForDB</con:name><con:value>2024-02-12 12:14:58</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>37994</con:value></con:property><con:property><con:name>timePatientRejectCall</con:name><con:value>12:13</con:value></con:property><con:property><con:name>timePatientDidNotAnswer</con:name><con:value>12.02.2024 в 12:13</con:value></con:property><con:property><con:name>timeCallInProgress</con:name><con:value>01:07</con:value></con:property><con:property><con:name>callCounter</con:name><con:value>1</con:value></con:property><con:property><con:name>eventDateTime</con:name><con:value>2024-02-12T12:13:51.937</con:value></con:property></con:properties></con:testCase><con:testCase id="0d82e9df-db80-4978-9809-f604f5fd4417" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправить сообщение с eventType=patientRejectCall" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Проверить наличие пациента со всеми девайсами" id="254dda7d-7825-4c0b-9364-f402a9250e55"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>87575f5b-f9ac-4151-b446-443b9fb2d85b</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="jdbc" name="Найти appointmentId, doctor_short_name, speciality_name" id="224ea6e2-180b-40c0-8961-05df81141247"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fna.appointment_id, fna.speciality_name, fna.doctor_short_name from f_notification_appointment fna
join f_notification fn on fn.id = fna.notification_id
join f_user fu on fu.id = fn.user_id
where fu.patient_id = ${#TestSuite#patientId} 
and fna.status = 'CREATE'
and fna.doctor_short_name is not NULL
LIMIT 1</con:query><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать appointmentId, doctor_short_name, speciality_name" id="66847dc5-fde5-4f2a-abe0-033fae09411b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointmentId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.APPOINTMENT_ID</con:sourcePath><con:targetType>appointmentId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>specialityName</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.SPECIALITY_NAME</con:sourcePath><con:targetType>specName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>doctor_short_name</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.DOCTOR_SHORT_NAME</con:sourcePath><con:targetType>docShortName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик" id="706fb398-2b40-4d9f-bbca-869f8aafedce"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
import java.text.SimpleDateFormat
import java.time.LocalDateTime
import java.util.Date
import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

log.info "Отправка сообщения об изменении статуса ТМК"

def date = new Date()
log.info date
def currentDateTimeForDB = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date)
testRunner.testCase.setPropertyValue("currentDateTimeForDB", currentDateTimeForDB.toString())

Date dateMinus = LocalDateTime.now().plusSeconds(-67).toDate()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS").format(dateMinus)
def eventDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(dateMinus)
def timePatientRejectCall = new SimpleDateFormat("HH:mm").format(dateMinus)
def timePatientDidNotAnswer = new SimpleDateFormat("dd.MM.yyyy' в 'HH:mm").format(dateMinus)
testRunner.testCase.setPropertyValue("eventDateTime", eventDateTime.toString())
testRunner.testCase.setPropertyValue("currentDateTime", currentDateTime.toString())
testRunner.testCase.setPropertyValue("timePatientRejectCall", timePatientRejectCall.toString())
testRunner.testCase.setPropertyValue("timePatientDidNotAnswer", timePatientDidNotAnswer.toString())

patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
appointmentId = testRunner.testCase.getPropertyValue("appointmentId")
callCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")
userId= testRunner.testCase.testSuite.getPropertyValue("userId")
deviceGuid = java.util.UUID.randomUUID()

message="""{
    "patientId": """+patientId+""",
    "deviceId": \""""+deviceGuid+"""\",
    "productType": "emiasInfo",
    "appointmentId": """+appointmentId+""",
    "participantURL": "/7d47420b-5dee-4cfe-bbf1-349fd9776370?participantUuid\u003d1436b14f-479d-432a-8c7f-b3301168b260",
    "eventType": \""""+eventType+"""\",
    "eventDateTime": \""""+eventDateTime+"""\",
    "unsuccessCallCounter": """+callCounter+"""
}"""

mainScripts.kafka().sendMessageToKafka2("topicTmkNotify",message)

sleep(10000)


query="SELECT create_date FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
createDate=notifications[0].create_date.toString()
String createdDate = createDate.substring(0, createDate.length() - 3)
createdDateParsed = Date.parse("yyyy-MM-dd HH:mm:ss.SSS", createdDate)
log.info createdDateParsed
int longTime = (createdDateParsed.getTime() - dateMinus.getTime())/1000
int hours = (longTime / 3600)*60;
int minutes = longTime / 3600*60 + (longTime / 3600) / 60
int seconds = longTime % 60;
String timeCallInProgress = String.format("%02d:%02d", minutes, seconds)
log.info timeCallInProgress
testRunner.testCase.setPropertyValue("timeCallInProgress", timeCallInProgress.toString())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification" id="9eebd2cf-fbd3-4269-a5b8-ccf5f14f2d12"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое = "+expValue.toString()+", фактическое ="+currentValue.toString())
}

def checkDescription( String description){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	doctorShortName = testRunner.testCase.getPropertyValue("docShortName")
	timePatientRejectCall = testRunner.testCase.getPropertyValue("timePatientRejectCall")
	timePatientDidNotAnswer = testRunner.testCase.getPropertyValue("timePatientDidNotAnswer")
	timeCallInProgress = testRunner.testCase.getPropertyValue("timeCallInProgress")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	countResult = callCounter ? (callCounter.endsWith("2") || callCounter.endsWith("3") || callCounter.endsWith("4")) &amp;&amp; !List.of("12", "13", "14").contains(callCounter) ? "раза" : "раз" : null
	desc=""
	switch(eventType){
		case "doctorLoginToRoom":
			desc = "Врач в сети: "+ specialityName +" "+ doctorShortName + " на связи, консультация скоро начнется. Войдите в приложение или ожидайте звонок."
			break
		case "doctorStartCall":
			desc = doctorShortName
			break
		case "patientRejectCall":
			desc = "Вы отклонили вызов от "+ specialityName + " " + doctorShortName + " сегодня в " + timePatientRejectCall
			break
		case "patientDidNotAnswer":
			desc = callCounter=="1" || !callCounter ? "Сегодня в "+ timePatientRejectCall + " звонил " + specialityName + " " + doctorShortName : "Вам звонил (" + callCounter  + ") " + countResult + " " + specialityName + " " + doctorShortName + " Последний " + timePatientDidNotAnswer
			break
		case "conferenceSuccesfullyFinished":
			desc = specialityName + doctorShortName + " провел онлайн-консультацию. Результат скоро появится в Медкарте."
			break
		case "callInProgress":
			desc = "Консультация идет " +timeCallInProgress
			break	
	}
	expectedDesc=desc
	checkParameter("notification.description",expectedDesc,description)
}

def checkTitle( String title){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	expTitle=""
	switch(eventType){
		case "doctorLoginToRoom":
			expTitle = "Онлайн-консультация скоро начнется"
			break
		case "doctorStartCall":
			expTitle = specialityName
			break
		case "patientRejectCall":
			expTitle = "Вызов от "+ specialityName + " отклонен"
			break
		case "patientDidNotAnswer":
			expTitle = callCounter=="1" || !callCounter ? "Пропущен вызов от " + specialityName: "Пропущены вызовы (" + callCounter  + ") от " + specialityName
			break
		case "conferenceSuccesfullyFinished":
			expTitle = "Онлайн-консультация состоялась"
			break
		case "callInProgress":
			expTitle = "Онлайн-консультация"
			break	
	}
	expectedTitle=expTitle
	log.info title
	checkParameter("notification.title",expectedTitle,title)
}

userId = testRunner.testCase.testSuite.getPropertyValue("userId")
currentDateTimeForDB= testRunner.testCase.getPropertyValue("currentDateTimeForDB")
query="SELECT * FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
if(notifications.size() == 1){
	notification=notifications[0]
	checkTitle(notification.title)
	checkDescription(notification.description)
	checkParameter("notification.deleted",false,notification.deleted )
	checkParameter("notification.viewed",false,notification.viewed )
	testRunner.testCase.setPropertyValue("notificationId", notification.id.toString())
}
else testRunner.fail("Количество записей в f_notification не равно 1. фактическое ="+notifications.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_telemedicine" id="c537831f-d94d-481c-a7cc-06a350673587"><con:settings/><con:config><script>import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

appointmentId = testRunner.testCase.getPropertyValue("appointmentId").toLong()
eventDateTime = testRunner.testCase.getPropertyValue("currentDateTime").toString()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
unaccessCallCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")

query="SELECT * FROM f_notification_telemedicine WHERE notification_id ="+notificationId
notificationTelemedicine=sql.rows(query)

if(notificationTelemedicine.size() == 1){
	date = (eventDateTime.endsWith("00")) ? notificationTelemedicine[0].event_date_time.toString()+"00" : (eventDateTime.endsWith("0")) ? notificationTelemedicine[0].event_date_time.toString()+"0": notificationTelemedicine[0].event_date_time.toString()
	tm=notificationTelemedicine[0]
	log.info("Найдена запись в f_notification_telemedicine с notification_id ="+notificationId)
	checkParameter("eventDateTime",eventDateTime,date)
	checkParameter("unaccessCallCounter",unaccessCallCounter,tm.unsuccess_call_counter.toString())
	checkParameter("eventType",eventType,tm.event_type.toString())
}
else testRunner.fail("Количество записей в f_notification_telemedicine не равно 1. фактическое ="+notificationTelemedicine.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_task" id="a5001aba-e0f7-4e17-890a-79bf0bf6f72d"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
import groovy.json.JsonSlurper
import java.util.ArrayList
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

devicesCount = testRunner.testCase.testSuite.getPropertyValue("devicesCount").toInteger()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
devicesToSend = testRunner.testCase.testSuite.getPropertyValue("devicesToSend")
devicesToSendVoip = testRunner.testCase.testSuite.getPropertyValue("devicesToSendVoip")
currentDateTimeForDB = testRunner.testCase.getPropertyValue("currentDateTimeForDB")
eventType=testRunner.testCase.getPropertyValue("eventType")

sendDate=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(currentDateTimeForDB)
log.info sendDate

devicesToSendList=devicesToSend.split(',').collect{it as int}
devicesToSendVoipList=devicesToSendVoip.split(',').collect{it as int}

for(i=1; i &lt;=devicesCount; i++ ){
	deviceGuid=testRunner.testCase.testSuite.getPropertyValue("deviceGuid"+(i))
	if(eventType != 'doctorStartCall'){	
	log.info "Проверяю status=SEND для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'")
		//tasks="select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'"
		log.info tasks
		if(devicesToSendList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
	if(eventType != 'doctorLoginToRoom' &amp;&amp; eventType != 'conferenceSuccesfullyFinished'){
		log.info "Проверяю status=SEND_VOIP для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND_VOIP' and device_guid='"+deviceGuid+"'")
		log.info tasks
		if(devicesToSendVoipList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND_VOIP",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки VOIP уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>eventType</con:name><con:value>patientRejectCall</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>391930072666</con:value></con:property><con:property><con:name>currentDateTime</con:name><con:value>2024-02-12 12:14:04.391</con:value></con:property><con:property><con:name>specName</con:name><con:value>Врач-терапевт участковый</con:value></con:property><con:property><con:name>docShortName</con:name><con:value>Беляев А.А.</con:value></con:property><con:property><con:name>currentDateTimeForDB</con:name><con:value>2024-02-12 12:15:11</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>37995</con:value></con:property><con:property><con:name>timePatientRejectCall</con:name><con:value>12:14</con:value></con:property><con:property><con:name>timePatientDidNotAnswer</con:name><con:value>12.02.2024 в 12:14</con:value></con:property><con:property><con:name>timeCallInProgress</con:name><con:value>01:07</con:value></con:property><con:property><con:name>callCounter</con:name><con:value>1</con:value></con:property><con:property><con:name>eventDateTime</con:name><con:value>2024-02-12T12:14:04.391</con:value></con:property></con:properties></con:testCase><con:testCase id="53f47377-0d1c-4aa0-a7b1-e985cc16da0f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправить сообщение с eventType=patientDidNotAnswer и unaccessCallCounter=1" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Проверить наличие пациента со всеми девайсами" id="473b06b9-5bc2-4304-8887-5cdaac80436c"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>87575f5b-f9ac-4151-b446-443b9fb2d85b</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="jdbc" name="Найти appointmentId, doctor_short_name, speciality_name" id="4aeb8b65-c2b2-4867-9a9e-6c177a820b76"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fna.appointment_id, fna.speciality_name, fna.doctor_short_name from f_notification_appointment fna
join f_notification fn on fn.id = fna.notification_id
join f_user fu on fu.id = fn.user_id
where fu.patient_id = ${#TestSuite#patientId} 
and fna.status = 'CREATE'
and fna.doctor_short_name is not NULL
LIMIT 1</con:query><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать appointmentId, doctor_short_name, speciality_name" id="106b828b-74e9-40e8-8df5-0d6625f38999"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointmentId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.APPOINTMENT_ID</con:sourcePath><con:targetType>appointmentId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>specialityName</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.SPECIALITY_NAME</con:sourcePath><con:targetType>specName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>doctor_short_name</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.DOCTOR_SHORT_NAME</con:sourcePath><con:targetType>docShortName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик" id="b541fe37-3d6a-4799-b4f1-7eccb3fcedfe"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
import java.text.SimpleDateFormat
import java.time.LocalDateTime
import java.util.Date
import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

log.info "Отправка сообщения об изменении статуса ТМК"

def date = new Date()
log.info date
def currentDateTimeForDB = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date)
testRunner.testCase.setPropertyValue("currentDateTimeForDB", currentDateTimeForDB.toString())

Date dateMinus = LocalDateTime.now().plusSeconds(-67).toDate()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS").format(dateMinus)
def eventDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(dateMinus)
def timePatientRejectCall = new SimpleDateFormat("HH:mm").format(dateMinus)
def timePatientDidNotAnswer = new SimpleDateFormat("dd.MM.yyyy' в 'HH:mm").format(dateMinus)
testRunner.testCase.setPropertyValue("eventDateTime", eventDateTime.toString())
testRunner.testCase.setPropertyValue("currentDateTime", currentDateTime.toString())
testRunner.testCase.setPropertyValue("timePatientRejectCall", timePatientRejectCall.toString())
testRunner.testCase.setPropertyValue("timePatientDidNotAnswer", timePatientDidNotAnswer.toString())

patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
appointmentId = testRunner.testCase.getPropertyValue("appointmentId")
callCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")
userId= testRunner.testCase.testSuite.getPropertyValue("userId")
deviceGuid = java.util.UUID.randomUUID()

message="""{
    "patientId": """+patientId+""",
    "deviceId": \""""+deviceGuid+"""\",
    "productType": "emiasInfo",
    "appointmentId": """+appointmentId+""",
    "participantURL": "/7d47420b-5dee-4cfe-bbf1-349fd9776370?participantUuid\u003d1436b14f-479d-432a-8c7f-b3301168b260",
    "eventType": \""""+eventType+"""\",
    "eventDateTime": \""""+eventDateTime+"""\",
    "unsuccessCallCounter": """+callCounter+"""
}"""

mainScripts.kafka().sendMessageToKafka2("topicTmkNotify",message)

sleep(10000)


query="SELECT create_date FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
createDate=notifications[0].create_date.toString()
String createdDate = createDate.substring(0, createDate.length() - 3)
createdDateParsed = Date.parse("yyyy-MM-dd HH:mm:ss.SSS", createdDate)
log.info createdDateParsed
int longTime = (createdDateParsed.getTime() - dateMinus.getTime())/1000
int hours = (longTime / 3600)*60;
int minutes = longTime / 3600*60 + (longTime / 3600) / 60
int seconds = longTime % 60;
String timeCallInProgress = String.format("%02d:%02d", minutes, seconds)
log.info timeCallInProgress
testRunner.testCase.setPropertyValue("timeCallInProgress", timeCallInProgress.toString())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification" id="b609cc19-6006-4667-aed3-399f3d44b355"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое = "+expValue.toString()+", фактическое ="+currentValue.toString())
}

def checkDescription( String description){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	doctorShortName = testRunner.testCase.getPropertyValue("docShortName")
	timePatientRejectCall = testRunner.testCase.getPropertyValue("timePatientRejectCall")
	timePatientDidNotAnswer = testRunner.testCase.getPropertyValue("timePatientDidNotAnswer")
	timeCallInProgress = testRunner.testCase.getPropertyValue("timeCallInProgress")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	countResult = callCounter ? (callCounter.endsWith("2") || callCounter.endsWith("3") || callCounter.endsWith("4")) &amp;&amp; !List.of("12", "13", "14").contains(callCounter) ? "раза" : "раз" : null
	desc=""
	switch(eventType){
		case "doctorLoginToRoom":
			desc = "Врач в сети: "+ specialityName +" "+ doctorShortName + " на связи, консультация скоро начнется. Войдите в приложение или ожидайте звонок."
			break
		case "doctorStartCall":
			desc = doctorShortName
			break
		case "patientRejectCall":
			desc = "Вы отклонили вызов от "+ specialityName + " " + doctorShortName + " сегодня в " + timePatientRejectCall
			break
		case "patientDidNotAnswer":
			desc = callCounter=="1" || !callCounter ? "Сегодня в "+ timePatientRejectCall + " звонил " + specialityName + " " + doctorShortName : "Вам звонил (" + callCounter  + ") " + countResult + " " + specialityName + " " + doctorShortName + " Последний " + timePatientDidNotAnswer
			break
		case "conferenceSuccesfullyFinished":
			desc = specialityName + doctorShortName + " провел онлайн-консультацию. Результат скоро появится в Медкарте."
			break
		case "callInProgress":
			desc = "Консультация идет " +timeCallInProgress
			break	
	}
	expectedDesc=desc
	checkParameter("notification.description",expectedDesc,description)
}

def checkTitle( String title){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	expTitle=""
	switch(eventType){
		case "doctorLoginToRoom":
			expTitle = "Онлайн-консультация скоро начнется"
			break
		case "doctorStartCall":
			expTitle = specialityName
			break
		case "patientRejectCall":
			expTitle = "Вызов от "+ specialityName + " отклонен"
			break
		case "patientDidNotAnswer":
			expTitle = callCounter=="1" || !callCounter ? "Пропущен вызов от " + specialityName: "Пропущены вызовы (" + callCounter  + ") от " + specialityName
			break
		case "conferenceSuccesfullyFinished":
			expTitle = "Онлайн-консультация состоялась"
			break
		case "callInProgress":
			expTitle = "Онлайн-консультация"
			break	
	}
	expectedTitle=expTitle
	log.info title
	checkParameter("notification.title",expectedTitle,title)
}

userId = testRunner.testCase.testSuite.getPropertyValue("userId")
currentDateTimeForDB= testRunner.testCase.getPropertyValue("currentDateTimeForDB")
query="SELECT * FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
if(notifications.size() == 1){
	notification=notifications[0]
	checkTitle(notification.title)
	checkDescription(notification.description)
	checkParameter("notification.deleted",false,notification.deleted )
	checkParameter("notification.viewed",false,notification.viewed )
	testRunner.testCase.setPropertyValue("notificationId", notification.id.toString())
}
else testRunner.fail("Количество записей в f_notification не равно 1. фактическое ="+notifications.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_telemedicine" id="8fa90ad8-41f7-480a-9186-1b52b25cbe97"><con:settings/><con:config><script>import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

appointmentId = testRunner.testCase.getPropertyValue("appointmentId").toLong()
eventDateTime = testRunner.testCase.getPropertyValue("currentDateTime").toString()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
unaccessCallCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")

query="SELECT * FROM f_notification_telemedicine WHERE notification_id ="+notificationId
notificationTelemedicine=sql.rows(query)

if(notificationTelemedicine.size() == 1){
	date = (eventDateTime.endsWith("00")) ? notificationTelemedicine[0].event_date_time.toString()+"00" : (eventDateTime.endsWith("0")) ? notificationTelemedicine[0].event_date_time.toString()+"0": notificationTelemedicine[0].event_date_time.toString()
	tm=notificationTelemedicine[0]
	log.info("Найдена запись в f_notification_telemedicine с notification_id ="+notificationId)
	checkParameter("eventDateTime",eventDateTime,date)
	checkParameter("unaccessCallCounter",unaccessCallCounter,tm.unsuccess_call_counter.toString())
	checkParameter("eventType",eventType,tm.event_type.toString())
}
else testRunner.fail("Количество записей в f_notification_telemedicine не равно 1. фактическое ="+notificationTelemedicine.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_task" id="879ce8ff-ad11-4551-887c-511ecf7b4e04"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
import groovy.json.JsonSlurper
import java.util.ArrayList
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

devicesCount = testRunner.testCase.testSuite.getPropertyValue("devicesCount").toInteger()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
devicesToSend = testRunner.testCase.testSuite.getPropertyValue("devicesToSend")
devicesToSendVoip = testRunner.testCase.testSuite.getPropertyValue("devicesToSendVoip")
currentDateTimeForDB = testRunner.testCase.getPropertyValue("currentDateTimeForDB")
eventType=testRunner.testCase.getPropertyValue("eventType")

sendDate=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(currentDateTimeForDB)
log.info sendDate

devicesToSendList=devicesToSend.split(',').collect{it as int}
devicesToSendVoipList=devicesToSendVoip.split(',').collect{it as int}

for(i=1; i &lt;=devicesCount; i++ ){
	deviceGuid=testRunner.testCase.testSuite.getPropertyValue("deviceGuid"+(i))
	if(eventType != 'doctorStartCall'){	
	log.info "Проверяю status=SEND для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'")
		//tasks="select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'"
		log.info tasks
		if(devicesToSendList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
	if(eventType != 'doctorLoginToRoom' &amp;&amp; eventType != 'conferenceSuccesfullyFinished'){
		log.info "Проверяю status=SEND_VOIP для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND_VOIP' and device_guid='"+deviceGuid+"'")
		log.info tasks
		if(devicesToSendVoipList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND_VOIP",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки VOIP уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>eventType</con:name><con:value>patientDidNotAnswer</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>391930072666</con:value></con:property><con:property><con:name>currentDateTime</con:name><con:value>2024-02-12 12:14:17.000</con:value></con:property><con:property><con:name>specName</con:name><con:value>Врач-терапевт участковый</con:value></con:property><con:property><con:name>docShortName</con:name><con:value>Беляев А.А.</con:value></con:property><con:property><con:name>currentDateTimeForDB</con:name><con:value>2024-02-12 12:15:23</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>37996</con:value></con:property><con:property><con:name>timePatientRejectCall</con:name><con:value>12:14</con:value></con:property><con:property><con:name>timePatientDidNotAnswer</con:name><con:value>12.02.2024 в 12:14</con:value></con:property><con:property><con:name>timeCallInProgress</con:name><con:value>01:07</con:value></con:property><con:property><con:name>callCounter</con:name><con:value>1</con:value></con:property><con:property><con:name>eventDateTime</con:name><con:value>2024-02-12T12:14:17.000</con:value></con:property></con:properties></con:testCase><con:testCase id="0d1bffd6-ec51-4387-a5c0-7400a0c84773" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправить сообщение с eventType=patientDidNotAnswer и unaccessCallCounter=2" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Проверить наличие пациента со всеми девайсами" id="ca1a8840-b5de-42f7-bdfc-e2858159191d"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>87575f5b-f9ac-4151-b446-443b9fb2d85b</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="jdbc" name="Найти appointmentId, doctor_short_name, speciality_name" id="668bfc23-7cf1-4f5c-b0a8-9e0a1dff9e87"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fna.appointment_id, fna.speciality_name, fna.doctor_short_name from f_notification_appointment fna
join f_notification fn on fn.id = fna.notification_id
join f_user fu on fu.id = fn.user_id
where fu.patient_id = ${#TestSuite#patientId} 
and fna.status = 'CREATE'
and fna.doctor_short_name is not NULL
LIMIT 1</con:query><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать appointmentId, doctor_short_name, speciality_name" id="3f303881-1df5-4319-af25-68b0fee346fd"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointmentId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.APPOINTMENT_ID</con:sourcePath><con:targetType>appointmentId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>specialityName</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.SPECIALITY_NAME</con:sourcePath><con:targetType>specName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>doctor_short_name</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.DOCTOR_SHORT_NAME</con:sourcePath><con:targetType>docShortName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик" id="ed0a5f5e-2b7b-41c7-a183-74dcc1d4988d"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
import java.text.SimpleDateFormat
import java.time.LocalDateTime
import java.util.Date
import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

log.info "Отправка сообщения об изменении статуса ТМК"

def date = new Date()
log.info date
def currentDateTimeForDB = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date)
testRunner.testCase.setPropertyValue("currentDateTimeForDB", currentDateTimeForDB.toString())

Date dateMinus = LocalDateTime.now().plusSeconds(-67).toDate()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS").format(dateMinus)
def eventDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(dateMinus)
def timePatientRejectCall = new SimpleDateFormat("HH:mm").format(dateMinus)
def timePatientDidNotAnswer = new SimpleDateFormat("dd.MM.yyyy' в 'HH:mm").format(dateMinus)
testRunner.testCase.setPropertyValue("eventDateTime", eventDateTime.toString())
testRunner.testCase.setPropertyValue("currentDateTime", currentDateTime.toString())
testRunner.testCase.setPropertyValue("timePatientRejectCall", timePatientRejectCall.toString())
testRunner.testCase.setPropertyValue("timePatientDidNotAnswer", timePatientDidNotAnswer.toString())

patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
appointmentId = testRunner.testCase.getPropertyValue("appointmentId")
callCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")
userId= testRunner.testCase.testSuite.getPropertyValue("userId")
deviceGuid = java.util.UUID.randomUUID()

message="""{
    "patientId": """+patientId+""",
    "deviceId": \""""+deviceGuid+"""\",
    "productType": "emiasInfo",
    "appointmentId": """+appointmentId+""",
    "participantURL": "/7d47420b-5dee-4cfe-bbf1-349fd9776370?participantUuid\u003d1436b14f-479d-432a-8c7f-b3301168b260",
    "eventType": \""""+eventType+"""\",
    "eventDateTime": \""""+eventDateTime+"""\",
    "unsuccessCallCounter": """+callCounter+"""
}"""

mainScripts.kafka().sendMessageToKafka2("topicTmkNotify",message)

sleep(10000)


query="SELECT create_date FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
createDate=notifications[0].create_date.toString()
String createdDate = createDate.substring(0, createDate.length() - 3)
createdDateParsed = Date.parse("yyyy-MM-dd HH:mm:ss.SSS", createdDate)
log.info createdDateParsed
int longTime = (createdDateParsed.getTime() - dateMinus.getTime())/1000
int hours = (longTime / 3600)*60;
int minutes = longTime / 3600*60 + (longTime / 3600) / 60
int seconds = longTime % 60;
String timeCallInProgress = String.format("%02d:%02d", minutes, seconds)
log.info timeCallInProgress
testRunner.testCase.setPropertyValue("timeCallInProgress", timeCallInProgress.toString())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification" id="990aadbd-3909-4dc8-88fd-a436aadafd81"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое = "+expValue.toString()+", фактическое ="+currentValue.toString())
}

def checkDescription( String description){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	doctorShortName = testRunner.testCase.getPropertyValue("docShortName")
	timePatientRejectCall = testRunner.testCase.getPropertyValue("timePatientRejectCall")
	timePatientDidNotAnswer = testRunner.testCase.getPropertyValue("timePatientDidNotAnswer")
	timeCallInProgress = testRunner.testCase.getPropertyValue("timeCallInProgress")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	countResult = callCounter ? (callCounter.endsWith("2") || callCounter.endsWith("3") || callCounter.endsWith("4")) &amp;&amp; !List.of("12", "13", "14").contains(callCounter) ? "раза" : "раз" : null
	desc=""
	switch(eventType){
		case "doctorLoginToRoom":
			desc = "Врач в сети: "+ specialityName +" "+ doctorShortName + " на связи, консультация скоро начнется. Войдите в приложение или ожидайте звонок."
			break
		case "doctorStartCall":
			desc = doctorShortName
			break
		case "patientRejectCall":
			desc = "Вы отклонили вызов от "+ specialityName + " " + doctorShortName + " сегодня в " + timePatientRejectCall
			break
		case "patientDidNotAnswer":
			desc = callCounter=="1" || !callCounter ? "Сегодня в "+ timePatientRejectCall + " звонил " + specialityName + " " + doctorShortName : "Вам звонил (" + callCounter  + ") " + countResult + " " + specialityName + " " + doctorShortName + " Последний " + timePatientDidNotAnswer
			break
		case "conferenceSuccesfullyFinished":
			desc = specialityName + doctorShortName + " провел онлайн-консультацию. Результат скоро появится в Медкарте."
			break
		case "callInProgress":
			desc = "Консультация идет " +timeCallInProgress
			break	
	}
	expectedDesc=desc
	checkParameter("notification.description",expectedDesc,description)
}

def checkTitle( String title){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	expTitle=""
	switch(eventType){
		case "doctorLoginToRoom":
			expTitle = "Онлайн-консультация скоро начнется"
			break
		case "doctorStartCall":
			expTitle = specialityName
			break
		case "patientRejectCall":
			expTitle = "Вызов от "+ specialityName + " отклонен"
			break
		case "patientDidNotAnswer":
			expTitle = callCounter=="1" || !callCounter ? "Пропущен вызов от " + specialityName: "Пропущены вызовы (" + callCounter  + ") от " + specialityName
			break
		case "conferenceSuccesfullyFinished":
			expTitle = "Онлайн-консультация состоялась"
			break
		case "callInProgress":
			expTitle = "Онлайн-консультация"
			break	
	}
	expectedTitle=expTitle
	log.info title
	checkParameter("notification.title",expectedTitle,title)
}

userId = testRunner.testCase.testSuite.getPropertyValue("userId")
currentDateTimeForDB= testRunner.testCase.getPropertyValue("currentDateTimeForDB")
query="SELECT * FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
if(notifications.size() == 1){
	notification=notifications[0]
	checkTitle(notification.title)
	checkDescription(notification.description)
	checkParameter("notification.deleted",false,notification.deleted )
	checkParameter("notification.viewed",false,notification.viewed )
	testRunner.testCase.setPropertyValue("notificationId", notification.id.toString())
}
else testRunner.fail("Количество записей в f_notification не равно 1. фактическое ="+notifications.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_telemedicine" id="7377fbfa-9774-470f-889a-a9ce9bfd35eb"><con:settings/><con:config><script>import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

appointmentId = testRunner.testCase.getPropertyValue("appointmentId").toLong()
eventDateTime = testRunner.testCase.getPropertyValue("currentDateTime").toString()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
unaccessCallCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")

query="SELECT * FROM f_notification_telemedicine WHERE notification_id ="+notificationId
notificationTelemedicine=sql.rows(query)

if(notificationTelemedicine.size() == 1){
	date = (eventDateTime.endsWith("00")) ? notificationTelemedicine[0].event_date_time.toString()+"00" : (eventDateTime.endsWith("0")) ? notificationTelemedicine[0].event_date_time.toString()+"0": notificationTelemedicine[0].event_date_time.toString()
	tm=notificationTelemedicine[0]
	log.info("Найдена запись в f_notification_telemedicine с notification_id ="+notificationId)
	checkParameter("eventDateTime",eventDateTime,date)
	checkParameter("unaccessCallCounter",unaccessCallCounter,tm.unsuccess_call_counter.toString())
	checkParameter("eventType",eventType,tm.event_type.toString())
}
else testRunner.fail("Количество записей в f_notification_telemedicine не равно 1. фактическое ="+notificationTelemedicine.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_task" id="35687b22-3325-471d-81fb-72def4002998"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
import groovy.json.JsonSlurper
import java.util.ArrayList
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

devicesCount = testRunner.testCase.testSuite.getPropertyValue("devicesCount").toInteger()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
devicesToSend = testRunner.testCase.testSuite.getPropertyValue("devicesToSend")
devicesToSendVoip = testRunner.testCase.testSuite.getPropertyValue("devicesToSendVoip")
currentDateTimeForDB = testRunner.testCase.getPropertyValue("currentDateTimeForDB")
eventType=testRunner.testCase.getPropertyValue("eventType")

sendDate=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(currentDateTimeForDB)
log.info sendDate

devicesToSendList=devicesToSend.split(',').collect{it as int}
devicesToSendVoipList=devicesToSendVoip.split(',').collect{it as int}

for(i=1; i &lt;=devicesCount; i++ ){
	deviceGuid=testRunner.testCase.testSuite.getPropertyValue("deviceGuid"+(i))
	if(eventType != 'doctorStartCall'){	
	log.info "Проверяю status=SEND для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'")
		//tasks="select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'"
		log.info tasks
		if(devicesToSendList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
	if(eventType != 'doctorLoginToRoom' &amp;&amp; eventType != 'conferenceSuccesfullyFinished'){
		log.info "Проверяю status=SEND_VOIP для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND_VOIP' and device_guid='"+deviceGuid+"'")
		log.info tasks
		if(devicesToSendVoipList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND_VOIP",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки VOIP уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>eventType</con:name><con:value>patientDidNotAnswer</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>391930072666</con:value></con:property><con:property><con:name>currentDateTime</con:name><con:value>2024-02-12 12:14:28.844</con:value></con:property><con:property><con:name>specName</con:name><con:value>Врач-терапевт участковый</con:value></con:property><con:property><con:name>docShortName</con:name><con:value>Беляев А.А.</con:value></con:property><con:property><con:name>currentDateTimeForDB</con:name><con:value>2024-02-12 12:15:35</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>37997</con:value></con:property><con:property><con:name>timePatientRejectCall</con:name><con:value>12:14</con:value></con:property><con:property><con:name>timePatientDidNotAnswer</con:name><con:value>12.02.2024 в 12:14</con:value></con:property><con:property><con:name>timeCallInProgress</con:name><con:value>01:07</con:value></con:property><con:property><con:name>callCounter</con:name><con:value>2</con:value></con:property><con:property><con:name>eventDateTime</con:name><con:value>2024-02-12T12:14:28.844</con:value></con:property></con:properties></con:testCase><con:testCase id="08479c81-641d-497b-ae7e-de94d77b1f6d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправить сообщение с eventType=patientDidNotAnswer и unaccessCallCounter=3" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Проверить наличие пациента со всеми девайсами" id="e0086274-7cb4-40bc-89ba-e50402797c5e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>87575f5b-f9ac-4151-b446-443b9fb2d85b</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="jdbc" name="Найти appointmentId, doctor_short_name, speciality_name" id="dc02042a-c88e-47b5-b048-2a24f66f1ec2"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fna.appointment_id, fna.speciality_name, fna.doctor_short_name from f_notification_appointment fna
join f_notification fn on fn.id = fna.notification_id
join f_user fu on fu.id = fn.user_id
where fu.patient_id = ${#TestSuite#patientId} 
and fna.status = 'CREATE'
and fna.doctor_short_name is not NULL
LIMIT 1</con:query><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать appointmentId, doctor_short_name, speciality_name" id="6b060d47-8333-4e4c-8b13-141e822b41c0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointmentId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.APPOINTMENT_ID</con:sourcePath><con:targetType>appointmentId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>specialityName</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.SPECIALITY_NAME</con:sourcePath><con:targetType>specName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>doctor_short_name</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.DOCTOR_SHORT_NAME</con:sourcePath><con:targetType>docShortName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик" id="bc50c51d-8596-4969-bafc-c598667bae54"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
import java.text.SimpleDateFormat
import java.time.LocalDateTime
import java.util.Date
import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

log.info "Отправка сообщения об изменении статуса ТМК"

def date = new Date()
log.info date
def currentDateTimeForDB = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date)
testRunner.testCase.setPropertyValue("currentDateTimeForDB", currentDateTimeForDB.toString())

Date dateMinus = LocalDateTime.now().plusSeconds(-67).toDate()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS").format(dateMinus)
def eventDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(dateMinus)
def timePatientRejectCall = new SimpleDateFormat("HH:mm").format(dateMinus)
def timePatientDidNotAnswer = new SimpleDateFormat("dd.MM.yyyy' в 'HH:mm").format(dateMinus)
testRunner.testCase.setPropertyValue("eventDateTime", eventDateTime.toString())
testRunner.testCase.setPropertyValue("currentDateTime", currentDateTime.toString())
testRunner.testCase.setPropertyValue("timePatientRejectCall", timePatientRejectCall.toString())
testRunner.testCase.setPropertyValue("timePatientDidNotAnswer", timePatientDidNotAnswer.toString())

patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
appointmentId = testRunner.testCase.getPropertyValue("appointmentId")
callCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")
userId= testRunner.testCase.testSuite.getPropertyValue("userId")
deviceGuid = java.util.UUID.randomUUID()

message="""{
    "patientId": """+patientId+""",
    "deviceId": \""""+deviceGuid+"""\",
    "productType": "emiasInfo",
    "appointmentId": """+appointmentId+""",
    "participantURL": "/7d47420b-5dee-4cfe-bbf1-349fd9776370?participantUuid\u003d1436b14f-479d-432a-8c7f-b3301168b260",
    "eventType": \""""+eventType+"""\",
    "eventDateTime": \""""+eventDateTime+"""\",
    "unsuccessCallCounter": """+callCounter+"""
}"""

mainScripts.kafka().sendMessageToKafka2("topicTmkNotify",message)

sleep(10000)


query="SELECT create_date FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
createDate=notifications[0].create_date.toString()
String createdDate = createDate.substring(0, createDate.length() - 3)
createdDateParsed = Date.parse("yyyy-MM-dd HH:mm:ss.SSS", createdDate)
log.info createdDateParsed
int longTime = (createdDateParsed.getTime() - dateMinus.getTime())/1000
int hours = (longTime / 3600)*60;
int minutes = longTime / 3600*60 + (longTime / 3600) / 60
int seconds = longTime % 60;
String timeCallInProgress = String.format("%02d:%02d", minutes, seconds)
log.info timeCallInProgress
testRunner.testCase.setPropertyValue("timeCallInProgress", timeCallInProgress.toString())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification" id="acb7c592-e2b4-4628-ac30-9ee2b69456b8"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое = "+expValue.toString()+", фактическое ="+currentValue.toString())
}

def checkDescription( String description){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	doctorShortName = testRunner.testCase.getPropertyValue("docShortName")
	timePatientRejectCall = testRunner.testCase.getPropertyValue("timePatientRejectCall")
	timePatientDidNotAnswer = testRunner.testCase.getPropertyValue("timePatientDidNotAnswer")
	timeCallInProgress = testRunner.testCase.getPropertyValue("timeCallInProgress")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	countResult = callCounter ? (callCounter.endsWith("2") || callCounter.endsWith("3") || callCounter.endsWith("4")) &amp;&amp; !List.of("12", "13", "14").contains(callCounter) ? "раза" : "раз" : null
	desc=""
	switch(eventType){
		case "doctorLoginToRoom":
			desc = "Врач в сети: "+ specialityName +" "+ doctorShortName + " на связи, консультация скоро начнется. Войдите в приложение или ожидайте звонок."
			break
		case "doctorStartCall":
			desc = doctorShortName
			break
		case "patientRejectCall":
			desc = "Вы отклонили вызов от "+ specialityName + " " + doctorShortName + " сегодня в " + timePatientRejectCall
			break
		case "patientDidNotAnswer":
			desc = callCounter=="1" || !callCounter ? "Сегодня в "+ timePatientRejectCall + " звонил " + specialityName + " " + doctorShortName : "Вам звонил (" + callCounter  + ") " + countResult + " " + specialityName + " " + doctorShortName + " Последний " + timePatientDidNotAnswer
			break
		case "conferenceSuccesfullyFinished":
			desc = specialityName + doctorShortName + " провел онлайн-консультацию. Результат скоро появится в Медкарте."
			break
		case "callInProgress":
			desc = "Консультация идет " +timeCallInProgress
			break	
	}
	expectedDesc=desc
	checkParameter("notification.description",expectedDesc,description)
}

def checkTitle( String title){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	expTitle=""
	switch(eventType){
		case "doctorLoginToRoom":
			expTitle = "Онлайн-консультация скоро начнется"
			break
		case "doctorStartCall":
			expTitle = specialityName
			break
		case "patientRejectCall":
			expTitle = "Вызов от "+ specialityName + " отклонен"
			break
		case "patientDidNotAnswer":
			expTitle = callCounter=="1" || !callCounter ? "Пропущен вызов от " + specialityName: "Пропущены вызовы (" + callCounter  + ") от " + specialityName
			break
		case "conferenceSuccesfullyFinished":
			expTitle = "Онлайн-консультация состоялась"
			break
		case "callInProgress":
			expTitle = "Онлайн-консультация"
			break	
	}
	expectedTitle=expTitle
	log.info title
	checkParameter("notification.title",expectedTitle,title)
}

userId = testRunner.testCase.testSuite.getPropertyValue("userId")
currentDateTimeForDB= testRunner.testCase.getPropertyValue("currentDateTimeForDB")
query="SELECT * FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
if(notifications.size() == 1){
	notification=notifications[0]
	checkTitle(notification.title)
	checkDescription(notification.description)
	checkParameter("notification.deleted",false,notification.deleted )
	checkParameter("notification.viewed",false,notification.viewed )
	testRunner.testCase.setPropertyValue("notificationId", notification.id.toString())
}
else testRunner.fail("Количество записей в f_notification не равно 1. фактическое ="+notifications.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_telemedicine" id="e0d4180f-560f-4b9c-9f87-132b6fa918b8"><con:settings/><con:config><script>import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

appointmentId = testRunner.testCase.getPropertyValue("appointmentId").toLong()
eventDateTime = testRunner.testCase.getPropertyValue("currentDateTime").toString()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
unaccessCallCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")

query="SELECT * FROM f_notification_telemedicine WHERE notification_id ="+notificationId
notificationTelemedicine=sql.rows(query)

if(notificationTelemedicine.size() == 1){
	date = (eventDateTime.endsWith("00")) ? notificationTelemedicine[0].event_date_time.toString()+"00" : (eventDateTime.endsWith("0")) ? notificationTelemedicine[0].event_date_time.toString()+"0": notificationTelemedicine[0].event_date_time.toString()
	tm=notificationTelemedicine[0]
	log.info("Найдена запись в f_notification_telemedicine с notification_id ="+notificationId)
	checkParameter("eventDateTime",eventDateTime,date)
	checkParameter("unaccessCallCounter",unaccessCallCounter,tm.unsuccess_call_counter.toString())
	checkParameter("eventType",eventType,tm.event_type.toString())
}
else testRunner.fail("Количество записей в f_notification_telemedicine не равно 1. фактическое ="+notificationTelemedicine.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_task" id="ead3c17d-4d3d-4d0e-821b-ce0623db84cd"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
import groovy.json.JsonSlurper
import java.util.ArrayList
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

devicesCount = testRunner.testCase.testSuite.getPropertyValue("devicesCount").toInteger()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
devicesToSend = testRunner.testCase.testSuite.getPropertyValue("devicesToSend")
devicesToSendVoip = testRunner.testCase.testSuite.getPropertyValue("devicesToSendVoip")
currentDateTimeForDB = testRunner.testCase.getPropertyValue("currentDateTimeForDB")
eventType=testRunner.testCase.getPropertyValue("eventType")

sendDate=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(currentDateTimeForDB)
log.info sendDate

devicesToSendList=devicesToSend.split(',').collect{it as int}
devicesToSendVoipList=devicesToSendVoip.split(',').collect{it as int}

for(i=1; i &lt;=devicesCount; i++ ){
	deviceGuid=testRunner.testCase.testSuite.getPropertyValue("deviceGuid"+(i))
	if(eventType != 'doctorStartCall'){	
	log.info "Проверяю status=SEND для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'")
		//tasks="select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'"
		log.info tasks
		if(devicesToSendList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
	if(eventType != 'doctorLoginToRoom' &amp;&amp; eventType != 'conferenceSuccesfullyFinished'){
		log.info "Проверяю status=SEND_VOIP для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND_VOIP' and device_guid='"+deviceGuid+"'")
		log.info tasks
		if(devicesToSendVoipList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND_VOIP",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки VOIP уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>eventType</con:name><con:value>patientDidNotAnswer</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>391930072666</con:value></con:property><con:property><con:name>currentDateTime</con:name><con:value>2024-02-12 12:14:50.648</con:value></con:property><con:property><con:name>specName</con:name><con:value>Врач-терапевт участковый</con:value></con:property><con:property><con:name>docShortName</con:name><con:value>Беляев А.А.</con:value></con:property><con:property><con:name>currentDateTimeForDB</con:name><con:value>2024-02-12 12:15:57</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>37998</con:value></con:property><con:property><con:name>timePatientRejectCall</con:name><con:value>12:14</con:value></con:property><con:property><con:name>timePatientDidNotAnswer</con:name><con:value>12.02.2024 в 12:14</con:value></con:property><con:property><con:name>timeCallInProgress</con:name><con:value>01:07</con:value></con:property><con:property><con:name>callCounter</con:name><con:value>4</con:value></con:property><con:property><con:name>eventDateTime</con:name><con:value>2024-02-12T12:14:50.648</con:value></con:property></con:properties></con:testCase><con:testCase id="2d4b86d5-deba-4b3d-8c1b-819cc62dcf60" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправить сообщение с eventType=patientDidNotAnswer и unaccessCallCounter=4" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Проверить наличие пациента со всеми девайсами" id="1b61a98a-5ef0-41ae-a6e3-80f31dd54603"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>87575f5b-f9ac-4151-b446-443b9fb2d85b</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="jdbc" name="Найти appointmentId, doctor_short_name, speciality_name" id="9a284798-e06c-4f24-99a5-c16de6445adf"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fna.appointment_id, fna.speciality_name, fna.doctor_short_name from f_notification_appointment fna
join f_notification fn on fn.id = fna.notification_id
join f_user fu on fu.id = fn.user_id
where fu.patient_id = ${#TestSuite#patientId} 
and fna.status = 'CREATE'
and fna.doctor_short_name is not NULL
LIMIT 1</con:query><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать appointmentId, doctor_short_name, speciality_name" id="4bedea7c-0ee0-434c-b199-44ea4c775212"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointmentId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.APPOINTMENT_ID</con:sourcePath><con:targetType>appointmentId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>specialityName</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.SPECIALITY_NAME</con:sourcePath><con:targetType>specName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>doctor_short_name</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.DOCTOR_SHORT_NAME</con:sourcePath><con:targetType>docShortName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик" id="b594571e-f4a3-47cc-8d44-72831a579873"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
import java.text.SimpleDateFormat
import java.time.LocalDateTime
import java.util.Date
import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

log.info "Отправка сообщения об изменении статуса ТМК"

def date = new Date()
log.info date
def currentDateTimeForDB = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date)
testRunner.testCase.setPropertyValue("currentDateTimeForDB", currentDateTimeForDB.toString())

Date dateMinus = LocalDateTime.now().plusSeconds(-67).toDate()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS").format(dateMinus)
def eventDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(dateMinus)
def timePatientRejectCall = new SimpleDateFormat("HH:mm").format(dateMinus)
def timePatientDidNotAnswer = new SimpleDateFormat("dd.MM.yyyy' в 'HH:mm").format(dateMinus)
testRunner.testCase.setPropertyValue("eventDateTime", eventDateTime.toString())
testRunner.testCase.setPropertyValue("currentDateTime", currentDateTime.toString())
testRunner.testCase.setPropertyValue("timePatientRejectCall", timePatientRejectCall.toString())
testRunner.testCase.setPropertyValue("timePatientDidNotAnswer", timePatientDidNotAnswer.toString())

patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
appointmentId = testRunner.testCase.getPropertyValue("appointmentId")
callCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")
userId= testRunner.testCase.testSuite.getPropertyValue("userId")
deviceGuid = java.util.UUID.randomUUID()

message="""{
    "patientId": """+patientId+""",
    "deviceId": \""""+deviceGuid+"""\",
    "productType": "emiasInfo",
    "appointmentId": """+appointmentId+""",
    "participantURL": "/7d47420b-5dee-4cfe-bbf1-349fd9776370?participantUuid\u003d1436b14f-479d-432a-8c7f-b3301168b260",
    "eventType": \""""+eventType+"""\",
    "eventDateTime": \""""+eventDateTime+"""\",
    "unsuccessCallCounter": """+callCounter+"""
}"""

mainScripts.kafka().sendMessageToKafka2("topicTmkNotify",message)

sleep(10000)


query="SELECT create_date FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
createDate=notifications[0].create_date.toString()
String createdDate = createDate.substring(0, createDate.length() - 3)
createdDateParsed = Date.parse("yyyy-MM-dd HH:mm:ss.SSS", createdDate)
log.info createdDateParsed
int longTime = (createdDateParsed.getTime() - dateMinus.getTime())/1000
int hours = (longTime / 3600)*60;
int minutes = longTime / 3600*60 + (longTime / 3600) / 60
int seconds = longTime % 60;
String timeCallInProgress = String.format("%02d:%02d", minutes, seconds)
log.info timeCallInProgress
testRunner.testCase.setPropertyValue("timeCallInProgress", timeCallInProgress.toString())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification" id="d1504e86-e091-488b-9951-4ff877334a98"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое = "+expValue.toString()+", фактическое ="+currentValue.toString())
}

def checkDescription( String description){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	doctorShortName = testRunner.testCase.getPropertyValue("docShortName")
	timePatientRejectCall = testRunner.testCase.getPropertyValue("timePatientRejectCall")
	timePatientDidNotAnswer = testRunner.testCase.getPropertyValue("timePatientDidNotAnswer")
	timeCallInProgress = testRunner.testCase.getPropertyValue("timeCallInProgress")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	countResult = callCounter ? (callCounter.endsWith("2") || callCounter.endsWith("3") || callCounter.endsWith("4")) &amp;&amp; !List.of("12", "13", "14").contains(callCounter) ? "раза" : "раз" : null
	desc=""
	switch(eventType){
		case "doctorLoginToRoom":
			desc = "Врач в сети: "+ specialityName +" "+ doctorShortName + " на связи, консультация скоро начнется. Войдите в приложение или ожидайте звонок."
			break
		case "doctorStartCall":
			desc = doctorShortName
			break
		case "patientRejectCall":
			desc = "Вы отклонили вызов от "+ specialityName + " " + doctorShortName + " сегодня в " + timePatientRejectCall
			break
		case "patientDidNotAnswer":
			desc = callCounter=="1" || !callCounter ? "Сегодня в "+ timePatientRejectCall + " звонил " + specialityName + " " + doctorShortName : "Вам звонил (" + callCounter  + ") " + countResult + " " + specialityName + " " + doctorShortName + " Последний " + timePatientDidNotAnswer
			break
		case "conferenceSuccesfullyFinished":
			desc = specialityName + doctorShortName + " провел онлайн-консультацию. Результат скоро появится в Медкарте."
			break
		case "callInProgress":
			desc = "Консультация идет " +timeCallInProgress
			break	
	}
	expectedDesc=desc
	checkParameter("notification.description",expectedDesc,description)
}

def checkTitle( String title){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	expTitle=""
	switch(eventType){
		case "doctorLoginToRoom":
			expTitle = "Онлайн-консультация скоро начнется"
			break
		case "doctorStartCall":
			expTitle = specialityName
			break
		case "patientRejectCall":
			expTitle = "Вызов от "+ specialityName + " отклонен"
			break
		case "patientDidNotAnswer":
			expTitle = callCounter=="1" || !callCounter ? "Пропущен вызов от " + specialityName: "Пропущены вызовы (" + callCounter  + ") от " + specialityName
			break
		case "conferenceSuccesfullyFinished":
			expTitle = "Онлайн-консультация состоялась"
			break
		case "callInProgress":
			expTitle = "Онлайн-консультация"
			break	
	}
	expectedTitle=expTitle
	log.info title
	checkParameter("notification.title",expectedTitle,title)
}

userId = testRunner.testCase.testSuite.getPropertyValue("userId")
currentDateTimeForDB= testRunner.testCase.getPropertyValue("currentDateTimeForDB")
query="SELECT * FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
if(notifications.size() == 1){
	notification=notifications[0]
	checkTitle(notification.title)
	checkDescription(notification.description)
	checkParameter("notification.deleted",false,notification.deleted )
	checkParameter("notification.viewed",false,notification.viewed )
	testRunner.testCase.setPropertyValue("notificationId", notification.id.toString())
}
else testRunner.fail("Количество записей в f_notification не равно 1. фактическое ="+notifications.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_telemedicine" id="38e26681-4695-4958-8a60-3959e235c8d8"><con:settings/><con:config><script>import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

appointmentId = testRunner.testCase.getPropertyValue("appointmentId").toLong()
eventDateTime = testRunner.testCase.getPropertyValue("currentDateTime").toString()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
unaccessCallCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")

query="SELECT * FROM f_notification_telemedicine WHERE notification_id ="+notificationId
notificationTelemedicine=sql.rows(query)

if(notificationTelemedicine.size() == 1){
	date = (eventDateTime.endsWith("00")) ? notificationTelemedicine[0].event_date_time.toString()+"00" : (eventDateTime.endsWith("0")) ? notificationTelemedicine[0].event_date_time.toString()+"0": notificationTelemedicine[0].event_date_time.toString()
	tm=notificationTelemedicine[0]
	log.info("Найдена запись в f_notification_telemedicine с notification_id ="+notificationId)
	checkParameter("eventDateTime",eventDateTime,date)
	checkParameter("unaccessCallCounter",unaccessCallCounter,tm.unsuccess_call_counter.toString())
	checkParameter("eventType",eventType,tm.event_type.toString())
}
else testRunner.fail("Количество записей в f_notification_telemedicine не равно 1. фактическое ="+notificationTelemedicine.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_task" id="c975edea-635f-494e-ab3b-93555a850a51"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
import groovy.json.JsonSlurper
import java.util.ArrayList
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

devicesCount = testRunner.testCase.testSuite.getPropertyValue("devicesCount").toInteger()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
devicesToSend = testRunner.testCase.testSuite.getPropertyValue("devicesToSend")
devicesToSendVoip = testRunner.testCase.testSuite.getPropertyValue("devicesToSendVoip")
currentDateTimeForDB = testRunner.testCase.getPropertyValue("currentDateTimeForDB")
eventType=testRunner.testCase.getPropertyValue("eventType")

sendDate=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(currentDateTimeForDB)
log.info sendDate

devicesToSendList=devicesToSend.split(',').collect{it as int}
devicesToSendVoipList=devicesToSendVoip.split(',').collect{it as int}

for(i=1; i &lt;=devicesCount; i++ ){
	deviceGuid=testRunner.testCase.testSuite.getPropertyValue("deviceGuid"+(i))
	if(eventType != 'doctorStartCall'){	
	log.info "Проверяю status=SEND для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'")
		//tasks="select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'"
		log.info tasks
		if(devicesToSendList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
	if(eventType != 'doctorLoginToRoom' &amp;&amp; eventType != 'conferenceSuccesfullyFinished'){
		log.info "Проверяю status=SEND_VOIP для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND_VOIP' and device_guid='"+deviceGuid+"'")
		log.info tasks
		if(devicesToSendVoipList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND_VOIP",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки VOIP уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>eventType</con:name><con:value>patientDidNotAnswer</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>391930072666</con:value></con:property><con:property><con:name>currentDateTime</con:name><con:value>2024-02-12 12:15:03.528</con:value></con:property><con:property><con:name>specName</con:name><con:value>Врач-терапевт участковый</con:value></con:property><con:property><con:name>docShortName</con:name><con:value>Беляев А.А.</con:value></con:property><con:property><con:name>currentDateTimeForDB</con:name><con:value>2024-02-12 12:16:10</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>37999</con:value></con:property><con:property><con:name>timePatientRejectCall</con:name><con:value>12:15</con:value></con:property><con:property><con:name>timePatientDidNotAnswer</con:name><con:value>12.02.2024 в 12:15</con:value></con:property><con:property><con:name>timeCallInProgress</con:name><con:value>01:07</con:value></con:property><con:property><con:name>callCounter</con:name><con:value>4</con:value></con:property><con:property><con:name>eventDateTime</con:name><con:value>2024-02-12T12:15:03.528</con:value></con:property></con:properties></con:testCase><con:testCase id="c931b7bf-7ecb-4cad-aef0-a42a7e7cd550" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправить сообщение с eventType=patientDidNotAnswer и unaccessCallCounter=5" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Проверить наличие пациента со всеми девайсами" id="f8bad0c5-ad77-4048-9d0a-b31822128ffa"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>87575f5b-f9ac-4151-b446-443b9fb2d85b</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="jdbc" name="Найти appointmentId, doctor_short_name, speciality_name" id="ab64e7b0-78f5-4fda-8d02-1b0d59ba4006"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fna.appointment_id, fna.speciality_name, fna.doctor_short_name from f_notification_appointment fna
join f_notification fn on fn.id = fna.notification_id
join f_user fu on fu.id = fn.user_id
where fu.patient_id = ${#TestSuite#patientId} 
and fna.status = 'CREATE'
and fna.doctor_short_name is not NULL
LIMIT 1</con:query><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать appointmentId, doctor_short_name, speciality_name" id="4fa6fbd7-6548-49ec-9d9c-37b9b6ce9705"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointmentId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.APPOINTMENT_ID</con:sourcePath><con:targetType>appointmentId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>specialityName</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.SPECIALITY_NAME</con:sourcePath><con:targetType>specName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>doctor_short_name</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.DOCTOR_SHORT_NAME</con:sourcePath><con:targetType>docShortName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик" id="140ee0c4-2794-470a-87e9-502629551de0"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
import java.text.SimpleDateFormat
import java.time.LocalDateTime
import java.util.Date
import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

log.info "Отправка сообщения об изменении статуса ТМК"

def date = new Date()
log.info date
def currentDateTimeForDB = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date)
testRunner.testCase.setPropertyValue("currentDateTimeForDB", currentDateTimeForDB.toString())

Date dateMinus = LocalDateTime.now().plusSeconds(-67).toDate()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS").format(dateMinus)
def eventDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(dateMinus)
def timePatientRejectCall = new SimpleDateFormat("HH:mm").format(dateMinus)
def timePatientDidNotAnswer = new SimpleDateFormat("dd.MM.yyyy' в 'HH:mm").format(dateMinus)
testRunner.testCase.setPropertyValue("eventDateTime", eventDateTime.toString())
testRunner.testCase.setPropertyValue("currentDateTime", currentDateTime.toString())
testRunner.testCase.setPropertyValue("timePatientRejectCall", timePatientRejectCall.toString())
testRunner.testCase.setPropertyValue("timePatientDidNotAnswer", timePatientDidNotAnswer.toString())

patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
appointmentId = testRunner.testCase.getPropertyValue("appointmentId")
callCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")
userId= testRunner.testCase.testSuite.getPropertyValue("userId")
deviceGuid = java.util.UUID.randomUUID()

message="""{
    "patientId": """+patientId+""",
    "deviceId": \""""+deviceGuid+"""\",
    "productType": "emiasInfo",
    "appointmentId": """+appointmentId+""",
    "participantURL": "/7d47420b-5dee-4cfe-bbf1-349fd9776370?participantUuid\u003d1436b14f-479d-432a-8c7f-b3301168b260",
    "eventType": \""""+eventType+"""\",
    "eventDateTime": \""""+eventDateTime+"""\",
    "unsuccessCallCounter": """+callCounter+"""
}"""

mainScripts.kafka().sendMessageToKafka2("topicTmkNotify",message)

sleep(10000)


query="SELECT create_date FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
createDate=notifications[0].create_date.toString()
String createdDate = createDate.substring(0, createDate.length() - 3)
createdDateParsed = Date.parse("yyyy-MM-dd HH:mm:ss.SSS", createdDate)
log.info createdDateParsed
int longTime = (createdDateParsed.getTime() - dateMinus.getTime())/1000
int hours = (longTime / 3600)*60;
int minutes = longTime / 3600*60 + (longTime / 3600) / 60
int seconds = longTime % 60;
String timeCallInProgress = String.format("%02d:%02d", minutes, seconds)
log.info timeCallInProgress
testRunner.testCase.setPropertyValue("timeCallInProgress", timeCallInProgress.toString())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification" id="7d37abfb-2d60-4e5a-bea1-451891dce94d"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое = "+expValue.toString()+", фактическое ="+currentValue.toString())
}

def checkDescription( String description){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	doctorShortName = testRunner.testCase.getPropertyValue("docShortName")
	timePatientRejectCall = testRunner.testCase.getPropertyValue("timePatientRejectCall")
	timePatientDidNotAnswer = testRunner.testCase.getPropertyValue("timePatientDidNotAnswer")
	timeCallInProgress = testRunner.testCase.getPropertyValue("timeCallInProgress")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	countResult = callCounter ? (callCounter.endsWith("2") || callCounter.endsWith("3") || callCounter.endsWith("4")) &amp;&amp; !List.of("12", "13", "14").contains(callCounter) ? "раза" : "раз" : null
	desc=""
	switch(eventType){
		case "doctorLoginToRoom":
			desc = "Врач в сети: "+ specialityName +" "+ doctorShortName + " на связи, консультация скоро начнется. Войдите в приложение или ожидайте звонок."
			break
		case "doctorStartCall":
			desc = doctorShortName
			break
		case "patientRejectCall":
			desc = "Вы отклонили вызов от "+ specialityName + " " + doctorShortName + " сегодня в " + timePatientRejectCall
			break
		case "patientDidNotAnswer":
			desc = callCounter=="1" || !callCounter ? "Сегодня в "+ timePatientRejectCall + " звонил " + specialityName + " " + doctorShortName : "Вам звонил (" + callCounter  + ") " + countResult + " " + specialityName + " " + doctorShortName + " Последний " + timePatientDidNotAnswer
			break
		case "conferenceSuccesfullyFinished":
			desc = specialityName + doctorShortName + " провел онлайн-консультацию. Результат скоро появится в Медкарте."
			break
		case "callInProgress":
			desc = "Консультация идет " +timeCallInProgress
			break	
	}
	expectedDesc=desc
	checkParameter("notification.description",expectedDesc,description)
}

def checkTitle( String title){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	expTitle=""
	switch(eventType){
		case "doctorLoginToRoom":
			expTitle = "Онлайн-консультация скоро начнется"
			break
		case "doctorStartCall":
			expTitle = specialityName
			break
		case "patientRejectCall":
			expTitle = "Вызов от "+ specialityName + " отклонен"
			break
		case "patientDidNotAnswer":
			expTitle = callCounter=="1" || !callCounter ? "Пропущен вызов от " + specialityName: "Пропущены вызовы (" + callCounter  + ") от " + specialityName
			break
		case "conferenceSuccesfullyFinished":
			expTitle = "Онлайн-консультация состоялась"
			break
		case "callInProgress":
			expTitle = "Онлайн-консультация"
			break	
	}
	expectedTitle=expTitle
	log.info title
	checkParameter("notification.title",expectedTitle,title)
}

userId = testRunner.testCase.testSuite.getPropertyValue("userId")
currentDateTimeForDB= testRunner.testCase.getPropertyValue("currentDateTimeForDB")
query="SELECT * FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
if(notifications.size() == 1){
	notification=notifications[0]
	checkTitle(notification.title)
	checkDescription(notification.description)
	checkParameter("notification.deleted",false,notification.deleted )
	checkParameter("notification.viewed",false,notification.viewed )
	testRunner.testCase.setPropertyValue("notificationId", notification.id.toString())
}
else testRunner.fail("Количество записей в f_notification не равно 1. фактическое ="+notifications.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_telemedicine" id="48945346-49e3-424e-bf9b-fbc2f2c2b676"><con:settings/><con:config><script>import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

appointmentId = testRunner.testCase.getPropertyValue("appointmentId").toLong()
eventDateTime = testRunner.testCase.getPropertyValue("currentDateTime").toString()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
unaccessCallCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")

query="SELECT * FROM f_notification_telemedicine WHERE notification_id ="+notificationId
notificationTelemedicine=sql.rows(query)

if(notificationTelemedicine.size() == 1){
	date = (eventDateTime.endsWith("00")) ? notificationTelemedicine[0].event_date_time.toString()+"00" : (eventDateTime.endsWith("0")) ? notificationTelemedicine[0].event_date_time.toString()+"0": notificationTelemedicine[0].event_date_time.toString()
	tm=notificationTelemedicine[0]
	log.info("Найдена запись в f_notification_telemedicine с notification_id ="+notificationId)
	checkParameter("eventDateTime",eventDateTime,date)
	checkParameter("unaccessCallCounter",unaccessCallCounter,tm.unsuccess_call_counter.toString())
	checkParameter("eventType",eventType,tm.event_type.toString())
}
else testRunner.fail("Количество записей в f_notification_telemedicine не равно 1. фактическое ="+notificationTelemedicine.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_task" id="fbdb5cb0-a712-4b3c-9324-a8be21b0bb68"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
import groovy.json.JsonSlurper
import java.util.ArrayList
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

devicesCount = testRunner.testCase.testSuite.getPropertyValue("devicesCount").toInteger()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
devicesToSend = testRunner.testCase.testSuite.getPropertyValue("devicesToSend")
devicesToSendVoip = testRunner.testCase.testSuite.getPropertyValue("devicesToSendVoip")
currentDateTimeForDB = testRunner.testCase.getPropertyValue("currentDateTimeForDB")
eventType=testRunner.testCase.getPropertyValue("eventType")

sendDate=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(currentDateTimeForDB)
log.info sendDate

devicesToSendList=devicesToSend.split(',').collect{it as int}
devicesToSendVoipList=devicesToSendVoip.split(',').collect{it as int}

for(i=1; i &lt;=devicesCount; i++ ){
	deviceGuid=testRunner.testCase.testSuite.getPropertyValue("deviceGuid"+(i))
	if(eventType != 'doctorStartCall'){	
	log.info "Проверяю status=SEND для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'")
		//tasks="select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'"
		log.info tasks
		if(devicesToSendList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
	if(eventType != 'doctorLoginToRoom' &amp;&amp; eventType != 'conferenceSuccesfullyFinished'){
		log.info "Проверяю status=SEND_VOIP для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND_VOIP' and device_guid='"+deviceGuid+"'")
		log.info tasks
		if(devicesToSendVoipList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND_VOIP",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки VOIP уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>eventType</con:name><con:value>patientDidNotAnswer</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>391930072666</con:value></con:property><con:property><con:name>currentDateTime</con:name><con:value>2024-02-12 12:15:17.029</con:value></con:property><con:property><con:name>specName</con:name><con:value>Врач-терапевт участковый</con:value></con:property><con:property><con:name>docShortName</con:name><con:value>Беляев А.А.</con:value></con:property><con:property><con:name>currentDateTimeForDB</con:name><con:value>2024-02-12 12:16:24</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>38000</con:value></con:property><con:property><con:name>timePatientRejectCall</con:name><con:value>12:15</con:value></con:property><con:property><con:name>timePatientDidNotAnswer</con:name><con:value>12.02.2024 в 12:15</con:value></con:property><con:property><con:name>timeCallInProgress</con:name><con:value>01:07</con:value></con:property><con:property><con:name>callCounter</con:name><con:value>5</con:value></con:property><con:property><con:name>eventDateTime</con:name><con:value>2024-02-12T12:15:17.029</con:value></con:property></con:properties></con:testCase><con:testCase id="4cb937fb-30a4-4fdb-9b83-bc77849f65bc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправить сообщение с eventType=patientDidNotAnswer и unaccessCallCounter=12" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Проверить наличие пациента со всеми девайсами" id="40437428-1d0f-4ee3-9011-5694c406b538"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>87575f5b-f9ac-4151-b446-443b9fb2d85b</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="jdbc" name="Найти appointmentId, doctor_short_name, speciality_name" id="c9e93c2f-4cda-4bea-bda2-d21d0d9aefeb"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fna.appointment_id, fna.speciality_name, fna.doctor_short_name from f_notification_appointment fna
join f_notification fn on fn.id = fna.notification_id
join f_user fu on fu.id = fn.user_id
where fu.patient_id = ${#TestSuite#patientId} 
and fna.status = 'CREATE'
and fna.doctor_short_name is not NULL
LIMIT 1</con:query><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать appointmentId, doctor_short_name, speciality_name" id="2ee7c21b-a1f6-45d8-9896-7d62dafa3de6"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointmentId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.APPOINTMENT_ID</con:sourcePath><con:targetType>appointmentId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>specialityName</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.SPECIALITY_NAME</con:sourcePath><con:targetType>specName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>doctor_short_name</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.DOCTOR_SHORT_NAME</con:sourcePath><con:targetType>docShortName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик" id="5b667db9-c22e-40ba-8d16-711caad61e1f"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
import java.text.SimpleDateFormat
import java.time.LocalDateTime
import java.util.Date
import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

log.info "Отправка сообщения об изменении статуса ТМК"

def date = new Date()
log.info date
def currentDateTimeForDB = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date)
testRunner.testCase.setPropertyValue("currentDateTimeForDB", currentDateTimeForDB.toString())

Date dateMinus = LocalDateTime.now().plusSeconds(-67).toDate()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS").format(dateMinus)
def eventDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(dateMinus)
def timePatientRejectCall = new SimpleDateFormat("HH:mm").format(dateMinus)
def timePatientDidNotAnswer = new SimpleDateFormat("dd.MM.yyyy' в 'HH:mm").format(dateMinus)
testRunner.testCase.setPropertyValue("eventDateTime", eventDateTime.toString())
testRunner.testCase.setPropertyValue("currentDateTime", currentDateTime.toString())
testRunner.testCase.setPropertyValue("timePatientRejectCall", timePatientRejectCall.toString())
testRunner.testCase.setPropertyValue("timePatientDidNotAnswer", timePatientDidNotAnswer.toString())

patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
appointmentId = testRunner.testCase.getPropertyValue("appointmentId")
callCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")
userId= testRunner.testCase.testSuite.getPropertyValue("userId")
deviceGuid = java.util.UUID.randomUUID()

message="""{
    "patientId": """+patientId+""",
    "deviceId": \""""+deviceGuid+"""\",
    "productType": "emiasInfo",
    "appointmentId": """+appointmentId+""",
    "participantURL": "/7d47420b-5dee-4cfe-bbf1-349fd9776370?participantUuid\u003d1436b14f-479d-432a-8c7f-b3301168b260",
    "eventType": \""""+eventType+"""\",
    "eventDateTime": \""""+eventDateTime+"""\",
    "unsuccessCallCounter": """+callCounter+"""
}"""

mainScripts.kafka().sendMessageToKafka2("topicTmkNotify",message)

sleep(10000)


query="SELECT create_date FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
createDate=notifications[0].create_date.toString()
String createdDate = createDate.substring(0, createDate.length() - 3)
createdDateParsed = Date.parse("yyyy-MM-dd HH:mm:ss.SSS", createdDate)
log.info createdDateParsed
int longTime = (createdDateParsed.getTime() - dateMinus.getTime())/1000
int hours = (longTime / 3600)*60;
int minutes = longTime / 3600*60 + (longTime / 3600) / 60
int seconds = longTime % 60;
String timeCallInProgress = String.format("%02d:%02d", minutes, seconds)
log.info timeCallInProgress
testRunner.testCase.setPropertyValue("timeCallInProgress", timeCallInProgress.toString())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification" id="81427822-35c7-4ca4-864c-f2e9a7dede3b"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое = "+expValue.toString()+", фактическое ="+currentValue.toString())
}

def checkDescription( String description){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	doctorShortName = testRunner.testCase.getPropertyValue("docShortName")
	timePatientRejectCall = testRunner.testCase.getPropertyValue("timePatientRejectCall")
	timePatientDidNotAnswer = testRunner.testCase.getPropertyValue("timePatientDidNotAnswer")
	timeCallInProgress = testRunner.testCase.getPropertyValue("timeCallInProgress")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	countResult = callCounter ? (callCounter.endsWith("2") || callCounter.endsWith("3") || callCounter.endsWith("4")) &amp;&amp; !List.of("12", "13", "14").contains(callCounter) ? "раза" : "раз" : null
	desc=""
	switch(eventType){
		case "doctorLoginToRoom":
			desc = "Врач в сети: "+ specialityName +" "+ doctorShortName + " на связи, консультация скоро начнется. Войдите в приложение или ожидайте звонок."
			break
		case "doctorStartCall":
			desc = doctorShortName
			break
		case "patientRejectCall":
			desc = "Вы отклонили вызов от "+ specialityName + " " + doctorShortName + " сегодня в " + timePatientRejectCall
			break
		case "patientDidNotAnswer":
			desc = callCounter=="1" || !callCounter ? "Сегодня в "+ timePatientRejectCall + " звонил " + specialityName + " " + doctorShortName : "Вам звонил (" + callCounter  + ") " + countResult + " " + specialityName + " " + doctorShortName + " Последний " + timePatientDidNotAnswer
			break
		case "conferenceSuccesfullyFinished":
			desc = specialityName + doctorShortName + " провел онлайн-консультацию. Результат скоро появится в Медкарте."
			break
		case "callInProgress":
			desc = "Консультация идет " +timeCallInProgress
			break	
	}
	expectedDesc=desc
	checkParameter("notification.description",expectedDesc,description)
}

def checkTitle( String title){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	expTitle=""
	switch(eventType){
		case "doctorLoginToRoom":
			expTitle = "Онлайн-консультация скоро начнется"
			break
		case "doctorStartCall":
			expTitle = specialityName
			break
		case "patientRejectCall":
			expTitle = "Вызов от "+ specialityName + " отклонен"
			break
		case "patientDidNotAnswer":
			expTitle = callCounter=="1" || !callCounter ? "Пропущен вызов от " + specialityName: "Пропущены вызовы (" + callCounter  + ") от " + specialityName
			break
		case "conferenceSuccesfullyFinished":
			expTitle = "Онлайн-консультация состоялась"
			break
		case "callInProgress":
			expTitle = "Онлайн-консультация"
			break	
	}
	expectedTitle=expTitle
	log.info title
	checkParameter("notification.title",expectedTitle,title)
}

userId = testRunner.testCase.testSuite.getPropertyValue("userId")
currentDateTimeForDB= testRunner.testCase.getPropertyValue("currentDateTimeForDB")
query="SELECT * FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
if(notifications.size() == 1){
	notification=notifications[0]
	checkTitle(notification.title)
	checkDescription(notification.description)
	checkParameter("notification.deleted",false,notification.deleted )
	checkParameter("notification.viewed",false,notification.viewed )
	testRunner.testCase.setPropertyValue("notificationId", notification.id.toString())
}
else testRunner.fail("Количество записей в f_notification не равно 1. фактическое ="+notifications.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_telemedicine" id="8027f1b0-d3d7-4300-806a-fd4c09a79fc2"><con:settings/><con:config><script>import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

appointmentId = testRunner.testCase.getPropertyValue("appointmentId").toLong()
eventDateTime = testRunner.testCase.getPropertyValue("currentDateTime").toString()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
unaccessCallCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")

query="SELECT * FROM f_notification_telemedicine WHERE notification_id ="+notificationId
notificationTelemedicine=sql.rows(query)

if(notificationTelemedicine.size() == 1){
	date = (eventDateTime.endsWith("00")) ? notificationTelemedicine[0].event_date_time.toString()+"00" : (eventDateTime.endsWith("0")) ? notificationTelemedicine[0].event_date_time.toString()+"0": notificationTelemedicine[0].event_date_time.toString()
	tm=notificationTelemedicine[0]
	log.info("Найдена запись в f_notification_telemedicine с notification_id ="+notificationId)
	checkParameter("eventDateTime",eventDateTime,date)
	checkParameter("unaccessCallCounter",unaccessCallCounter,tm.unsuccess_call_counter.toString())
	checkParameter("eventType",eventType,tm.event_type.toString())
}
else testRunner.fail("Количество записей в f_notification_telemedicine не равно 1. фактическое ="+notificationTelemedicine.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_task" id="99eb68c9-4d07-45a9-b32a-622bfff8c522"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
import groovy.json.JsonSlurper
import java.util.ArrayList
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

devicesCount = testRunner.testCase.testSuite.getPropertyValue("devicesCount").toInteger()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
devicesToSend = testRunner.testCase.testSuite.getPropertyValue("devicesToSend")
devicesToSendVoip = testRunner.testCase.testSuite.getPropertyValue("devicesToSendVoip")
currentDateTimeForDB = testRunner.testCase.getPropertyValue("currentDateTimeForDB")
eventType=testRunner.testCase.getPropertyValue("eventType")

sendDate=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(currentDateTimeForDB)
log.info sendDate

devicesToSendList=devicesToSend.split(',').collect{it as int}
devicesToSendVoipList=devicesToSendVoip.split(',').collect{it as int}

for(i=1; i &lt;=devicesCount; i++ ){
	deviceGuid=testRunner.testCase.testSuite.getPropertyValue("deviceGuid"+(i))
	if(eventType != 'doctorStartCall'){	
	log.info "Проверяю status=SEND для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'")
		//tasks="select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'"
		log.info tasks
		if(devicesToSendList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
	if(eventType != 'doctorLoginToRoom' &amp;&amp; eventType != 'conferenceSuccesfullyFinished'){
		log.info "Проверяю status=SEND_VOIP для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND_VOIP' and device_guid='"+deviceGuid+"'")
		log.info tasks
		if(devicesToSendVoipList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND_VOIP",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки VOIP уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>eventType</con:name><con:value>patientDidNotAnswer</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>391930072666</con:value></con:property><con:property><con:name>currentDateTime</con:name><con:value>2024-02-12 12:15:30.178</con:value></con:property><con:property><con:name>specName</con:name><con:value>Врач-терапевт участковый</con:value></con:property><con:property><con:name>docShortName</con:name><con:value>Беляев А.А.</con:value></con:property><con:property><con:name>currentDateTimeForDB</con:name><con:value>2024-02-12 12:16:37</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>38001</con:value></con:property><con:property><con:name>timePatientRejectCall</con:name><con:value>12:15</con:value></con:property><con:property><con:name>timePatientDidNotAnswer</con:name><con:value>12.02.2024 в 12:15</con:value></con:property><con:property><con:name>timeCallInProgress</con:name><con:value>01:06</con:value></con:property><con:property><con:name>callCounter</con:name><con:value>12</con:value></con:property><con:property><con:name>eventDateTime</con:name><con:value>2024-02-12T12:15:30.178</con:value></con:property></con:properties></con:testCase><con:testCase id="9afdcca0-047b-420f-a74d-01f0dda1aa31" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправить сообщение с eventType=patientDidNotAnswer и unaccessCallCounter=13" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Проверить наличие пациента со всеми девайсами" id="d96c6c3c-b7ca-4768-b9ca-6f57a66ff560"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>87575f5b-f9ac-4151-b446-443b9fb2d85b</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="jdbc" name="Найти appointmentId, doctor_short_name, speciality_name" id="1bc813b2-e5f7-47ce-b401-8f2ade384261"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fna.appointment_id, fna.speciality_name, fna.doctor_short_name from f_notification_appointment fna
join f_notification fn on fn.id = fna.notification_id
join f_user fu on fu.id = fn.user_id
where fu.patient_id = ${#TestSuite#patientId} 
and fna.status = 'CREATE'
and fna.doctor_short_name is not NULL
LIMIT 1</con:query><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать appointmentId, doctor_short_name, speciality_name" id="259ce4b3-f1f7-4d12-86e5-b2730b0f1b03"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointmentId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.APPOINTMENT_ID</con:sourcePath><con:targetType>appointmentId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>specialityName</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.SPECIALITY_NAME</con:sourcePath><con:targetType>specName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>doctor_short_name</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.DOCTOR_SHORT_NAME</con:sourcePath><con:targetType>docShortName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик" id="93003497-ed78-4616-91bd-8246dfed83e8"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
import java.text.SimpleDateFormat
import java.time.LocalDateTime
import java.util.Date
import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

log.info "Отправка сообщения об изменении статуса ТМК"

def date = new Date()
log.info date
def currentDateTimeForDB = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date)
testRunner.testCase.setPropertyValue("currentDateTimeForDB", currentDateTimeForDB.toString())

Date dateMinus = LocalDateTime.now().plusSeconds(-67).toDate()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS").format(dateMinus)
def eventDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(dateMinus)
def timePatientRejectCall = new SimpleDateFormat("HH:mm").format(dateMinus)
def timePatientDidNotAnswer = new SimpleDateFormat("dd.MM.yyyy' в 'HH:mm").format(dateMinus)
testRunner.testCase.setPropertyValue("eventDateTime", eventDateTime.toString())
testRunner.testCase.setPropertyValue("currentDateTime", currentDateTime.toString())
testRunner.testCase.setPropertyValue("timePatientRejectCall", timePatientRejectCall.toString())
testRunner.testCase.setPropertyValue("timePatientDidNotAnswer", timePatientDidNotAnswer.toString())

patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
appointmentId = testRunner.testCase.getPropertyValue("appointmentId")
callCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")
userId= testRunner.testCase.testSuite.getPropertyValue("userId")
deviceGuid = java.util.UUID.randomUUID()

message="""{
    "patientId": """+patientId+""",
    "deviceId": \""""+deviceGuid+"""\",
    "productType": "emiasInfo",
    "appointmentId": """+appointmentId+""",
    "participantURL": "/7d47420b-5dee-4cfe-bbf1-349fd9776370?participantUuid\u003d1436b14f-479d-432a-8c7f-b3301168b260",
    "eventType": \""""+eventType+"""\",
    "eventDateTime": \""""+eventDateTime+"""\",
    "unsuccessCallCounter": """+callCounter+"""
}"""

mainScripts.kafka().sendMessageToKafka2("topicTmkNotify",message)

sleep(10000)


query="SELECT create_date FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
createDate=notifications[0].create_date.toString()
String createdDate = createDate.substring(0, createDate.length() - 3)
createdDateParsed = Date.parse("yyyy-MM-dd HH:mm:ss.SSS", createdDate)
log.info createdDateParsed
int longTime = (createdDateParsed.getTime() - dateMinus.getTime())/1000
int hours = (longTime / 3600)*60;
int minutes = longTime / 3600*60 + (longTime / 3600) / 60
int seconds = longTime % 60;
String timeCallInProgress = String.format("%02d:%02d", minutes, seconds)
log.info timeCallInProgress
testRunner.testCase.setPropertyValue("timeCallInProgress", timeCallInProgress.toString())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification" id="231c94fd-ae32-4de1-8bd3-91c37424c395"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое = "+expValue.toString()+", фактическое ="+currentValue.toString())
}

def checkDescription( String description){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	doctorShortName = testRunner.testCase.getPropertyValue("docShortName")
	timePatientRejectCall = testRunner.testCase.getPropertyValue("timePatientRejectCall")
	timePatientDidNotAnswer = testRunner.testCase.getPropertyValue("timePatientDidNotAnswer")
	timeCallInProgress = testRunner.testCase.getPropertyValue("timeCallInProgress")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	countResult = callCounter ? (callCounter.endsWith("2") || callCounter.endsWith("3") || callCounter.endsWith("4")) &amp;&amp; !List.of("12", "13", "14").contains(callCounter) ? "раза" : "раз" : null
	desc=""
	switch(eventType){
		case "doctorLoginToRoom":
			desc = "Врач в сети: "+ specialityName +" "+ doctorShortName + " на связи, консультация скоро начнется. Войдите в приложение или ожидайте звонок."
			break
		case "doctorStartCall":
			desc = doctorShortName
			break
		case "patientRejectCall":
			desc = "Вы отклонили вызов от "+ specialityName + " " + doctorShortName + " сегодня в " + timePatientRejectCall
			break
		case "patientDidNotAnswer":
			desc = callCounter=="1" || !callCounter ? "Сегодня в "+ timePatientRejectCall + " звонил " + specialityName + " " + doctorShortName : "Вам звонил (" + callCounter  + ") " + countResult + " " + specialityName + " " + doctorShortName + " Последний " + timePatientDidNotAnswer
			break
		case "conferenceSuccesfullyFinished":
			desc = specialityName + doctorShortName + " провел онлайн-консультацию. Результат скоро появится в Медкарте."
			break
		case "callInProgress":
			desc = "Консультация идет " +timeCallInProgress
			break	
	}
	expectedDesc=desc
	checkParameter("notification.description",expectedDesc,description)
}

def checkTitle( String title){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	expTitle=""
	switch(eventType){
		case "doctorLoginToRoom":
			expTitle = "Онлайн-консультация скоро начнется"
			break
		case "doctorStartCall":
			expTitle = specialityName
			break
		case "patientRejectCall":
			expTitle = "Вызов от "+ specialityName + " отклонен"
			break
		case "patientDidNotAnswer":
			expTitle = callCounter=="1" || !callCounter ? "Пропущен вызов от " + specialityName: "Пропущены вызовы (" + callCounter  + ") от " + specialityName
			break
		case "conferenceSuccesfullyFinished":
			expTitle = "Онлайн-консультация состоялась"
			break
		case "callInProgress":
			expTitle = "Онлайн-консультация"
			break	
	}
	expectedTitle=expTitle
	log.info title
	checkParameter("notification.title",expectedTitle,title)
}

userId = testRunner.testCase.testSuite.getPropertyValue("userId")
currentDateTimeForDB= testRunner.testCase.getPropertyValue("currentDateTimeForDB")
query="SELECT * FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
if(notifications.size() == 1){
	notification=notifications[0]
	checkTitle(notification.title)
	checkDescription(notification.description)
	checkParameter("notification.deleted",false,notification.deleted )
	checkParameter("notification.viewed",false,notification.viewed )
	testRunner.testCase.setPropertyValue("notificationId", notification.id.toString())
}
else testRunner.fail("Количество записей в f_notification не равно 1. фактическое ="+notifications.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_telemedicine" id="e8888b39-47b9-40c9-a9a0-4dfec839f7c4"><con:settings/><con:config><script>import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

appointmentId = testRunner.testCase.getPropertyValue("appointmentId").toLong()
eventDateTime = testRunner.testCase.getPropertyValue("currentDateTime").toString()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
unaccessCallCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")

query="SELECT * FROM f_notification_telemedicine WHERE notification_id ="+notificationId
notificationTelemedicine=sql.rows(query)

if(notificationTelemedicine.size() == 1){
	date = (eventDateTime.endsWith("00")) ? notificationTelemedicine[0].event_date_time.toString()+"00" : (eventDateTime.endsWith("0")) ? notificationTelemedicine[0].event_date_time.toString()+"0": notificationTelemedicine[0].event_date_time.toString()
	tm=notificationTelemedicine[0]
	log.info("Найдена запись в f_notification_telemedicine с notification_id ="+notificationId)
	checkParameter("eventDateTime",eventDateTime,date)
	checkParameter("unaccessCallCounter",unaccessCallCounter,tm.unsuccess_call_counter.toString())
	checkParameter("eventType",eventType,tm.event_type.toString())
}
else testRunner.fail("Количество записей в f_notification_telemedicine не равно 1. фактическое ="+notificationTelemedicine.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_task" id="01da8de0-3266-498d-9e4f-0be226d2b26f"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
import groovy.json.JsonSlurper
import java.util.ArrayList
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

devicesCount = testRunner.testCase.testSuite.getPropertyValue("devicesCount").toInteger()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
devicesToSend = testRunner.testCase.testSuite.getPropertyValue("devicesToSend")
devicesToSendVoip = testRunner.testCase.testSuite.getPropertyValue("devicesToSendVoip")
currentDateTimeForDB = testRunner.testCase.getPropertyValue("currentDateTimeForDB")
eventType=testRunner.testCase.getPropertyValue("eventType")

sendDate=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(currentDateTimeForDB)
log.info sendDate

devicesToSendList=devicesToSend.split(',').collect{it as int}
devicesToSendVoipList=devicesToSendVoip.split(',').collect{it as int}

for(i=1; i &lt;=devicesCount; i++ ){
	deviceGuid=testRunner.testCase.testSuite.getPropertyValue("deviceGuid"+(i))
	if(eventType != 'doctorStartCall'){	
	log.info "Проверяю status=SEND для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'")
		//tasks="select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'"
		log.info tasks
		if(devicesToSendList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
	if(eventType != 'doctorLoginToRoom' &amp;&amp; eventType != 'conferenceSuccesfullyFinished'){
		log.info "Проверяю status=SEND_VOIP для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND_VOIP' and device_guid='"+deviceGuid+"'")
		log.info tasks
		if(devicesToSendVoipList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND_VOIP",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки VOIP уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>eventType</con:name><con:value>patientDidNotAnswer</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>391930072666</con:value></con:property><con:property><con:name>currentDateTime</con:name><con:value>2024-02-12 12:15:43.262</con:value></con:property><con:property><con:name>specName</con:name><con:value>Врач-терапевт участковый</con:value></con:property><con:property><con:name>docShortName</con:name><con:value>Беляев А.А.</con:value></con:property><con:property><con:name>currentDateTimeForDB</con:name><con:value>2024-02-12 12:16:50</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>38002</con:value></con:property><con:property><con:name>timePatientRejectCall</con:name><con:value>12:15</con:value></con:property><con:property><con:name>timePatientDidNotAnswer</con:name><con:value>12.02.2024 в 12:15</con:value></con:property><con:property><con:name>timeCallInProgress</con:name><con:value>01:07</con:value></con:property><con:property><con:name>callCounter</con:name><con:value>13</con:value></con:property><con:property><con:name>eventDateTime</con:name><con:value>2024-02-12T12:15:43.262</con:value></con:property></con:properties></con:testCase><con:testCase id="cafe8f78-3b3e-4d26-8607-47cc8ee8e98c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправить сообщение с eventType=patientDidNotAnswer и unaccessCallCounter=14" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Проверить наличие пациента со всеми девайсами" id="3fdf1f25-c36e-4939-b361-237f8e0485c7"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>87575f5b-f9ac-4151-b446-443b9fb2d85b</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="jdbc" name="Найти appointmentId, doctor_short_name, speciality_name" id="f9d5f726-07f9-4109-960a-ff5a5fef9cfd"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fna.appointment_id, fna.speciality_name, fna.doctor_short_name from f_notification_appointment fna
join f_notification fn on fn.id = fna.notification_id
join f_user fu on fu.id = fn.user_id
where fu.patient_id = ${#TestSuite#patientId} 
and fna.status = 'CREATE'
and fna.doctor_short_name is not NULL
LIMIT 1</con:query><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать appointmentId, doctor_short_name, speciality_name" id="1bf93f40-7c35-4490-9923-8202756bf9dc"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointmentId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.APPOINTMENT_ID</con:sourcePath><con:targetType>appointmentId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>specialityName</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.SPECIALITY_NAME</con:sourcePath><con:targetType>specName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>doctor_short_name</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.DOCTOR_SHORT_NAME</con:sourcePath><con:targetType>docShortName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик" id="c4af2191-a6c1-44ff-9704-61f8151e8f30"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
import java.text.SimpleDateFormat
import java.time.LocalDateTime
import java.util.Date
import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

log.info "Отправка сообщения об изменении статуса ТМК"

def date = new Date()
log.info date
def currentDateTimeForDB = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date)
testRunner.testCase.setPropertyValue("currentDateTimeForDB", currentDateTimeForDB.toString())

Date dateMinus = LocalDateTime.now().plusSeconds(-67).toDate()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS").format(dateMinus)
def eventDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(dateMinus)
def timePatientRejectCall = new SimpleDateFormat("HH:mm").format(dateMinus)
def timePatientDidNotAnswer = new SimpleDateFormat("dd.MM.yyyy' в 'HH:mm").format(dateMinus)
testRunner.testCase.setPropertyValue("eventDateTime", eventDateTime.toString())
testRunner.testCase.setPropertyValue("currentDateTime", currentDateTime.toString())
testRunner.testCase.setPropertyValue("timePatientRejectCall", timePatientRejectCall.toString())
testRunner.testCase.setPropertyValue("timePatientDidNotAnswer", timePatientDidNotAnswer.toString())

patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
appointmentId = testRunner.testCase.getPropertyValue("appointmentId")
callCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")
userId= testRunner.testCase.testSuite.getPropertyValue("userId")
deviceGuid = java.util.UUID.randomUUID()

message="""{
    "patientId": """+patientId+""",
    "deviceId": \""""+deviceGuid+"""\",
    "productType": "emiasInfo",
    "appointmentId": """+appointmentId+""",
    "participantURL": "/7d47420b-5dee-4cfe-bbf1-349fd9776370?participantUuid\u003d1436b14f-479d-432a-8c7f-b3301168b260",
    "eventType": \""""+eventType+"""\",
    "eventDateTime": \""""+eventDateTime+"""\",
    "unsuccessCallCounter": """+callCounter+"""
}"""

mainScripts.kafka().sendMessageToKafka2("topicTmkNotify",message)

sleep(10000)


query="SELECT create_date FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
createDate=notifications[0].create_date.toString()
String createdDate = createDate.substring(0, createDate.length() - 3)
createdDateParsed = Date.parse("yyyy-MM-dd HH:mm:ss.SSS", createdDate)
log.info createdDateParsed
int longTime = (createdDateParsed.getTime() - dateMinus.getTime())/1000
int hours = (longTime / 3600)*60;
int minutes = longTime / 3600*60 + (longTime / 3600) / 60
int seconds = longTime % 60;
String timeCallInProgress = String.format("%02d:%02d", minutes, seconds)
log.info timeCallInProgress
testRunner.testCase.setPropertyValue("timeCallInProgress", timeCallInProgress.toString())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification" id="e7731b80-f05a-497e-bd68-97dd9abeeddf"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое = "+expValue.toString()+", фактическое ="+currentValue.toString())
}

def checkDescription( String description){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	doctorShortName = testRunner.testCase.getPropertyValue("docShortName")
	timePatientRejectCall = testRunner.testCase.getPropertyValue("timePatientRejectCall")
	timePatientDidNotAnswer = testRunner.testCase.getPropertyValue("timePatientDidNotAnswer")
	timeCallInProgress = testRunner.testCase.getPropertyValue("timeCallInProgress")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	countResult = callCounter ? (callCounter.endsWith("2") || callCounter.endsWith("3") || callCounter.endsWith("4")) &amp;&amp; !List.of("12", "13", "14").contains(callCounter) ? "раза" : "раз" : null
	desc=""
	switch(eventType){
		case "doctorLoginToRoom":
			desc = "Врач в сети: "+ specialityName +" "+ doctorShortName + " на связи, консультация скоро начнется. Войдите в приложение или ожидайте звонок."
			break
		case "doctorStartCall":
			desc = doctorShortName
			break
		case "patientRejectCall":
			desc = "Вы отклонили вызов от "+ specialityName + " " + doctorShortName + " сегодня в " + timePatientRejectCall
			break
		case "patientDidNotAnswer":
			desc = callCounter=="1" || !callCounter ? "Сегодня в "+ timePatientRejectCall + " звонил " + specialityName + " " + doctorShortName : "Вам звонил (" + callCounter  + ") " + countResult + " " + specialityName + " " + doctorShortName + " Последний " + timePatientDidNotAnswer
			break
		case "conferenceSuccesfullyFinished":
			desc = specialityName + doctorShortName + " провел онлайн-консультацию. Результат скоро появится в Медкарте."
			break
		case "callInProgress":
			desc = "Консультация идет " +timeCallInProgress
			break	
	}
	expectedDesc=desc
	checkParameter("notification.description",expectedDesc,description)
}

def checkTitle( String title){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	expTitle=""
	switch(eventType){
		case "doctorLoginToRoom":
			expTitle = "Онлайн-консультация скоро начнется"
			break
		case "doctorStartCall":
			expTitle = specialityName
			break
		case "patientRejectCall":
			expTitle = "Вызов от "+ specialityName + " отклонен"
			break
		case "patientDidNotAnswer":
			expTitle = callCounter=="1" || !callCounter ? "Пропущен вызов от " + specialityName: "Пропущены вызовы (" + callCounter  + ") от " + specialityName
			break
		case "conferenceSuccesfullyFinished":
			expTitle = "Онлайн-консультация состоялась"
			break
		case "callInProgress":
			expTitle = "Онлайн-консультация"
			break	
	}
	expectedTitle=expTitle
	log.info title
	checkParameter("notification.title",expectedTitle,title)
}

userId = testRunner.testCase.testSuite.getPropertyValue("userId")
currentDateTimeForDB= testRunner.testCase.getPropertyValue("currentDateTimeForDB")
query="SELECT * FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
if(notifications.size() == 1){
	notification=notifications[0]
	checkTitle(notification.title)
	checkDescription(notification.description)
	checkParameter("notification.deleted",false,notification.deleted )
	checkParameter("notification.viewed",false,notification.viewed )
	testRunner.testCase.setPropertyValue("notificationId", notification.id.toString())
}
else testRunner.fail("Количество записей в f_notification не равно 1. фактическое ="+notifications.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_telemedicine" id="c9fda72d-0253-467b-8052-6e86a513d91c"><con:settings/><con:config><script>import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

appointmentId = testRunner.testCase.getPropertyValue("appointmentId").toLong()
eventDateTime = testRunner.testCase.getPropertyValue("currentDateTime").toString()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
unaccessCallCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")

query="SELECT * FROM f_notification_telemedicine WHERE notification_id ="+notificationId
notificationTelemedicine=sql.rows(query)

if(notificationTelemedicine.size() == 1){
	date = (eventDateTime.endsWith("00")) ? notificationTelemedicine[0].event_date_time.toString()+"00" : (eventDateTime.endsWith("0")) ? notificationTelemedicine[0].event_date_time.toString()+"0": notificationTelemedicine[0].event_date_time.toString()
	tm=notificationTelemedicine[0]
	log.info("Найдена запись в f_notification_telemedicine с notification_id ="+notificationId)
	checkParameter("eventDateTime",eventDateTime,date)
	checkParameter("unaccessCallCounter",unaccessCallCounter,tm.unsuccess_call_counter.toString())
	checkParameter("eventType",eventType,tm.event_type.toString())
}
else testRunner.fail("Количество записей в f_notification_telemedicine не равно 1. фактическое ="+notificationTelemedicine.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_task" id="395d013b-0725-4c60-b68a-9eff5f9acc59"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
import groovy.json.JsonSlurper
import java.util.ArrayList
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

devicesCount = testRunner.testCase.testSuite.getPropertyValue("devicesCount").toInteger()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
devicesToSend = testRunner.testCase.testSuite.getPropertyValue("devicesToSend")
devicesToSendVoip = testRunner.testCase.testSuite.getPropertyValue("devicesToSendVoip")
currentDateTimeForDB = testRunner.testCase.getPropertyValue("currentDateTimeForDB")
eventType=testRunner.testCase.getPropertyValue("eventType")

sendDate=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(currentDateTimeForDB)
log.info sendDate

devicesToSendList=devicesToSend.split(',').collect{it as int}
devicesToSendVoipList=devicesToSendVoip.split(',').collect{it as int}

for(i=1; i &lt;=devicesCount; i++ ){
	deviceGuid=testRunner.testCase.testSuite.getPropertyValue("deviceGuid"+(i))
	if(eventType != 'doctorStartCall'){	
	log.info "Проверяю status=SEND для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'")
		//tasks="select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'"
		log.info tasks
		if(devicesToSendList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
	if(eventType != 'doctorLoginToRoom' &amp;&amp; eventType != 'conferenceSuccesfullyFinished'){
		log.info "Проверяю status=SEND_VOIP для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND_VOIP' and device_guid='"+deviceGuid+"'")
		log.info tasks
		if(devicesToSendVoipList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND_VOIP",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки VOIP уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>eventType</con:name><con:value>patientDidNotAnswer</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>391930072666</con:value></con:property><con:property><con:name>currentDateTime</con:name><con:value>2024-02-12 12:15:55.040</con:value></con:property><con:property><con:name>specName</con:name><con:value>Врач-терапевт участковый</con:value></con:property><con:property><con:name>docShortName</con:name><con:value>Беляев А.А.</con:value></con:property><con:property><con:name>currentDateTimeForDB</con:name><con:value>2024-02-12 12:17:02</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>38003</con:value></con:property><con:property><con:name>timePatientRejectCall</con:name><con:value>12:15</con:value></con:property><con:property><con:name>timePatientDidNotAnswer</con:name><con:value>12.02.2024 в 12:15</con:value></con:property><con:property><con:name>timeCallInProgress</con:name><con:value>01:07</con:value></con:property><con:property><con:name>callCounter</con:name><con:value>14</con:value></con:property><con:property><con:name>eventDateTime</con:name><con:value>2024-02-12T12:15:55.040</con:value></con:property></con:properties></con:testCase><con:testCase id="0fafb022-b1b7-403d-8a2a-665884e0fa1a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправить сообщение с eventType=patientDidNotAnswer и unaccessCallCounter=22" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Проверить наличие пациента со всеми девайсами" id="14621337-a088-4d8c-9294-9fb7a0b99257"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>87575f5b-f9ac-4151-b446-443b9fb2d85b</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="jdbc" name="Найти appointmentId, doctor_short_name, speciality_name" id="9c738c9b-4acd-4b6e-b780-b501630ff4b7"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fna.appointment_id, fna.speciality_name, fna.doctor_short_name from f_notification_appointment fna
join f_notification fn on fn.id = fna.notification_id
join f_user fu on fu.id = fn.user_id
where fu.patient_id = ${#TestSuite#patientId} 
and fna.status = 'CREATE'
and fna.doctor_short_name is not NULL
LIMIT 1</con:query><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать appointmentId, doctor_short_name, speciality_name" id="a9ef137e-4bdd-482a-9b85-e2a91ba9982d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointmentId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.APPOINTMENT_ID</con:sourcePath><con:targetType>appointmentId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>specialityName</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.SPECIALITY_NAME</con:sourcePath><con:targetType>specName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>doctor_short_name</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.DOCTOR_SHORT_NAME</con:sourcePath><con:targetType>docShortName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик" id="c120691f-12c5-491d-93ca-628b53664a8e"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
import java.text.SimpleDateFormat
import java.time.LocalDateTime
import java.util.Date
import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

log.info "Отправка сообщения об изменении статуса ТМК"

def date = new Date()
log.info date
def currentDateTimeForDB = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date)
testRunner.testCase.setPropertyValue("currentDateTimeForDB", currentDateTimeForDB.toString())

Date dateMinus = LocalDateTime.now().plusSeconds(-67).toDate()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS").format(dateMinus)
def eventDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(dateMinus)
def timePatientRejectCall = new SimpleDateFormat("HH:mm").format(dateMinus)
def timePatientDidNotAnswer = new SimpleDateFormat("dd.MM.yyyy' в 'HH:mm").format(dateMinus)
testRunner.testCase.setPropertyValue("eventDateTime", eventDateTime.toString())
testRunner.testCase.setPropertyValue("currentDateTime", currentDateTime.toString())
testRunner.testCase.setPropertyValue("timePatientRejectCall", timePatientRejectCall.toString())
testRunner.testCase.setPropertyValue("timePatientDidNotAnswer", timePatientDidNotAnswer.toString())

patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
appointmentId = testRunner.testCase.getPropertyValue("appointmentId")
callCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")
userId= testRunner.testCase.testSuite.getPropertyValue("userId")
deviceGuid = java.util.UUID.randomUUID()

message="""{
    "patientId": """+patientId+""",
    "deviceId": \""""+deviceGuid+"""\",
    "productType": "emiasInfo",
    "appointmentId": """+appointmentId+""",
    "participantURL": "/7d47420b-5dee-4cfe-bbf1-349fd9776370?participantUuid\u003d1436b14f-479d-432a-8c7f-b3301168b260",
    "eventType": \""""+eventType+"""\",
    "eventDateTime": \""""+eventDateTime+"""\",
    "unsuccessCallCounter": """+callCounter+"""
}"""

mainScripts.kafka().sendMessageToKafka2("topicTmkNotify",message)

sleep(10000)


query="SELECT create_date FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
createDate=notifications[0].create_date.toString()
String createdDate = createDate.substring(0, createDate.length() - 3)
createdDateParsed = Date.parse("yyyy-MM-dd HH:mm:ss.SSS", createdDate)
log.info createdDateParsed
int longTime = (createdDateParsed.getTime() - dateMinus.getTime())/1000
int hours = (longTime / 3600)*60;
int minutes = longTime / 3600*60 + (longTime / 3600) / 60
int seconds = longTime % 60;
String timeCallInProgress = String.format("%02d:%02d", minutes, seconds)
log.info timeCallInProgress
testRunner.testCase.setPropertyValue("timeCallInProgress", timeCallInProgress.toString())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification" id="912b784d-7a51-4307-8037-6b9b9e8476a0"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое = "+expValue.toString()+", фактическое ="+currentValue.toString())
}

def checkDescription( String description){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	doctorShortName = testRunner.testCase.getPropertyValue("docShortName")
	timePatientRejectCall = testRunner.testCase.getPropertyValue("timePatientRejectCall")
	timePatientDidNotAnswer = testRunner.testCase.getPropertyValue("timePatientDidNotAnswer")
	timeCallInProgress = testRunner.testCase.getPropertyValue("timeCallInProgress")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	countResult = callCounter ? (callCounter.endsWith("2") || callCounter.endsWith("3") || callCounter.endsWith("4")) &amp;&amp; !List.of("12", "13", "14").contains(callCounter) ? "раза" : "раз" : null
	desc=""
	switch(eventType){
		case "doctorLoginToRoom":
			desc = "Врач в сети: "+ specialityName +" "+ doctorShortName + " на связи, консультация скоро начнется. Войдите в приложение или ожидайте звонок."
			break
		case "doctorStartCall":
			desc = doctorShortName
			break
		case "patientRejectCall":
			desc = "Вы отклонили вызов от "+ specialityName + " " + doctorShortName + " сегодня в " + timePatientRejectCall
			break
		case "patientDidNotAnswer":
			desc = callCounter=="1" || !callCounter ? "Сегодня в "+ timePatientRejectCall + " звонил " + specialityName + " " + doctorShortName : "Вам звонил (" + callCounter  + ") " + countResult + " " + specialityName + " " + doctorShortName + " Последний " + timePatientDidNotAnswer
			break
		case "conferenceSuccesfullyFinished":
			desc = specialityName + doctorShortName + " провел онлайн-консультацию. Результат скоро появится в Медкарте."
			break
		case "callInProgress":
			desc = "Консультация идет " +timeCallInProgress
			break	
	}
	expectedDesc=desc
	checkParameter("notification.description",expectedDesc,description)
}

def checkTitle( String title){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	expTitle=""
	switch(eventType){
		case "doctorLoginToRoom":
			expTitle = "Онлайн-консультация скоро начнется"
			break
		case "doctorStartCall":
			expTitle = specialityName
			break
		case "patientRejectCall":
			expTitle = "Вызов от "+ specialityName + " отклонен"
			break
		case "patientDidNotAnswer":
			expTitle = callCounter=="1" || !callCounter ? "Пропущен вызов от " + specialityName: "Пропущены вызовы (" + callCounter  + ") от " + specialityName
			break
		case "conferenceSuccesfullyFinished":
			expTitle = "Онлайн-консультация состоялась"
			break
		case "callInProgress":
			expTitle = "Онлайн-консультация"
			break	
	}
	expectedTitle=expTitle
	log.info title
	checkParameter("notification.title",expectedTitle,title)
}

userId = testRunner.testCase.testSuite.getPropertyValue("userId")
currentDateTimeForDB= testRunner.testCase.getPropertyValue("currentDateTimeForDB")
query="SELECT * FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
if(notifications.size() == 1){
	notification=notifications[0]
	checkTitle(notification.title)
	checkDescription(notification.description)
	checkParameter("notification.deleted",false,notification.deleted )
	checkParameter("notification.viewed",false,notification.viewed )
	testRunner.testCase.setPropertyValue("notificationId", notification.id.toString())
}
else testRunner.fail("Количество записей в f_notification не равно 1. фактическое ="+notifications.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_telemedicine" id="4b46d7eb-a74e-4d66-84b1-2f0adea5bd35"><con:settings/><con:config><script>import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

appointmentId = testRunner.testCase.getPropertyValue("appointmentId").toLong()
eventDateTime = testRunner.testCase.getPropertyValue("currentDateTime").toString()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
unaccessCallCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")

query="SELECT * FROM f_notification_telemedicine WHERE notification_id ="+notificationId
notificationTelemedicine=sql.rows(query)

if(notificationTelemedicine.size() == 1){
	date = (eventDateTime.endsWith("00")) ? notificationTelemedicine[0].event_date_time.toString()+"00" : (eventDateTime.endsWith("0")) ? notificationTelemedicine[0].event_date_time.toString()+"0": notificationTelemedicine[0].event_date_time.toString()
	tm=notificationTelemedicine[0]
	log.info("Найдена запись в f_notification_telemedicine с notification_id ="+notificationId)
	checkParameter("eventDateTime",eventDateTime,date)
	checkParameter("unaccessCallCounter",unaccessCallCounter,tm.unsuccess_call_counter.toString())
	checkParameter("eventType",eventType,tm.event_type.toString())
}
else testRunner.fail("Количество записей в f_notification_telemedicine не равно 1. фактическое ="+notificationTelemedicine.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_task" id="9d94ead4-f28e-4c44-befb-62bbcd6706cf"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
import groovy.json.JsonSlurper
import java.util.ArrayList
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

devicesCount = testRunner.testCase.testSuite.getPropertyValue("devicesCount").toInteger()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
devicesToSend = testRunner.testCase.testSuite.getPropertyValue("devicesToSend")
devicesToSendVoip = testRunner.testCase.testSuite.getPropertyValue("devicesToSendVoip")
currentDateTimeForDB = testRunner.testCase.getPropertyValue("currentDateTimeForDB")
eventType=testRunner.testCase.getPropertyValue("eventType")

sendDate=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(currentDateTimeForDB)
log.info sendDate

devicesToSendList=devicesToSend.split(',').collect{it as int}
devicesToSendVoipList=devicesToSendVoip.split(',').collect{it as int}

for(i=1; i &lt;=devicesCount; i++ ){
	deviceGuid=testRunner.testCase.testSuite.getPropertyValue("deviceGuid"+(i))
	if(eventType != 'doctorStartCall'){	
	log.info "Проверяю status=SEND для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'")
		//tasks="select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'"
		log.info tasks
		if(devicesToSendList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
	if(eventType != 'doctorLoginToRoom' &amp;&amp; eventType != 'conferenceSuccesfullyFinished'){
		log.info "Проверяю status=SEND_VOIP для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND_VOIP' and device_guid='"+deviceGuid+"'")
		log.info tasks
		if(devicesToSendVoipList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND_VOIP",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки VOIP уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>eventType</con:name><con:value>patientDidNotAnswer</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>391930072666</con:value></con:property><con:property><con:name>currentDateTime</con:name><con:value>2024-02-12 12:16:07.237</con:value></con:property><con:property><con:name>specName</con:name><con:value>Врач-терапевт участковый</con:value></con:property><con:property><con:name>docShortName</con:name><con:value>Беляев А.А.</con:value></con:property><con:property><con:name>currentDateTimeForDB</con:name><con:value>2024-02-12 12:17:14</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>38004</con:value></con:property><con:property><con:name>timePatientRejectCall</con:name><con:value>12:16</con:value></con:property><con:property><con:name>timePatientDidNotAnswer</con:name><con:value>12.02.2024 в 12:16</con:value></con:property><con:property><con:name>timeCallInProgress</con:name><con:value>01:07</con:value></con:property><con:property><con:name>callCounter</con:name><con:value>22</con:value></con:property><con:property><con:name>eventDateTime</con:name><con:value>2024-02-12T12:16:07.237</con:value></con:property></con:properties></con:testCase><con:testCase id="5c0c46c6-12f2-4bbf-b4ed-097ad231cd75" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправить сообщение с eventType=patientDidNotAnswer только с обязательными параметрами" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Проверить наличие пациента со всеми девайсами" id="f044dc1d-c527-4840-8278-a5eb85c9a4f8"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>87575f5b-f9ac-4151-b446-443b9fb2d85b</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="jdbc" name="Найти appointmentId, doctor_short_name, speciality_name" id="422a1cbb-8ec7-4156-ac04-dab78afe70ab"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fna.appointment_id, fna.speciality_name, fna.doctor_short_name from f_notification_appointment fna
join f_notification fn on fn.id = fna.notification_id
join f_user fu on fu.id = fn.user_id
where fu.patient_id = ${#TestSuite#patientId} 
and fna.status = 'CREATE'
and fna.doctor_short_name is not NULL
LIMIT 1</con:query><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать appointmentId, doctor_short_name, speciality_name" id="397af306-fdd9-48e5-b911-2b4c02c00646"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointmentId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.APPOINTMENT_ID</con:sourcePath><con:targetType>appointmentId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>specialityName</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.SPECIALITY_NAME</con:sourcePath><con:targetType>specName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>doctor_short_name</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.DOCTOR_SHORT_NAME</con:sourcePath><con:targetType>docShortName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик" id="a956ded6-abc0-4345-bc36-1f36bd132aeb"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
import java.text.SimpleDateFormat
import java.time.LocalDateTime
import java.util.Date
import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

log.info "Отправка сообщения об изменении статуса ТМК"

def date = new Date()
log.info date
def currentDateTimeForDB = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date)
testRunner.testCase.setPropertyValue("currentDateTimeForDB", currentDateTimeForDB.toString())

Date dateMinus = LocalDateTime.now().plusSeconds(-67).toDate()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS").format(dateMinus)
def eventDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(dateMinus)
def timePatientRejectCall = new SimpleDateFormat("HH:mm").format(dateMinus)
def timePatientDidNotAnswer = new SimpleDateFormat("dd.MM.yyyy' в 'HH:mm").format(dateMinus)
testRunner.testCase.setPropertyValue("eventDateTime", eventDateTime.toString())
testRunner.testCase.setPropertyValue("currentDateTime", currentDateTime.toString())
testRunner.testCase.setPropertyValue("timePatientRejectCall", timePatientRejectCall.toString())
testRunner.testCase.setPropertyValue("timePatientDidNotAnswer", timePatientDidNotAnswer.toString())

patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
appointmentId = testRunner.testCase.getPropertyValue("appointmentId")
callCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")
userId= testRunner.testCase.testSuite.getPropertyValue("userId")
deviceGuid = java.util.UUID.randomUUID()

message="""{
    "patientId": """+patientId+""",
    "deviceId": \""""+deviceGuid+"""\",
    "productType": "emiasInfo",
    "appointmentId": """+appointmentId+""",
    "participantURL": "/7d47420b-5dee-4cfe-bbf1-349fd9776370?participantUuid\u003d1436b14f-479d-432a-8c7f-b3301168b260",
    "eventType": \""""+eventType+"""\",
    "eventDateTime": \""""+eventDateTime+"""\",
    "unsuccessCallCounter": """+callCounter+"""
}"""

mainScripts.kafka().sendMessageToKafka2("topicTmkNotify",message)

sleep(10000)


query="SELECT create_date FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
createDate=notifications[0].create_date.toString()
String createdDate = createDate.substring(0, createDate.length() - 3)
createdDateParsed = Date.parse("yyyy-MM-dd HH:mm:ss.SSS", createdDate)
log.info createdDateParsed
int longTime = (createdDateParsed.getTime() - dateMinus.getTime())/1000
int hours = (longTime / 3600)*60;
int minutes = longTime / 3600*60 + (longTime / 3600) / 60
int seconds = longTime % 60;
String timeCallInProgress = String.format("%02d:%02d", minutes, seconds)
log.info timeCallInProgress
testRunner.testCase.setPropertyValue("timeCallInProgress", timeCallInProgress.toString())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification" id="ed4edc71-c731-425c-8214-23489dee8b65"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое = "+expValue.toString()+", фактическое ="+currentValue.toString())
}

def checkDescription( String description){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	doctorShortName = testRunner.testCase.getPropertyValue("docShortName")
	timePatientRejectCall = testRunner.testCase.getPropertyValue("timePatientRejectCall")
	timePatientDidNotAnswer = testRunner.testCase.getPropertyValue("timePatientDidNotAnswer")
	timeCallInProgress = testRunner.testCase.getPropertyValue("timeCallInProgress")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	countResult = callCounter ? (callCounter.endsWith("2") || callCounter.endsWith("3") || callCounter.endsWith("4")) &amp;&amp; !List.of("12", "13", "14").contains(callCounter) ? "раза" : "раз" : null
	desc=""
	switch(eventType){
		case "doctorLoginToRoom":
			desc = "Врач в сети: "+ specialityName +" "+ doctorShortName + " на связи, консультация скоро начнется. Войдите в приложение или ожидайте звонок."
			break
		case "doctorStartCall":
			desc = doctorShortName
			break
		case "patientRejectCall":
			desc = "Вы отклонили вызов от "+ specialityName + " " + doctorShortName + " сегодня в " + timePatientRejectCall
			break
		case "patientDidNotAnswer":
			desc = callCounter=="1" || !callCounter ? "Сегодня в "+ timePatientRejectCall + " звонил " + specialityName + " " + doctorShortName : "Вам звонил (" + callCounter  + ") " + countResult + " " + specialityName + " " + doctorShortName + " Последний " + timePatientDidNotAnswer
			break
		case "conferenceSuccesfullyFinished":
			desc = specialityName + doctorShortName + " провел онлайн-консультацию. Результат скоро появится в Медкарте."
			break
		case "callInProgress":
			desc = "Консультация идет " +timeCallInProgress
			break	
	}
	expectedDesc=desc
	checkParameter("notification.description",expectedDesc,description)
}

def checkTitle( String title){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	expTitle=""
	switch(eventType){
		case "doctorLoginToRoom":
			expTitle = "Онлайн-консультация скоро начнется"
			break
		case "doctorStartCall":
			expTitle = specialityName
			break
		case "patientRejectCall":
			expTitle = "Вызов от "+ specialityName + " отклонен"
			break
		case "patientDidNotAnswer":
			expTitle = callCounter=="1" || !callCounter ? "Пропущен вызов от " + specialityName: "Пропущены вызовы (" + callCounter  + ") от " + specialityName
			break
		case "conferenceSuccesfullyFinished":
			expTitle = "Онлайн-консультация состоялась"
			break
		case "callInProgress":
			expTitle = "Онлайн-консультация"
			break	
	}
	expectedTitle=expTitle
	log.info title
	checkParameter("notification.title",expectedTitle,title)
}

userId = testRunner.testCase.testSuite.getPropertyValue("userId")
currentDateTimeForDB= testRunner.testCase.getPropertyValue("currentDateTimeForDB")
query="SELECT * FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
if(notifications.size() == 1){
	notification=notifications[0]
	checkTitle(notification.title)
	checkDescription(notification.description)
	checkParameter("notification.deleted",false,notification.deleted )
	checkParameter("notification.viewed",false,notification.viewed )
	testRunner.testCase.setPropertyValue("notificationId", notification.id.toString())
}
else testRunner.fail("Количество записей в f_notification не равно 1. фактическое ="+notifications.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_telemedicine" id="fe3729ed-c01a-490b-97a3-3a40673f4e9c"><con:settings/><con:config><script>import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

appointmentId = testRunner.testCase.getPropertyValue("appointmentId").toLong()
eventDateTime = testRunner.testCase.getPropertyValue("currentDateTime").toString()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
unaccessCallCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")

query="SELECT * FROM f_notification_telemedicine WHERE notification_id ="+notificationId
notificationTelemedicine=sql.rows(query)

if(notificationTelemedicine.size() == 1){
	date = (eventDateTime.endsWith("00")) ? notificationTelemedicine[0].event_date_time.toString()+"00" : (eventDateTime.endsWith("0")) ? notificationTelemedicine[0].event_date_time.toString()+"0": notificationTelemedicine[0].event_date_time.toString()
	tm=notificationTelemedicine[0]
	log.info("Найдена запись в f_notification_telemedicine с notification_id ="+notificationId)
	checkParameter("eventDateTime",eventDateTime,date)
	checkParameter("unaccessCallCounter",unaccessCallCounter,tm.unsuccess_call_counter)
	checkParameter("eventType",eventType,tm.event_type.toString())
}
else testRunner.fail("Количество записей в f_notification_telemedicine не равно 1. фактическое ="+notificationTelemedicine.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_task" id="997ec83e-4113-4955-b1c5-9f62d2ea24a1"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
import groovy.json.JsonSlurper
import java.util.ArrayList
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

devicesCount = testRunner.testCase.testSuite.getPropertyValue("devicesCount").toInteger()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
devicesToSend = testRunner.testCase.testSuite.getPropertyValue("devicesToSend")
devicesToSendVoip = testRunner.testCase.testSuite.getPropertyValue("devicesToSendVoip")
currentDateTimeForDB = testRunner.testCase.getPropertyValue("currentDateTimeForDB")
eventType=testRunner.testCase.getPropertyValue("eventType")

sendDate=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(currentDateTimeForDB)
log.info sendDate

devicesToSendList=devicesToSend.split(',').collect{it as int}
devicesToSendVoipList=devicesToSendVoip.split(',').collect{it as int}

for(i=1; i &lt;=devicesCount; i++ ){
	deviceGuid=testRunner.testCase.testSuite.getPropertyValue("deviceGuid"+(i))
	if(eventType != 'doctorStartCall'){	
	log.info "Проверяю status=SEND для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'")
		//tasks="select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'"
		log.info tasks
		if(devicesToSendList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
	if(eventType != 'doctorLoginToRoom' &amp;&amp; eventType != 'conferenceSuccesfullyFinished'){
		log.info "Проверяю status=SEND_VOIP для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND_VOIP' and device_guid='"+deviceGuid+"'")
		log.info tasks
		if(devicesToSendVoipList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND_VOIP",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки VOIP уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>eventType</con:name><con:value>patientDidNotAnswer</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>391930072666</con:value></con:property><con:property><con:name>currentDateTime</con:name><con:value>2024-02-12 12:16:20.016</con:value></con:property><con:property><con:name>specName</con:name><con:value>Врач-терапевт участковый</con:value></con:property><con:property><con:name>docShortName</con:name><con:value>Беляев А.А.</con:value></con:property><con:property><con:name>currentDateTimeForDB</con:name><con:value>2024-02-12 12:17:27</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>38005</con:value></con:property><con:property><con:name>timePatientRejectCall</con:name><con:value>12:16</con:value></con:property><con:property><con:name>timePatientDidNotAnswer</con:name><con:value>12.02.2024 в 12:16</con:value></con:property><con:property><con:name>timeCallInProgress</con:name><con:value>01:07</con:value></con:property><con:property><con:name>eventDateTime</con:name><con:value>2024-02-12T12:16:20.016</con:value></con:property></con:properties></con:testCase><con:testCase id="66bde11f-15ae-4611-9330-acadf97cbc09" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправить сообщение с eventType=conferenceSuccesfullyFinished" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Проверить наличие пациента со всеми девайсами" id="6659203b-d116-4b20-bd30-56fcbfe8575c"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>87575f5b-f9ac-4151-b446-443b9fb2d85b</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="jdbc" name="Найти appointmentId, doctor_short_name, speciality_name" id="eaf43bcf-82ad-4c11-9d1f-61b2288f0487"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fna.appointment_id, fna.speciality_name, fna.doctor_short_name from f_notification_appointment fna
join f_notification fn on fn.id = fna.notification_id
join f_user fu on fu.id = fn.user_id
where fu.patient_id = ${#TestSuite#patientId} 
and fna.status = 'CREATE'
and fna.doctor_short_name is not NULL
LIMIT 1</con:query><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать appointmentId, doctor_short_name, speciality_name" id="da194658-1ee2-478a-af24-702c6b57cecb"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointmentId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.APPOINTMENT_ID</con:sourcePath><con:targetType>appointmentId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>specialityName</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.SPECIALITY_NAME</con:sourcePath><con:targetType>specName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>doctor_short_name</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.DOCTOR_SHORT_NAME</con:sourcePath><con:targetType>docShortName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик" id="b643086b-0971-4c83-bbb7-f5e98d54e532"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
import java.text.SimpleDateFormat
import java.time.LocalDateTime
import java.util.Date
import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

log.info "Отправка сообщения об изменении статуса ТМК"

def date = new Date()
log.info date
def currentDateTimeForDB = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date)
testRunner.testCase.setPropertyValue("currentDateTimeForDB", currentDateTimeForDB.toString())

Date dateMinus = LocalDateTime.now().plusSeconds(-67).toDate()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS").format(dateMinus)
def eventDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(dateMinus)
def timePatientRejectCall = new SimpleDateFormat("HH:mm").format(dateMinus)
def timePatientDidNotAnswer = new SimpleDateFormat("dd.MM.yyyy' в 'HH:mm").format(dateMinus)
testRunner.testCase.setPropertyValue("eventDateTime", eventDateTime.toString())
testRunner.testCase.setPropertyValue("currentDateTime", currentDateTime.toString())
testRunner.testCase.setPropertyValue("timePatientRejectCall", timePatientRejectCall.toString())
testRunner.testCase.setPropertyValue("timePatientDidNotAnswer", timePatientDidNotAnswer.toString())

patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
appointmentId = testRunner.testCase.getPropertyValue("appointmentId")
callCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")
userId= testRunner.testCase.testSuite.getPropertyValue("userId")
deviceGuid = java.util.UUID.randomUUID()

message="""{
    "patientId": """+patientId+""",
    "deviceId": \""""+deviceGuid+"""\",
    "productType": "emiasInfo",
    "appointmentId": """+appointmentId+""",
    "participantURL": "/7d47420b-5dee-4cfe-bbf1-349fd9776370?participantUuid\u003d1436b14f-479d-432a-8c7f-b3301168b260",
    "eventType": \""""+eventType+"""\",
    "eventDateTime": \""""+eventDateTime+"""\",
    "unsuccessCallCounter": """+callCounter+"""
}"""

mainScripts.kafka().sendMessageToKafka2("topicTmkNotify",message)

sleep(10000)


query="SELECT create_date FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
createDate=notifications[0].create_date.toString()
String createdDate = createDate.substring(0, createDate.length() - 3)
createdDateParsed = Date.parse("yyyy-MM-dd HH:mm:ss.SSS", createdDate)
log.info createdDateParsed
int longTime = (createdDateParsed.getTime() - dateMinus.getTime())/1000
int hours = (longTime / 3600)*60;
int minutes = longTime / 3600*60 + (longTime / 3600) / 60
int seconds = longTime % 60;
String timeCallInProgress = String.format("%02d:%02d", minutes, seconds)
log.info timeCallInProgress
testRunner.testCase.setPropertyValue("timeCallInProgress", timeCallInProgress.toString())</script></con:config></con:testStep><con:testStep type="delay" name="Подождать" id="e08af82d-c9f2-4f9a-bbaa-3490d0170dd1"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification" id="01468da7-f316-4f16-8d51-8c72abd5c091"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое = "+expValue.toString()+", фактическое ="+currentValue.toString())
}

def checkDescription( String description){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	doctorShortName = testRunner.testCase.getPropertyValue("docShortName")
	timePatientRejectCall = testRunner.testCase.getPropertyValue("timePatientRejectCall")
	timePatientDidNotAnswer = testRunner.testCase.getPropertyValue("timePatientDidNotAnswer")
	timeCallInProgress = testRunner.testCase.getPropertyValue("timeCallInProgress")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	countResult = callCounter ? (callCounter.endsWith("2") || callCounter.endsWith("3") || callCounter.endsWith("4")) &amp;&amp; !List.of("12", "13", "14").contains(callCounter) ? "раза" : "раз" : null
	desc=""
	switch(eventType){
		case "doctorLoginToRoom":
			desc = "Врач в сети: "+ specialityName +" "+ doctorShortName + " на связи, консультация скоро начнется. Войдите в приложение или ожидайте звонок."
			break
		case "doctorStartCall":
			desc = doctorShortName
			break
		case "patientRejectCall":
			desc = "Вы отклонили вызов от "+ specialityName + " " + doctorShortName + " сегодня в " + timePatientRejectCall
			break
		case "patientDidNotAnswer":
			desc = callCounter=="1" || !callCounter ? "Сегодня в "+ timePatientRejectCall + " звонил " + specialityName + " " + doctorShortName : "Вам звонил (" + callCounter  + ") " + countResult + " " + specialityName + " " + doctorShortName + " Последний " + timePatientDidNotAnswer
			break
		case "conferenceSuccesfullyFinished":
			desc = specialityName + doctorShortName + " провел онлайн-консультацию. Результат скоро появится в Медкарте."
			break
		case "callInProgress":
			desc = "Консультация идет " +timeCallInProgress
			break	
	}
	expectedDesc=desc
	checkParameter("notification.description",expectedDesc,description)
}

def checkTitle( String title){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	expTitle=""
	switch(eventType){
		case "doctorLoginToRoom":
			expTitle = "Онлайн-консультация скоро начнется"
			break
		case "doctorStartCall":
			expTitle = specialityName
			break
		case "patientRejectCall":
			expTitle = "Вызов от "+ specialityName + " отклонен"
			break
		case "patientDidNotAnswer":
			expTitle = callCounter=="1" || !callCounter ? "Пропущен вызов от " + specialityName: "Пропущены вызовы (" + callCounter  + ") от " + specialityName
			break
		case "conferenceSuccesfullyFinished":
			expTitle = "Онлайн-консультация состоялась"
			break
		case "callInProgress":
			expTitle = "Онлайн-консультация"
			break	
	}
	expectedTitle=expTitle
	log.info title
	checkParameter("notification.title",expectedTitle,title)
}

userId = testRunner.testCase.testSuite.getPropertyValue("userId")
currentDateTimeForDB= testRunner.testCase.getPropertyValue("currentDateTimeForDB")
query="SELECT * FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
if(notifications.size() == 1){
	notification=notifications[0]
	checkTitle(notification.title)
	checkDescription(notification.description)
	checkParameter("notification.deleted",false,notification.deleted )
	checkParameter("notification.viewed",false,notification.viewed )
	testRunner.testCase.setPropertyValue("notificationId", notification.id.toString())
}
else testRunner.fail("Количество записей в f_notification не равно 1. фактическое ="+notifications.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_telemedicine" id="28897fc6-9f9a-49db-b0ce-fdfa9595ecfd"><con:settings/><con:config><script>import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

appointmentId = testRunner.testCase.getPropertyValue("appointmentId").toLong()
eventDateTime = testRunner.testCase.getPropertyValue("currentDateTime").toString()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
unaccessCallCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")

query="SELECT * FROM f_notification_telemedicine WHERE notification_id ="+notificationId
notificationTelemedicine=sql.rows(query)

if(notificationTelemedicine.size() == 1){
	date = (eventDateTime.endsWith("00")) ? notificationTelemedicine[0].event_date_time.toString()+"00" : (eventDateTime.endsWith("0")) ? notificationTelemedicine[0].event_date_time.toString()+"0": notificationTelemedicine[0].event_date_time.toString()
	tm=notificationTelemedicine[0]
	log.info("Найдена запись в f_notification_telemedicine с notification_id ="+notificationId)
	checkParameter("eventDateTime",eventDateTime,date)
	checkParameter("unaccessCallCounter",unaccessCallCounter,tm.unsuccess_call_counter.toString())
	checkParameter("eventType",eventType,tm.event_type.toString())
}
else testRunner.fail("Количество записей в f_notification_telemedicine не равно 1. фактическое ="+notificationTelemedicine.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_task" id="9f89849c-980d-4456-9f40-2dec47bbe42d"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
import groovy.json.JsonSlurper
import java.util.ArrayList
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

devicesCount = testRunner.testCase.testSuite.getPropertyValue("devicesCount").toInteger()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
devicesToSend = testRunner.testCase.testSuite.getPropertyValue("devicesToSend")
devicesToSendVoip = testRunner.testCase.testSuite.getPropertyValue("devicesToSendVoip")
currentDateTimeForDB = testRunner.testCase.getPropertyValue("currentDateTimeForDB")
eventType=testRunner.testCase.getPropertyValue("eventType")

sendDate=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(currentDateTimeForDB)
log.info sendDate

devicesToSendList=devicesToSend.split(',').collect{it as int}
devicesToSendVoipList=devicesToSendVoip.split(',').collect{it as int}

for(i=1; i &lt;=devicesCount; i++ ){
	deviceGuid=testRunner.testCase.testSuite.getPropertyValue("deviceGuid"+(i))
	if(eventType != 'doctorStartCall'){	
	log.info "Проверяю status=SEND для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'")
		//tasks="select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'"
		log.info tasks
		if(devicesToSendList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
	if(eventType != 'doctorLoginToRoom' &amp;&amp; eventType != 'conferenceSuccesfullyFinished'){
		log.info "Проверяю status=SEND_VOIP для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND_VOIP' and device_guid='"+deviceGuid+"'")
		log.info tasks
		if(devicesToSendVoipList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND_VOIP",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки VOIP уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>eventType</con:name><con:value>patientRejectCall</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>391930072666</con:value></con:property><con:property><con:name>currentDateTime</con:name><con:value>2024-02-12 12:16:32.578</con:value></con:property><con:property><con:name>specName</con:name><con:value>Врач-терапевт участковый</con:value></con:property><con:property><con:name>docShortName</con:name><con:value>Беляев А.А.</con:value></con:property><con:property><con:name>currentDateTimeForDB</con:name><con:value>2024-02-12 12:17:39</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>38006</con:value></con:property><con:property><con:name>timePatientRejectCall</con:name><con:value>12:16</con:value></con:property><con:property><con:name>timePatientDidNotAnswer</con:name><con:value>12.02.2024 в 12:16</con:value></con:property><con:property><con:name>timeCallInProgress</con:name><con:value>01:07</con:value></con:property><con:property><con:name>callCounter</con:name><con:value>1</con:value></con:property><con:property><con:name>eventDateTime</con:name><con:value>2024-02-12T12:16:32.578</con:value></con:property></con:properties></con:testCase><con:testCase id="61e80137-49d1-476f-b3af-1ba3038c7f88" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправить сообщение с eventType=callInProgress" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Проверить наличие пациента со всеми девайсами" id="b1a6cb95-702e-4fd3-8b70-f7a76fc309e9"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>87575f5b-f9ac-4151-b446-443b9fb2d85b</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="jdbc" name="Найти appointmentId, doctor_short_name, speciality_name" id="d2ecb5d8-657a-4080-9f3f-020ead67ca86"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fna.appointment_id, fna.speciality_name, fna.doctor_short_name from f_notification_appointment fna
join f_notification fn on fn.id = fna.notification_id
join f_user fu on fu.id = fn.user_id
where fu.patient_id = ${#TestSuite#patientId} 
and fna.status = 'CREATE'
and fna.doctor_short_name is not NULL
LIMIT 1</con:query><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать appointmentId, doctor_short_name, speciality_name" id="d6f1da57-ce4d-4887-96b0-c0fc8407cc98"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointmentId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.APPOINTMENT_ID</con:sourcePath><con:targetType>appointmentId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>specialityName</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.SPECIALITY_NAME</con:sourcePath><con:targetType>specName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>doctor_short_name</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId, doctor_short_name, speciality_name</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.DOCTOR_SHORT_NAME</con:sourcePath><con:targetType>docShortName</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение в топик" id="21f3639f-f372-4851-a699-4ddef2c03d28"><con:settings/><con:config><script>def mainScripts = new ScriptLibrary(context, testRunner, log)
import java.text.SimpleDateFormat
import java.time.LocalDateTime
import java.util.Date
import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

log.info "Отправка сообщения об изменении статуса ТМК"

def date = new Date()
log.info date
def currentDateTimeForDB = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date)
testRunner.testCase.setPropertyValue("currentDateTimeForDB", currentDateTimeForDB.toString())

Date dateMinus = LocalDateTime.now().plusSeconds(-67).toDate()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS").format(dateMinus)
def eventDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(dateMinus)
def timePatientRejectCall = new SimpleDateFormat("HH:mm").format(dateMinus)
def timePatientDidNotAnswer = new SimpleDateFormat("dd.MM.yyyy' в 'HH:mm").format(dateMinus)
testRunner.testCase.setPropertyValue("eventDateTime", eventDateTime.toString())
testRunner.testCase.setPropertyValue("currentDateTime", currentDateTime.toString())
testRunner.testCase.setPropertyValue("timePatientRejectCall", timePatientRejectCall.toString())
testRunner.testCase.setPropertyValue("timePatientDidNotAnswer", timePatientDidNotAnswer.toString())

patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
appointmentId = testRunner.testCase.getPropertyValue("appointmentId")
callCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")
userId= testRunner.testCase.testSuite.getPropertyValue("userId")
deviceGuid = java.util.UUID.randomUUID()

message="""{
    "patientId": """+patientId+""",
    "deviceId": \""""+deviceGuid+"""\",
    "productType": "emiasInfo",
    "appointmentId": """+appointmentId+""",
    "participantURL": "/7d47420b-5dee-4cfe-bbf1-349fd9776370?participantUuid\u003d1436b14f-479d-432a-8c7f-b3301168b260",
    "eventType": \""""+eventType+"""\",
    "eventDateTime": \""""+eventDateTime+"""\",
    "unsuccessCallCounter": """+callCounter+"""
}"""

mainScripts.kafka().sendMessageToKafka2("topicTmkNotify",message)

sleep(10000)


query="SELECT create_date FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
createDate=notifications[0].create_date.toString()
String createdDate = createDate.substring(0, createDate.length() - 3)
createdDateParsed = Date.parse("yyyy-MM-dd HH:mm:ss.SSS", createdDate)
log.info createdDateParsed
int longTime = (createdDateParsed.getTime() - dateMinus.getTime())/1000
int hours = (longTime / 3600)*60;
int minutes = longTime / 3600*60 + (longTime / 3600) / 60
int seconds = longTime % 60;
String timeCallInProgress = String.format("%02d:%02d", minutes, seconds)
log.info timeCallInProgress
testRunner.testCase.setPropertyValue("timeCallInProgress", timeCallInProgress.toString())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification" id="5a7941b5-ddd4-4d3d-882c-47c36b15bb67"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое = "+expValue.toString()+", фактическое ="+currentValue.toString())
}

def checkDescription( String description){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	doctorShortName = testRunner.testCase.getPropertyValue("docShortName")
	timePatientRejectCall = testRunner.testCase.getPropertyValue("timePatientRejectCall")
	timePatientDidNotAnswer = testRunner.testCase.getPropertyValue("timePatientDidNotAnswer")
	timeCallInProgress = testRunner.testCase.getPropertyValue("timeCallInProgress")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	countResult = callCounter ? (callCounter.endsWith("2") || callCounter.endsWith("3") || callCounter.endsWith("4")) &amp;&amp; !List.of("12", "13", "14").contains(callCounter) ? "раза" : "раз" : null
	desc=""
	switch(eventType){
		case "doctorLoginToRoom":
			desc = "Врач в сети: "+ specialityName +" "+ doctorShortName + " на связи, консультация скоро начнется. Войдите в приложение или ожидайте звонок."
			break
		case "doctorStartCall":
			desc = doctorShortName
			break
		case "patientRejectCall":
			desc = "Вы отклонили вызов от "+ specialityName + " " + doctorShortName + " сегодня в " + timePatientRejectCall
			break
		case "patientDidNotAnswer":
			desc = callCounter=="1" || !callCounter ? "Сегодня в "+ timePatientRejectCall + " звонил " + specialityName + " " + doctorShortName : "Вам звонил (" + callCounter  + ") " + countResult + " " + specialityName + " " + doctorShortName + " Последний " + timePatientDidNotAnswer
			break
		case "conferenceSuccesfullyFinished":
			desc = specialityName + doctorShortName + " провел онлайн-консультацию. Результат скоро появится в Медкарте."
			break
		case "callInProgress":
			desc = "Консультация идет " +timeCallInProgress
			break	
	}
	expectedDesc=desc
	checkParameter("notification.description",expectedDesc,description)
}

def checkTitle( String title){
	eventType = testRunner.testCase.getPropertyValue("eventType")
	specialityName = testRunner.testCase.getPropertyValue("specName")
	callCounter = testRunner.testCase.getPropertyValue("callCounter")
	expTitle=""
	switch(eventType){
		case "doctorLoginToRoom":
			expTitle = "Онлайн-консультация скоро начнется"
			break
		case "doctorStartCall":
			expTitle = specialityName
			break
		case "patientRejectCall":
			expTitle = "Вызов от "+ specialityName + " отклонен"
			break
		case "patientDidNotAnswer":
			expTitle = callCounter=="1" || !callCounter ? "Пропущен вызов от " + specialityName: "Пропущены вызовы (" + callCounter  + ") от " + specialityName
			break
		case "conferenceSuccesfullyFinished":
			expTitle = "Онлайн-консультация состоялась"
			break
		case "callInProgress":
			expTitle = "Онлайн-консультация"
			break	
	}
	expectedTitle=expTitle
	log.info title
	checkParameter("notification.title",expectedTitle,title)
}

userId = testRunner.testCase.testSuite.getPropertyValue("userId")
currentDateTimeForDB= testRunner.testCase.getPropertyValue("currentDateTimeForDB")
query="SELECT * FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
log.info query
notifications=sql.rows(query)
if(notifications.size() == 1){
	notification=notifications[0]
	checkTitle(notification.title)
	checkDescription(notification.description)
	checkParameter("notification.deleted",false,notification.deleted )
	checkParameter("notification.viewed",false,notification.viewed )
	testRunner.testCase.setPropertyValue("notificationId", notification.id.toString())
}
else testRunner.fail("Количество записей в f_notification не равно 1. фактическое ="+notifications.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_telemedicine" id="0047bc09-2328-4e24-9649-4c2d79116dea"><con:settings/><con:config><script>import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

appointmentId = testRunner.testCase.getPropertyValue("appointmentId").toLong()
eventDateTime = testRunner.testCase.getPropertyValue("currentDateTime").toString()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
unaccessCallCounter = testRunner.testCase.getPropertyValue("callCounter")
eventType = testRunner.testCase.getPropertyValue("eventType")

query="SELECT * FROM f_notification_telemedicine WHERE notification_id ="+notificationId
notificationTelemedicine=sql.rows(query)

if(notificationTelemedicine.size() == 1){
	date = (eventDateTime.endsWith("00")) ? notificationTelemedicine[0].event_date_time.toString()+"00" : (eventDateTime.endsWith("0")) ? notificationTelemedicine[0].event_date_time.toString()+"0": notificationTelemedicine[0].event_date_time.toString()
	tm=notificationTelemedicine[0]
	log.info("Найдена запись в f_notification_telemedicine с notification_id ="+notificationId)
	checkParameter("eventDateTime",eventDateTime,date)
	checkParameter("unaccessCallCounter",unaccessCallCounter,tm.unsuccess_call_counter.toString())
	checkParameter("eventType",eventType,tm.event_type.toString())
}
else testRunner.fail("Количество записей в f_notification_telemedicine не равно 1. фактическое ="+notificationTelemedicine.size())</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить создание в f_notification_task" id="c0cccd28-fa0f-483e-9a16-f5e2c62e9142"><con:settings/><con:config><script>import groovy.sql.Sql
import java.text.SimpleDateFormat
import groovy.json.JsonSlurper
import java.util.ArrayList
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue) testRunner.fail("значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString())
}

devicesCount = testRunner.testCase.testSuite.getPropertyValue("devicesCount").toInteger()
notificationId = testRunner.testCase.getPropertyValue("notificationId").toLong()
devicesToSend = testRunner.testCase.testSuite.getPropertyValue("devicesToSend")
devicesToSendVoip = testRunner.testCase.testSuite.getPropertyValue("devicesToSendVoip")
currentDateTimeForDB = testRunner.testCase.getPropertyValue("currentDateTimeForDB")
eventType=testRunner.testCase.getPropertyValue("eventType")

sendDate=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(currentDateTimeForDB)
log.info sendDate

devicesToSendList=devicesToSend.split(',').collect{it as int}
devicesToSendVoipList=devicesToSendVoip.split(',').collect{it as int}

for(i=1; i &lt;=devicesCount; i++ ){
	deviceGuid=testRunner.testCase.testSuite.getPropertyValue("deviceGuid"+(i))
	if(eventType != 'doctorStartCall'){	
	log.info "Проверяю status=SEND для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'")
		//tasks="select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND' and device_guid='"+deviceGuid+"'"
		log.info tasks
		if(devicesToSendList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
	if(eventType != 'doctorLoginToRoom' &amp;&amp; eventType != 'conferenceSuccesfullyFinished'){
		log.info "Проверяю status=SEND_VOIP для девайса "+deviceGuid
		tasks=sql.rows("select * from f_notification_task where notification_id="+notificationId+" and status = 'SEND_VOIP' and device_guid='"+deviceGuid+"'")
		log.info tasks
		if(devicesToSendVoipList.contains(i)){
			if(tasks.size() == 1){
				task=tasks[0]
				checkParameter("status","SEND_VOIP",task.status)
				if( task.send_date &lt; sendDate) testRunner.fail("значение sendDate не соответствует ожидаемому. ожидаемое : больше "+currentDateTimeForDB+", фактическое ="+task.send_date.toString())
			}
			else  testRunner.fail("Количество записей в f_notification_task не равно 1. фактическое ="+tasks.size())
		}
		else{
			if(tasks.size() == 1){
				 testRunner.fail("Для девайса, по которому не должно быть отправки VOIP уведомлений, найдены записи в f_notification_task. их количество="+tasks.size())
			}
		}
	}
}
</script></con:config></con:testStep><con:testStep type="groovy" name="1" id="0cca917a-ee8f-42cf-ae46-87d39ce44609" disabled="true"><con:settings/><con:config><script>import java.text.SimpleDateFormat
import java.time.LocalDateTime
import java.util.Date
import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")


Date dateMinus = LocalDateTime.now().plusSeconds(-600).toDate()
userId= testRunner.testCase.testSuite.getPropertyValue("userId")
sql = Sql.newInstance(connection)
//def date = new Date()
//def currentDateTimeForDB = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date)
currentDateTimeForDB = testRunner.testCase.getPropertyValue("currentDateTimeForDB")
query="SELECT create_date FROM f_notification WHERE user_id = "+userId+" AND notification_type_id=7 and  create_date > '"+currentDateTimeForDB+"'"
notifications=sql.rows(query)
createDate=notifications[0].create_date.toString()
log.info createDate
String result = createDate.substring(0, createDate.length() - 3)
log.info result
//createdDate=Date.parse("yyyy-MM-dd hh:mm:ss.SSS", createDate)

createdDateParsed = Date.parse("yyyy-MM-dd HH:mm:ss.SSS", result)
log.info createdDateParsed

int longTime = (createdDateParsed.getTime() - dateMinus.getTime())/1000
int hours = (longTime / 3600)*60;
int minutes = longTime / 3600*60 + (longTime / 3600) / 60
int seconds = longTime % 60;
String timeCallInProgress = String.format("%02d:%02d", minutes, seconds)
log.info timeCallInProgress
testRunner.testCase.setPropertyValue("timeCallInProgress", timeCallInProgress.toString())</script></con:config></con:testStep><con:properties><con:property><con:name>eventType</con:name><con:value>callInProgress</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>391930072666</con:value></con:property><con:property><con:name>currentDateTime</con:name><con:value>2024-02-12 12:16:49.625</con:value></con:property><con:property><con:name>specName</con:name><con:value>Врач-терапевт участковый</con:value></con:property><con:property><con:name>docShortName</con:name><con:value>Беляев А.А.</con:value></con:property><con:property><con:name>currentDateTimeForDB</con:name><con:value>2024-02-12 12:17:56</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>38007</con:value></con:property><con:property><con:name>timePatientRejectCall</con:name><con:value>12:16</con:value></con:property><con:property><con:name>timePatientDidNotAnswer</con:name><con:value>12.02.2024 в 12:16</con:value></con:property><con:property><con:name>timeCallInProgress</con:name><con:value>01:07</con:value></con:property><con:property><con:name>callCounter</con:name><con:value>1</con:value></con:property><con:property><con:name>eventDateTime</con:name><con:value>2024-02-12T12:16:49.625</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>patientId</con:name><con:value>123010</con:value></con:property><con:property><con:name>oms</con:name><con:value>1000000000010</con:value></con:property><con:property><con:name>userId</con:name><con:value>13786</con:value></con:property><con:property><con:name>devicesCount</con:name><con:value>9</con:value></con:property><con:property><con:name>deviceGuid1</con:name><con:value>a4110a7d-430b-47b5-95cc-8a8d3a36e804</con:value></con:property><con:property><con:name>deviceGuid2</con:name><con:value>49cbea73-a037-4364-a747-d4ddf07b01a7</con:value></con:property><con:property><con:name>deviceGuid3</con:name><con:value>27170440-f260-44ac-85ea-e7b8e275c5f4</con:value></con:property><con:property><con:name>deviceGuid4</con:name><con:value>9eecff77-4cd8-400f-994f-0dc6f8774398</con:value></con:property><con:property><con:name>deviceGuid5</con:name><con:value>fb7b825a-6df6-42b3-bc90-869976cf0541</con:value></con:property><con:property><con:name>deviceGuid6</con:name><con:value>fa7f54f2-64d2-477c-bf23-fb35a6bec420</con:value></con:property><con:property><con:name>deviceGuid7</con:name><con:value>73c07c66-d9b8-4430-bf29-16db93fdcf92</con:value></con:property><con:property><con:name>deviceGuid8</con:name><con:value>f0b4dc87-5b8f-4510-ac10-83ea8cc792b1</con:value></con:property><con:property><con:name>deviceGuid9</con:name><con:value>638fe89e-88c2-4536-8fa9-fc1afad91eac</con:value></con:property><con:property><con:name>devicesToSend</con:name><con:value>4, 5, 6, 7, 8, 9</con:value></con:property><con:property><con:name>devicesToSendVoip</con:name><con:value>1, 2, 3, 4, 5, 7, 8</con:value></con:property></con:properties></con:testSuite><con:testSuite id="5cd9317d-4b45-4814-b06e-558a4955c47f" name="POST getLpusForVaccinations"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="73c372bc-f784-498a-9456-a161e69d5c25" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. Получить список ЛПУ со всеми необязательными параметрами и одним arSpecialityId. 394392" searchProperties="true"><con:settings/><con:testStep type="request" name="getLpusForVaccinations SOAP" id="1bd39af9-295e-4ad3-b86e-32c03209c416"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Самозапись.ковид</con:interface><con:operation>getLpusForVaccination</con:operation><con:request name="getLpusForVaccinations SOAP" id="173c61f8-3ca1-41cf-939c-3a3003fb146b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <v5:getLpusForVaccination>
         <omsNumber>${#TestCase#omsNumber}</omsNumber>
         <birthDate>${#TestCase#birthDate}</birthDate>
         <externalSystemId>EIM</externalSystemId>
      </v5:getLpusForVaccination>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="dcb6d219-1055-4cd6-b22f-780722534ae2" name="Код ответа 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="getLpusForVaccinations POST" id="1dd14289-581b-4f73-8009-3549907fd69e"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/getLpusForVaccinations" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getLpusForVaccinations POST" id="461d56ab-c615-456a-bf05-f0e95d26c367" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber" : "${#TestCase#omsNumber}",
    "birthDate": "${#TestCase#birthDate}"
}</con:request><con:originalUri>http://application-emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/getLpusForVaccinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="26308a7b-97ac-418d-8f61-d468d5808f36" name="Код ответа 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Mock-saOrchestrator" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>Mock-saOrchestrator</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Сравнить ответ" id="8ec22006-3c56-4dbb-924f-b9fc447e245c"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import groovy.sql.Sql

path = testRunner.testCase.getPropertyValue("path")
//подключиться к бд 
connection =testRunner.testCase.testSuite.project.getPropertyValue("mockDbFullConnection")
sql = Sql.newInstance(connection)

ResponseJson = context.expand('${getLpusForVaccinations POST#Response}')
ResponseJsonParsed = new JsonSlurper().parseText(ResponseJson)

ResponseXML = context.expand('${getLpusForVaccinations SOAP#Response}')
ResponseXMLParsed = new XmlSlurper().parseText(ResponseXML)

lpusList = ResponseJsonParsed.payload.lpu
lpusListXml = ResponseXMLParsed.Body.getLpusForVaccinationResponse.lpu

//Сравнение количества полученных объектов 
//в ответах getLpusForVaccinations и getLpusFirVaccinations SACovid
assert lpusList.size() == lpusListXml.size()

//Сравнение параметров каждого объекта
//в ответах getLpusForVaccinations и getLpusFirVaccinations SACovid
for(int i=0; i &lt; lpusList.size(); i++){
	assert lpusList[i].lpuId == lpusListXml[i].lpuId.toInteger()
	assert lpusList[i].shortName.trim() == lpusListXml[i].shortName.toString()
	assert lpusList[i].addressPoint.size() == lpusListXml[i].addressPoint.size()
	//Сравнение параметров каждого объекта addressPoint
	//полученного в ответах getLpusForVaccinations и getLpusFirVaccinations SACovid
	for (int j=0; j &lt; lpusList[i].addressPoint.size(); j++){
		assert lpusList[i].addressPoint[j].addressPointId == lpusListXml[i].addressPoint[j].addressPointId.toInteger()
		assert lpusList[i].addressPoint[j].addressString == lpusListXml[i].addressPoint[j].addressString.toString()
		//Проверка существования параметра terCode
		if(lpusList[i].addressPoint[j].terCode == null){
			testRunner.fail("В ответе отсутствует параметр terCode")
		}
		else{
			assert lpusList[i].addressPoint[j].terCode == lpusListXml[i].addressPoint[j].terCode.toString()
		}
			//Проверка существования параметра terName
		if(lpusList[i].addressPoint[j].terName == null){
			testRunner.fail("В ответе отсутствует параметр terName")
		}
		else {
			assert lpusList[i].addressPoint[j].terName == lpusListXml[i].addressPoint[j].terName.toString()
		}
		if(lpusList[i].addressPoint[j].arSpecialityId.size() > 1){
			testRunner.fail("В ответе вернулось больше одной специальности")
		}
		else{
			//Сравнение значений в массиве arSpecialityId
			//полученного в ответах getLpusForVaccinations и getLpusFirVaccinations SACovid
			for (int k=0; k &lt; lpusList[i].addressPoint[j].arSpecialityId.size(); k++){
				assert lpusList[i].addressPoint[j].arSpecialityId[k] == 	lpusListXml[i].addressPoint[j].arSpecialityId[k].toInteger()
			}
		}	
	}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value>7793899793001224</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>2001-06-06</con:value></con:property></con:properties></con:testCase><con:testCase id="9b5fe19c-f0b7-4c7c-b051-0574a321600e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. Получить список ЛПУ со всеми необязательными параметрами и одним arSpecialityId. 394395" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getLpusForVaccinations POST" id="e0ee7733-6b48-4783-ade8-63abbe54ed34"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/getLpusForVaccinations" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getLpusForVaccinations POST" id="461d56ab-c615-456a-bf05-f0e95d26c367" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber" : "${#TestCase#omsNumber}",
    "birthDate": "${#TestCase#birthDate}"
}</con:request><con:originalUri>http://application-emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/getLpusForVaccinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="26308a7b-97ac-418d-8f61-d468d5808f36" name="Код ответа 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Mock-saOrchestrator" value="${#Project#mockUrl}/mock/394395" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>Mock-saOrchestrator</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Сравнить ответ" id="f89774ee-d093-4f4d-90ae-e8e36a26aee5"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import groovy.sql.Sql

path = testRunner.testCase.getPropertyValue("path")
//подключиться к бд 
connection =testRunner.testCase.testSuite.project.getPropertyValue("mockDbFullConnection")
sql = Sql.newInstance(connection)

ResponseJson = context.expand('${getLpusForVaccinations POST#Response}')
ResponseJsonParsed = new JsonSlurper().parseText(ResponseJson)

query="select response from template_response where \"path\"= '"+path+"'"
def response = sql.firstRow(query).response

lpusList = ResponseJsonParsed.payload.lpu
lpusListXml = new XmlSlurper().parseText(response)
//Сравнение параметров getLpusForVaccinations и мока
assert lpusList.lpuId.join() == lpusListXml.Body.getLpusForVaccinationResponse.lpu.lpuId.toString()
assert lpusList.shortName.join() == lpusListXml.Body.getLpusForVaccinationResponse.lpu.shortName.toString()
//Проверка существования параметра terCode
if(lpusList[0].addressPoint[0].terCode != null){
	testRunner.fail("В ответе вернулся параметр terCode")
}
//Проверка существования параметра terName
if(lpusList[0].addressPoint[0].terName != null){
	testRunner.fail("В ответе вернулся параметр terName")
}
if(lpusList[0].addressPoint[0].arSpecialityId.size() &lt; 1){
	testRunner.fail("В ответе вернулось меньше одной специальности")
}
else{
	//Сравнение значений в массиве arSpecialityId
	//полученного в ответах getLpusForVaccinations и моке
	for (i=0; i&lt;lpusList[0].addressPoint[0].arSpecialityId.size(); i++){
		assert lpusList[0].addressPoint[0].arSpecialityId[i].toString() == lpusListXml.Body.getLpusForVaccinationResponse.lpu.addressPoint.arSpecialityId[i].toString()
	}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value>7793899793001224</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>2001-06-06</con:value></con:property><con:property><con:name>path</con:name><con:value>/mock/394395/getLpusForVaccination</con:value></con:property></con:properties></con:testCase><con:testCase id="0243429d-0d31-4b5a-9244-9abf46302de8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС1. Ошибка SA_PATIENT_NOT_FOUND. 394387" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getLpusForVaccinations POST" id="b2233a70-ea20-497d-8981-0c9fbae03c9e"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/getLpusForVaccinations" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getLpusForVaccinations POST" id="461d56ab-c615-456a-bf05-f0e95d26c367" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber" : "${#TestCase#omsNumber}",
    "birthDate": "${#TestCase#birthDate}"
}</con:request><con:originalUri>http://application-emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/getLpusForVaccinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="26308a7b-97ac-418d-8f61-d468d5808f36" name="Код ответа 404"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5f43451-51c6-4da4-9c3f-060e6550a091" name="code=SA_PATIENT_NOT_FOUND"><con:configuration><path>$.error.code</path><content>SA_PATIENT_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5f43451-51c6-4da4-9c3f-060e6550a091" name="description=Пациент с указанным ОМС не найден"><con:configuration><path>$.error.description</path><content>Пациент с указанным ОМС не найден</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5f43451-51c6-4da4-9c3f-060e6550a091" name="type=BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>Mock-saOrchestrator</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value>779389979300122</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>2001-06-06</con:value></con:property><con:property><con:name>path</con:name><con:value>/mock/394395/getLpusForVaccination</con:value></con:property></con:properties></con:testCase><con:testCase id="680b0a5f-03f8-4735-8f77-9c5ce697b824" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС2. Ошибка SA_PATIENT_HAS_NO_VALID_OMS. 394386" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getLpusForVaccinations POST" id="eb4e6686-b36a-49d5-9ee1-77caa94dac9c"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/getLpusForVaccinations" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getLpusForVaccinations POST" id="461d56ab-c615-456a-bf05-f0e95d26c367" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber" : "${#TestCase#omsNumber}",
    "birthDate": "${#TestCase#birthDate}"
}</con:request><con:originalUri>http://application-emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/getLpusForVaccinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="26308a7b-97ac-418d-8f61-d468d5808f36" name="Код ответа 400"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5f43451-51c6-4da4-9c3f-060e6550a091" name="code=SA_PATIENT_HAS_NO_VALID_OMS"><con:configuration><path>$.error.code</path><content>SA_PATIENT_HAS_NO_VALID_OMS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5f43451-51c6-4da4-9c3f-060e6550a091" name="description=Пациент не имеет действительного полиса ОМС"><con:configuration><path>$.error.description</path><content>Пациент не имеет действительного полиса ОМС</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5f43451-51c6-4da4-9c3f-060e6550a091" name="type=BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>Mock-saOrchestrator</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value>7751100890001278</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>1998-08-02</con:value></con:property><con:property><con:name>path</con:name><con:value>/mock/394395/getLpusForVaccination</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="78c14609-d3d3-48ac-88da-f24ad4c9fb59" name="getReferralsInfo"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="437a0ac8-9c32-428d-95ff-a41daf48c578" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="isTmk = true (archived_reception_type = false, is_deleted = false)_376371" searchProperties="true"><con:settings/><con:testStep type="request" id="d7fea890-31e0-43fc-93b5-aae977670bda" name="getReferralsInfo"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Самозапись</con:interface><con:operation>getReferralsInfo</con:operation><con:request name="getReferralsInfo" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="fada3ba0-b768-4094-a722-77b333e74999"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <v5:getReferralsInfo>\r
         <omsNumber>${#TestCase#oms}</omsNumber>
         <birthDate>${#TestCase#bd}</birthDate>
         <externalSystemId>EIM</externalSystemId>
      </v5:getReferralsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5c85c232-85fa-4c96-9809-e42c981c62e3" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="723055e4-fe54-4c36-89c0-bad51b527fdb" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getReferralsInfo"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Записать receptionTypeId" id="89d50a26-6cf5-4454-a254-37757295f86e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>receptionTypeId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getReferralsInfo</con:sourceStep><con:sourcePath>//*:receptionTypeId[1]</con:sourcePath><con:targetType>receptionTypeId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="jdbc" name="Создать запись в d_reception_type_tmk_code" id="69ed5343-3ae0-4adc-bfb7-aafa30df2173"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO d_reception_type_tmk_code (id, code_reception_type, archived_reception_type, is_deleted)

VALUES(nextval('d_reception_type_tmk_code_sequence'), ${#TestCase#receptionTypeId}, false, false);</con:query><con:assertion type="XPath Match" id="7ff04591-aab7-43b1-9595-1c8b4c34cb04" name="XPath Match"><con:configuration><path>//*:UpdateCount</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="getReferralsInfoINFO" id="618ddf66-af19-4377-8bdc-90c4b7a17cc1"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestrator/getReferralsInfo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getReferralsInfoINFO" id="a298e287-217e-4c8f-999c-a20388ebf44b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "birthDate": "${#TestCase#bd}",
  "omsNumber": "${#TestCase#oms}"
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestrator/getReferralsInfo</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="4473a431-9c01-4853-9fa2-3a8827829aeb" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить isTmk" id="67954c62-db01-4055-ab75-1e433124e62a"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

def getReferralsInfoResponse = context.expand('${getReferralsInfoINFO#Response}')
def slurperJson = new JsonSlurper()
def getReferralsInfo = slurperJson.parseText(getReferralsInfoResponse)

def referralsINFO = getReferralsInfo.payload

def getReferralsInfoSAOResponse = context.expand('${getReferralsInfo#Response}')
getReferralsInfoSAO = new XmlSlurper().parseText(getReferralsInfoSAOResponse)

countInfo=getReferralsInfo.payload.size()
referralsCount=getReferralsInfoSAO.Body.getReferralsInfoResponse.referral.size()

assert countInfo==referralsCount

referralsSAO=getReferralsInfoSAO.Body.getReferralsInfoResponse.referral

receptionTypeId =  testRunner.testCase.getPropertyValue("receptionTypeId").toInteger()

for (i=0; i&lt;countInfo; i++)
{
	log.info ("Зашли в цикл " + i)
	if(referralsINFO[i].type=='REF_TO_DOCTOR'){
		log.info "Зашли в цикл if REF_TO_DOCTOR"
		if(referralsINFO[i].toDoctor.receptionTypeId == receptionTypeId){
		log.info referralsINFO[i].toDoctor.receptionTypeId
		assert referralsINFO[i].isTmk == true
		log.info "REF_TO_DOCTOR " + i + " receptionTypeId=" + referralsINFO[i].toDoctor.receptionTypeId}
		else {
					assert referralsINFO[i].isTmk == false
					log.info "остальные REF_TO_DOCTOR"}
				}
		if(referralsINFO[i].type=='REF_TO_LDP'){
		log.info "Зашли в цикл if REF_TO_LDP"
		assert referralsINFO[i].isTmk == null : "test failed. Для REF_TO_LDP есть признак isTmk"
		}
		else {
			log.info "isTmk == null "
			}
}</script></con:config></con:testStep><con:testStep type="jdbc" name="Удалить запись в d_reception_type_tmk_code" id="cb923c16-51e9-4d93-920b-927e58d22d2c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from d_reception_type_tmk_code where code_reception_type = ${#TestCase#receptionTypeId}</con:query><con:assertion type="XPath Match" id="7ff04591-aab7-43b1-9595-1c8b4c34cb04" name="XPath Match"><con:configuration><path>//*:UpdateCount</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7757330889000627</con:value></con:property><con:property><con:name>bd</con:name><con:value>1966-02-10</con:value></con:property><con:property><con:name>ehrId</con:name><con:value>78c3f6ee-e387-4b98-abe8-8f9332fe2401</con:value></con:property><con:property><con:name>receptionTypeId</con:name><con:value>1879</con:value></con:property></con:properties></con:testCase><con:testCase id="7b690bb4-68be-4226-8801-6e12d174cad2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="isTmk = false (archived_reception_type = true, is_deleted = false)_376378" searchProperties="true"><con:settings/><con:testStep type="request" id="20696922-67ac-43f8-9f74-acc0e0a98843" name="getReferralsInfo"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Самозапись</con:interface><con:operation>getReferralsInfo</con:operation><con:request name="getReferralsInfo" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="fada3ba0-b768-4094-a722-77b333e74999"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <v5:getReferralsInfo>\r
         <omsNumber>${#TestCase#oms}</omsNumber>
         <birthDate>${#TestCase#bd}</birthDate>
         <externalSystemId>EIM</externalSystemId>
      </v5:getReferralsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5c85c232-85fa-4c96-9809-e42c981c62e3" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="723055e4-fe54-4c36-89c0-bad51b527fdb" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getReferralsInfo"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Записать receptionTypeId" id="9853c986-9e56-47ea-beef-16d1236f1976"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>receptionTypeId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getReferralsInfo</con:sourceStep><con:sourcePath>//*:receptionTypeId[1]</con:sourcePath><con:targetType>receptionTypeId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="jdbc" name="Создать запись в d_reception_type_tmk_code" id="95812d52-7b2a-4c53-a0a0-68364d58dd2f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO d_reception_type_tmk_code (id, code_reception_type, archived_reception_type, is_deleted)

VALUES(nextval('d_reception_type_tmk_code_sequence'), ${#TestCase#receptionTypeId}, true, false);</con:query><con:assertion type="XPath Match" id="7ff04591-aab7-43b1-9595-1c8b4c34cb04" name="XPath Match"><con:configuration><path>//*:UpdateCount</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="getReferralsInfoINFO" id="d2e0cac4-d426-4977-be40-26832e48eb48"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestrator/getReferralsInfo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getReferralsInfoINFO" id="a298e287-217e-4c8f-999c-a20388ebf44b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "birthDate": "${#TestCase#bd}",
  "omsNumber": "${#TestCase#oms}"
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestrator/getReferralsInfo</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="4473a431-9c01-4853-9fa2-3a8827829aeb" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить isTmk" id="374b0d64-51d0-4b74-b32c-fa4ebe35a1bd"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

def getReferralsInfoResponse = context.expand('${getReferralsInfoINFO#Response}')
def slurperJson = new JsonSlurper()
def getReferralsInfo = slurperJson.parseText(getReferralsInfoResponse)

def referralsINFO = getReferralsInfo.payload

def getReferralsInfoSAOResponse = context.expand('${getReferralsInfo#Response}')
getReferralsInfoSAO = new XmlSlurper().parseText(getReferralsInfoSAOResponse)

countInfo=getReferralsInfo.payload.size()
referralsCount=getReferralsInfoSAO.Body.getReferralsInfoResponse.referral.size()

assert countInfo==referralsCount

referralsSAO=getReferralsInfoSAO.Body.getReferralsInfoResponse.referral

receptionTypeId =  testRunner.testCase.getPropertyValue("receptionTypeId").toInteger()

for (i=0; i&lt;countInfo; i++)
{
	log.info ("Зашли в цикл " + i)
	if(referralsINFO[i].type=='REF_TO_DOCTOR'){
		log.info "Зашли в цикл if REF_TO_DOCTOR"
		if(referralsINFO[i].toDoctor.receptionTypeId == receptionTypeId){
		log.info referralsINFO[i].toDoctor.receptionTypeId
		assert referralsINFO[i].isTmk == true
		log.info "REF_TO_DOCTOR " + i + " receptionTypeId=" + referralsINFO[i].toDoctor.receptionTypeId}
		else {
					assert referralsINFO[i].isTmk == false
					log.info "остальные REF_TO_DOCTOR"}
				}
		if(referralsINFO[i].type=='REF_TO_LDP'){
		log.info "Зашли в цикл if REF_TO_LDP"
		assert referralsINFO[i].isTmk == null : "test failed. Для REF_TO_LDP есть признак isTmk"
		}
		else {
			log.info "isTmk == null "
			}
}</script></con:config></con:testStep><con:testStep type="jdbc" name="Удалить запись в d_reception_type_tmk_code" id="283646bf-ff03-4b02-b99b-51826d5cf6da"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from d_reception_type_tmk_code where code_reception_type = ${#TestCase#receptionTypeId}</con:query><con:assertion type="XPath Match" id="7ff04591-aab7-43b1-9595-1c8b4c34cb04" name="XPath Match"><con:configuration><path>//*:UpdateCount</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7757330889000627</con:value></con:property><con:property><con:name>bd</con:name><con:value>1966-02-10</con:value></con:property><con:property><con:name>ehrId</con:name><con:value>78c3f6ee-e387-4b98-abe8-8f9332fe2401</con:value></con:property><con:property><con:name>receptionTypeId</con:name><con:value>1879</con:value></con:property></con:properties></con:testCase><con:testCase id="f23bcec6-f829-46d5-9540-937c87996353" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="isTmk = false (archived_reception_type = false, is_deleted = true)_376379" searchProperties="true"><con:settings/><con:testStep type="request" id="53db2cbb-474b-4027-bb3a-bdbe63acdff8" name="getReferralsInfo"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Самозапись</con:interface><con:operation>getReferralsInfo</con:operation><con:request name="getReferralsInfo" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="fada3ba0-b768-4094-a722-77b333e74999"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <v5:getReferralsInfo>\r
         <omsNumber>${#TestCase#oms}</omsNumber>
         <birthDate>${#TestCase#bd}</birthDate>
         <externalSystemId>EIM</externalSystemId>
      </v5:getReferralsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5c85c232-85fa-4c96-9809-e42c981c62e3" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="723055e4-fe54-4c36-89c0-bad51b527fdb" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getReferralsInfo"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Записать receptionTypeId" id="bce4293b-80ec-43ea-9c1d-5d01e1d232de"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>receptionTypeId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getReferralsInfo</con:sourceStep><con:sourcePath>//*:receptionTypeId[1]</con:sourcePath><con:targetType>receptionTypeId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="jdbc" name="Создать запись в d_reception_type_tmk_code" id="debfdc1b-866c-432f-ab70-3bdbad5b5deb"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO d_reception_type_tmk_code (id, code_reception_type, archived_reception_type, is_deleted)

VALUES(nextval('d_reception_type_tmk_code_sequence'), ${#TestCase#receptionTypeId}, false, true);</con:query><con:assertion type="XPath Match" id="7ff04591-aab7-43b1-9595-1c8b4c34cb04" name="XPath Match"><con:configuration><path>//*:UpdateCount</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="getReferralsInfoINFO" id="73ec94ab-f6dd-420d-a21e-57ae6e986313"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestrator/getReferralsInfo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getReferralsInfoINFO" id="a298e287-217e-4c8f-999c-a20388ebf44b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "birthDate": "${#TestCase#bd}",
  "omsNumber": "${#TestCase#oms}"
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestrator/getReferralsInfo</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="4473a431-9c01-4853-9fa2-3a8827829aeb" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить isTmk" id="b921fc10-6e65-4768-8fe0-d267a1ad0e8e"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

def getReferralsInfoResponse = context.expand('${getReferralsInfoINFO#Response}')
def slurperJson = new JsonSlurper()
def getReferralsInfo = slurperJson.parseText(getReferralsInfoResponse)

def referralsINFO = getReferralsInfo.payload

def getReferralsInfoSAOResponse = context.expand('${getReferralsInfo#Response}')
getReferralsInfoSAO = new XmlSlurper().parseText(getReferralsInfoSAOResponse)

countInfo=getReferralsInfo.payload.size()
referralsCount=getReferralsInfoSAO.Body.getReferralsInfoResponse.referral.size()

assert countInfo==referralsCount

referralsSAO=getReferralsInfoSAO.Body.getReferralsInfoResponse.referral

receptionTypeId =  testRunner.testCase.getPropertyValue("receptionTypeId").toInteger()

for (i=0; i&lt;countInfo; i++)
{
	log.info ("Зашли в цикл " + i)
	if(referralsINFO[i].type=='REF_TO_DOCTOR'){
		log.info "Зашли в цикл if REF_TO_DOCTOR"
		if(referralsINFO[i].toDoctor.receptionTypeId == receptionTypeId){
		log.info referralsINFO[i].toDoctor.receptionTypeId
		assert referralsINFO[i].isTmk == true
		log.info "REF_TO_DOCTOR " + i + " receptionTypeId=" + referralsINFO[i].toDoctor.receptionTypeId}
		else {
					assert referralsINFO[i].isTmk == false
					log.info "остальные REF_TO_DOCTOR"}
				}
		if(referralsINFO[i].type=='REF_TO_LDP'){
		log.info "Зашли в цикл if REF_TO_LDP"
		assert referralsINFO[i].isTmk == null : "test failed. Для REF_TO_LDP есть признак isTmk"
		}
		else {
			log.info "isTmk == null "
			}
}</script></con:config></con:testStep><con:testStep type="jdbc" name="Удалить запись в d_reception_type_tmk_code" id="e8cfa2a6-b281-4231-98c4-153194fd9878"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from d_reception_type_tmk_code where code_reception_type = ${#TestCase#receptionTypeId}</con:query><con:assertion type="XPath Match" id="7ff04591-aab7-43b1-9595-1c8b4c34cb04" name="XPath Match"><con:configuration><path>//*:UpdateCount</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7757330889000627</con:value></con:property><con:property><con:name>bd</con:name><con:value>1966-02-10</con:value></con:property><con:property><con:name>ehrId</con:name><con:value>78c3f6ee-e387-4b98-abe8-8f9332fe2401</con:value></con:property><con:property><con:name>receptionTypeId</con:name><con:value>1879</con:value></con:property></con:properties></con:testCase><con:testCase id="7047bede-ebd8-45b8-93d5-c16243579f08" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="isTmk = false (archived_reception_type = true, is_deleted = true)_376379" searchProperties="true"><con:settings/><con:testStep type="request" id="3ab10a45-232c-4ea6-9d8c-694a7982aa71" name="getReferralsInfo"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Самозапись</con:interface><con:operation>getReferralsInfo</con:operation><con:request name="getReferralsInfo" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="fada3ba0-b768-4094-a722-77b333e74999"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <v5:getReferralsInfo>\r
         <omsNumber>${#TestCase#oms}</omsNumber>
         <birthDate>${#TestCase#bd}</birthDate>
         <externalSystemId>EIM</externalSystemId>
      </v5:getReferralsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5c85c232-85fa-4c96-9809-e42c981c62e3" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="723055e4-fe54-4c36-89c0-bad51b527fdb" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getReferralsInfo"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Записать receptionTypeId" id="bce4a995-8ea9-4545-b1c7-8a2b919cdf87"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>receptionTypeId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getReferralsInfo</con:sourceStep><con:sourcePath>//*:receptionTypeId[1]</con:sourcePath><con:targetType>receptionTypeId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="jdbc" name="Создать запись в d_reception_type_tmk_code" id="c4aba489-2efc-4aaf-b297-dc5a178d772e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO d_reception_type_tmk_code (id, code_reception_type, archived_reception_type, is_deleted)

VALUES(nextval('d_reception_type_tmk_code_sequence'), ${#TestCase#receptionTypeId}, true, true);</con:query><con:assertion type="XPath Match" id="7ff04591-aab7-43b1-9595-1c8b4c34cb04" name="XPath Match"><con:configuration><path>//*:UpdateCount</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="getReferralsInfoINFO" id="47cbea87-3761-401d-b903-e0a35a3a686b"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestrator/getReferralsInfo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getReferralsInfoINFO" id="a298e287-217e-4c8f-999c-a20388ebf44b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "birthDate": "${#TestCase#bd}",
  "omsNumber": "${#TestCase#oms}"
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestrator/getReferralsInfo</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="4473a431-9c01-4853-9fa2-3a8827829aeb" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить isTmk" id="dc6bb8ea-0313-45d7-99f7-1c469dbb1199"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

def getReferralsInfoResponse = context.expand('${getReferralsInfoINFO#Response}')
def slurperJson = new JsonSlurper()
def getReferralsInfo = slurperJson.parseText(getReferralsInfoResponse)

def referralsINFO = getReferralsInfo.payload

def getReferralsInfoSAOResponse = context.expand('${getReferralsInfo#Response}')
getReferralsInfoSAO = new XmlSlurper().parseText(getReferralsInfoSAOResponse)

countInfo=getReferralsInfo.payload.size()
referralsCount=getReferralsInfoSAO.Body.getReferralsInfoResponse.referral.size()

assert countInfo==referralsCount

referralsSAO=getReferralsInfoSAO.Body.getReferralsInfoResponse.referral

receptionTypeId =  testRunner.testCase.getPropertyValue("receptionTypeId").toInteger()

for (i=0; i&lt;countInfo; i++)
{
	log.info ("Зашли в цикл " + i)
	if(referralsINFO[i].type=='REF_TO_DOCTOR'){
		log.info "Зашли в цикл if REF_TO_DOCTOR"
		if(referralsINFO[i].toDoctor.receptionTypeId == receptionTypeId){
		log.info referralsINFO[i].toDoctor.receptionTypeId
		assert referralsINFO[i].isTmk == true
		log.info "REF_TO_DOCTOR " + i + " receptionTypeId=" + referralsINFO[i].toDoctor.receptionTypeId}
		else {
					assert referralsINFO[i].isTmk == false
					log.info "остальные REF_TO_DOCTOR"}
				}
		if(referralsINFO[i].type=='REF_TO_LDP'){
		log.info "Зашли в цикл if REF_TO_LDP"
		assert referralsINFO[i].isTmk == null : "test failed. Для REF_TO_LDP есть признак isTmk"
		}
		else {
			log.info "isTmk == null "
			}
}</script></con:config></con:testStep><con:testStep type="jdbc" name="Удалить запись в d_reception_type_tmk_code" id="fcec86e7-4229-4af1-8dcd-a9c26965fa63"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from d_reception_type_tmk_code where code_reception_type = ${#TestCase#receptionTypeId}</con:query><con:assertion type="XPath Match" id="7ff04591-aab7-43b1-9595-1c8b4c34cb04" name="XPath Match"><con:configuration><path>//*:UpdateCount</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7757330889000627</con:value></con:property><con:property><con:name>bd</con:name><con:value>1966-02-10</con:value></con:property><con:property><con:name>ehrId</con:name><con:value>78c3f6ee-e387-4b98-abe8-8f9332fe2401</con:value></con:property><con:property><con:name>receptionTypeId</con:name><con:value>1879</con:value></con:property></con:properties></con:testCase><con:testCase id="27a83a42-d78e-4069-9190-d65b4cca2926" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Получение направлений типа REF_TO_DOCTOR. 221294" searchProperties="true"><con:settings/><con:testStep type="request" name="getReferralsInfo" id="efd128b1-78e6-4a6f-93de-273d4dd275a2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Самозапись</con:interface><con:operation>getReferralsInfo</con:operation><con:request name="getReferralsInfo" id="a6c2b141-b359-4100-a6e3-400fae48e32a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <v5:getReferralsInfo>
         <omsNumber>${#TestCase#oms}</omsNumber>
         <birthDate>${#TestCase#bd}</birthDate>
         <returnExtended>true</returnExtended>
         <externalSystemId>EIM</externalSystemId>
      </v5:getReferralsInfo>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Simple Contains" id="4c298061-5330-4f2c-ba5b-9741433736a7" name="Содержит REF_TO_DOCTOR"><con:configuration><token>REF_TO_DOCTOR</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="getReferralsInfoINFO" id="6af72e45-4984-43dc-ab84-e21765330427"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestrator/getReferralsInfo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getReferralsInfoINFO" id="756d86f7-c843-4d9f-8a8b-d48facd2815c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "birthDate": "${#TestCase#bd}",
  "omsNumber": "${#TestCase#oms}"
}</con:request><con:originalUri>http://application-emiasinfo3.emias.solit-clouds.ru/api/v2/saOrchestrator/getReferralsInfo</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="428e79f0-9464-4bf4-8947-63649f81a3a9" name="Код ответа 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="2af8db3f-df47-4a10-8798-84ff161c2fdb"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper

def getReferralsInfoResponse = context.expand('${getReferralsInfoINFO#Response}')
def slurperJson = new JsonSlurper()
def getReferralsInfo = slurperJson.parseText(getReferralsInfoResponse)
def referralsINFO = getReferralsInfo.payload

def getReferralsInfoSAOResponse = context.expand('${getReferralsInfo#Response}')
getReferralsInfoSAO = new XmlSlurper().parseText(getReferralsInfoSAOResponse)

referrals=getReferralsInfo.payload
log.info referrals

for (i=0; i&lt;referrals.size(); i++){
	log.info ("Зашли в цикл " + i)
		assert referralsINFO[i].id == referrals[i].id
		assert referralsINFO[i].number == referrals[i].number
		assert referralsINFO[i].startTime == referrals[i].startTime
		assert referralsINFO[i].endTime == referrals[i].endTime
		assert referralsINFO[i].lpuId == referrals[i].lpuId
		assert referralsINFO[i].lpuType == referrals[i].lpuType
		assert referralsINFO[i].lpuName == referrals[i].lpuName
		assert referralsINFO[i].diagnosis.code == referrals[i].diagnosis.code
		assert referralsINFO[i].diagnosis.name == referrals[i].diagnosis.name
		assert referralsINFO[i].issuedDoctor.jobExecutionId == referrals[i].issuedDoctor.jobExecutionId
		assert referralsINFO[i].issuedDoctor.fio == referrals[i].issuedDoctor.fio
		assert referralsINFO[i].issuedDoctor.snils == referrals[i].issuedDoctor.snils
		assert referralsINFO[i].issuedDoctor.specialityId == referrals[i].issuedDoctor.specialityId
		assert referralsINFO[i].countActiveAppointment == referrals[i].countActiveAppointment
		assert referralsINFO[i].countAppointmentWithReceptionFact == referrals[i].countAppointmentWithReceptionFact
	if(referralsINFO[i].type=='REF_TO_DOCTOR'){
		assert referralsINFO[i].toDoctor.specialityId == referrals[i].toDoctor.specialityId
		assert referralsINFO[i].toDoctor.specialityName == referrals[i].toDoctor.specialityName
		assert referralsINFO[i].toDoctor.receptionTypeId == referrals[i].toDoctor.receptionTypeId
	}
	if(referralsINFO[i].type=='REF_TO_LDP' &amp;&amp; referralsINFO[i].toLdp.mainDiagnosticCode !=null){
		testRunner.fail("В объекте REF_TO_LDP номер "+i+" вернулся параметр mainDiagnosticCode")
	}
}</script></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7700007178231039</con:value></con:property><con:property><con:name>bd</con:name><con:value>1939-10-23</con:value></con:property></con:properties></con:testCase><con:testCase id="15384753-14b9-4a90-9490-b03314540ce8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Получение направлений типа REF_TO_DOCTOR без передачи patientId. 221917" searchProperties="true"><con:settings/><con:testStep type="request" name="getReferralsInfo" id="cb114924-3d56-4521-b1ca-b45e4d7a239f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Самозапись</con:interface><con:operation>getReferralsInfo</con:operation><con:request name="getReferralsInfo" id="a6c2b141-b359-4100-a6e3-400fae48e32a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <v5:getReferralsInfo>
         <omsNumber>${#TestCase#oms}</omsNumber>
         <birthDate>${#TestCase#bd}</birthDate>
         <returnExtended>true</returnExtended>
         <externalSystemId>EIM</externalSystemId>
      </v5:getReferralsInfo>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Simple Contains" id="4c298061-5330-4f2c-ba5b-9741433736a7" name="Содержит REF_TO_DOCTOR"><con:configuration><token>REF_TO_DOCTOR</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="getReferralsInfoINFO" id="5b5de9e8-dc1f-4fde-9c99-a7c38b23141a"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestrator/getReferralsInfo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getReferralsInfoINFO" id="756d86f7-c843-4d9f-8a8b-d48facd2815c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "birthDate": "${#TestCase#bd}",
  "omsNumber": "${#TestCase#oms}"
}</con:request><con:originalUri>http://application-emiasinfo3.emias.solit-clouds.ru/api/v2/saOrchestrator/getReferralsInfo</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="428e79f0-9464-4bf4-8947-63649f81a3a9" name="Код ответа 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="bead0596-00a6-42ab-81c5-e97d399df2a7"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper

def getReferralsInfoResponse = context.expand('${getReferralsInfoINFO#Response}')
def slurperJson = new JsonSlurper()
def getReferralsInfo = slurperJson.parseText(getReferralsInfoResponse)
def referralsINFO = getReferralsInfo.payload

def getReferralsInfoSAOResponse = context.expand('${getReferralsInfo#Response}')
getReferralsInfoSAO = new XmlSlurper().parseText(getReferralsInfoSAOResponse)

referrals=getReferralsInfo.payload
log.info referrals

for (i=0; i&lt;referrals.size(); i++){
	log.info ("Зашли в цикл " + i)
		assert referralsINFO[i].id == referrals[i].id
		assert referralsINFO[i].number == referrals[i].number
		assert referralsINFO[i].startTime == referrals[i].startTime
		assert referralsINFO[i].endTime == referrals[i].endTime
		assert referralsINFO[i].lpuId == referrals[i].lpuId
		assert referralsINFO[i].lpuType == referrals[i].lpuType
		assert referralsINFO[i].lpuName == referrals[i].lpuName
		assert referralsINFO[i].diagnosis.code == referrals[i].diagnosis.code
		assert referralsINFO[i].diagnosis.name == referrals[i].diagnosis.name
		assert referralsINFO[i].issuedDoctor.jobExecutionId == referrals[i].issuedDoctor.jobExecutionId
		assert referralsINFO[i].issuedDoctor.fio == referrals[i].issuedDoctor.fio
		assert referralsINFO[i].issuedDoctor.snils == referrals[i].issuedDoctor.snils
		assert referralsINFO[i].issuedDoctor.specialityId == referrals[i].issuedDoctor.specialityId
		assert referralsINFO[i].countActiveAppointment == referrals[i].countActiveAppointment
		assert referralsINFO[i].countAppointmentWithReceptionFact == referrals[i].countAppointmentWithReceptionFact
	if(referralsINFO[i].type=='REF_TO_LDP'){
		assert referralsINFO[i].toLdp.ldpTypeId == referrals[i].toLdp.ldpTypeId
		assert referralsINFO[i].toLdp.ldpTypeName == referrals[i].toLdp.ldpTypeName
		assert referralsINFO[i].toLdp.countAssignmentProcedures == referrals[i].toLdp.countAssignmentProcedures
		if(referralsINFO[i].toLdp.mainDiagnosticCode !=null){
			testRunner.fail("В объекте REF_TO_LDP номер "+i+" вернулся параметр mainDiagnosticCode")
		}
	}
}</script></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7700007178231039</con:value></con:property><con:property><con:name>bd</con:name><con:value>1939-10-23</con:value></con:property></con:properties></con:testCase><con:testCase id="e08dcfc1-ebe4-44be-9e84-c2e96f01facd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Получение направлений типа REF_TO_DOCTOR c передачей patientId. 395494" searchProperties="true"><con:settings/><con:testStep type="request" name="getReferralsInfo" id="bef47dda-6cbe-4564-b21b-96ab86154f67"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Самозапись</con:interface><con:operation>getReferralsInfo</con:operation><con:request name="getReferralsInfo" id="a6c2b141-b359-4100-a6e3-400fae48e32a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <v5:getReferralsInfo>
         <omsNumber>${#TestCase#oms}</omsNumber>
         <birthDate>${#TestCase#bd}</birthDate>
         <returnExtended>true</returnExtended>
         <externalSystemId>EIM</externalSystemId>
      </v5:getReferralsInfo>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Simple Contains" id="4c298061-5330-4f2c-ba5b-9741433736a7" name="Содержит REF_TO_DOCTOR"><con:configuration><token>REF_TO_DOCTOR</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="getAssignmentsByPatientId" id="c1e908ec-05a4-4209-9d29-551bd5699259"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ИД</con:interface><con:operation>getAssignmentsByPatient</con:operation><con:request name="getAssignmentsByPatientId" id="a777e676-963c-450f-a3a7-0bfe89e07e84"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasIdEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:v1="http://emias.mos.ru/emias/core/v1/" xmlns:typ="http://emias.mos.ru/emiasid/assignmentService/v2/types/" xmlns:v2="http://emias.mos.ru/emiasid/core/v2/">
   <soap:Header>
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-775ca9c2-beb0-4ff4-be53-ea6d8b2236bf" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <ns3:userContext xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/">
         <ns3:systemName>EIM</ns3:systemName>
         <ns3:userName>10d59080-73a2-4587-9931-c18fb90831b2</ns3:userName>
         <ns3:userRoleId>7187</ns3:userRoleId>
         <ns3:isUserRoleSystemWide>true</ns3:isUserRoleSystemWide>
         <ns3:userRights>
            <ns3:userRightId>5150001</ns3:userRightId>
            <ns3:userRightId>333001</ns3:userRightId>
         </ns3:userRights>
         <ns3:jobExecutionId>1</ns3:jobExecutionId>
      </ns3:userContext>
   </soap:Header>
   <soap:Body>
      <typ:getAssignmentsByPatientRequest>
         <v2:patientId id="${#TestCase#patientId}"/>
         <v1:pagingOptions pageNumber="0" pageSize="50">
            <v1:sortingOptions>
               <v1:sortOrder attributeName="startPeriod" desceding="true"/>
            </v1:sortingOptions>
         </v1:pagingOptions>
         <v1:options>
            <v1:entry key="skipIssuedMOEmiasInfo">false</v1:entry>
            <v1:entry key="skipReferralMOEmiasInfo">false</v1:entry>
         </v1:options>
      </typ:getAssignmentsByPatientRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="792a39f9-7689-401a-b092-529138b38923"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="getReferralsInfoINFO" id="92c5159a-ede2-46de-be13-d398eb6a5d19"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestrator/getReferralsInfo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getReferralsInfoINFO" id="756d86f7-c843-4d9f-8a8b-d48facd2815c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "birthDate": "${#TestCase#bd}",
  "omsNumber": "${#TestCase#oms}",
  "patientId": "${#TestCase#patientId}"
}</con:request><con:originalUri>http://application-emiasinfo3.emias.solit-clouds.ru/api/v2/saOrchestrator/getReferralsInfo</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="428e79f0-9464-4bf4-8947-63649f81a3a9" name="Код ответа 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="a82cf282-7c60-4234-9b5c-8a25acf18fc3"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper

def getReferralsInfoResponse = context.expand('${getReferralsInfoINFO#Response}')
def slurperJson = new JsonSlurper()
def getReferralsInfo = slurperJson.parseText(getReferralsInfoResponse)
def referralsINFO = getReferralsInfo.payload

def getReferralsInfoSAOResponse = context.expand('${getReferralsInfo#Response}')
getReferralsInfoSAO = new XmlSlurper().parseText(getReferralsInfoSAOResponse)
referrals=getReferralsInfo.payload

def getAssignmentsByPatientIdId = context.expand('${getAssignmentsByPatientId#Response}')
getAssignmentsByPatientIdIdResponse = new XmlSlurper().parseText(getAssignmentsByPatientIdId)
getAssignmentsSize = getAssignmentsByPatientIdIdResponse.Body.getAssignmentsByPatientResponse.result.assignmentExtension
log.info getAssignmentsSize

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
getAssignmentsResponse = groovyUtils.getXmlHolder('getAssignmentsByPatientId#Response')
mainDisgnostic=[]

for (i=0; i&lt;referrals.size(); i++){
	log.info ("Зашли в цикл " + i)
		//проверяем параметры
		assert referralsINFO[i].id == referrals[i].id
		assert referralsINFO[i].number == referrals[i].number
		assert referralsINFO[i].startTime == referrals[i].startTime
		assert referralsINFO[i].endTime == referrals[i].endTime
		assert referralsINFO[i].lpuId == referrals[i].lpuId
		assert referralsINFO[i].lpuType == referrals[i].lpuType
		assert referralsINFO[i].lpuName == referrals[i].lpuName
		assert referralsINFO[i].diagnosis.code == referrals[i].diagnosis.code
		assert referralsINFO[i].diagnosis.name == referrals[i].diagnosis.name
		assert referralsINFO[i].issuedDoctor.jobExecutionId == referrals[i].issuedDoctor.jobExecutionId
		assert referralsINFO[i].issuedDoctor.fio == referrals[i].issuedDoctor.fio
		assert referralsINFO[i].issuedDoctor.snils == referrals[i].issuedDoctor.snils
		assert referralsINFO[i].issuedDoctor.specialityId == referrals[i].issuedDoctor.specialityId
		assert referralsINFO[i].countActiveAppointment == referrals[i].countActiveAppointment
		assert referralsINFO[i].countAppointmentWithReceptionFact == referrals[i].countAppointmentWithReceptionFact
	if(referralsINFO[i].type=='REF_TO_LDP'){
		assert referralsINFO[i].toLdp.ldpTypeId == referrals[i].toLdp.ldpTypeId
		assert referralsINFO[i].toLdp.ldpTypeName == referrals[i].toLdp.ldpTypeName
		assert referralsINFO[i].toLdp.countAssignmentProcedures == referrals[i].toLdp.countAssignmentProcedures
		for(k=1; k&lt;=getAssignmentsSize.size(); k++){
			if(getAssignmentsResponse.getNodeValue('//ns1:assignmentExtension['+k+']/ns1:suppReferralId/@id') != null){
				if(getAssignmentsResponse.getNodeValue('//ns1:assignmentExtension['+k+']/ns1:suppReferralId/@id') == referralsINFO[i].id.toString()){
					//проверяем mainDiagnosticCode только для тех записей, у которых referral.id есть в ответе ИД
					assert referralsINFO[i].toLdp.mainDiagnosticCode.toString() == getAssignmentsResponse.getNodeValue('//ns1:assignmentExtension['+k+']/ns1:assignedDiagnostic/ns1:mainDiagnostic/@code')
					mainDisgnostic &lt;&lt; referralsINFO[i].toLdp.mainDiagnosticCode.toString()	
				}
			}
		}
	}
}

if(mainDisgnostic.size() == 0){
	testRunner.fail("В ответе нет записей с параметром mainDiagnosticCode. Нужно найти другого пациента")
}
</script></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7700007178231039</con:value></con:property><con:property><con:name>bd</con:name><con:value>1939-10-23</con:value></con:property><con:property><con:name>patientId</con:name><con:value>10166510</con:value></con:property></con:properties></con:testCase><con:testCase id="d87a620a-1a60-4a56-a78b-462df84ed6d2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Получение направлений с фильтрацией по referralId. 395497" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getReferralsInfoINFO" id="4fd03640-18b2-4eeb-8b48-385755c0a58e"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestrator/getReferralsInfo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getReferralsInfoINFO" id="756d86f7-c843-4d9f-8a8b-d48facd2815c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "birthDate": "${#TestCase#bd}",
  "omsNumber": "${#TestCase#oms}"
}</con:request><con:originalUri>http://application-emiasinfo3.emias.solit-clouds.ru/api/v2/saOrchestrator/getReferralsInfo</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="428e79f0-9464-4bf4-8947-63649f81a3a9" name="Код ответа 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Записать referralId" id="e1de5d16-7202-4ebf-aa2c-df4f6b097b84"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="false" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>referralId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getReferralsInfoINFO</con:sourceStep><con:sourcePath>$.payload[0].id</con:sourcePath><con:targetType>referralId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="getReferralsInfoReferral" id="a97f6f05-b5d3-42d2-9f13-96884bba84c2"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestrator/getReferralsInfo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getReferralsInfoReferral" id="756d86f7-c843-4d9f-8a8b-d48facd2815c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "birthDate": "${#TestCase#bd}",
  "omsNumber": "${#TestCase#oms}",
  "referralId": [
  ${#TestCase#referralId}
  ]
}</con:request><con:originalUri>http://application-emiasinfo3.emias.solit-clouds.ru/api/v2/saOrchestrator/getReferralsInfo</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="428e79f0-9464-4bf4-8947-63649f81a3a9" name="Код ответа 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="94a94fe8-6d2c-403f-ab04-2168b78632ed"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper

def getReferralsInfoResponse = context.expand('${getReferralsInfoReferral#Response}')
def slurperJson = new JsonSlurper()
def getReferralsInfo = slurperJson.parseText(getReferralsInfoResponse)
def referralsINFO = getReferralsInfo.payload

refId = testRunner.testCase.getPropertyValue("referralId")

if(referralsINFO.id.size() == 1){
	assert referralsINFO.id.join() == refId
}
else {
	testRunner.fail("Вернулось больше 1 referralId: "+referralsINFO.id)
}
</script></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7700007178231039</con:value></con:property><con:property><con:name>bd</con:name><con:value>1939-10-23</con:value></con:property><con:property><con:name>referralId</con:name><con:value>74416988589</con:value></con:property></con:properties></con:testCase><con:testCase id="ff3dece9-1ad7-4f76-b432-bc3069746b8c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС1. Ошибка сервиса SA_PATIENT_NOT_FOUND. 221931" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getReferralsInfoINFO" id="47ed104a-71d5-40cf-86dd-22de88de60fc"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestrator/getReferralsInfo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getReferralsInfoINFO" id="756d86f7-c843-4d9f-8a8b-d48facd2815c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "birthDate": "${#TestCase#bd}",
  "omsNumber": "${#TestCase#oms}"
}</con:request><con:originalUri>http://application-emiasinfo3.emias.solit-clouds.ru/api/v2/saOrchestrator/getReferralsInfo</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="428e79f0-9464-4bf4-8947-63649f81a3a9" name="Код ответа 404"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7cff31e7-5863-46f9-9559-f65a01fa7695" name="code = SA_PATIENT_NOT_FOUND"><con:configuration><path>$.error.code</path><content>SA_PATIENT_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c1970fa1-c5ab-4e04-8136-b874101a4739" name="description = Пациент с указанным ОМС не найден"><con:configuration><path>$.error.description</path><content>Пациент с указанным ОМС не найден</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8c8ae4f4-7bcf-42bf-b0e8-9e93be8399d1" name="type = BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7789189740000933111</con:value></con:property><con:property><con:name>bd</con:name><con:value>1939-10-23</con:value></con:property></con:properties></con:testCase><con:testCase id="996b0885-7403-48f2-8258-329e178b3bbf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС2 - Не найдено совпадений. 223133" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getReferralsInfoINFO" id="908d3cb6-b329-4ddf-a24e-f45726b0a752"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestrator/getReferralsInfo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getReferralsInfoINFO" id="756d86f7-c843-4d9f-8a8b-d48facd2815c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "birthDate": "${#TestCase#bd}",
  "omsNumber": "${#TestCase#oms}",
  "referralId": [
	123
  ]
}</con:request><con:originalUri>http://application-emiasinfo3.emias.solit-clouds.ru/api/v2/saOrchestrator/getReferralsInfo</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="428e79f0-9464-4bf4-8947-63649f81a3a9" name="Код ответа 204"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7791889720000557</con:value></con:property><con:property><con:name>bd</con:name><con:value>2011-08-29</con:value></con:property></con:properties></con:testCase><con:testCase id="82dace5c-c2f6-4547-b3b5-dcbdde782a67" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС3. Ошибка &quot;SA_ID_ERROR&quot;. 395513" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getReferralsInfoINFO" id="9e6eb635-e94e-4dfd-b9f2-bbeb929e2da8"><con:settings/><con:config service="http://application-emiasinfo4.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestrator/getReferralsInfo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getReferralsInfoINFO" id="756d86f7-c843-4d9f-8a8b-d48facd2815c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Mock-id" value="${#Project#Mock-url}/394395" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "birthDate": "${#TestCase#bd}",
  "omsNumber": "${#TestCase#oms}",
  "patientId": "${#TestCase#patientId}"
}</con:request><con:originalUri>http://application-emiasinfo3.emias.solit-clouds.ru/api/v2/saOrchestrator/getReferralsInfo</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="428e79f0-9464-4bf4-8947-63649f81a3a9" name="Код ответа 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7cff31e7-5863-46f9-9559-f65a01fa7695" name="code = SA_ID_ERROR"><con:configuration><path>$.error.code</path><content>SA_ID_ERROR</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c1970fa1-c5ab-4e04-8136-b874101a4739" name="description = Не удалось получить часть данных"><con:configuration><path>$.error.description</path><content>Не удалось получить часть данных</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8c8ae4f4-7bcf-42bf-b0e8-9e93be8399d1" name="type = BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7700007178231039</con:value></con:property><con:property><con:name>bd</con:name><con:value>1939-10-23</con:value></con:property><con:property><con:name>patientId</con:name><con:value>10166510</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>emiasInfoEndpoint</con:name><con:value>http://application-emiasinfo3.emias.solit-clouds.ru/</con:value></con:property><con:property><con:name>emiasInfoDbConnection</con:name><con:value>172.17.5.12:29105/emiasinfoapp</con:value></con:property><con:property><con:name>emiasInfoDbLogin</con:name><con:value>emiasinfoapp</con:value></con:property><con:property><con:name>emiasInfoDbPassword</con:name><con:value>emiasinfoapp</con:value></con:property><con:property><con:name>emiasInfoFullDbConnection</con:name><con:value>jdbc:postgresql://172.17.5.12:29105/emiasinfoapp?user=emiasinfoapp&amp;password=emiasinfoapp</con:value></con:property><con:property><con:name>emiasInfoDBDriver</con:name><con:value>org.postgresql.Driver</con:value></con:property><con:property><con:name>suppDbConnection</con:name><con:value>@//10.2.172.242:1521/emiasdb</con:value></con:property><con:property><con:name>suppDbLogin</con:name><con:value>EMIAS_CLUSTER</con:value></con:property><con:property><con:name>suppDbPassword</con:name><con:value>EMIAS_CLUSTER</con:value></con:property><con:property><con:name>suppFullDbConnection</con:name><con:value> jdbc:oracle:thin:EMIAS_CLUSTER/EMIAS_CLUSTER@//10.2.172.242:1521/emiasdb</con:value></con:property><con:property><con:name>suppDBDriver</con:name><con:value>oracle.jdbc.driver.OracleDriver</con:value></con:property><con:property><con:name>nsiEndpoint</con:name><con:value>http://esbcamel.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService</con:value></con:property><con:property><con:name>medicationEndpoint</con:name><con:value>http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService</con:value></con:property><con:property><con:name>medicationHeaders</con:name><con:value><![CDATA[<wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">          <wsse:UsernameToken wsu:Id="UsernameToken-c607cef5-5a4f-4d2">             <wsse:Username>EIM/EIM</wsse:Username>          </wsse:UsernameToken>       </wsse:Security> ]]></con:value></con:property><con:property><con:name>EI-token</con:name><con:value>-ykfDtplFdsMeQGJVlZn_Lup2XcOeiZWxsaQfKHm9QE</con:value></con:property><con:property><con:name>emiasInfoNotificationsEndpoint</con:name><con:value>http://notification-emiasinfo1.emias.solit-clouds.ru/</con:value></con:property><con:property><con:name>emiasInfoNotificationsDbConnection</con:name><con:value>172.17.5.11:29104/notification</con:value></con:property><con:property><con:name>emiasInfoNotificationsDbLogin</con:name><con:value>notification</con:value></con:property><con:property><con:name>emiasInfoNotificationsDbPassword</con:name><con:value>notification</con:value></con:property><con:property><con:name>emiasInfoNotificationsFullDbConnection</con:name><con:value>jdbc:postgresql://172.17.5.11:29104/notification?user=notification&amp;password=notification</con:value></con:property><con:property><con:name>emiasInfoNotificationsDBDriver</con:name><con:value>org.postgresql.Driver</con:value></con:property><con:property><con:name>topicBookingRecipeInfoMessage</con:name><con:value>BookingRecipeInfoMessage.EMIASINFO_SOLIT_TEST_1</con:value></con:property><con:property><con:name>dbType</con:name><con:value>postgre</con:value></con:property><con:property><con:name>dbLogin</con:name><con:value>rir2</con:value></con:property><con:property><con:name>dbPassword</con:name><con:value>rir2</con:value></con:property><con:property><con:name>dbConnect</con:name><con:value>10.2.173.127:5432/rir2</con:value></con:property><con:property><con:name>bootstrapServers</con:name><con:value>10.2.172.24:9092</con:value></con:property><con:property><con:name>topicMedicationAssignmentChangesPerDay</con:name><con:value>MedicationAssignmentChangesPerDay.EMIASINFO_SOLIT_TEST_1</con:value></con:property><con:property><con:name>topicAppointment2Bm</con:name><con:value>Appointment2Bm.EMIASINFO_SOLIT_TEST_1</con:value></con:property><con:property><con:name>topicAppointment2Doctor</con:name><con:value>Appointment2Doctor.EMIASINFO_SOLIT_TEST_1</con:value></con:property><con:property><con:name>topicAppointment2Ldp</con:name><con:value>Appointment2Ldp.EMIASINFO_SOLIT_TEST_1</con:value></con:property><con:property><con:name>topicKisNazToEmiasPublication</con:name><con:value>kisNazToEmiasPublication.EMIASINFO_SOLIT_TEST_1</con:value></con:property><con:property><con:name>topicTmkNotify</con:name><con:value>tmkNotify.EMIASINFO_SOLIT_TEST_1</con:value></con:property><con:property><con:name>mockUrl</con:name><con:value>http://application-mock.emias.solit-clouds.ru</con:value></con:property><con:property><con:name>mockDbFullConnection</con:name><con:value>jdbc:postgresql://172.17.5.13:29107/emias_info_mock?user=emias_info&amp;password=emias_info</con:value></con:property><con:property><con:name>receptionTypeId</con:name><con:value>receptionTypeId</con:value></con:property><con:property><con:name>saOrchestratorEndpoint</con:name><con:value>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:value></con:property><con:property><con:name>saOrchestratorDbConnection</con:name><con:value/></con:property><con:property><con:name>saOrchestratorDbLogin</con:name><con:value/></con:property><con:property><con:name>saOrchestratorDbPassword</con:name><con:value/></con:property><con:property><con:name>saOrchestratorFullDbConnection</con:name><con:value/></con:property><con:property><con:name>emiasIdEndpoint</con:name><con:value>http://esbcamelvv.test.emias.mos.ru/proxy/instrumental/assignment/v2.2S/ProxyService</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>